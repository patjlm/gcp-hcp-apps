apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: clusterresourcesetbindings.addons.cluster.x-k8s.io
spec:
  group: addons.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: ClusterResourceSetBinding
    listKind: ClusterResourceSetBindingList
    plural: clusterresourcesetbindings
    singular: clusterresourcesetbinding
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Time duration since creation of ClusterResourceSetBinding
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterResourceSetBinding lists all matching ClusterResourceSets with the cluster it belongs to.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of ClusterResourceSetBinding.
              properties:
                bindings:
                  description: bindings is a list of ClusterResourceSets and their resources.
                  items:
                    description: ResourceSetBinding keeps info on all of the resources in a ClusterResourceSet.
                    properties:
                      clusterResourceSetName:
                        description: clusterResourceSetName is the name of the ClusterResourceSet that is applied to the owner cluster of the binding.
                        maxLength: 253
                        minLength: 1
                        type: string
                      resources:
                        description: resources is a list of resources that the ClusterResourceSet has.
                        items:
                          description: ResourceBinding shows the status of a resource that belongs to a ClusterResourceSet matched by the owner cluster of the ClusterResourceSetBinding object.
                          properties:
                            applied:
                              description: applied is to track if a resource is applied to the cluster or not.
                              type: boolean
                            hash:
                              description: |-
                                hash is the hash of a resource's data. This can be used to decide if a resource is changed.
                                For "ApplyOnce" ClusterResourceSet.spec.strategy, this is no-op as that strategy does not act on change.
                              maxLength: 256
                              minLength: 1
                              type: string
                            kind:
                              description: 'kind of the resource. Supported kinds are: Secrets and ConfigMaps.'
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                            lastAppliedTime:
                              description: lastAppliedTime identifies when this resource was last applied to the cluster.
                              format: date-time
                              type: string
                            name:
                              description: name of the resource that is in the same namespace with ClusterResourceSet object.
                              maxLength: 253
                              minLength: 1
                              type: string
                          required:
                            - applied
                            - kind
                            - name
                          type: object
                        maxItems: 100
                        type: array
                    required:
                      - clusterResourceSetName
                    type: object
                  maxItems: 100
                  type: array
                clusterName:
                  description: |-
                    clusterName is the name of the Cluster this binding applies to.
                    Note: this field mandatory in v1beta2.
                  maxLength: 63
                  minLength: 1
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: clusterresourcesets.addons.cluster.x-k8s.io
spec:
  group: addons.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: ClusterResourceSet
    listKind: ClusterResourceSetList
    plural: clusterresourcesets
    singular: clusterresourceset
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Time duration since creation of ClusterResourceSet
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            ClusterResourceSet is the Schema for the clusterresourcesets API.
            For advanced use cases an add-on provider should be used instead.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of ClusterResourceSet.
              properties:
                clusterSelector:
                  description: |-
                    clusterSelector is the label selector for Clusters. The Clusters that are
                    selected by this will be the ones affected by this ClusterResourceSet.
                    It must match the Cluster labels. This field is immutable.
                    Label selector cannot be empty.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                resources:
                  description: resources is a list of Secrets/ConfigMaps where each contains 1 or more resources to be applied to remote clusters.
                  items:
                    description: ResourceRef specifies a resource.
                    properties:
                      kind:
                        description: 'kind of the resource. Supported kinds are: Secrets and ConfigMaps.'
                        enum:
                          - Secret
                          - ConfigMap
                        type: string
                      name:
                        description: name of the resource that is in the same namespace with ClusterResourceSet object.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                      - kind
                      - name
                    type: object
                  maxItems: 100
                  type: array
                strategy:
                  description: strategy is the strategy to be used during applying resources. Defaults to ApplyOnce. This field is immutable.
                  enum:
                    - ApplyOnce
                    - Reconcile
                  type: string
              required:
                - clusterSelector
              type: object
            status:
              description: status is the observed state of ClusterResourceSet.
              properties:
                conditions:
                  description: conditions defines current state of the ClusterResourceSet.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration reflects the generation of the most recently observed ClusterResourceSet.
                  format: int64
                  type: integer
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in ClusterResourceSet's status with the V1Beta2 version.
                  properties:
                    conditions:
                      description: |-
                        conditions represents the observations of a ClusterResourceSet's current state.
                        Known condition types are ResourceSetApplied, Deleting.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: clusterclasses.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: ClusterClass
    listKind: ClusterClassList
    plural: clusterclasses
    shortNames:
      - cc
    singular: clusterclass
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Time duration since creation of ClusterClass
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterClass is a template which can be used to create managed topologies.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of ClusterClass.
              properties:
                availabilityGates:
                  description: |-
                    availabilityGates specifies additional conditions to include when evaluating Cluster Available condition.

                    NOTE: this field is considered only for computing v1beta2 conditions.
                    NOTE: If a Cluster is using this ClusterClass, and this Cluster defines a custom list of availabilityGates,
                    such list overrides availabilityGates defined in this field.
                  items:
                    description: ClusterAvailabilityGate contains the type of a Cluster condition to be used as availability gate.
                    properties:
                      conditionType:
                        description: |-
                          conditionType refers to a condition with matching type in the Cluster's condition list.
                          If the conditions doesn't exist, it will be treated as unknown.
                          Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as availability gates.
                        maxLength: 316
                        minLength: 1
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                      polarity:
                        description: |-
                          polarity of the conditionType specified in this availabilityGate.
                          Valid values are Positive, Negative and omitted.
                          When omitted, the default behaviour will be Positive.
                          A positive polarity means that the condition should report a true status under normal conditions.
                          A negative polarity means that the condition should report a false status under normal conditions.
                        enum:
                          - Positive
                          - Negative
                        type: string
                    required:
                      - conditionType
                    type: object
                  maxItems: 32
                  type: array
                  x-kubernetes-list-map-keys:
                    - conditionType
                  x-kubernetes-list-type: map
                controlPlane:
                  description: |-
                    controlPlane is a reference to a local struct that holds the details
                    for provisioning the Control Plane for the Cluster.
                  properties:
                    machineHealthCheck:
                      description: |-
                        machineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass.
                        This field is supported if and only if the ControlPlane provider template
                        referenced above is Machine based and supports setting replicas.
                      properties:
                        maxUnhealthy:
                          anyOf:
                            - type: integer
                            - type: string
                          description: |-
                            maxUnhealthy specifies the maximum number of unhealthy machines allowed.
                            Any further remediation is only allowed if at most "maxUnhealthy" machines selected by
                            "selector" are not healthy.
                          x-kubernetes-int-or-string: true
                        nodeStartupTimeout:
                          description: |-
                            nodeStartupTimeout allows to set the maximum time for MachineHealthCheck
                            to consider a Machine unhealthy if a corresponding Node isn't associated
                            through a `Spec.ProviderID` field.

                            The duration set in this field is compared to the greatest of:
                            - Cluster's infrastructure ready condition timestamp (if and when available)
                            - Control Plane's initialized condition timestamp (if and when available)
                            - Machine's infrastructure ready condition timestamp (if and when available)
                            - Machine's metadata creation timestamp

                            Defaults to 10 minutes.
                            If you wish to disable this feature, set the value explicitly to 0.
                          type: string
                        remediationTemplate:
                          description: |-
                            remediationTemplate is a reference to a remediation template
                            provided by an infrastructure provider.

                            This field is completely optional, when filled, the MachineHealthCheck controller
                            creates a new object from the template referenced and hands off remediation of the machine to
                            a controller that lives outside of Cluster API.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        unhealthyConditions:
                          description: |-
                            unhealthyConditions contains a list of the conditions that determine
                            whether a node is considered unhealthy. The conditions are combined in a
                            logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                          items:
                            description: |-
                              UnhealthyCondition represents a Node condition type and value with a timeout
                              specified as a duration.  When the named condition has been in the given
                              status for at least the timeout value, a node is considered unhealthy.
                            properties:
                              status:
                                description: status of the condition, one of True, False, Unknown.
                                minLength: 1
                                type: string
                              timeout:
                                description: |-
                                  timeout is the duration that a node must be in a given status for,
                                  after which the node is considered unhealthy.
                                  For example, with a value of "1h", the node must match the status
                                  for at least 1 hour before being considered unhealthy.
                                type: string
                              type:
                                description: type of Node condition
                                minLength: 1
                                type: string
                            required:
                              - status
                              - timeout
                              - type
                            type: object
                          maxItems: 100
                          type: array
                        unhealthyRange:
                          description: |-
                            unhealthyRange specifies the range of unhealthy machines allowed.
                            Any further remediation is only allowed if the number of machines selected by "selector" as not healthy
                            is within the range of "unhealthyRange". Takes precedence over maxUnhealthy.
                            Eg. "[3-5]" - This means that remediation will be allowed only when:
                            (a) there are at least 3 unhealthy machines (and)
                            (b) there are at most 5 unhealthy machines
                          maxLength: 32
                          minLength: 1
                          pattern: ^\[[0-9]+-[0-9]+\]$
                          type: string
                      type: object
                    machineInfrastructure:
                      description: |-
                        machineInfrastructure defines the metadata and infrastructure information
                        for control plane machines.

                        This field is supported if and only if the control plane provider template
                        referenced above is Machine based and supports setting replicas.
                      properties:
                        ref:
                          description: |-
                            ref is a required reference to a custom resource
                            offered by a provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - ref
                      type: object
                    metadata:
                      description: |-
                        metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane
                        if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the
                        ControlPlane.
                        At runtime this metadata is merged with the corresponding metadata from the topology.

                        This field is supported if and only if the control plane provider template
                        referenced is Machine based.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    namingStrategy:
                      description: namingStrategy allows changing the naming pattern used when creating the control plane provider object.
                      properties:
                        template:
                          description: |-
                            template defines the template to use for generating the name of the ControlPlane object.
                            If not defined, it will fallback to `{{ .cluster.name }}-{{ .random }}`.
                            If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will
                            get concatenated with a random suffix of length 5.
                            The templating mechanism provides the following arguments:
                            * `.cluster.name`: The name of the cluster object.
                            * `.random`: A random alphanumeric string, without vowels, of length 5.
                          maxLength: 1024
                          minLength: 1
                          type: string
                      type: object
                    nodeDeletionTimeout:
                      description: |-
                        nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                        hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                        Defaults to 10 seconds.
                        NOTE: This value can be overridden while defining a Cluster.Topology.
                      type: string
                    nodeDrainTimeout:
                      description: |-
                        nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                        The default value is 0, meaning that the node can be drained without any time limitations.
                        NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                        NOTE: This value can be overridden while defining a Cluster.Topology.
                      type: string
                    nodeVolumeDetachTimeout:
                      description: |-
                        nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                        to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                        NOTE: This value can be overridden while defining a Cluster.Topology.
                      type: string
                    readinessGates:
                      description: |-
                        readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                        This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                        computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                        NOTE: This field is considered only for computing v1beta2 conditions.
                        NOTE: If a Cluster defines a custom list of readinessGates for the control plane,
                        such list overrides readinessGates defined in this field.
                        NOTE: Specific control plane provider implementations might automatically extend the list of readinessGates;
                        e.g. the kubeadm control provider adds ReadinessGates for the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.
                      items:
                        description: MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.
                        properties:
                          conditionType:
                            description: |-
                              conditionType refers to a condition with matching type in the Machine's condition list.
                              If the conditions doesn't exist, it will be treated as unknown.
                              Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                            maxLength: 316
                            minLength: 1
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                          polarity:
                            description: |-
                              polarity of the conditionType specified in this readinessGate.
                              Valid values are Positive, Negative and omitted.
                              When omitted, the default behaviour will be Positive.
                              A positive polarity means that the condition should report a true status under normal conditions.
                              A negative polarity means that the condition should report a false status under normal conditions.
                            enum:
                              - Positive
                              - Negative
                            type: string
                        required:
                          - conditionType
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - conditionType
                      x-kubernetes-list-type: map
                    ref:
                      description: |-
                        ref is a required reference to a custom resource
                        offered by a provider.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - ref
                  type: object
                infrastructure:
                  description: |-
                    infrastructure is a reference to a provider-specific template that holds
                    the details for provisioning infrastructure specific cluster
                    for the underlying provider.
                    The underlying provider is responsible for the implementation
                    of the template to an infrastructure cluster.
                  properties:
                    ref:
                      description: |-
                        ref is a required reference to a custom resource
                        offered by a provider.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                    - ref
                  type: object
                infrastructureNamingStrategy:
                  description: infrastructureNamingStrategy allows changing the naming pattern used when creating the infrastructure object.
                  properties:
                    template:
                      description: |-
                        template defines the template to use for generating the name of the Infrastructure object.
                        If not defined, it will fallback to `{{ .cluster.name }}-{{ .random }}`.
                        If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will
                        get concatenated with a random suffix of length 5.
                        The templating mechanism provides the following arguments:
                        * `.cluster.name`: The name of the cluster object.
                        * `.random`: A random alphanumeric string, without vowels, of length 5.
                      maxLength: 1024
                      minLength: 1
                      type: string
                  type: object
                patches:
                  description: |-
                    patches defines the patches which are applied to customize
                    referenced templates of a ClusterClass.
                    Note: Patches will be applied in the order of the array.
                  items:
                    description: ClusterClassPatch defines a patch which is applied to customize the referenced templates.
                    properties:
                      definitions:
                        description: |-
                          definitions define inline patches.
                          Note: Patches will be applied in the order of the array.
                          Note: Exactly one of Definitions or External must be set.
                        items:
                          description: PatchDefinition defines a patch which is applied to customize the referenced templates.
                          properties:
                            jsonPatches:
                              description: |-
                                jsonPatches defines the patches which should be applied on the templates
                                matching the selector.
                                Note: Patches will be applied in the order of the array.
                              items:
                                description: JSONPatch defines a JSON patch.
                                properties:
                                  op:
                                    description: |-
                                      op defines the operation of the patch.
                                      Note: Only `add`, `replace` and `remove` are supported.
                                    enum:
                                      - add
                                      - replace
                                      - remove
                                    type: string
                                  path:
                                    description: |-
                                      path defines the path of the patch.
                                      Note: Only the spec of a template can be patched, thus the path has to start with /spec/.
                                      Note: For now the only allowed array modifications are `append` and `prepend`, i.e.:
                                      * for op: `add`: only index 0 (prepend) and - (append) are allowed
                                      * for op: `replace` or `remove`: no indexes are allowed
                                    maxLength: 512
                                    minLength: 1
                                    type: string
                                  value:
                                    description: |-
                                      value defines the value of the patch.
                                      Note: Either Value or ValueFrom is required for add and replace
                                      operations. Only one of them is allowed to be set at the same time.
                                      Note: We have to use apiextensionsv1.JSON instead of our JSON type,
                                      because controller-tools has a hard-coded schema for apiextensionsv1.JSON
                                      which cannot be produced by another type (unset type field).
                                      Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                    x-kubernetes-preserve-unknown-fields: true
                                  valueFrom:
                                    description: |-
                                      valueFrom defines the value of the patch.
                                      Note: Either Value or ValueFrom is required for add and replace
                                      operations. Only one of them is allowed to be set at the same time.
                                    properties:
                                      template:
                                        description: |-
                                          template is the Go template to be used to calculate the value.
                                          A template can reference variables defined in .spec.variables and builtin variables.
                                          Note: The template must evaluate to a valid YAML or JSON value.
                                        maxLength: 10240
                                        minLength: 1
                                        type: string
                                      variable:
                                        description: |-
                                          variable is the variable to be used as value.
                                          Variable can be one of the variables defined in .spec.variables or a builtin variable.
                                        maxLength: 256
                                        minLength: 1
                                        type: string
                                    type: object
                                required:
                                  - op
                                  - path
                                type: object
                              maxItems: 100
                              type: array
                            selector:
                              description: selector defines on which templates the patch should be applied.
                              properties:
                                apiVersion:
                                  description: apiVersion filters templates by apiVersion.
                                  maxLength: 512
                                  minLength: 1
                                  type: string
                                kind:
                                  description: kind filters templates by kind.
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                matchResources:
                                  description: matchResources selects templates based on where they are referenced.
                                  properties:
                                    controlPlane:
                                      description: |-
                                        controlPlane selects templates referenced in .spec.ControlPlane.
                                        Note: this will match the controlPlane and also the controlPlane
                                        machineInfrastructure (depending on the kind and apiVersion).
                                      type: boolean
                                    infrastructureCluster:
                                      description: infrastructureCluster selects templates referenced in .spec.infrastructure.
                                      type: boolean
                                    machineDeploymentClass:
                                      description: |-
                                        machineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in
                                        .spec.workers.machineDeployments.
                                      properties:
                                        names:
                                          description: names selects templates by class names.
                                          items:
                                            maxLength: 256
                                            minLength: 1
                                            type: string
                                          maxItems: 100
                                          type: array
                                      type: object
                                    machinePoolClass:
                                      description: |-
                                        machinePoolClass selects templates referenced in specific MachinePoolClasses in
                                        .spec.workers.machinePools.
                                      properties:
                                        names:
                                          description: names selects templates by class names.
                                          items:
                                            maxLength: 256
                                            minLength: 1
                                            type: string
                                          maxItems: 100
                                          type: array
                                      type: object
                                  type: object
                              required:
                                - apiVersion
                                - kind
                                - matchResources
                              type: object
                          required:
                            - jsonPatches
                            - selector
                          type: object
                        maxItems: 100
                        type: array
                      description:
                        description: description is a human-readable description of this patch.
                        maxLength: 1024
                        minLength: 1
                        type: string
                      enabledIf:
                        description: |-
                          enabledIf is a Go template to be used to calculate if a patch should be enabled.
                          It can reference variables defined in .spec.variables and builtin variables.
                          The patch will be enabled if the template evaluates to `true`, otherwise it will
                          be disabled.
                          If EnabledIf is not set, the patch will be enabled per default.
                        maxLength: 256
                        minLength: 1
                        type: string
                      external:
                        description: |-
                          external defines an external patch.
                          Note: Exactly one of Definitions or External must be set.
                        properties:
                          discoverVariablesExtension:
                            description: discoverVariablesExtension references an extension which is called to discover variables.
                            maxLength: 512
                            minLength: 1
                            type: string
                          generateExtension:
                            description: generateExtension references an extension which is called to generate patches.
                            maxLength: 512
                            minLength: 1
                            type: string
                          settings:
                            additionalProperties:
                              type: string
                            description: |-
                              settings defines key value pairs to be passed to the extensions.
                              Values defined here take precedence over the values defined in the
                              corresponding ExtensionConfig.
                            type: object
                          validateExtension:
                            description: validateExtension references an extension which is called to validate the topology.
                            maxLength: 512
                            minLength: 1
                            type: string
                        type: object
                      name:
                        description: name of the patch.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - name
                    type: object
                  maxItems: 1000
                  type: array
                variables:
                  description: |-
                    variables defines the variables which can be configured
                    in the Cluster topology and are then used in patches.
                  items:
                    description: |-
                      ClusterClassVariable defines a variable which can
                      be configured in the Cluster topology and used in patches.
                    properties:
                      metadata:
                        description: |-
                          metadata is the metadata of a variable.
                          It can be used to add additional data for higher level tools to
                          a ClusterClassVariable.

                          Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please use XMetadata in JSONSchemaProps instead.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              annotations is an unstructured key value map that can be used to store and
                              retrieve arbitrary metadata.
                              They are not queryable.
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              labels is a map of string keys and values that can be used to organize and categorize
                              (scope and select) variables.
                            type: object
                        type: object
                      name:
                        description: name of the variable.
                        maxLength: 256
                        minLength: 1
                        type: string
                      required:
                        description: |-
                          required specifies if the variable is required.
                          Note: this applies to the variable as a whole and thus the
                          top-level object defined in the schema. If nested fields are
                          required, this will be specified inside the schema.
                        type: boolean
                      schema:
                        description: schema defines the schema of the variable.
                        properties:
                          openAPIV3Schema:
                            description: |-
                              openAPIV3Schema defines the schema of a variable via OpenAPI v3
                              schema. The schema is a subset of the schema used in
                              Kubernetes CRDs.
                            properties:
                              additionalProperties:
                                description: |-
                                  additionalProperties specifies the schema of values in a map (keys are always strings).
                                  NOTE: Can only be set if type is object.
                                  NOTE: AdditionalProperties is mutually exclusive with Properties.
                                  NOTE: This field uses PreserveUnknownFields and Schemaless,
                                  because recursive validation is not possible.
                                x-kubernetes-preserve-unknown-fields: true
                              allOf:
                                description: |-
                                  allOf specifies that the variable must validate against all of the subschemas in the array.
                                  NOTE: This field uses PreserveUnknownFields and Schemaless,
                                  because recursive validation is not possible.
                                x-kubernetes-preserve-unknown-fields: true
                              anyOf:
                                description: |-
                                  anyOf specifies that the variable must validate against one or more of the subschemas in the array.
                                  NOTE: This field uses PreserveUnknownFields and Schemaless,
                                  because recursive validation is not possible.
                                x-kubernetes-preserve-unknown-fields: true
                              default:
                                description: |-
                                  default is the default value of the variable.
                                  NOTE: Can be set for all types.
                                x-kubernetes-preserve-unknown-fields: true
                              description:
                                description: description is a human-readable description of this variable.
                                maxLength: 4096
                                minLength: 1
                                type: string
                              enum:
                                description: |-
                                  enum is the list of valid values of the variable.
                                  NOTE: Can be set for all types.
                                items:
                                  x-kubernetes-preserve-unknown-fields: true
                                maxItems: 100
                                type: array
                              example:
                                description: example is an example for this variable.
                                x-kubernetes-preserve-unknown-fields: true
                              exclusiveMaximum:
                                description: |-
                                  exclusiveMaximum specifies if the Maximum is exclusive.
                                  NOTE: Can only be set if type is integer or number.
                                type: boolean
                              exclusiveMinimum:
                                description: |-
                                  exclusiveMinimum specifies if the Minimum is exclusive.
                                  NOTE: Can only be set if type is integer or number.
                                type: boolean
                              format:
                                description: |-
                                  format is an OpenAPI v3 format string. Unknown formats are ignored.
                                  For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using)
                                  https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go
                                  NOTE: Can only be set if type is string.
                                maxLength: 32
                                minLength: 1
                                type: string
                              items:
                                description: |-
                                  items specifies fields of an array.
                                  NOTE: Can only be set if type is array.
                                  NOTE: This field uses PreserveUnknownFields and Schemaless,
                                  because recursive validation is not possible.
                                x-kubernetes-preserve-unknown-fields: true
                              maxItems:
                                description: |-
                                  maxItems is the max length of an array variable.
                                  NOTE: Can only be set if type is array.
                                format: int64
                                type: integer
                              maxLength:
                                description: |-
                                  maxLength is the max length of a string variable.
                                  NOTE: Can only be set if type is string.
                                format: int64
                                type: integer
                              maxProperties:
                                description: |-
                                  maxProperties is the maximum amount of entries in a map or properties in an object.
                                  NOTE: Can only be set if type is object.
                                format: int64
                                type: integer
                              maximum:
                                description: |-
                                  maximum is the maximum of an integer or number variable.
                                  If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum.
                                  If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum.
                                  NOTE: Can only be set if type is integer or number.
                                format: int64
                                type: integer
                              minItems:
                                description: |-
                                  minItems is the min length of an array variable.
                                  NOTE: Can only be set if type is array.
                                format: int64
                                type: integer
                              minLength:
                                description: |-
                                  minLength is the min length of a string variable.
                                  NOTE: Can only be set if type is string.
                                format: int64
                                type: integer
                              minProperties:
                                description: |-
                                  minProperties is the minimum amount of entries in a map or properties in an object.
                                  NOTE: Can only be set if type is object.
                                format: int64
                                type: integer
                              minimum:
                                description: |-
                                  minimum is the minimum of an integer or number variable.
                                  If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum.
                                  If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum.
                                  NOTE: Can only be set if type is integer or number.
                                format: int64
                                type: integer
                              not:
                                description: |-
                                  not specifies that the variable must not validate against the subschema.
                                  NOTE: This field uses PreserveUnknownFields and Schemaless,
                                  because recursive validation is not possible.
                                x-kubernetes-preserve-unknown-fields: true
                              oneOf:
                                description: |-
                                  oneOf specifies that the variable must validate against exactly one of the subschemas in the array.
                                  NOTE: This field uses PreserveUnknownFields and Schemaless,
                                  because recursive validation is not possible.
                                x-kubernetes-preserve-unknown-fields: true
                              pattern:
                                description: |-
                                  pattern is the regex which a string variable must match.
                                  NOTE: Can only be set if type is string.
                                maxLength: 512
                                minLength: 1
                                type: string
                              properties:
                                description: |-
                                  properties specifies fields of an object.
                                  NOTE: Can only be set if type is object.
                                  NOTE: Properties is mutually exclusive with AdditionalProperties.
                                  NOTE: This field uses PreserveUnknownFields and Schemaless,
                                  because recursive validation is not possible.
                                x-kubernetes-preserve-unknown-fields: true
                              required:
                                description: |-
                                  required specifies which fields of an object are required.
                                  NOTE: Can only be set if type is object.
                                items:
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                maxItems: 1000
                                type: array
                              type:
                                description: |-
                                  type is the type of the variable.
                                  Valid values are: object, array, string, integer, number or boolean.
                                enum:
                                  - object
                                  - array
                                  - string
                                  - integer
                                  - number
                                  - boolean
                                type: string
                              uniqueItems:
                                description: |-
                                  uniqueItems specifies if items in an array must be unique.
                                  NOTE: Can only be set if type is array.
                                type: boolean
                              x-kubernetes-int-or-string:
                                description: |-
                                  x-kubernetes-int-or-string specifies that this value is
                                  either an integer or a string. If this is true, an empty
                                  type is allowed and type as child of anyOf is permitted
                                  if following one of the following patterns:

                                  1) anyOf:
                                     - type: integer
                                     - type: string
                                  2) allOf:
                                     - anyOf:
                                       - type: integer
                                       - type: string
                                     - ... zero or more
                                type: boolean
                              x-kubernetes-preserve-unknown-fields:
                                description: |-
                                  x-kubernetes-preserve-unknown-fields allows setting fields in a variable object
                                  which are not defined in the variable schema. This affects fields recursively,
                                  except if nested properties or additionalProperties are specified in the schema.
                                type: boolean
                              x-kubernetes-validations:
                                description: x-kubernetes-validations describes a list of validation rules written in the CEL expression language.
                                items:
                                  description: ValidationRule describes a validation rule written in the CEL expression language.
                                  properties:
                                    fieldPath:
                                      description: |-
                                        fieldPath represents the field path returned when the validation fails.
                                        It must be a relative JSON path (i.e. with array notation) scoped to the location of this x-kubernetes-validations extension in the schema and refer to an existing field.
                                        e.g. when validation checks if a specific attribute `foo` under a map `testMap`, the fieldPath could be set to `.testMap.foo`
                                        If the validation checks two lists must have unique attributes, the fieldPath could be set to either of the list: e.g. `.testList`
                                        It does not support list numeric index.
                                        It supports child operation to refer to an existing field currently. Refer to [JSONPath support in Kubernetes](https://kubernetes.io/docs/reference/kubectl/jsonpath/) for more info.
                                        Numeric index of array is not supported.
                                        For field name which contains special characters, use `['specialName']` to refer the field name.
                                        e.g. for attribute `foo.34$` appears in a list `testList`, the fieldPath could be set to `.testList['foo.34$']`
                                      maxLength: 512
                                      minLength: 1
                                      type: string
                                    message:
                                      description: |-
                                        message represents the message displayed when validation fails. The message is required if the Rule contains
                                        line breaks. The message must not contain line breaks.
                                        If unset, the message is "failed rule: {Rule}".
                                        e.g. "must be a URL with the host matching spec.host"
                                      maxLength: 512
                                      minLength: 1
                                      type: string
                                    messageExpression:
                                      description: |-
                                        messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.
                                        Since messageExpression is used as a failure message, it must evaluate to a string.
                                        If both message and messageExpression are present on a rule, then messageExpression will be used if validation
                                        fails. If messageExpression results in a runtime error, the validation failure message is produced
                                        as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string
                                        that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset.
                                        messageExpression has access to all the same variables as the rule; the only difference is the return type.
                                        Example:
                                        "x must be less than max ("+string(self.max)+")"
                                      maxLength: 1024
                                      minLength: 1
                                      type: string
                                    reason:
                                      default: FieldValueInvalid
                                      description: |-
                                        reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule.
                                        The currently supported reasons are: "FieldValueInvalid", "FieldValueForbidden", "FieldValueRequired", "FieldValueDuplicate".
                                        If not set, default to use "FieldValueInvalid".
                                        All future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.
                                      enum:
                                        - FieldValueInvalid
                                        - FieldValueForbidden
                                        - FieldValueRequired
                                        - FieldValueDuplicate
                                      type: string
                                    rule:
                                      description: "rule represents the expression which will be evaluated by CEL.\nref: https://github.com/google/cel-spec\nThe Rule is scoped to the location of the x-kubernetes-validations extension in the schema.\nThe `self` variable in the CEL expression is bound to the scoped value.\nIf the Rule is scoped to an object with properties, the accessible properties of the object are field selectable\nvia `self.field` and field presence can be checked via `has(self.field)`.\nIf the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map\nare accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map\nare accessible via CEL macros and functions such as `self.all(...)`.\nIf the Rule is scoped to an array, the elements of the array are accessible via `self[i]` and also by macros and\nfunctions.\nIf the Rule is scoped to a scalar, `self` is bound to the scalar value.\nExamples:\n- Rule scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority < 10\"}\n- Rule scoped to a list of integers: {\"rule\": \"self.values.all(value, value >= 0 && value < 100)\"}\n- Rule scoped to a string value: {\"rule\": \"self.startsWith('kube')\"}\n\nUnknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL\nexpressions. This includes:\n- Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields.\n- Object properties where the property schema is of an \"unknown type\". An \"unknown type\" is recursively defined as:\n  - A schema with no type and x-kubernetes-preserve-unknown-fields set to true\n  - An array where the items schema is of an \"unknown type\"\n  - An object where the additionalProperties schema is of an \"unknown type\"\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.\nAccessible property names are escaped according to the following rules when accessed in the expression:\n- '__' escapes to '__underscores__'\n- '.' escapes to '__dot__'\n- '-' escapes to '__dash__'\n- '/' escapes to '__slash__'\n- Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Rule accessing a property named \"namespace\": {\"rule\": \"self.__namespace__ > 0\"}\n  - Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop > 0\"}\n  - Rule accessing a property named \"redact__d\": {\"rule\": \"self.redact__underscores__d > 0\"}\n\nIf `rule` makes use of the `oldSelf` variable it is implicitly a\n`transition rule`.\n\nBy default, the `oldSelf` variable is the same type as `self`.\n\nTransition rules by default are applied only on UPDATE requests and are\nskipped if an old value could not be found."
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                    - rule
                                  type: object
                                maxItems: 100
                                type: array
                                x-kubernetes-list-map-keys:
                                  - rule
                                x-kubernetes-list-type: map
                              x-metadata:
                                description: |-
                                  x-metadata is the metadata of a variable or a nested field within a variable.
                                  It can be used to add additional data for higher level tools.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      annotations is an unstructured key value map that can be used to store and
                                      retrieve arbitrary metadata.
                                      They are not queryable.
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      labels is a map of string keys and values that can be used to organize and categorize
                                      (scope and select) variables.
                                    type: object
                                type: object
                            type: object
                        required:
                          - openAPIV3Schema
                        type: object
                    required:
                      - name
                      - required
                      - schema
                    type: object
                  maxItems: 1000
                  type: array
                workers:
                  description: |-
                    workers describes the worker nodes for the cluster.
                    It is a collection of node types which can be used to create
                    the worker nodes of the cluster.
                  properties:
                    machineDeployments:
                      description: |-
                        machineDeployments is a list of machine deployment classes that can be used to create
                        a set of worker nodes.
                      items:
                        description: |-
                          MachineDeploymentClass serves as a template to define a set of worker nodes of the cluster
                          provisioned using the `ClusterClass`.
                        properties:
                          class:
                            description: |-
                              class denotes a type of worker node present in the cluster,
                              this name MUST be unique within a ClusterClass and can be referenced
                              in the Cluster to create a managed MachineDeployment.
                            maxLength: 256
                            minLength: 1
                            type: string
                          failureDomain:
                            description: |-
                              failureDomain is the failure domain the machines will be created in.
                              Must match a key in the FailureDomains map stored on the cluster object.
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                            maxLength: 256
                            minLength: 1
                            type: string
                          machineHealthCheck:
                            description: machineHealthCheck defines a MachineHealthCheck for this MachineDeploymentClass.
                            properties:
                              maxUnhealthy:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: |-
                                  maxUnhealthy specifies the maximum number of unhealthy machines allowed.
                                  Any further remediation is only allowed if at most "maxUnhealthy" machines selected by
                                  "selector" are not healthy.
                                x-kubernetes-int-or-string: true
                              nodeStartupTimeout:
                                description: |-
                                  nodeStartupTimeout allows to set the maximum time for MachineHealthCheck
                                  to consider a Machine unhealthy if a corresponding Node isn't associated
                                  through a `Spec.ProviderID` field.

                                  The duration set in this field is compared to the greatest of:
                                  - Cluster's infrastructure ready condition timestamp (if and when available)
                                  - Control Plane's initialized condition timestamp (if and when available)
                                  - Machine's infrastructure ready condition timestamp (if and when available)
                                  - Machine's metadata creation timestamp

                                  Defaults to 10 minutes.
                                  If you wish to disable this feature, set the value explicitly to 0.
                                type: string
                              remediationTemplate:
                                description: |-
                                  remediationTemplate is a reference to a remediation template
                                  provided by an infrastructure provider.

                                  This field is completely optional, when filled, the MachineHealthCheck controller
                                  creates a new object from the template referenced and hands off remediation of the machine to
                                  a controller that lives outside of Cluster API.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: |-
                                      If referring to a piece of an object instead of an entire object, this string
                                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                      For example, if the object reference is to a container within a pod, this would take on a value like:
                                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                      the event) or if no container name is specified "spec.containers[2]" (container with
                                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                      referencing a part of an object.
                                    type: string
                                  kind:
                                    description: |-
                                      Kind of the referent.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                    type: string
                                  name:
                                    description: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                    type: string
                                  resourceVersion:
                                    description: |-
                                      Specific resourceVersion to which this reference is made, if any.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                    type: string
                                  uid:
                                    description: |-
                                      UID of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              unhealthyConditions:
                                description: |-
                                  unhealthyConditions contains a list of the conditions that determine
                                  whether a node is considered unhealthy. The conditions are combined in a
                                  logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                                items:
                                  description: |-
                                    UnhealthyCondition represents a Node condition type and value with a timeout
                                    specified as a duration.  When the named condition has been in the given
                                    status for at least the timeout value, a node is considered unhealthy.
                                  properties:
                                    status:
                                      description: status of the condition, one of True, False, Unknown.
                                      minLength: 1
                                      type: string
                                    timeout:
                                      description: |-
                                        timeout is the duration that a node must be in a given status for,
                                        after which the node is considered unhealthy.
                                        For example, with a value of "1h", the node must match the status
                                        for at least 1 hour before being considered unhealthy.
                                      type: string
                                    type:
                                      description: type of Node condition
                                      minLength: 1
                                      type: string
                                  required:
                                    - status
                                    - timeout
                                    - type
                                  type: object
                                maxItems: 100
                                type: array
                              unhealthyRange:
                                description: |-
                                  unhealthyRange specifies the range of unhealthy machines allowed.
                                  Any further remediation is only allowed if the number of machines selected by "selector" as not healthy
                                  is within the range of "unhealthyRange". Takes precedence over maxUnhealthy.
                                  Eg. "[3-5]" - This means that remediation will be allowed only when:
                                  (a) there are at least 3 unhealthy machines (and)
                                  (b) there are at most 5 unhealthy machines
                                maxLength: 32
                                minLength: 1
                                pattern: ^\[[0-9]+-[0-9]+\]$
                                type: string
                            type: object
                          minReadySeconds:
                            description: |-
                              minReadySeconds is the minimum number of seconds for which a newly created machine should
                              be ready.
                              Defaults to 0 (machine will be considered available as soon as it
                              is ready)
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                            format: int32
                            type: integer
                          namingStrategy:
                            description: namingStrategy allows changing the naming pattern used when creating the MachineDeployment.
                            properties:
                              template:
                                description: |-
                                  template defines the template to use for generating the name of the MachineDeployment object.
                                  If not defined, it will fallback to `{{ .cluster.name }}-{{ .machineDeployment.topologyName }}-{{ .random }}`.
                                  If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will
                                  get concatenated with a random suffix of length 5.
                                  The templating mechanism provides the following arguments:
                                  * `.cluster.name`: The name of the cluster object.
                                  * `.random`: A random alphanumeric string, without vowels, of length 5.
                                  * `.machineDeployment.topologyName`: The name of the MachineDeployment topology (Cluster.spec.topology.workers.machineDeployments[].name).
                                maxLength: 1024
                                minLength: 1
                                type: string
                            type: object
                          nodeDeletionTimeout:
                            description: |-
                              nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                              hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                              Defaults to 10 seconds.
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                            type: string
                          nodeDrainTimeout:
                            description: |-
                              nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                              The default value is 0, meaning that the node can be drained without any time limitations.
                              NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                            type: string
                          nodeVolumeDetachTimeout:
                            description: |-
                              nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                              to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                            type: string
                          readinessGates:
                            description: |-
                              readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                              This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                              computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                              NOTE: This field is considered only for computing v1beta2 conditions.
                              NOTE: If a Cluster defines a custom list of readinessGates for a MachineDeployment using this MachineDeploymentClass,
                              such list overrides readinessGates defined in this field.
                            items:
                              description: MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.
                              properties:
                                conditionType:
                                  description: |-
                                    conditionType refers to a condition with matching type in the Machine's condition list.
                                    If the conditions doesn't exist, it will be treated as unknown.
                                    Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                                  maxLength: 316
                                  minLength: 1
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                                polarity:
                                  description: |-
                                    polarity of the conditionType specified in this readinessGate.
                                    Valid values are Positive, Negative and omitted.
                                    When omitted, the default behaviour will be Positive.
                                    A positive polarity means that the condition should report a true status under normal conditions.
                                    A negative polarity means that the condition should report a false status under normal conditions.
                                  enum:
                                    - Positive
                                    - Negative
                                  type: string
                              required:
                                - conditionType
                              type: object
                            maxItems: 32
                            type: array
                            x-kubernetes-list-map-keys:
                              - conditionType
                            x-kubernetes-list-type: map
                          strategy:
                            description: |-
                              strategy is the deployment strategy to use to replace existing machines with
                              new ones.
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                            properties:
                              remediation:
                                description: |-
                                  remediation controls the strategy of remediating unhealthy machines
                                  and how remediating operations should occur during the lifecycle of the dependant MachineSets.
                                properties:
                                  maxInFlight:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      maxInFlight determines how many in flight remediations should happen at the same time.

                                      Remediation only happens on the MachineSet with the most current revision, while
                                      older MachineSets (usually present during rollout operations) aren't allowed to remediate.

                                      Note: In general (independent of remediations), unhealthy machines are always
                                      prioritized during scale down operations over healthy ones.

                                      MaxInFlight can be set to a fixed number or a percentage.
                                      Example: when this is set to 20%, the MachineSet controller deletes at most 20% of
                                      the desired replicas.

                                      If not set, remediation is limited to all machines (bounded by replicas)
                                      under the active MachineSet's management.
                                    x-kubernetes-int-or-string: true
                                type: object
                              rollingUpdate:
                                description: |-
                                  rollingUpdate is the rolling update config params. Present only if
                                  MachineDeploymentStrategyType = RollingUpdate.
                                properties:
                                  deletePolicy:
                                    description: |-
                                      deletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.
                                      Valid values are "Random, "Newest", "Oldest"
                                      When no value is supplied, the default DeletePolicy of MachineSet is used
                                    enum:
                                      - Random
                                      - Newest
                                      - Oldest
                                    type: string
                                  maxSurge:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      maxSurge is the maximum number of machines that can be scheduled above the
                                      desired number of machines.
                                      Value can be an absolute number (ex: 5) or a percentage of
                                      desired machines (ex: 10%).
                                      This can not be 0 if MaxUnavailable is 0.
                                      Absolute number is calculated from percentage by rounding up.
                                      Defaults to 1.
                                      Example: when this is set to 30%, the new MachineSet can be scaled
                                      up immediately when the rolling update starts, such that the total
                                      number of old and new machines do not exceed 130% of desired
                                      machines. Once old machines have been killed, new MachineSet can
                                      be scaled up further, ensuring that total number of machines running
                                      at any time during the update is at most 130% of desired machines.
                                    x-kubernetes-int-or-string: true
                                  maxUnavailable:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      maxUnavailable is the maximum number of machines that can be unavailable during the update.
                                      Value can be an absolute number (ex: 5) or a percentage of desired
                                      machines (ex: 10%).
                                      Absolute number is calculated from percentage by rounding down.
                                      This can not be 0 if MaxSurge is 0.
                                      Defaults to 0.
                                      Example: when this is set to 30%, the old MachineSet can be scaled
                                      down to 70% of desired machines immediately when the rolling update
                                      starts. Once new machines are ready, old MachineSet can be scaled
                                      down further, followed by scaling up the new MachineSet, ensuring
                                      that the total number of machines available at all times
                                      during the update is at least 70% of desired machines.
                                    x-kubernetes-int-or-string: true
                                type: object
                              type:
                                description: |-
                                  type of deployment. Allowed values are RollingUpdate and OnDelete.
                                  The default is RollingUpdate.
                                enum:
                                  - RollingUpdate
                                  - OnDelete
                                type: string
                            type: object
                          template:
                            description: |-
                              template is a local struct containing a collection of templates for creation of
                              MachineDeployment objects representing a set of worker nodes.
                            properties:
                              bootstrap:
                                description: |-
                                  bootstrap contains the bootstrap template reference to be used
                                  for the creation of worker Machines.
                                properties:
                                  ref:
                                    description: |-
                                      ref is a required reference to a custom resource
                                      offered by a provider.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: |-
                                          If referring to a piece of an object instead of an entire object, this string
                                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is to a container within a pod, this would take on a value like:
                                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                          the event) or if no container name is specified "spec.containers[2]" (container with
                                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                          referencing a part of an object.
                                        type: string
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      namespace:
                                        description: |-
                                          Namespace of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                        type: string
                                      resourceVersion:
                                        description: |-
                                          Specific resourceVersion to which this reference is made, if any.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - ref
                                type: object
                              infrastructure:
                                description: |-
                                  infrastructure contains the infrastructure template reference to be used
                                  for the creation of worker Machines.
                                properties:
                                  ref:
                                    description: |-
                                      ref is a required reference to a custom resource
                                      offered by a provider.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: |-
                                          If referring to a piece of an object instead of an entire object, this string
                                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is to a container within a pod, this would take on a value like:
                                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                          the event) or if no container name is specified "spec.containers[2]" (container with
                                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                          referencing a part of an object.
                                        type: string
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      namespace:
                                        description: |-
                                          Namespace of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                        type: string
                                      resourceVersion:
                                        description: |-
                                          Specific resourceVersion to which this reference is made, if any.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - ref
                                type: object
                              metadata:
                                description: |-
                                  metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment.
                                  At runtime this metadata is merged with the corresponding metadata from the topology.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      annotations is an unstructured key value map stored with a resource that may be
                                      set by external tools to store and retrieve arbitrary metadata. They are not
                                      queryable and should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      labels is a map of string keys and values that can be used to organize and categorize
                                      (scope and select) objects. May match selectors of replication controllers
                                      and services.
                                      More info: http://kubernetes.io/docs/user-guide/labels
                                    type: object
                                type: object
                            required:
                              - bootstrap
                              - infrastructure
                            type: object
                        required:
                          - class
                          - template
                        type: object
                      maxItems: 100
                      type: array
                      x-kubernetes-list-map-keys:
                        - class
                      x-kubernetes-list-type: map
                    machinePools:
                      description: |-
                        machinePools is a list of machine pool classes that can be used to create
                        a set of worker nodes.
                      items:
                        description: |-
                          MachinePoolClass serves as a template to define a pool of worker nodes of the cluster
                          provisioned using `ClusterClass`.
                        properties:
                          class:
                            description: |-
                              class denotes a type of machine pool present in the cluster,
                              this name MUST be unique within a ClusterClass and can be referenced
                              in the Cluster to create a managed MachinePool.
                            maxLength: 256
                            minLength: 1
                            type: string
                          failureDomains:
                            description: |-
                              failureDomains is the list of failure domains the MachinePool should be attached to.
                              Must match a key in the FailureDomains map stored on the cluster object.
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                            items:
                              maxLength: 256
                              minLength: 1
                              type: string
                            maxItems: 100
                            type: array
                          minReadySeconds:
                            description: |-
                              minReadySeconds is the minimum number of seconds for which a newly created machine pool should
                              be ready.
                              Defaults to 0 (machine will be considered available as soon as it
                              is ready)
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                            format: int32
                            type: integer
                          namingStrategy:
                            description: namingStrategy allows changing the naming pattern used when creating the MachinePool.
                            properties:
                              template:
                                description: |-
                                  template defines the template to use for generating the name of the MachinePool object.
                                  If not defined, it will fallback to `{{ .cluster.name }}-{{ .machinePool.topologyName }}-{{ .random }}`.
                                  If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will
                                  get concatenated with a random suffix of length 5.
                                  The templating mechanism provides the following arguments:
                                  * `.cluster.name`: The name of the cluster object.
                                  * `.random`: A random alphanumeric string, without vowels, of length 5.
                                  * `.machinePool.topologyName`: The name of the MachinePool topology (Cluster.spec.topology.workers.machinePools[].name).
                                maxLength: 1024
                                minLength: 1
                                type: string
                            type: object
                          nodeDeletionTimeout:
                            description: |-
                              nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                              hosts after the Machine Pool is marked for deletion. A duration of 0 will retry deletion indefinitely.
                              Defaults to 10 seconds.
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                            type: string
                          nodeDrainTimeout:
                            description: |-
                              nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                              The default value is 0, meaning that the node can be drained without any time limitations.
                              NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                            type: string
                          nodeVolumeDetachTimeout:
                            description: |-
                              nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                              to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                              NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                            type: string
                          template:
                            description: |-
                              template is a local struct containing a collection of templates for creation of
                              MachinePools objects representing a pool of worker nodes.
                            properties:
                              bootstrap:
                                description: |-
                                  bootstrap contains the bootstrap template reference to be used
                                  for the creation of the Machines in the MachinePool.
                                properties:
                                  ref:
                                    description: |-
                                      ref is a required reference to a custom resource
                                      offered by a provider.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: |-
                                          If referring to a piece of an object instead of an entire object, this string
                                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is to a container within a pod, this would take on a value like:
                                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                          the event) or if no container name is specified "spec.containers[2]" (container with
                                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                          referencing a part of an object.
                                        type: string
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      namespace:
                                        description: |-
                                          Namespace of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                        type: string
                                      resourceVersion:
                                        description: |-
                                          Specific resourceVersion to which this reference is made, if any.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - ref
                                type: object
                              infrastructure:
                                description: |-
                                  infrastructure contains the infrastructure template reference to be used
                                  for the creation of the MachinePool.
                                properties:
                                  ref:
                                    description: |-
                                      ref is a required reference to a custom resource
                                      offered by a provider.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: |-
                                          If referring to a piece of an object instead of an entire object, this string
                                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is to a container within a pod, this would take on a value like:
                                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                          the event) or if no container name is specified "spec.containers[2]" (container with
                                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                          referencing a part of an object.
                                        type: string
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      namespace:
                                        description: |-
                                          Namespace of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                        type: string
                                      resourceVersion:
                                        description: |-
                                          Specific resourceVersion to which this reference is made, if any.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                required:
                                  - ref
                                type: object
                              metadata:
                                description: |-
                                  metadata is the metadata applied to the MachinePool.
                                  At runtime this metadata is merged with the corresponding metadata from the topology.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      annotations is an unstructured key value map stored with a resource that may be
                                      set by external tools to store and retrieve arbitrary metadata. They are not
                                      queryable and should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      labels is a map of string keys and values that can be used to organize and categorize
                                      (scope and select) objects. May match selectors of replication controllers
                                      and services.
                                      More info: http://kubernetes.io/docs/user-guide/labels
                                    type: object
                                type: object
                            required:
                              - bootstrap
                              - infrastructure
                            type: object
                        required:
                          - class
                          - template
                        type: object
                      maxItems: 100
                      type: array
                      x-kubernetes-list-map-keys:
                        - class
                      x-kubernetes-list-type: map
                  type: object
              type: object
            status:
              description: status is the observed state of ClusterClass.
              properties:
                conditions:
                  description: conditions defines current observed state of the ClusterClass.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the latest generation observed by the controller.
                  format: int64
                  type: integer
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in ClusterClass's status with the V1Beta2 version.
                  properties:
                    conditions:
                      description: |-
                        conditions represents the observations of a ClusterClass's current state.
                        Known condition types are VariablesReady, RefVersionsUpToDate, Paused.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                  type: object
                variables:
                  description: variables is a list of ClusterClassStatusVariable that are defined for the ClusterClass.
                  items:
                    description: ClusterClassStatusVariable defines a variable which appears in the status of a ClusterClass.
                    properties:
                      definitions:
                        description: definitions is a list of definitions for a variable.
                        items:
                          description: ClusterClassStatusVariableDefinition defines a variable which appears in the status of a ClusterClass.
                          properties:
                            from:
                              description: |-
                                from specifies the origin of the variable definition.
                                This will be `inline` for variables defined in the ClusterClass or the name of a patch defined in the ClusterClass
                                for variables discovered from a DiscoverVariables runtime extensions.
                              maxLength: 256
                              minLength: 1
                              type: string
                            metadata:
                              description: |-
                                metadata is the metadata of a variable.
                                It can be used to add additional data for higher level tools to
                                a ClusterClassVariable.

                                Deprecated: This field is deprecated and is going to be removed in the next apiVersion.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map that can be used to store and
                                    retrieve arbitrary metadata.
                                    They are not queryable.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) variables.
                                  type: object
                              type: object
                            required:
                              description: |-
                                required specifies if the variable is required.
                                Note: this applies to the variable as a whole and thus the
                                top-level object defined in the schema. If nested fields are
                                required, this will be specified inside the schema.
                              type: boolean
                            schema:
                              description: schema defines the schema of the variable.
                              properties:
                                openAPIV3Schema:
                                  description: |-
                                    openAPIV3Schema defines the schema of a variable via OpenAPI v3
                                    schema. The schema is a subset of the schema used in
                                    Kubernetes CRDs.
                                  properties:
                                    additionalProperties:
                                      description: |-
                                        additionalProperties specifies the schema of values in a map (keys are always strings).
                                        NOTE: Can only be set if type is object.
                                        NOTE: AdditionalProperties is mutually exclusive with Properties.
                                        NOTE: This field uses PreserveUnknownFields and Schemaless,
                                        because recursive validation is not possible.
                                      x-kubernetes-preserve-unknown-fields: true
                                    allOf:
                                      description: |-
                                        allOf specifies that the variable must validate against all of the subschemas in the array.
                                        NOTE: This field uses PreserveUnknownFields and Schemaless,
                                        because recursive validation is not possible.
                                      x-kubernetes-preserve-unknown-fields: true
                                    anyOf:
                                      description: |-
                                        anyOf specifies that the variable must validate against one or more of the subschemas in the array.
                                        NOTE: This field uses PreserveUnknownFields and Schemaless,
                                        because recursive validation is not possible.
                                      x-kubernetes-preserve-unknown-fields: true
                                    default:
                                      description: |-
                                        default is the default value of the variable.
                                        NOTE: Can be set for all types.
                                      x-kubernetes-preserve-unknown-fields: true
                                    description:
                                      description: description is a human-readable description of this variable.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                    enum:
                                      description: |-
                                        enum is the list of valid values of the variable.
                                        NOTE: Can be set for all types.
                                      items:
                                        x-kubernetes-preserve-unknown-fields: true
                                      maxItems: 100
                                      type: array
                                    example:
                                      description: example is an example for this variable.
                                      x-kubernetes-preserve-unknown-fields: true
                                    exclusiveMaximum:
                                      description: |-
                                        exclusiveMaximum specifies if the Maximum is exclusive.
                                        NOTE: Can only be set if type is integer or number.
                                      type: boolean
                                    exclusiveMinimum:
                                      description: |-
                                        exclusiveMinimum specifies if the Minimum is exclusive.
                                        NOTE: Can only be set if type is integer or number.
                                      type: boolean
                                    format:
                                      description: |-
                                        format is an OpenAPI v3 format string. Unknown formats are ignored.
                                        For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using)
                                        https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go
                                        NOTE: Can only be set if type is string.
                                      maxLength: 32
                                      minLength: 1
                                      type: string
                                    items:
                                      description: |-
                                        items specifies fields of an array.
                                        NOTE: Can only be set if type is array.
                                        NOTE: This field uses PreserveUnknownFields and Schemaless,
                                        because recursive validation is not possible.
                                      x-kubernetes-preserve-unknown-fields: true
                                    maxItems:
                                      description: |-
                                        maxItems is the max length of an array variable.
                                        NOTE: Can only be set if type is array.
                                      format: int64
                                      type: integer
                                    maxLength:
                                      description: |-
                                        maxLength is the max length of a string variable.
                                        NOTE: Can only be set if type is string.
                                      format: int64
                                      type: integer
                                    maxProperties:
                                      description: |-
                                        maxProperties is the maximum amount of entries in a map or properties in an object.
                                        NOTE: Can only be set if type is object.
                                      format: int64
                                      type: integer
                                    maximum:
                                      description: |-
                                        maximum is the maximum of an integer or number variable.
                                        If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum.
                                        If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum.
                                        NOTE: Can only be set if type is integer or number.
                                      format: int64
                                      type: integer
                                    minItems:
                                      description: |-
                                        minItems is the min length of an array variable.
                                        NOTE: Can only be set if type is array.
                                      format: int64
                                      type: integer
                                    minLength:
                                      description: |-
                                        minLength is the min length of a string variable.
                                        NOTE: Can only be set if type is string.
                                      format: int64
                                      type: integer
                                    minProperties:
                                      description: |-
                                        minProperties is the minimum amount of entries in a map or properties in an object.
                                        NOTE: Can only be set if type is object.
                                      format: int64
                                      type: integer
                                    minimum:
                                      description: |-
                                        minimum is the minimum of an integer or number variable.
                                        If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum.
                                        If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum.
                                        NOTE: Can only be set if type is integer or number.
                                      format: int64
                                      type: integer
                                    not:
                                      description: |-
                                        not specifies that the variable must not validate against the subschema.
                                        NOTE: This field uses PreserveUnknownFields and Schemaless,
                                        because recursive validation is not possible.
                                      x-kubernetes-preserve-unknown-fields: true
                                    oneOf:
                                      description: |-
                                        oneOf specifies that the variable must validate against exactly one of the subschemas in the array.
                                        NOTE: This field uses PreserveUnknownFields and Schemaless,
                                        because recursive validation is not possible.
                                      x-kubernetes-preserve-unknown-fields: true
                                    pattern:
                                      description: |-
                                        pattern is the regex which a string variable must match.
                                        NOTE: Can only be set if type is string.
                                      maxLength: 512
                                      minLength: 1
                                      type: string
                                    properties:
                                      description: |-
                                        properties specifies fields of an object.
                                        NOTE: Can only be set if type is object.
                                        NOTE: Properties is mutually exclusive with AdditionalProperties.
                                        NOTE: This field uses PreserveUnknownFields and Schemaless,
                                        because recursive validation is not possible.
                                      x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      description: |-
                                        required specifies which fields of an object are required.
                                        NOTE: Can only be set if type is object.
                                      items:
                                        maxLength: 256
                                        minLength: 1
                                        type: string
                                      maxItems: 1000
                                      type: array
                                    type:
                                      description: |-
                                        type is the type of the variable.
                                        Valid values are: object, array, string, integer, number or boolean.
                                      enum:
                                        - object
                                        - array
                                        - string
                                        - integer
                                        - number
                                        - boolean
                                      type: string
                                    uniqueItems:
                                      description: |-
                                        uniqueItems specifies if items in an array must be unique.
                                        NOTE: Can only be set if type is array.
                                      type: boolean
                                    x-kubernetes-int-or-string:
                                      description: |-
                                        x-kubernetes-int-or-string specifies that this value is
                                        either an integer or a string. If this is true, an empty
                                        type is allowed and type as child of anyOf is permitted
                                        if following one of the following patterns:

                                        1) anyOf:
                                           - type: integer
                                           - type: string
                                        2) allOf:
                                           - anyOf:
                                             - type: integer
                                             - type: string
                                           - ... zero or more
                                      type: boolean
                                    x-kubernetes-preserve-unknown-fields:
                                      description: |-
                                        x-kubernetes-preserve-unknown-fields allows setting fields in a variable object
                                        which are not defined in the variable schema. This affects fields recursively,
                                        except if nested properties or additionalProperties are specified in the schema.
                                      type: boolean
                                    x-kubernetes-validations:
                                      description: x-kubernetes-validations describes a list of validation rules written in the CEL expression language.
                                      items:
                                        description: ValidationRule describes a validation rule written in the CEL expression language.
                                        properties:
                                          fieldPath:
                                            description: |-
                                              fieldPath represents the field path returned when the validation fails.
                                              It must be a relative JSON path (i.e. with array notation) scoped to the location of this x-kubernetes-validations extension in the schema and refer to an existing field.
                                              e.g. when validation checks if a specific attribute `foo` under a map `testMap`, the fieldPath could be set to `.testMap.foo`
                                              If the validation checks two lists must have unique attributes, the fieldPath could be set to either of the list: e.g. `.testList`
                                              It does not support list numeric index.
                                              It supports child operation to refer to an existing field currently. Refer to [JSONPath support in Kubernetes](https://kubernetes.io/docs/reference/kubectl/jsonpath/) for more info.
                                              Numeric index of array is not supported.
                                              For field name which contains special characters, use `['specialName']` to refer the field name.
                                              e.g. for attribute `foo.34$` appears in a list `testList`, the fieldPath could be set to `.testList['foo.34$']`
                                            maxLength: 512
                                            minLength: 1
                                            type: string
                                          message:
                                            description: |-
                                              message represents the message displayed when validation fails. The message is required if the Rule contains
                                              line breaks. The message must not contain line breaks.
                                              If unset, the message is "failed rule: {Rule}".
                                              e.g. "must be a URL with the host matching spec.host"
                                            maxLength: 512
                                            minLength: 1
                                            type: string
                                          messageExpression:
                                            description: |-
                                              messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.
                                              Since messageExpression is used as a failure message, it must evaluate to a string.
                                              If both message and messageExpression are present on a rule, then messageExpression will be used if validation
                                              fails. If messageExpression results in a runtime error, the validation failure message is produced
                                              as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string
                                              that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset.
                                              messageExpression has access to all the same variables as the rule; the only difference is the return type.
                                              Example:
                                              "x must be less than max ("+string(self.max)+")"
                                            maxLength: 1024
                                            minLength: 1
                                            type: string
                                          reason:
                                            default: FieldValueInvalid
                                            description: |-
                                              reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule.
                                              The currently supported reasons are: "FieldValueInvalid", "FieldValueForbidden", "FieldValueRequired", "FieldValueDuplicate".
                                              If not set, default to use "FieldValueInvalid".
                                              All future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.
                                            enum:
                                              - FieldValueInvalid
                                              - FieldValueForbidden
                                              - FieldValueRequired
                                              - FieldValueDuplicate
                                            type: string
                                          rule:
                                            description: "rule represents the expression which will be evaluated by CEL.\nref: https://github.com/google/cel-spec\nThe Rule is scoped to the location of the x-kubernetes-validations extension in the schema.\nThe `self` variable in the CEL expression is bound to the scoped value.\nIf the Rule is scoped to an object with properties, the accessible properties of the object are field selectable\nvia `self.field` and field presence can be checked via `has(self.field)`.\nIf the Rule is scoped to an object with additionalProperties (i.e. a map) the value of the map\nare accessible via `self[mapKey]`, map containment can be checked via `mapKey in self` and all entries of the map\nare accessible via CEL macros and functions such as `self.all(...)`.\nIf the Rule is scoped to an array, the elements of the array are accessible via `self[i]` and also by macros and\nfunctions.\nIf the Rule is scoped to a scalar, `self` is bound to the scalar value.\nExamples:\n- Rule scoped to a map of objects: {\"rule\": \"self.components['Widget'].priority < 10\"}\n- Rule scoped to a list of integers: {\"rule\": \"self.values.all(value, value >= 0 && value < 100)\"}\n- Rule scoped to a string value: {\"rule\": \"self.startsWith('kube')\"}\n\nUnknown data preserved in custom resources via x-kubernetes-preserve-unknown-fields is not accessible in CEL\nexpressions. This includes:\n- Unknown field values that are preserved by object schemas with x-kubernetes-preserve-unknown-fields.\n- Object properties where the property schema is of an \"unknown type\". An \"unknown type\" is recursively defined as:\n  - A schema with no type and x-kubernetes-preserve-unknown-fields set to true\n  - An array where the items schema is of an \"unknown type\"\n  - An object where the additionalProperties schema is of an \"unknown type\"\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible.\nAccessible property names are escaped according to the following rules when accessed in the expression:\n- '__' escapes to '__underscores__'\n- '.' escapes to '__dot__'\n- '-' escapes to '__dash__'\n- '/' escapes to '__slash__'\n- Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are:\n\t  \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\",\n\t  \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\".\nExamples:\n  - Rule accessing a property named \"namespace\": {\"rule\": \"self.__namespace__ > 0\"}\n  - Rule accessing a property named \"x-prop\": {\"rule\": \"self.x__dash__prop > 0\"}\n  - Rule accessing a property named \"redact__d\": {\"rule\": \"self.redact__underscores__d > 0\"}\n\nIf `rule` makes use of the `oldSelf` variable it is implicitly a\n`transition rule`.\n\nBy default, the `oldSelf` variable is the same type as `self`.\n\nTransition rules by default are applied only on UPDATE requests and are\nskipped if an old value could not be found."
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                          - rule
                                        type: object
                                      maxItems: 100
                                      type: array
                                      x-kubernetes-list-map-keys:
                                        - rule
                                      x-kubernetes-list-type: map
                                    x-metadata:
                                      description: |-
                                        x-metadata is the metadata of a variable or a nested field within a variable.
                                        It can be used to add additional data for higher level tools.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            annotations is an unstructured key value map that can be used to store and
                                            retrieve arbitrary metadata.
                                            They are not queryable.
                                          type: object
                                        labels:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            labels is a map of string keys and values that can be used to organize and categorize
                                            (scope and select) variables.
                                          type: object
                                      type: object
                                  type: object
                              required:
                                - openAPIV3Schema
                              type: object
                          required:
                            - from
                            - required
                            - schema
                          type: object
                        maxItems: 100
                        type: array
                      definitionsConflict:
                        description: definitionsConflict specifies whether or not there are conflicting definitions for a single variable name.
                        type: boolean
                      name:
                        description: name is the name of the variable.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - definitions
                      - name
                    type: object
                  maxItems: 1000
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: clusters.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    shortNames:
      - cl
    singular: cluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: ClusterClass of this Cluster, empty if the Cluster is not using a ClusterClass
          jsonPath: .spec.topology.class
          name: ClusterClass
          type: string
        - description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
          jsonPath: .status.phase
          name: Phase
          type: string
        - description: Time duration since creation of Cluster
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Kubernetes version associated with this Cluster
          jsonPath: .spec.topology.version
          name: Version
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Cluster is the Schema for the clusters API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of Cluster.
              properties:
                availabilityGates:
                  description: |-
                    availabilityGates specifies additional conditions to include when evaluating Cluster Available condition.

                    If this field is not defined and the Cluster implements a managed topology, availabilityGates
                    from the corresponding ClusterClass will be used, if any.

                    NOTE: this field is considered only for computing v1beta2 conditions.
                  items:
                    description: ClusterAvailabilityGate contains the type of a Cluster condition to be used as availability gate.
                    properties:
                      conditionType:
                        description: |-
                          conditionType refers to a condition with matching type in the Cluster's condition list.
                          If the conditions doesn't exist, it will be treated as unknown.
                          Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as availability gates.
                        maxLength: 316
                        minLength: 1
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                      polarity:
                        description: |-
                          polarity of the conditionType specified in this availabilityGate.
                          Valid values are Positive, Negative and omitted.
                          When omitted, the default behaviour will be Positive.
                          A positive polarity means that the condition should report a true status under normal conditions.
                          A negative polarity means that the condition should report a false status under normal conditions.
                        enum:
                          - Positive
                          - Negative
                        type: string
                    required:
                      - conditionType
                    type: object
                  maxItems: 32
                  type: array
                  x-kubernetes-list-map-keys:
                    - conditionType
                  x-kubernetes-list-type: map
                clusterNetwork:
                  description: clusterNetwork represents the cluster network configuration.
                  properties:
                    apiServerPort:
                      description: |-
                        apiServerPort specifies the port the API Server should bind to.
                        Defaults to 6443.
                      format: int32
                      type: integer
                    pods:
                      description: pods is the network ranges from which Pod networks are allocated.
                      properties:
                        cidrBlocks:
                          description: cidrBlocks is a list of CIDR blocks.
                          items:
                            maxLength: 43
                            minLength: 1
                            type: string
                          maxItems: 100
                          type: array
                      required:
                        - cidrBlocks
                      type: object
                    serviceDomain:
                      description: serviceDomain is the domain name for services.
                      maxLength: 253
                      minLength: 1
                      type: string
                    services:
                      description: services is the network ranges from which service VIPs are allocated.
                      properties:
                        cidrBlocks:
                          description: cidrBlocks is a list of CIDR blocks.
                          items:
                            maxLength: 43
                            minLength: 1
                            type: string
                          maxItems: 100
                          type: array
                      required:
                        - cidrBlocks
                      type: object
                  type: object
                controlPlaneEndpoint:
                  description: controlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                controlPlaneRef:
                  description: |-
                    controlPlaneRef is an optional reference to a provider-specific resource that holds
                    the details for provisioning the Control Plane for a Cluster.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                infrastructureRef:
                  description: |-
                    infrastructureRef is a reference to a provider-specific resource that holds the details
                    for provisioning infrastructure for a cluster in said provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                paused:
                  description: paused can be used to prevent controllers from processing the Cluster and all its associated objects.
                  type: boolean
                topology:
                  description: |-
                    topology encapsulates the topology for the cluster.
                    NOTE: It is required to enable the ClusterTopology
                    feature gate flag to activate managed topologies support;
                    this feature is highly experimental, and parts of it might still be not implemented.
                  properties:
                    class:
                      description: class is the name of the ClusterClass object to create the topology.
                      maxLength: 253
                      minLength: 1
                      type: string
                    classNamespace:
                      description: |-
                        classNamespace is the namespace of the ClusterClass that should be used for the topology.
                        If classNamespace is empty or not set, it is defaulted to the namespace of the Cluster object.
                        classNamespace must be a valid namespace name and because of that be at most 63 characters in length
                        and it must consist only of lower case alphanumeric characters or hyphens (-), and must start
                        and end with an alphanumeric character.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    controlPlane:
                      description: controlPlane describes the cluster control plane.
                      properties:
                        machineHealthCheck:
                          description: |-
                            machineHealthCheck allows to enable, disable and override
                            the MachineHealthCheck configuration in the ClusterClass for this control plane.
                          properties:
                            enable:
                              description: |-
                                enable controls if a MachineHealthCheck should be created for the target machines.

                                If false: No MachineHealthCheck will be created.

                                If not set(default): A MachineHealthCheck will be created if it is defined here or
                                 in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.

                                If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will
                                block if `enable` is true and no MachineHealthCheck definition is available.
                              type: boolean
                            maxUnhealthy:
                              anyOf:
                                - type: integer
                                - type: string
                              description: |-
                                maxUnhealthy specifies the maximum number of unhealthy machines allowed.
                                Any further remediation is only allowed if at most "maxUnhealthy" machines selected by
                                "selector" are not healthy.
                              x-kubernetes-int-or-string: true
                            nodeStartupTimeout:
                              description: |-
                                nodeStartupTimeout allows to set the maximum time for MachineHealthCheck
                                to consider a Machine unhealthy if a corresponding Node isn't associated
                                through a `Spec.ProviderID` field.

                                The duration set in this field is compared to the greatest of:
                                - Cluster's infrastructure ready condition timestamp (if and when available)
                                - Control Plane's initialized condition timestamp (if and when available)
                                - Machine's infrastructure ready condition timestamp (if and when available)
                                - Machine's metadata creation timestamp

                                Defaults to 10 minutes.
                                If you wish to disable this feature, set the value explicitly to 0.
                              type: string
                            remediationTemplate:
                              description: |-
                                remediationTemplate is a reference to a remediation template
                                provided by an infrastructure provider.

                                This field is completely optional, when filled, the MachineHealthCheck controller
                                creates a new object from the template referenced and hands off remediation of the machine to
                                a controller that lives outside of Cluster API.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: |-
                                    If referring to a piece of an object instead of an entire object, this string
                                    should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                    the event) or if no container name is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                    referencing a part of an object.
                                  type: string
                                kind:
                                  description: |-
                                    Kind of the referent.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                  type: string
                                resourceVersion:
                                  description: |-
                                    Specific resourceVersion to which this reference is made, if any.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                  type: string
                                uid:
                                  description: |-
                                    UID of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            unhealthyConditions:
                              description: |-
                                unhealthyConditions contains a list of the conditions that determine
                                whether a node is considered unhealthy. The conditions are combined in a
                                logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                              items:
                                description: |-
                                  UnhealthyCondition represents a Node condition type and value with a timeout
                                  specified as a duration.  When the named condition has been in the given
                                  status for at least the timeout value, a node is considered unhealthy.
                                properties:
                                  status:
                                    description: status of the condition, one of True, False, Unknown.
                                    minLength: 1
                                    type: string
                                  timeout:
                                    description: |-
                                      timeout is the duration that a node must be in a given status for,
                                      after which the node is considered unhealthy.
                                      For example, with a value of "1h", the node must match the status
                                      for at least 1 hour before being considered unhealthy.
                                    type: string
                                  type:
                                    description: type of Node condition
                                    minLength: 1
                                    type: string
                                required:
                                  - status
                                  - timeout
                                  - type
                                type: object
                              maxItems: 100
                              type: array
                            unhealthyRange:
                              description: |-
                                unhealthyRange specifies the range of unhealthy machines allowed.
                                Any further remediation is only allowed if the number of machines selected by "selector" as not healthy
                                is within the range of "unhealthyRange". Takes precedence over maxUnhealthy.
                                Eg. "[3-5]" - This means that remediation will be allowed only when:
                                (a) there are at least 3 unhealthy machines (and)
                                (b) there are at most 5 unhealthy machines
                              maxLength: 32
                              minLength: 1
                              pattern: ^\[[0-9]+-[0-9]+\]$
                              type: string
                          type: object
                        metadata:
                          description: |-
                            metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane
                            if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it
                            is applied only to the ControlPlane.
                            At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              description: |-
                                annotations is an unstructured key value map stored with a resource that may be
                                set by external tools to store and retrieve arbitrary metadata. They are not
                                queryable and should be preserved when modifying objects.
                                More info: http://kubernetes.io/docs/user-guide/annotations
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              description: |-
                                labels is a map of string keys and values that can be used to organize and categorize
                                (scope and select) objects. May match selectors of replication controllers
                                and services.
                                More info: http://kubernetes.io/docs/user-guide/labels
                              type: object
                          type: object
                        nodeDeletionTimeout:
                          description: |-
                            nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                            hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                            Defaults to 10 seconds.
                          type: string
                        nodeDrainTimeout:
                          description: |-
                            nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                            The default value is 0, meaning that the node can be drained without any time limitations.
                            NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                          type: string
                        nodeVolumeDetachTimeout:
                          description: |-
                            nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                            to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                          type: string
                        readinessGates:
                          description: |-
                            readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                            This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                            computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                            If this field is not defined, readinessGates from the corresponding ControlPlaneClass will be used, if any.

                            NOTE: This field is considered only for computing v1beta2 conditions.
                            NOTE: Specific control plane provider implementations might automatically extend the list of readinessGates;
                            e.g. the kubeadm control provider adds ReadinessGates for the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.
                          items:
                            description: MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.
                            properties:
                              conditionType:
                                description: |-
                                  conditionType refers to a condition with matching type in the Machine's condition list.
                                  If the conditions doesn't exist, it will be treated as unknown.
                                  Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                                maxLength: 316
                                minLength: 1
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              polarity:
                                description: |-
                                  polarity of the conditionType specified in this readinessGate.
                                  Valid values are Positive, Negative and omitted.
                                  When omitted, the default behaviour will be Positive.
                                  A positive polarity means that the condition should report a true status under normal conditions.
                                  A negative polarity means that the condition should report a false status under normal conditions.
                                enum:
                                  - Positive
                                  - Negative
                                type: string
                            required:
                              - conditionType
                            type: object
                          maxItems: 32
                          type: array
                          x-kubernetes-list-map-keys:
                            - conditionType
                          x-kubernetes-list-type: map
                        replicas:
                          description: |-
                            replicas is the number of control plane nodes.
                            If the value is nil, the ControlPlane object is created without the number of Replicas
                            and it's assumed that the control plane controller does not implement support for this field.
                            When specified against a control plane provider that lacks support for this field, this value will be ignored.
                          format: int32
                          type: integer
                        variables:
                          description: variables can be used to customize the ControlPlane through patches.
                          properties:
                            overrides:
                              description: overrides can be used to override Cluster level variables.
                              items:
                                description: |-
                                  ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                                  Variable definition in the ClusterClass `status` variables.
                                properties:
                                  definitionFrom:
                                    description: |-
                                      definitionFrom specifies where the definition of this Variable is from.

                                      Deprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.
                                    maxLength: 256
                                    type: string
                                  name:
                                    description: name of the variable.
                                    maxLength: 256
                                    minLength: 1
                                    type: string
                                  value:
                                    description: |-
                                      value of the variable.
                                      Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                                      from the ClusterClass.
                                      Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                                      hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                                      i.e. it is not possible to have no type field.
                                      Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                    x-kubernetes-preserve-unknown-fields: true
                                required:
                                  - name
                                  - value
                                type: object
                              maxItems: 1000
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                          type: object
                      type: object
                    rolloutAfter:
                      description: |-
                        rolloutAfter performs a rollout of the entire cluster one component at a time,
                        control plane first and then machine deployments.

                        Deprecated: This field has no function and is going to be removed in the next apiVersion.
                      format: date-time
                      type: string
                    variables:
                      description: |-
                        variables can be used to customize the Cluster through
                        patches. They must comply to the corresponding
                        VariableClasses defined in the ClusterClass.
                      items:
                        description: |-
                          ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                          Variable definition in the ClusterClass `status` variables.
                        properties:
                          definitionFrom:
                            description: |-
                              definitionFrom specifies where the definition of this Variable is from.

                              Deprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.
                            maxLength: 256
                            type: string
                          name:
                            description: name of the variable.
                            maxLength: 256
                            minLength: 1
                            type: string
                          value:
                            description: |-
                              value of the variable.
                              Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                              from the ClusterClass.
                              Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                              hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                              i.e. it is not possible to have no type field.
                              Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                          - name
                          - value
                        type: object
                      maxItems: 1000
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    version:
                      description: version is the Kubernetes version of the cluster.
                      maxLength: 256
                      minLength: 1
                      type: string
                    workers:
                      description: |-
                        workers encapsulates the different constructs that form the worker nodes
                        for the cluster.
                      properties:
                        machineDeployments:
                          description: machineDeployments is a list of machine deployments in the cluster.
                          items:
                            description: |-
                              MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology.
                              This set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.
                            properties:
                              class:
                                description: |-
                                  class is the name of the MachineDeploymentClass used to create the set of worker nodes.
                                  This should match one of the deployment classes defined in the ClusterClass object
                                  mentioned in the `Cluster.Spec.Class` field.
                                maxLength: 256
                                minLength: 1
                                type: string
                              failureDomain:
                                description: |-
                                  failureDomain is the failure domain the machines will be created in.
                                  Must match a key in the FailureDomains map stored on the cluster object.
                                maxLength: 256
                                minLength: 1
                                type: string
                              machineHealthCheck:
                                description: |-
                                  machineHealthCheck allows to enable, disable and override
                                  the MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.
                                properties:
                                  enable:
                                    description: |-
                                      enable controls if a MachineHealthCheck should be created for the target machines.

                                      If false: No MachineHealthCheck will be created.

                                      If not set(default): A MachineHealthCheck will be created if it is defined here or
                                       in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.

                                      If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will
                                      block if `enable` is true and no MachineHealthCheck definition is available.
                                    type: boolean
                                  maxUnhealthy:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: |-
                                      maxUnhealthy specifies the maximum number of unhealthy machines allowed.
                                      Any further remediation is only allowed if at most "maxUnhealthy" machines selected by
                                      "selector" are not healthy.
                                    x-kubernetes-int-or-string: true
                                  nodeStartupTimeout:
                                    description: |-
                                      nodeStartupTimeout allows to set the maximum time for MachineHealthCheck
                                      to consider a Machine unhealthy if a corresponding Node isn't associated
                                      through a `Spec.ProviderID` field.

                                      The duration set in this field is compared to the greatest of:
                                      - Cluster's infrastructure ready condition timestamp (if and when available)
                                      - Control Plane's initialized condition timestamp (if and when available)
                                      - Machine's infrastructure ready condition timestamp (if and when available)
                                      - Machine's metadata creation timestamp

                                      Defaults to 10 minutes.
                                      If you wish to disable this feature, set the value explicitly to 0.
                                    type: string
                                  remediationTemplate:
                                    description: |-
                                      remediationTemplate is a reference to a remediation template
                                      provided by an infrastructure provider.

                                      This field is completely optional, when filled, the MachineHealthCheck controller
                                      creates a new object from the template referenced and hands off remediation of the machine to
                                      a controller that lives outside of Cluster API.
                                    properties:
                                      apiVersion:
                                        description: API version of the referent.
                                        type: string
                                      fieldPath:
                                        description: |-
                                          If referring to a piece of an object instead of an entire object, this string
                                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                          For example, if the object reference is to a container within a pod, this would take on a value like:
                                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                          the event) or if no container name is specified "spec.containers[2]" (container with
                                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                          referencing a part of an object.
                                        type: string
                                      kind:
                                        description: |-
                                          Kind of the referent.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      name:
                                        description: |-
                                          Name of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      namespace:
                                        description: |-
                                          Namespace of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                        type: string
                                      resourceVersion:
                                        description: |-
                                          Specific resourceVersion to which this reference is made, if any.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                        type: string
                                      uid:
                                        description: |-
                                          UID of the referent.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  unhealthyConditions:
                                    description: |-
                                      unhealthyConditions contains a list of the conditions that determine
                                      whether a node is considered unhealthy. The conditions are combined in a
                                      logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                                    items:
                                      description: |-
                                        UnhealthyCondition represents a Node condition type and value with a timeout
                                        specified as a duration.  When the named condition has been in the given
                                        status for at least the timeout value, a node is considered unhealthy.
                                      properties:
                                        status:
                                          description: status of the condition, one of True, False, Unknown.
                                          minLength: 1
                                          type: string
                                        timeout:
                                          description: |-
                                            timeout is the duration that a node must be in a given status for,
                                            after which the node is considered unhealthy.
                                            For example, with a value of "1h", the node must match the status
                                            for at least 1 hour before being considered unhealthy.
                                          type: string
                                        type:
                                          description: type of Node condition
                                          minLength: 1
                                          type: string
                                      required:
                                        - status
                                        - timeout
                                        - type
                                      type: object
                                    maxItems: 100
                                    type: array
                                  unhealthyRange:
                                    description: |-
                                      unhealthyRange specifies the range of unhealthy machines allowed.
                                      Any further remediation is only allowed if the number of machines selected by "selector" as not healthy
                                      is within the range of "unhealthyRange". Takes precedence over maxUnhealthy.
                                      Eg. "[3-5]" - This means that remediation will be allowed only when:
                                      (a) there are at least 3 unhealthy machines (and)
                                      (b) there are at most 5 unhealthy machines
                                    maxLength: 32
                                    minLength: 1
                                    pattern: ^\[[0-9]+-[0-9]+\]$
                                    type: string
                                type: object
                              metadata:
                                description: |-
                                  metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment.
                                  At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      annotations is an unstructured key value map stored with a resource that may be
                                      set by external tools to store and retrieve arbitrary metadata. They are not
                                      queryable and should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      labels is a map of string keys and values that can be used to organize and categorize
                                      (scope and select) objects. May match selectors of replication controllers
                                      and services.
                                      More info: http://kubernetes.io/docs/user-guide/labels
                                    type: object
                                type: object
                              minReadySeconds:
                                description: |-
                                  minReadySeconds is the minimum number of seconds for which a newly created machine should
                                  be ready.
                                  Defaults to 0 (machine will be considered available as soon as it
                                  is ready)
                                format: int32
                                type: integer
                              name:
                                description: |-
                                  name is the unique identifier for this MachineDeploymentTopology.
                                  The value is used with other unique identifiers to create a MachineDeployment's Name
                                  (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length,
                                  the values are hashed together.
                                maxLength: 63
                                minLength: 1
                                type: string
                              nodeDeletionTimeout:
                                description: |-
                                  nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                                  hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                                  Defaults to 10 seconds.
                                type: string
                              nodeDrainTimeout:
                                description: |-
                                  nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                                  The default value is 0, meaning that the node can be drained without any time limitations.
                                  NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                                type: string
                              nodeVolumeDetachTimeout:
                                description: |-
                                  nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                                  to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                                type: string
                              readinessGates:
                                description: |-
                                  readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                                  This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                                  computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                                  If this field is not defined, readinessGates from the corresponding MachineDeploymentClass will be used, if any.

                                  NOTE: This field is considered only for computing v1beta2 conditions.
                                items:
                                  description: MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.
                                  properties:
                                    conditionType:
                                      description: |-
                                        conditionType refers to a condition with matching type in the Machine's condition list.
                                        If the conditions doesn't exist, it will be treated as unknown.
                                        Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                                      maxLength: 316
                                      minLength: 1
                                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                      type: string
                                    polarity:
                                      description: |-
                                        polarity of the conditionType specified in this readinessGate.
                                        Valid values are Positive, Negative and omitted.
                                        When omitted, the default behaviour will be Positive.
                                        A positive polarity means that the condition should report a true status under normal conditions.
                                        A negative polarity means that the condition should report a false status under normal conditions.
                                      enum:
                                        - Positive
                                        - Negative
                                      type: string
                                  required:
                                    - conditionType
                                  type: object
                                maxItems: 32
                                type: array
                                x-kubernetes-list-map-keys:
                                  - conditionType
                                x-kubernetes-list-type: map
                              replicas:
                                description: |-
                                  replicas is the number of worker nodes belonging to this set.
                                  If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to 1)
                                  and it's assumed that an external entity (like cluster autoscaler) is responsible for the management
                                  of this value.
                                format: int32
                                type: integer
                              strategy:
                                description: |-
                                  strategy is the deployment strategy to use to replace existing machines with
                                  new ones.
                                properties:
                                  remediation:
                                    description: |-
                                      remediation controls the strategy of remediating unhealthy machines
                                      and how remediating operations should occur during the lifecycle of the dependant MachineSets.
                                    properties:
                                      maxInFlight:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: |-
                                          maxInFlight determines how many in flight remediations should happen at the same time.

                                          Remediation only happens on the MachineSet with the most current revision, while
                                          older MachineSets (usually present during rollout operations) aren't allowed to remediate.

                                          Note: In general (independent of remediations), unhealthy machines are always
                                          prioritized during scale down operations over healthy ones.

                                          MaxInFlight can be set to a fixed number or a percentage.
                                          Example: when this is set to 20%, the MachineSet controller deletes at most 20% of
                                          the desired replicas.

                                          If not set, remediation is limited to all machines (bounded by replicas)
                                          under the active MachineSet's management.
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  rollingUpdate:
                                    description: |-
                                      rollingUpdate is the rolling update config params. Present only if
                                      MachineDeploymentStrategyType = RollingUpdate.
                                    properties:
                                      deletePolicy:
                                        description: |-
                                          deletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.
                                          Valid values are "Random, "Newest", "Oldest"
                                          When no value is supplied, the default DeletePolicy of MachineSet is used
                                        enum:
                                          - Random
                                          - Newest
                                          - Oldest
                                        type: string
                                      maxSurge:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: |-
                                          maxSurge is the maximum number of machines that can be scheduled above the
                                          desired number of machines.
                                          Value can be an absolute number (ex: 5) or a percentage of
                                          desired machines (ex: 10%).
                                          This can not be 0 if MaxUnavailable is 0.
                                          Absolute number is calculated from percentage by rounding up.
                                          Defaults to 1.
                                          Example: when this is set to 30%, the new MachineSet can be scaled
                                          up immediately when the rolling update starts, such that the total
                                          number of old and new machines do not exceed 130% of desired
                                          machines. Once old machines have been killed, new MachineSet can
                                          be scaled up further, ensuring that total number of machines running
                                          at any time during the update is at most 130% of desired machines.
                                        x-kubernetes-int-or-string: true
                                      maxUnavailable:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: |-
                                          maxUnavailable is the maximum number of machines that can be unavailable during the update.
                                          Value can be an absolute number (ex: 5) or a percentage of desired
                                          machines (ex: 10%).
                                          Absolute number is calculated from percentage by rounding down.
                                          This can not be 0 if MaxSurge is 0.
                                          Defaults to 0.
                                          Example: when this is set to 30%, the old MachineSet can be scaled
                                          down to 70% of desired machines immediately when the rolling update
                                          starts. Once new machines are ready, old MachineSet can be scaled
                                          down further, followed by scaling up the new MachineSet, ensuring
                                          that the total number of machines available at all times
                                          during the update is at least 70% of desired machines.
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  type:
                                    description: |-
                                      type of deployment. Allowed values are RollingUpdate and OnDelete.
                                      The default is RollingUpdate.
                                    enum:
                                      - RollingUpdate
                                      - OnDelete
                                    type: string
                                type: object
                              variables:
                                description: variables can be used to customize the MachineDeployment through patches.
                                properties:
                                  overrides:
                                    description: overrides can be used to override Cluster level variables.
                                    items:
                                      description: |-
                                        ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                                        Variable definition in the ClusterClass `status` variables.
                                      properties:
                                        definitionFrom:
                                          description: |-
                                            definitionFrom specifies where the definition of this Variable is from.

                                            Deprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.
                                          maxLength: 256
                                          type: string
                                        name:
                                          description: name of the variable.
                                          maxLength: 256
                                          minLength: 1
                                          type: string
                                        value:
                                          description: |-
                                            value of the variable.
                                            Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                                            from the ClusterClass.
                                            Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                                            hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                                            i.e. it is not possible to have no type field.
                                            Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                          x-kubernetes-preserve-unknown-fields: true
                                      required:
                                        - name
                                        - value
                                      type: object
                                    maxItems: 1000
                                    type: array
                                    x-kubernetes-list-map-keys:
                                      - name
                                    x-kubernetes-list-type: map
                                type: object
                            required:
                              - class
                              - name
                            type: object
                          maxItems: 2000
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        machinePools:
                          description: machinePools is a list of machine pools in the cluster.
                          items:
                            description: |-
                              MachinePoolTopology specifies the different parameters for a pool of worker nodes in the topology.
                              This pool of nodes is managed by a MachinePool object whose lifecycle is managed by the Cluster controller.
                            properties:
                              class:
                                description: |-
                                  class is the name of the MachinePoolClass used to create the pool of worker nodes.
                                  This should match one of the deployment classes defined in the ClusterClass object
                                  mentioned in the `Cluster.Spec.Class` field.
                                maxLength: 256
                                minLength: 1
                                type: string
                              failureDomains:
                                description: |-
                                  failureDomains is the list of failure domains the machine pool will be created in.
                                  Must match a key in the FailureDomains map stored on the cluster object.
                                items:
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                maxItems: 100
                                type: array
                              metadata:
                                description: |-
                                  metadata is the metadata applied to the MachinePool.
                                  At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      annotations is an unstructured key value map stored with a resource that may be
                                      set by external tools to store and retrieve arbitrary metadata. They are not
                                      queryable and should be preserved when modifying objects.
                                      More info: http://kubernetes.io/docs/user-guide/annotations
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      labels is a map of string keys and values that can be used to organize and categorize
                                      (scope and select) objects. May match selectors of replication controllers
                                      and services.
                                      More info: http://kubernetes.io/docs/user-guide/labels
                                    type: object
                                type: object
                              minReadySeconds:
                                description: |-
                                  minReadySeconds is the minimum number of seconds for which a newly created machine pool should
                                  be ready.
                                  Defaults to 0 (machine will be considered available as soon as it
                                  is ready)
                                format: int32
                                type: integer
                              name:
                                description: |-
                                  name is the unique identifier for this MachinePoolTopology.
                                  The value is used with other unique identifiers to create a MachinePool's Name
                                  (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length,
                                  the values are hashed together.
                                maxLength: 63
                                minLength: 1
                                type: string
                              nodeDeletionTimeout:
                                description: |-
                                  nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the MachinePool
                                  hosts after the MachinePool is marked for deletion. A duration of 0 will retry deletion indefinitely.
                                  Defaults to 10 seconds.
                                type: string
                              nodeDrainTimeout:
                                description: |-
                                  nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                                  The default value is 0, meaning that the node can be drained without any time limitations.
                                  NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                                type: string
                              nodeVolumeDetachTimeout:
                                description: |-
                                  nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                                  to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                                type: string
                              replicas:
                                description: |-
                                  replicas is the number of nodes belonging to this pool.
                                  If the value is nil, the MachinePool is created without the number of Replicas (defaulting to 1)
                                  and it's assumed that an external entity (like cluster autoscaler) is responsible for the management
                                  of this value.
                                format: int32
                                type: integer
                              variables:
                                description: variables can be used to customize the MachinePool through patches.
                                properties:
                                  overrides:
                                    description: overrides can be used to override Cluster level variables.
                                    items:
                                      description: |-
                                        ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                                        Variable definition in the ClusterClass `status` variables.
                                      properties:
                                        definitionFrom:
                                          description: |-
                                            definitionFrom specifies where the definition of this Variable is from.

                                            Deprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.
                                          maxLength: 256
                                          type: string
                                        name:
                                          description: name of the variable.
                                          maxLength: 256
                                          minLength: 1
                                          type: string
                                        value:
                                          description: |-
                                            value of the variable.
                                            Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                                            from the ClusterClass.
                                            Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                                            hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                                            i.e. it is not possible to have no type field.
                                            Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                          x-kubernetes-preserve-unknown-fields: true
                                      required:
                                        - name
                                        - value
                                      type: object
                                    maxItems: 1000
                                    type: array
                                    x-kubernetes-list-map-keys:
                                      - name
                                    x-kubernetes-list-type: map
                                type: object
                            required:
                              - class
                              - name
                            type: object
                          maxItems: 2000
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                      type: object
                  required:
                    - class
                    - version
                  type: object
              type: object
            status:
              description: status is the observed state of Cluster.
              properties:
                conditions:
                  description: conditions defines current service state of the cluster.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                controlPlaneReady:
                  description: |-
                    controlPlaneReady denotes if the control plane became ready during initial provisioning
                    to receive requests.
                    NOTE: this field is part of the Cluster API contract and it is used to orchestrate provisioning.
                    The value of this field is never updated after provisioning is completed. Please use conditions
                    to check the operational state of the control plane.
                  type: boolean
                failureDomains:
                  additionalProperties:
                    description: |-
                      FailureDomainSpec is the Schema for Cluster API failure domains.
                      It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: attributes is a free form map of attributes an infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: failureDomains is a slice of failure domain objects synced from the infrastructure provider.
                  type: object
                failureMessage:
                  description: |-
                    failureMessage indicates that there is a fatal problem reconciling the
                    state, and will be set to a descriptive error message.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  maxLength: 10240
                  minLength: 1
                  type: string
                failureReason:
                  description: |-
                    failureReason indicates that there is a fatal problem reconciling the
                    state, and will be set to a token value suitable for
                    programmatic interpretation.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  type: string
                infrastructureReady:
                  description: infrastructureReady is the state of the infrastructure provider.
                  type: boolean
                observedGeneration:
                  description: observedGeneration is the latest generation observed by the controller.
                  format: int64
                  type: integer
                phase:
                  description: phase represents the current phase of cluster actuation.
                  enum:
                    - Pending
                    - Provisioning
                    - Provisioned
                    - Deleting
                    - Failed
                    - Unknown
                  type: string
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in Cluster's status with the V1Beta2 version.
                  properties:
                    conditions:
                      description: |-
                        conditions represents the observations of a Cluster's current state.
                        Known condition types are Available, InfrastructureReady, ControlPlaneInitialized, ControlPlaneAvailable, WorkersAvailable, MachinesReady
                        MachinesUpToDate, RemoteConnectionProbe, ScalingUp, ScalingDown, Remediating, Deleting, Paused.
                        Additionally, a TopologyReconciled condition will be added in case the Cluster is referencing a ClusterClass / defining a managed Topology.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                    controlPlane:
                      description: controlPlane groups all the observations about Cluster's ControlPlane current state.
                      properties:
                        availableReplicas:
                          description: availableReplicas is the total number of available control plane machines in this cluster. A machine is considered available when Machine's Available condition is true.
                          format: int32
                          type: integer
                        desiredReplicas:
                          description: desiredReplicas is the total number of desired control plane machines in this cluster.
                          format: int32
                          type: integer
                        readyReplicas:
                          description: readyReplicas is the total number of ready control plane machines in this cluster. A machine is considered ready when Machine's Ready condition is true.
                          format: int32
                          type: integer
                        replicas:
                          description: |-
                            replicas is the total number of control plane machines in this cluster.
                            NOTE: replicas also includes machines still being provisioned or being deleted.
                          format: int32
                          type: integer
                        upToDateReplicas:
                          description: upToDateReplicas is the number of up-to-date control plane machines in this cluster. A machine is considered up-to-date when Machine's UpToDate condition is true.
                          format: int32
                          type: integer
                      type: object
                    workers:
                      description: workers groups all the observations about Cluster's Workers current state.
                      properties:
                        availableReplicas:
                          description: availableReplicas is the total number of available worker machines in this cluster. A machine is considered available when Machine's Available condition is true.
                          format: int32
                          type: integer
                        desiredReplicas:
                          description: desiredReplicas is the total number of desired worker machines in this cluster.
                          format: int32
                          type: integer
                        readyReplicas:
                          description: readyReplicas is the total number of ready worker machines in this cluster. A machine is considered ready when Machine's Ready condition is true.
                          format: int32
                          type: integer
                        replicas:
                          description: |-
                            replicas is the total number of worker machines in this cluster.
                            NOTE: replicas also includes machines still being provisioned or being deleted.
                          format: int32
                          type: integer
                        upToDateReplicas:
                          description: upToDateReplicas is the number of up-to-date worker machines in this cluster. A machine is considered up-to-date when Machine's UpToDate condition is true.
                          format: int32
                          type: integer
                      type: object
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: machinedeployments.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: MachineDeployment
    listKind: MachineDeploymentList
    plural: machinedeployments
    shortNames:
      - md
    singular: machinedeployment
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster
          jsonPath: .spec.clusterName
          name: Cluster
          type: string
        - description: Total number of machines desired by this MachineDeployment
          jsonPath: .spec.replicas
          name: Desired
          priority: 10
          type: integer
        - description: Total number of non-terminated machines targeted by this MachineDeployment
          jsonPath: .status.replicas
          name: Replicas
          type: integer
        - description: Total number of ready machines targeted by this MachineDeployment
          jsonPath: .status.readyReplicas
          name: Ready
          type: integer
        - description: Total number of non-terminated machines targeted by this deployment that have the desired template spec
          jsonPath: .status.updatedReplicas
          name: Updated
          type: integer
        - description: Total number of unavailable machines targeted by this MachineDeployment
          jsonPath: .status.unavailableReplicas
          name: Unavailable
          type: integer
        - description: MachineDeployment status such as ScalingUp/ScalingDown/Running/Failed/Unknown
          jsonPath: .status.phase
          name: Phase
          type: string
        - description: Time duration since creation of MachineDeployment
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Kubernetes version associated with this MachineDeployment
          jsonPath: .spec.template.spec.version
          name: Version
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineDeployment is the Schema for the machinedeployments API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of MachineDeployment.
              properties:
                clusterName:
                  description: clusterName is the name of the Cluster this object belongs to.
                  maxLength: 63
                  minLength: 1
                  type: string
                machineNamingStrategy:
                  description: |-
                    machineNamingStrategy allows changing the naming pattern used when creating Machines.
                    Note: InfraMachines & BootstrapConfigs will use the same name as the corresponding Machines.
                  properties:
                    template:
                      description: |-
                        template defines the template to use for generating the names of the
                        Machine objects.
                        If not defined, it will fallback to `{{ .machineSet.name }}-{{ .random }}`.
                        If the generated name string exceeds 63 characters, it will be trimmed to
                        58 characters and will
                        get concatenated with a random suffix of length 5.
                        Length of the template string must not exceed 256 characters.
                        The template allows the following variables `.cluster.name`,
                        `.machineSet.name` and `.random`.
                        The variable `.cluster.name` retrieves the name of the cluster object
                        that owns the Machines being created.
                        The variable `.machineSet.name` retrieves the name of the MachineSet
                        object that owns the Machines being created.
                        The variable `.random` is substituted with random alphanumeric string,
                        without vowels, of length 5. This variable is required part of the
                        template. If not provided, validation will fail.
                      maxLength: 256
                      minLength: 1
                      type: string
                  type: object
                minReadySeconds:
                  description: |-
                    minReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available.
                    Defaults to 0 (machine will be considered available as soon as the Node is ready)
                  format: int32
                  type: integer
                paused:
                  description: paused indicates that the deployment is paused.
                  type: boolean
                progressDeadlineSeconds:
                  description: |-
                    progressDeadlineSeconds is the maximum time in seconds for a deployment to make progress before it
                    is considered to be failed. The deployment controller will continue to
                    process failed deployments and a condition with a ProgressDeadlineExceeded
                    reason will be surfaced in the deployment status. Note that progress will
                    not be estimated during the time a deployment is paused. Defaults to 600s.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/issues/11470 for more details.
                  format: int32
                  type: integer
                replicas:
                  description: |-
                    replicas is the number of desired machines.
                    This is a pointer to distinguish between explicit zero and not specified.

                    Defaults to:
                    * if the Kubernetes autoscaler min size and max size annotations are set:
                      - if it's a new MachineDeployment, use min size
                      - if the replicas field of the old MachineDeployment is < min size, use min size
                      - if the replicas field of the old MachineDeployment is > max size, use max size
                      - if the replicas field of the old MachineDeployment is in the (min size, max size) range, keep the value from the oldMD
                    * otherwise use 1
                    Note: Defaulting will be run whenever the replicas field is not set:
                    * A new MachineDeployment is created with replicas not set.
                    * On an existing MachineDeployment the replicas field was first set and is now unset.
                    Those cases are especially relevant for the following Kubernetes autoscaler use cases:
                    * A new MachineDeployment is created and replicas should be managed by the autoscaler
                    * An existing MachineDeployment which initially wasn't controlled by the autoscaler
                      should be later controlled by the autoscaler
                  format: int32
                  type: integer
                revisionHistoryLimit:
                  description: |-
                    revisionHistoryLimit is the number of old MachineSets to retain to allow rollback.
                    This is a pointer to distinguish between explicit zero and not specified.
                    Defaults to 1.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/issues/10479 for more details.
                  format: int32
                  type: integer
                rolloutAfter:
                  description: |-
                    rolloutAfter is a field to indicate a rollout should be performed
                    after the specified time even if no changes have been made to the
                    MachineDeployment.
                    Example: In the YAML the time can be specified in the RFC3339 format.
                    To specify the rolloutAfter target as March 9, 2023, at 9 am UTC
                    use "2023-03-09T09:00:00Z".
                  format: date-time
                  type: string
                selector:
                  description: |-
                    selector is the label selector for machines. Existing MachineSets whose machines are
                    selected by this will be the ones affected by this deployment.
                    It must match the machine template's labels.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                strategy:
                  description: |-
                    strategy is the deployment strategy to use to replace existing machines with
                    new ones.
                  properties:
                    remediation:
                      description: |-
                        remediation controls the strategy of remediating unhealthy machines
                        and how remediating operations should occur during the lifecycle of the dependant MachineSets.
                      properties:
                        maxInFlight:
                          anyOf:
                            - type: integer
                            - type: string
                          description: |-
                            maxInFlight determines how many in flight remediations should happen at the same time.

                            Remediation only happens on the MachineSet with the most current revision, while
                            older MachineSets (usually present during rollout operations) aren't allowed to remediate.

                            Note: In general (independent of remediations), unhealthy machines are always
                            prioritized during scale down operations over healthy ones.

                            MaxInFlight can be set to a fixed number or a percentage.
                            Example: when this is set to 20%, the MachineSet controller deletes at most 20% of
                            the desired replicas.

                            If not set, remediation is limited to all machines (bounded by replicas)
                            under the active MachineSet's management.
                          x-kubernetes-int-or-string: true
                      type: object
                    rollingUpdate:
                      description: |-
                        rollingUpdate is the rolling update config params. Present only if
                        MachineDeploymentStrategyType = RollingUpdate.
                      properties:
                        deletePolicy:
                          description: |-
                            deletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.
                            Valid values are "Random, "Newest", "Oldest"
                            When no value is supplied, the default DeletePolicy of MachineSet is used
                          enum:
                            - Random
                            - Newest
                            - Oldest
                          type: string
                        maxSurge:
                          anyOf:
                            - type: integer
                            - type: string
                          description: |-
                            maxSurge is the maximum number of machines that can be scheduled above the
                            desired number of machines.
                            Value can be an absolute number (ex: 5) or a percentage of
                            desired machines (ex: 10%).
                            This can not be 0 if MaxUnavailable is 0.
                            Absolute number is calculated from percentage by rounding up.
                            Defaults to 1.
                            Example: when this is set to 30%, the new MachineSet can be scaled
                            up immediately when the rolling update starts, such that the total
                            number of old and new machines do not exceed 130% of desired
                            machines. Once old machines have been killed, new MachineSet can
                            be scaled up further, ensuring that total number of machines running
                            at any time during the update is at most 130% of desired machines.
                          x-kubernetes-int-or-string: true
                        maxUnavailable:
                          anyOf:
                            - type: integer
                            - type: string
                          description: |-
                            maxUnavailable is the maximum number of machines that can be unavailable during the update.
                            Value can be an absolute number (ex: 5) or a percentage of desired
                            machines (ex: 10%).
                            Absolute number is calculated from percentage by rounding down.
                            This can not be 0 if MaxSurge is 0.
                            Defaults to 0.
                            Example: when this is set to 30%, the old MachineSet can be scaled
                            down to 70% of desired machines immediately when the rolling update
                            starts. Once new machines are ready, old MachineSet can be scaled
                            down further, followed by scaling up the new MachineSet, ensuring
                            that the total number of machines available at all times
                            during the update is at least 70% of desired machines.
                          x-kubernetes-int-or-string: true
                      type: object
                    type:
                      description: |-
                        type of deployment. Allowed values are RollingUpdate and OnDelete.
                        The default is RollingUpdate.
                      enum:
                        - RollingUpdate
                        - OnDelete
                      type: string
                  type: object
                template:
                  description: template describes the machines that will be created.
                  properties:
                    metadata:
                      description: |-
                        metadata is the standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: |-
                        spec is the specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                      properties:
                        bootstrap:
                          description: |-
                            bootstrap is a reference to a local struct which encapsulates
                            fields to configure the Machine’s bootstrapping mechanism.
                          properties:
                            configRef:
                              description: |-
                                configRef is a reference to a bootstrap provider-specific resource
                                that holds configuration details. The reference is optional to
                                allow users/operators to specify Bootstrap.DataSecretName without
                                the need of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: |-
                                    If referring to a piece of an object instead of an entire object, this string
                                    should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                    the event) or if no container name is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                    referencing a part of an object.
                                  type: string
                                kind:
                                  description: |-
                                    Kind of the referent.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                  type: string
                                resourceVersion:
                                  description: |-
                                    Specific resourceVersion to which this reference is made, if any.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                  type: string
                                uid:
                                  description: |-
                                    UID of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSecretName:
                              description: |-
                                dataSecretName is the name of the secret that stores the bootstrap data script.
                                If nil, the Machine should remain in the Pending state.
                              maxLength: 253
                              minLength: 0
                              type: string
                          type: object
                        clusterName:
                          description: clusterName is the name of the Cluster this object belongs to.
                          maxLength: 63
                          minLength: 1
                          type: string
                        failureDomain:
                          description: |-
                            failureDomain is the failure domain the machine will be created in.
                            Must match a key in the FailureDomains map stored on the cluster object.
                          maxLength: 256
                          minLength: 1
                          type: string
                        infrastructureRef:
                          description: |-
                            infrastructureRef is a required reference to a custom resource
                            offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodeDeletionTimeout:
                          description: |-
                            nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                            hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                            Defaults to 10 seconds.
                          type: string
                        nodeDrainTimeout:
                          description: |-
                            nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                            The default value is 0, meaning that the node can be drained without any time limitations.
                            NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                          type: string
                        nodeVolumeDetachTimeout:
                          description: |-
                            nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                            to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                          type: string
                        providerID:
                          description: |-
                            providerID is the identification ID of the machine provided by the provider.
                            This field must match the provider ID as seen on the node object corresponding to this machine.
                            This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler
                            with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a
                            generic out-of-tree provider for autoscaler, this field is required by autoscaler to be
                            able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered machines and are marked for delete.
                            This field will be set by the actuators and consumed by higher level entities like autoscaler that will
                            be interfacing with cluster-api as generic provider.
                          maxLength: 512
                          minLength: 1
                          type: string
                        readinessGates:
                          description: |-
                            readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                            This field can be used e.g. by Cluster API control plane providers to extend the semantic of the
                            Ready condition for the Machine they control, like the kubeadm control provider adding ReadinessGates
                            for the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.

                            Another example are external controllers, e.g. responsible to install special software/hardware on the Machines;
                            they can include the status of those components with a new condition and add this condition to ReadinessGates.

                            NOTE: This field is considered only for computing v1beta2 conditions.
                            NOTE: In case readinessGates conditions start with the APIServer, ControllerManager, Scheduler prefix, and all those
                            readiness gates condition are reporting the same message, when computing the Machine's Ready condition those
                            readinessGates will be replaced by a single entry reporting "Control plane components: " + message.
                            This helps to improve readability of conditions bubbling up to the Machine's owner resource / to the Cluster).
                          items:
                            description: MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.
                            properties:
                              conditionType:
                                description: |-
                                  conditionType refers to a condition with matching type in the Machine's condition list.
                                  If the conditions doesn't exist, it will be treated as unknown.
                                  Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                                maxLength: 316
                                minLength: 1
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              polarity:
                                description: |-
                                  polarity of the conditionType specified in this readinessGate.
                                  Valid values are Positive, Negative and omitted.
                                  When omitted, the default behaviour will be Positive.
                                  A positive polarity means that the condition should report a true status under normal conditions.
                                  A negative polarity means that the condition should report a false status under normal conditions.
                                enum:
                                  - Positive
                                  - Negative
                                type: string
                            required:
                              - conditionType
                            type: object
                          maxItems: 32
                          type: array
                          x-kubernetes-list-map-keys:
                            - conditionType
                          x-kubernetes-list-type: map
                        version:
                          description: |-
                            version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap providers.
                          maxLength: 256
                          minLength: 1
                          type: string
                      required:
                        - bootstrap
                        - clusterName
                        - infrastructureRef
                      type: object
                  type: object
              required:
                - clusterName
                - selector
                - template
              type: object
            status:
              description: status is the observed state of MachineDeployment.
              properties:
                availableReplicas:
                  description: |-
                    availableReplicas is the total number of available machines (ready for at least minReadySeconds)
                    targeted by this deployment.
                  format: int32
                  type: integer
                conditions:
                  description: conditions defines current service state of the MachineDeployment.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                observedGeneration:
                  description: observedGeneration is the generation observed by the deployment controller.
                  format: int64
                  type: integer
                phase:
                  description: phase represents the current phase of a MachineDeployment (ScalingUp, ScalingDown, Running, Failed, or Unknown).
                  enum:
                    - ScalingUp
                    - ScalingDown
                    - Running
                    - Failed
                    - Unknown
                  type: string
                readyReplicas:
                  description: readyReplicas is the total number of ready machines targeted by this deployment.
                  format: int32
                  type: integer
                replicas:
                  description: |-
                    replicas is the total number of non-terminated machines targeted by this deployment
                    (their labels match the selector).
                  format: int32
                  type: integer
                selector:
                  description: |-
                    selector is the same as the label selector but in the string format to avoid introspection
                    by clients. The string will be in the same format as the query-param syntax.
                    More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
                  maxLength: 4096
                  minLength: 1
                  type: string
                unavailableReplicas:
                  description: |-
                    unavailableReplicas is the total number of unavailable machines targeted by this deployment.
                    This is the total number of machines that are still required for
                    the deployment to have 100% available capacity. They may either
                    be machines that are running but not yet available or machines
                    that still have not been created.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: |-
                    updatedReplicas is the total number of non-terminated machines targeted by this deployment
                    that have the desired template spec.
                  format: int32
                  type: integer
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in MachineDeployment's status with the V1Beta2 version.
                  properties:
                    availableReplicas:
                      description: availableReplicas is the number of available replicas for this MachineDeployment. A machine is considered available when Machine's Available condition is true.
                      format: int32
                      type: integer
                    conditions:
                      description: |-
                        conditions represents the observations of a MachineDeployment's current state.
                        Known condition types are Available, MachinesReady, MachinesUpToDate, ScalingUp, ScalingDown, Remediating, Deleting, Paused.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                    readyReplicas:
                      description: readyReplicas is the number of ready replicas for this MachineDeployment. A machine is considered ready when Machine's Ready condition is true.
                      format: int32
                      type: integer
                    upToDateReplicas:
                      description: upToDateReplicas is the number of up-to-date replicas targeted by this deployment. A machine is considered up-to-date when Machine's UpToDate condition is true.
                      format: int32
                      type: integer
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: machinedrainrules.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: MachineDrainRule
    listKind: MachineDrainRuleList
    plural: machinedrainrules
    singular: machinedrainrule
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Drain behavior
          jsonPath: .spec.drain.behavior
          name: Behavior
          type: string
        - description: Drain order
          jsonPath: .spec.drain.order
          name: Order
          type: string
        - description: Time duration since creation of the MachineDrainRule
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineDrainRule is the Schema for the MachineDrainRule API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec defines the spec of a MachineDrainRule.
              properties:
                drain:
                  description: drain configures if and how Pods are drained.
                  properties:
                    behavior:
                      description: |-
                        behavior defines the drain behavior.
                        Can be either "Drain", "Skip", or "WaitCompleted".
                        "Drain" means that the Pods to which this MachineDrainRule applies will be drained.
                        If behavior is set to "Drain" the order in which Pods are drained can be configured
                        with the order field. When draining Pods of a Node the Pods will be grouped by order
                        and one group after another will be drained (by increasing order). Cluster API will
                        wait until all Pods of a group are terminated / removed from the Node before starting
                        with the next group.
                        "Skip" means that the Pods to which this MachineDrainRule applies will be skipped during drain.
                        "WaitCompleted" means that the pods to which this MachineDrainRule applies will never be evicted
                        and we wait for them to be completed, it is enforced that pods marked with this behavior always have Order=0.
                      enum:
                        - Drain
                        - Skip
                        - WaitCompleted
                      type: string
                    order:
                      description: |-
                        order defines the order in which Pods are drained.
                        Pods with higher order are drained after Pods with lower order.
                        order can only be set if behavior is set to "Drain".
                        If order is not set, 0 will be used.
                        Valid values for order are from -2147483648 to 2147483647 (inclusive).
                      format: int32
                      type: integer
                  required:
                    - behavior
                  type: object
                machines:
                  description: |-
                    machines defines to which Machines this MachineDrainRule should be applied.

                    If machines is not set, the MachineDrainRule applies to all Machines in the Namespace.
                    If machines contains multiple selectors, the results are ORed.
                    Within a single Machine selector the results of selector and clusterSelector are ANDed.
                    Machines will be selected from all Clusters in the Namespace unless otherwise
                    restricted with the clusterSelector.

                    Example: Selects control plane Machines in all Clusters or
                             Machines with label "os" == "linux" in Clusters with label
                             "stage" == "production".

                     - selector:
                         matchExpressions:
                         - key: cluster.x-k8s.io/control-plane
                           operator: Exists
                     - selector:
                         matchLabels:
                           os: linux
                       clusterSelector:
                         matchExpressions:
                         - key: stage
                           operator: In
                           values:
                           - production
                  items:
                    description: MachineDrainRuleMachineSelector defines to which Machines this MachineDrainRule should be applied.
                    minProperties: 1
                    properties:
                      clusterSelector:
                        description: |-
                          clusterSelector is a label selector which selects Machines by the labels of
                          their Clusters.
                          This field follows standard label selector semantics; if not present or
                          empty, it selects Machines of all Clusters.

                          If selector is also set, then the selector as a whole selects
                          Machines matching selector belonging to Clusters selected by clusterSelector.
                          If selector is not set, it selects all Machines belonging to Clusters
                          selected by clusterSelector.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      selector:
                        description: |-
                          selector is a label selector which selects Machines by their labels.
                          This field follows standard label selector semantics; if not present or
                          empty, it selects all Machines.

                          If clusterSelector is also set, then the selector as a whole selects
                          Machines matching selector belonging to Clusters selected by clusterSelector.
                          If clusterSelector is not set, it selects all Machines matching selector in
                          all Clusters.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  maxItems: 32
                  minItems: 1
                  type: array
                  x-kubernetes-list-type: atomic
                  x-kubernetes-validations:
                    - message: entries in machines must be unique
                      rule: self.all(x, self.exists_one(y, x == y))
                pods:
                  description: |-
                    pods defines to which Pods this MachineDrainRule should be applied.

                    If pods is not set, the MachineDrainRule applies to all Pods in all Namespaces.
                    If pods contains multiple selectors, the results are ORed.
                    Within a single Pod selector the results of selector and namespaceSelector are ANDed.
                    Pods will be selected from all Namespaces unless otherwise
                    restricted with the namespaceSelector.

                    Example: Selects Pods with label "app" == "logging" in all Namespaces or
                             Pods with label "app" == "prometheus" in the "monitoring"
                             Namespace.

                     - selector:
                         matchExpressions:
                         - key: app
                           operator: In
                           values:
                           - logging
                     - selector:
                         matchLabels:
                           app: prometheus
                       namespaceSelector:
                         matchLabels:
                           kubernetes.io/metadata.name: monitoring
                  items:
                    description: MachineDrainRulePodSelector defines to which Pods this MachineDrainRule should be applied.
                    minProperties: 1
                    properties:
                      namespaceSelector:
                        description: |-
                          namespaceSelector is a label selector which selects Pods by the labels of
                          their Namespaces.
                          This field follows standard label selector semantics; if not present or
                          empty, it selects Pods of all Namespaces.

                          If selector is also set, then the selector as a whole selects
                          Pods matching selector in Namespaces selected by namespaceSelector.
                          If selector is not set, it selects all Pods in Namespaces selected by
                          namespaceSelector.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      selector:
                        description: |-
                          selector is a label selector which selects Pods by their labels.
                          This field follows standard label selector semantics; if not present or
                          empty, it selects all Pods.

                          If namespaceSelector is also set, then the selector as a whole selects
                          Pods matching selector in Namespaces selected by namespaceSelector.
                          If namespaceSelector is not set, it selects all Pods matching selector in
                          all Namespaces.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: |-
                                A label selector requirement is a selector that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: |-
                                    operator represents a key's relationship to a set of values.
                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: |-
                                    values is an array of string values. If the operator is In or NotIn,
                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                    the values array must be empty. This array is replaced during a strategic
                                    merge patch.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  maxItems: 32
                  minItems: 1
                  type: array
                  x-kubernetes-list-type: atomic
                  x-kubernetes-validations:
                    - message: entries in pods must be unique
                      rule: self.all(x, self.exists_one(y, x == y))
              required:
                - drain
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: machinehealthchecks.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: MachineHealthCheck
    listKind: MachineHealthCheckList
    plural: machinehealthchecks
    shortNames:
      - mhc
      - mhcs
    singular: machinehealthcheck
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster
          jsonPath: .spec.clusterName
          name: Cluster
          type: string
        - description: Number of machines currently monitored
          jsonPath: .status.expectedMachines
          name: ExpectedMachines
          type: integer
        - description: Maximum number of unhealthy machines allowed
          jsonPath: .spec.maxUnhealthy
          name: MaxUnhealthy
          type: string
        - description: Current observed healthy machines
          jsonPath: .status.currentHealthy
          name: CurrentHealthy
          type: integer
        - description: Time duration since creation of MachineHealthCheck
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineHealthCheck is the Schema for the machinehealthchecks API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of machine health check policy
              properties:
                clusterName:
                  description: clusterName is the name of the Cluster this object belongs to.
                  maxLength: 63
                  minLength: 1
                  type: string
                maxUnhealthy:
                  anyOf:
                    - type: integer
                    - type: string
                  description: |-
                    maxUnhealthy specifies the maximum number of unhealthy machines allowed.
                    Any further remediation is only allowed if at most "maxUnhealthy" machines selected by
                    "selector" are not healthy.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/issues/10722 for more details.
                  x-kubernetes-int-or-string: true
                nodeStartupTimeout:
                  description: |-
                    nodeStartupTimeout allows to set the maximum time for MachineHealthCheck
                    to consider a Machine unhealthy if a corresponding Node isn't associated
                    through a `Spec.ProviderID` field.

                    The duration set in this field is compared to the greatest of:
                    - Cluster's infrastructure ready condition timestamp (if and when available)
                    - Control Plane's initialized condition timestamp (if and when available)
                    - Machine's infrastructure ready condition timestamp (if and when available)
                    - Machine's metadata creation timestamp

                    Defaults to 10 minutes.
                    If you wish to disable this feature, set the value explicitly to 0.
                  type: string
                remediationTemplate:
                  description: |-
                    remediationTemplate is a reference to a remediation template
                    provided by an infrastructure provider.

                    This field is completely optional, when filled, the MachineHealthCheck controller
                    creates a new object from the template referenced and hands off remediation of the machine to
                    a controller that lives outside of Cluster API.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                selector:
                  description: selector is a label selector to match machines whose health will be exercised
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                unhealthyConditions:
                  description: |-
                    unhealthyConditions contains a list of the conditions that determine
                    whether a node is considered unhealthy.  The conditions are combined in a
                    logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                  items:
                    description: |-
                      UnhealthyCondition represents a Node condition type and value with a timeout
                      specified as a duration.  When the named condition has been in the given
                      status for at least the timeout value, a node is considered unhealthy.
                    properties:
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        minLength: 1
                        type: string
                      timeout:
                        description: |-
                          timeout is the duration that a node must be in a given status for,
                          after which the node is considered unhealthy.
                          For example, with a value of "1h", the node must match the status
                          for at least 1 hour before being considered unhealthy.
                        type: string
                      type:
                        description: type of Node condition
                        minLength: 1
                        type: string
                    required:
                      - status
                      - timeout
                      - type
                    type: object
                  maxItems: 100
                  type: array
                unhealthyRange:
                  description: |-
                    unhealthyRange specifies the range of unhealthy machines allowed.
                    Any further remediation is only allowed if the number of machines selected by "selector" as not healthy
                    is within the range of "unhealthyRange". Takes precedence over maxUnhealthy.
                    Eg. "[3-5]" - This means that remediation will be allowed only when:
                    (a) there are at least 3 unhealthy machines (and)
                    (b) there are at most 5 unhealthy machines

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/issues/10722 for more details.
                  maxLength: 32
                  minLength: 1
                  pattern: ^\[[0-9]+-[0-9]+\]$
                  type: string
              required:
                - clusterName
                - selector
              type: object
            status:
              description: status is the most recently observed status of MachineHealthCheck resource
              properties:
                conditions:
                  description: conditions defines current service state of the MachineHealthCheck.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                currentHealthy:
                  description: currentHealthy is the total number of healthy machines counted by this machine health check
                  format: int32
                  minimum: 0
                  type: integer
                expectedMachines:
                  description: expectedMachines is the total number of machines counted by this machine health check
                  format: int32
                  minimum: 0
                  type: integer
                observedGeneration:
                  description: observedGeneration is the latest generation observed by the controller.
                  format: int64
                  type: integer
                remediationsAllowed:
                  description: |-
                    remediationsAllowed is the number of further remediations allowed by this machine health check before
                    maxUnhealthy short circuiting will be applied
                  format: int32
                  minimum: 0
                  type: integer
                targets:
                  description: targets shows the current list of machines the machine health check is watching
                  items:
                    maxLength: 253
                    minLength: 1
                    type: string
                  maxItems: 10000
                  type: array
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in MachineHealthCheck's status with the V1Beta2 version.
                  properties:
                    conditions:
                      description: |-
                        conditions represents the observations of a MachineHealthCheck's current state.
                        Known condition types are RemediationAllowed, Paused.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: machinepools.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: MachinePool
    listKind: MachinePoolList
    plural: machinepools
    shortNames:
      - mp
    singular: machinepool
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster
          jsonPath: .spec.clusterName
          name: Cluster
          type: string
        - description: Total number of machines desired by this MachinePool
          jsonPath: .spec.replicas
          name: Desired
          priority: 10
          type: integer
        - description: MachinePool replicas count
          jsonPath: .status.replicas
          name: Replicas
          type: string
        - description: MachinePool status such as Terminating/Pending/Provisioning/Running/Failed etc
          jsonPath: .status.phase
          name: Phase
          type: string
        - description: Time duration since creation of MachinePool
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Kubernetes version associated with this MachinePool
          jsonPath: .spec.template.spec.version
          name: Version
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachinePool is the Schema for the machinepools API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of MachinePool.
              properties:
                clusterName:
                  description: clusterName is the name of the Cluster this object belongs to.
                  maxLength: 63
                  minLength: 1
                  type: string
                failureDomains:
                  description: failureDomains is the list of failure domains this MachinePool should be attached to.
                  items:
                    maxLength: 256
                    minLength: 1
                    type: string
                  maxItems: 100
                  type: array
                minReadySeconds:
                  description: |-
                    minReadySeconds is the minimum number of seconds for which a newly created machine instances should
                    be ready.
                    Defaults to 0 (machine instance will be considered available as soon as it
                    is ready)
                  format: int32
                  type: integer
                providerIDList:
                  description: |-
                    providerIDList are the identification IDs of machine instances provided by the provider.
                    This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                  items:
                    maxLength: 512
                    minLength: 1
                    type: string
                  maxItems: 10000
                  type: array
                replicas:
                  description: |-
                    replicas is the number of desired machines. Defaults to 1.
                    This is a pointer to distinguish between explicit zero and not specified.
                  format: int32
                  type: integer
                template:
                  description: template describes the machines that will be created.
                  properties:
                    metadata:
                      description: |-
                        metadata is the standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: |-
                        spec is the specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                      properties:
                        bootstrap:
                          description: |-
                            bootstrap is a reference to a local struct which encapsulates
                            fields to configure the Machine’s bootstrapping mechanism.
                          properties:
                            configRef:
                              description: |-
                                configRef is a reference to a bootstrap provider-specific resource
                                that holds configuration details. The reference is optional to
                                allow users/operators to specify Bootstrap.DataSecretName without
                                the need of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: |-
                                    If referring to a piece of an object instead of an entire object, this string
                                    should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                    the event) or if no container name is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                    referencing a part of an object.
                                  type: string
                                kind:
                                  description: |-
                                    Kind of the referent.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                  type: string
                                resourceVersion:
                                  description: |-
                                    Specific resourceVersion to which this reference is made, if any.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                  type: string
                                uid:
                                  description: |-
                                    UID of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSecretName:
                              description: |-
                                dataSecretName is the name of the secret that stores the bootstrap data script.
                                If nil, the Machine should remain in the Pending state.
                              maxLength: 253
                              minLength: 0
                              type: string
                          type: object
                        clusterName:
                          description: clusterName is the name of the Cluster this object belongs to.
                          maxLength: 63
                          minLength: 1
                          type: string
                        failureDomain:
                          description: |-
                            failureDomain is the failure domain the machine will be created in.
                            Must match a key in the FailureDomains map stored on the cluster object.
                          maxLength: 256
                          minLength: 1
                          type: string
                        infrastructureRef:
                          description: |-
                            infrastructureRef is a required reference to a custom resource
                            offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodeDeletionTimeout:
                          description: |-
                            nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                            hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                            Defaults to 10 seconds.
                          type: string
                        nodeDrainTimeout:
                          description: |-
                            nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                            The default value is 0, meaning that the node can be drained without any time limitations.
                            NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                          type: string
                        nodeVolumeDetachTimeout:
                          description: |-
                            nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                            to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                          type: string
                        providerID:
                          description: |-
                            providerID is the identification ID of the machine provided by the provider.
                            This field must match the provider ID as seen on the node object corresponding to this machine.
                            This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler
                            with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a
                            generic out-of-tree provider for autoscaler, this field is required by autoscaler to be
                            able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered machines and are marked for delete.
                            This field will be set by the actuators and consumed by higher level entities like autoscaler that will
                            be interfacing with cluster-api as generic provider.
                          maxLength: 512
                          minLength: 1
                          type: string
                        readinessGates:
                          description: |-
                            readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                            This field can be used e.g. by Cluster API control plane providers to extend the semantic of the
                            Ready condition for the Machine they control, like the kubeadm control provider adding ReadinessGates
                            for the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.

                            Another example are external controllers, e.g. responsible to install special software/hardware on the Machines;
                            they can include the status of those components with a new condition and add this condition to ReadinessGates.

                            NOTE: This field is considered only for computing v1beta2 conditions.
                            NOTE: In case readinessGates conditions start with the APIServer, ControllerManager, Scheduler prefix, and all those
                            readiness gates condition are reporting the same message, when computing the Machine's Ready condition those
                            readinessGates will be replaced by a single entry reporting "Control plane components: " + message.
                            This helps to improve readability of conditions bubbling up to the Machine's owner resource / to the Cluster).
                          items:
                            description: MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.
                            properties:
                              conditionType:
                                description: |-
                                  conditionType refers to a condition with matching type in the Machine's condition list.
                                  If the conditions doesn't exist, it will be treated as unknown.
                                  Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                                maxLength: 316
                                minLength: 1
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              polarity:
                                description: |-
                                  polarity of the conditionType specified in this readinessGate.
                                  Valid values are Positive, Negative and omitted.
                                  When omitted, the default behaviour will be Positive.
                                  A positive polarity means that the condition should report a true status under normal conditions.
                                  A negative polarity means that the condition should report a false status under normal conditions.
                                enum:
                                  - Positive
                                  - Negative
                                type: string
                            required:
                              - conditionType
                            type: object
                          maxItems: 32
                          type: array
                          x-kubernetes-list-map-keys:
                            - conditionType
                          x-kubernetes-list-type: map
                        version:
                          description: |-
                            version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap providers.
                          maxLength: 256
                          minLength: 1
                          type: string
                      required:
                        - bootstrap
                        - clusterName
                        - infrastructureRef
                      type: object
                  type: object
              required:
                - clusterName
                - template
              type: object
            status:
              description: status is the observed state of MachinePool.
              properties:
                availableReplicas:
                  description: availableReplicas is the number of available replicas (ready for at least minReadySeconds) for this MachinePool.
                  format: int32
                  type: integer
                bootstrapReady:
                  description: bootstrapReady is the state of the bootstrap provider.
                  type: boolean
                conditions:
                  description: conditions define the current service state of the MachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    failureMessage indicates that there is a problem reconciling the state,
                    and will be set to a descriptive error message.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  maxLength: 10240
                  minLength: 1
                  type: string
                failureReason:
                  description: |-
                    failureReason indicates that there is a problem reconciling the state, and
                    will be set to a token value suitable for programmatic interpretation.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  type: string
                infrastructureReady:
                  description: infrastructureReady is the state of the infrastructure provider.
                  type: boolean
                nodeRefs:
                  description: nodeRefs will point to the corresponding Nodes if it they exist.
                  items:
                    description: ObjectReference contains enough information to let you inspect or modify the referred object.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  maxItems: 10000
                  type: array
                observedGeneration:
                  description: observedGeneration is the latest generation observed by the controller.
                  format: int64
                  type: integer
                phase:
                  description: phase represents the current phase of cluster actuation.
                  enum:
                    - Pending
                    - Provisioning
                    - Provisioned
                    - Running
                    - ScalingUp
                    - ScalingDown
                    - Scaling
                    - Deleting
                    - Failed
                    - Unknown
                  type: string
                readyReplicas:
                  description: readyReplicas is the number of ready replicas for this MachinePool. A machine is considered ready when the node has been created and is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: |-
                    unavailableReplicas is the total number of unavailable machine instances targeted by this machine pool.
                    This is the total number of machine instances that are still required for
                    the machine pool to have 100% available capacity. They may either
                    be machine instances that are running but not yet available or machine instances
                    that still have not been created.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  format: int32
                  type: integer
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in MachinePool's status with the V1Beta2 version.
                  properties:
                    availableReplicas:
                      description: availableReplicas is the number of available replicas for this MachinePool. A machine is considered available when Machine's Available condition is true.
                      format: int32
                      type: integer
                    conditions:
                      description: |-
                        conditions represents the observations of a MachinePool's current state.
                        Known condition types are Available, BootstrapConfigReady, InfrastructureReady, MachinesReady, MachinesUpToDate,
                        ScalingUp, ScalingDown, Remediating, Deleting, Paused.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                    readyReplicas:
                      description: readyReplicas is the number of ready replicas for this MachinePool. A machine is considered ready when Machine's Ready condition is true.
                      format: int32
                      type: integer
                    upToDateReplicas:
                      description: upToDateReplicas is the number of up-to-date replicas targeted by this MachinePool. A machine is considered up-to-date when Machine's UpToDate condition is true.
                      format: int32
                      type: integer
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: machines.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: Machine
    listKind: MachineList
    plural: machines
    shortNames:
      - ma
    singular: machine
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster
          jsonPath: .spec.clusterName
          name: Cluster
          type: string
        - description: Node name associated with this machine
          jsonPath: .status.nodeRef.name
          name: NodeName
          type: string
        - description: Provider ID
          jsonPath: .spec.providerID
          name: ProviderID
          type: string
        - description: Machine status such as Terminating/Pending/Running/Failed etc
          jsonPath: .status.phase
          name: Phase
          type: string
        - description: Time duration since creation of Machine
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Kubernetes version associated with this Machine
          jsonPath: .spec.version
          name: Version
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Machine is the Schema for the machines API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of Machine.
              properties:
                bootstrap:
                  description: |-
                    bootstrap is a reference to a local struct which encapsulates
                    fields to configure the Machine’s bootstrapping mechanism.
                  properties:
                    configRef:
                      description: |-
                        configRef is a reference to a bootstrap provider-specific resource
                        that holds configuration details. The reference is optional to
                        allow users/operators to specify Bootstrap.DataSecretName without
                        the need of a controller.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    dataSecretName:
                      description: |-
                        dataSecretName is the name of the secret that stores the bootstrap data script.
                        If nil, the Machine should remain in the Pending state.
                      maxLength: 253
                      minLength: 0
                      type: string
                  type: object
                clusterName:
                  description: clusterName is the name of the Cluster this object belongs to.
                  maxLength: 63
                  minLength: 1
                  type: string
                failureDomain:
                  description: |-
                    failureDomain is the failure domain the machine will be created in.
                    Must match a key in the FailureDomains map stored on the cluster object.
                  maxLength: 256
                  minLength: 1
                  type: string
                infrastructureRef:
                  description: |-
                    infrastructureRef is a required reference to a custom resource
                    offered by an infrastructure provider.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                nodeDeletionTimeout:
                  description: |-
                    nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                    hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                    Defaults to 10 seconds.
                  type: string
                nodeDrainTimeout:
                  description: |-
                    nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                    The default value is 0, meaning that the node can be drained without any time limitations.
                    NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                  type: string
                nodeVolumeDetachTimeout:
                  description: |-
                    nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                    to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                  type: string
                providerID:
                  description: |-
                    providerID is the identification ID of the machine provided by the provider.
                    This field must match the provider ID as seen on the node object corresponding to this machine.
                    This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler
                    with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out
                    machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a
                    generic out-of-tree provider for autoscaler, this field is required by autoscaler to be
                    able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver
                    and then a comparison is done to find out unregistered machines and are marked for delete.
                    This field will be set by the actuators and consumed by higher level entities like autoscaler that will
                    be interfacing with cluster-api as generic provider.
                  maxLength: 512
                  minLength: 1
                  type: string
                readinessGates:
                  description: |-
                    readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                    This field can be used e.g. by Cluster API control plane providers to extend the semantic of the
                    Ready condition for the Machine they control, like the kubeadm control provider adding ReadinessGates
                    for the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.

                    Another example are external controllers, e.g. responsible to install special software/hardware on the Machines;
                    they can include the status of those components with a new condition and add this condition to ReadinessGates.

                    NOTE: This field is considered only for computing v1beta2 conditions.
                    NOTE: In case readinessGates conditions start with the APIServer, ControllerManager, Scheduler prefix, and all those
                    readiness gates condition are reporting the same message, when computing the Machine's Ready condition those
                    readinessGates will be replaced by a single entry reporting "Control plane components: " + message.
                    This helps to improve readability of conditions bubbling up to the Machine's owner resource / to the Cluster).
                  items:
                    description: MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.
                    properties:
                      conditionType:
                        description: |-
                          conditionType refers to a condition with matching type in the Machine's condition list.
                          If the conditions doesn't exist, it will be treated as unknown.
                          Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                        maxLength: 316
                        minLength: 1
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                      polarity:
                        description: |-
                          polarity of the conditionType specified in this readinessGate.
                          Valid values are Positive, Negative and omitted.
                          When omitted, the default behaviour will be Positive.
                          A positive polarity means that the condition should report a true status under normal conditions.
                          A negative polarity means that the condition should report a false status under normal conditions.
                        enum:
                          - Positive
                          - Negative
                        type: string
                    required:
                      - conditionType
                    type: object
                  maxItems: 32
                  type: array
                  x-kubernetes-list-map-keys:
                    - conditionType
                  x-kubernetes-list-type: map
                version:
                  description: |-
                    version defines the desired Kubernetes version.
                    This field is meant to be optionally used by bootstrap providers.
                  maxLength: 256
                  minLength: 1
                  type: string
              required:
                - bootstrap
                - clusterName
                - infrastructureRef
              type: object
            status:
              description: status is the observed state of Machine.
              properties:
                addresses:
                  description: |-
                    addresses is a list of addresses assigned to the machine.
                    This field is copied from the infrastructure provider reference.
                  items:
                    description: MachineAddress contains information for the node's address.
                    properties:
                      address:
                        description: address is the machine address.
                        maxLength: 256
                        minLength: 1
                        type: string
                      type:
                        description: type is the machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                        enum:
                          - Hostname
                          - ExternalIP
                          - InternalIP
                          - ExternalDNS
                          - InternalDNS
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                bootstrapReady:
                  description: bootstrapReady is the state of the bootstrap provider.
                  type: boolean
                certificatesExpiryDate:
                  description: |-
                    certificatesExpiryDate is the expiry date of the machine certificates.
                    This value is only set for control plane machines.
                  format: date-time
                  type: string
                conditions:
                  description: conditions defines current service state of the Machine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                deletion:
                  description: |-
                    deletion contains information relating to removal of the Machine.
                    Only present when the Machine has a deletionTimestamp and drain or wait for volume detach started.
                  properties:
                    nodeDrainStartTime:
                      description: |-
                        nodeDrainStartTime is the time when the drain of the node started and is used to determine
                        if the NodeDrainTimeout is exceeded.
                        Only present when the Machine has a deletionTimestamp and draining the node had been started.
                      format: date-time
                      type: string
                    waitForNodeVolumeDetachStartTime:
                      description: |-
                        waitForNodeVolumeDetachStartTime is the time when waiting for volume detachment started
                        and is used to determine if the NodeVolumeDetachTimeout is exceeded.
                        Detaching volumes from nodes is usually done by CSI implementations and the current state
                        is observed from the node's `.Status.VolumesAttached` field.
                        Only present when the Machine has a deletionTimestamp and waiting for volume detachments had been started.
                      format: date-time
                      type: string
                  type: object
                failureMessage:
                  description: |-
                    failureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  maxLength: 10240
                  minLength: 1
                  type: string
                failureReason:
                  description: |-
                    failureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  type: string
                infrastructureReady:
                  description: infrastructureReady is the state of the infrastructure provider.
                  type: boolean
                lastUpdated:
                  description: lastUpdated identifies when the phase of the Machine last transitioned.
                  format: date-time
                  type: string
                nodeInfo:
                  description: |-
                    nodeInfo is a set of ids/uuids to uniquely identify the node.
                    More info: https://kubernetes.io/docs/concepts/nodes/node/#info
                  properties:
                    architecture:
                      description: The Architecture reported by the node
                      type: string
                    bootID:
                      description: Boot ID reported by the node.
                      type: string
                    containerRuntimeVersion:
                      description: ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2).
                      type: string
                    kernelVersion:
                      description: Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
                      type: string
                    kubeProxyVersion:
                      description: 'Deprecated: KubeProxy Version reported by the node.'
                      type: string
                    kubeletVersion:
                      description: Kubelet Version reported by the node.
                      type: string
                    machineID:
                      description: |-
                        MachineID reported by the node. For unique machine identification
                        in the cluster this field is preferred. Learn more from man(5)
                        machine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html
                      type: string
                    operatingSystem:
                      description: The Operating System reported by the node
                      type: string
                    osImage:
                      description: OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy)).
                      type: string
                    systemUUID:
                      description: |-
                        SystemUUID reported by the node. For unique machine identification
                        MachineID is preferred. This field is specific to Red Hat hosts
                        https://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid
                      type: string
                  required:
                    - architecture
                    - bootID
                    - containerRuntimeVersion
                    - kernelVersion
                    - kubeProxyVersion
                    - kubeletVersion
                    - machineID
                    - operatingSystem
                    - osImage
                    - systemUUID
                  type: object
                nodeRef:
                  description: nodeRef will point to the corresponding Node if it exists.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                observedGeneration:
                  description: observedGeneration is the latest generation observed by the controller.
                  format: int64
                  type: integer
                phase:
                  description: phase represents the current phase of machine actuation.
                  enum:
                    - Pending
                    - Provisioning
                    - Provisioned
                    - Running
                    - Deleting
                    - Deleted
                    - Failed
                    - Unknown
                  type: string
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in Machine's status with the V1Beta2 version.
                  properties:
                    conditions:
                      description: |-
                        conditions represents the observations of a Machine's current state.
                        Known condition types are Available, Ready, UpToDate, BootstrapConfigReady, InfrastructureReady, NodeReady,
                        NodeHealthy, Deleting, Paused.
                        If a MachineHealthCheck is targeting this machine, also HealthCheckSucceeded, OwnerRemediated conditions are added.
                        Additionally control plane Machines controlled by KubeadmControlPlane will have following additional conditions:
                        APIServerPodHealthy, ControllerManagerPodHealthy, SchedulerPodHealthy, EtcdPodHealthy, EtcdMemberHealthy.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: machinesets.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: MachineSet
    listKind: MachineSetList
    plural: machinesets
    shortNames:
      - ms
    singular: machineset
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster
          jsonPath: .spec.clusterName
          name: Cluster
          type: string
        - description: Total number of machines desired by this machineset
          jsonPath: .spec.replicas
          name: Desired
          priority: 10
          type: integer
        - description: Total number of non-terminated machines targeted by this machineset
          jsonPath: .status.replicas
          name: Replicas
          type: integer
        - description: Total number of ready machines targeted by this machineset.
          jsonPath: .status.readyReplicas
          name: Ready
          type: integer
        - description: Total number of available machines (ready for at least minReadySeconds)
          jsonPath: .status.availableReplicas
          name: Available
          type: integer
        - description: Time duration since creation of MachineSet
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Kubernetes version associated with this MachineSet
          jsonPath: .spec.template.spec.version
          name: Version
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: MachineSet is the Schema for the machinesets API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of MachineSet.
              properties:
                clusterName:
                  description: clusterName is the name of the Cluster this object belongs to.
                  maxLength: 63
                  minLength: 1
                  type: string
                deletePolicy:
                  description: |-
                    deletePolicy defines the policy used to identify nodes to delete when downscaling.
                    Defaults to "Random".  Valid values are "Random, "Newest", "Oldest"
                  enum:
                    - Random
                    - Newest
                    - Oldest
                  type: string
                machineNamingStrategy:
                  description: |-
                    machineNamingStrategy allows changing the naming pattern used when creating Machines.
                    Note: InfraMachines & BootstrapConfigs will use the same name as the corresponding Machines.
                  properties:
                    template:
                      description: |-
                        template defines the template to use for generating the names of the
                        Machine objects.
                        If not defined, it will fallback to `{{ .machineSet.name }}-{{ .random }}`.
                        If the generated name string exceeds 63 characters, it will be trimmed to
                        58 characters and will
                        get concatenated with a random suffix of length 5.
                        Length of the template string must not exceed 256 characters.
                        The template allows the following variables `.cluster.name`,
                        `.machineSet.name` and `.random`.
                        The variable `.cluster.name` retrieves the name of the cluster object
                        that owns the Machines being created.
                        The variable `.machineSet.name` retrieves the name of the MachineSet
                        object that owns the Machines being created.
                        The variable `.random` is substituted with random alphanumeric string,
                        without vowels, of length 5. This variable is required part of the
                        template. If not provided, validation will fail.
                      maxLength: 256
                      minLength: 1
                      type: string
                  type: object
                minReadySeconds:
                  description: |-
                    minReadySeconds is the minimum number of seconds for which a Node for a newly created machine should be ready before considering the replica available.
                    Defaults to 0 (machine will be considered available as soon as the Node is ready)
                  format: int32
                  type: integer
                replicas:
                  description: |-
                    replicas is the number of desired replicas.
                    This is a pointer to distinguish between explicit zero and unspecified.

                    Defaults to:
                    * if the Kubernetes autoscaler min size and max size annotations are set:
                      - if it's a new MachineSet, use min size
                      - if the replicas field of the old MachineSet is < min size, use min size
                      - if the replicas field of the old MachineSet is > max size, use max size
                      - if the replicas field of the old MachineSet is in the (min size, max size) range, keep the value from the oldMS
                    * otherwise use 1
                    Note: Defaulting will be run whenever the replicas field is not set:
                    * A new MachineSet is created with replicas not set.
                    * On an existing MachineSet the replicas field was first set and is now unset.
                    Those cases are especially relevant for the following Kubernetes autoscaler use cases:
                    * A new MachineSet is created and replicas should be managed by the autoscaler
                    * An existing MachineSet which initially wasn't controlled by the autoscaler
                      should be later controlled by the autoscaler
                  format: int32
                  type: integer
                selector:
                  description: |-
                    selector is a label query over machines that should match the replica count.
                    Label keys and values that must match in order to be controlled by this MachineSet.
                    It must match the machine template's labels.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                template:
                  description: |-
                    template is the object that describes the machine that will be created if
                    insufficient replicas are detected.
                    Object references to custom resources are treated as templates.
                  properties:
                    metadata:
                      description: |-
                        metadata is the standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: |-
                        spec is the specification of the desired behavior of the machine.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
                      properties:
                        bootstrap:
                          description: |-
                            bootstrap is a reference to a local struct which encapsulates
                            fields to configure the Machine’s bootstrapping mechanism.
                          properties:
                            configRef:
                              description: |-
                                configRef is a reference to a bootstrap provider-specific resource
                                that holds configuration details. The reference is optional to
                                allow users/operators to specify Bootstrap.DataSecretName without
                                the need of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: |-
                                    If referring to a piece of an object instead of an entire object, this string
                                    should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                    the event) or if no container name is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                    referencing a part of an object.
                                  type: string
                                kind:
                                  description: |-
                                    Kind of the referent.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                  type: string
                                resourceVersion:
                                  description: |-
                                    Specific resourceVersion to which this reference is made, if any.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                  type: string
                                uid:
                                  description: |-
                                    UID of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSecretName:
                              description: |-
                                dataSecretName is the name of the secret that stores the bootstrap data script.
                                If nil, the Machine should remain in the Pending state.
                              maxLength: 253
                              minLength: 0
                              type: string
                          type: object
                        clusterName:
                          description: clusterName is the name of the Cluster this object belongs to.
                          maxLength: 63
                          minLength: 1
                          type: string
                        failureDomain:
                          description: |-
                            failureDomain is the failure domain the machine will be created in.
                            Must match a key in the FailureDomains map stored on the cluster object.
                          maxLength: 256
                          minLength: 1
                          type: string
                        infrastructureRef:
                          description: |-
                            infrastructureRef is a required reference to a custom resource
                            offered by an infrastructure provider.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodeDeletionTimeout:
                          description: |-
                            nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                            hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                            Defaults to 10 seconds.
                          type: string
                        nodeDrainTimeout:
                          description: |-
                            nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                            The default value is 0, meaning that the node can be drained without any time limitations.
                            NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                          type: string
                        nodeVolumeDetachTimeout:
                          description: |-
                            nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                            to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                          type: string
                        providerID:
                          description: |-
                            providerID is the identification ID of the machine provided by the provider.
                            This field must match the provider ID as seen on the node object corresponding to this machine.
                            This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler
                            with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out
                            machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a
                            generic out-of-tree provider for autoscaler, this field is required by autoscaler to be
                            able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver
                            and then a comparison is done to find out unregistered machines and are marked for delete.
                            This field will be set by the actuators and consumed by higher level entities like autoscaler that will
                            be interfacing with cluster-api as generic provider.
                          maxLength: 512
                          minLength: 1
                          type: string
                        readinessGates:
                          description: |-
                            readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                            This field can be used e.g. by Cluster API control plane providers to extend the semantic of the
                            Ready condition for the Machine they control, like the kubeadm control provider adding ReadinessGates
                            for the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.

                            Another example are external controllers, e.g. responsible to install special software/hardware on the Machines;
                            they can include the status of those components with a new condition and add this condition to ReadinessGates.

                            NOTE: This field is considered only for computing v1beta2 conditions.
                            NOTE: In case readinessGates conditions start with the APIServer, ControllerManager, Scheduler prefix, and all those
                            readiness gates condition are reporting the same message, when computing the Machine's Ready condition those
                            readinessGates will be replaced by a single entry reporting "Control plane components: " + message.
                            This helps to improve readability of conditions bubbling up to the Machine's owner resource / to the Cluster).
                          items:
                            description: MachineReadinessGate contains the type of a Machine condition to be used as a readiness gate.
                            properties:
                              conditionType:
                                description: |-
                                  conditionType refers to a condition with matching type in the Machine's condition list.
                                  If the conditions doesn't exist, it will be treated as unknown.
                                  Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                                maxLength: 316
                                minLength: 1
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              polarity:
                                description: |-
                                  polarity of the conditionType specified in this readinessGate.
                                  Valid values are Positive, Negative and omitted.
                                  When omitted, the default behaviour will be Positive.
                                  A positive polarity means that the condition should report a true status under normal conditions.
                                  A negative polarity means that the condition should report a false status under normal conditions.
                                enum:
                                  - Positive
                                  - Negative
                                type: string
                            required:
                              - conditionType
                            type: object
                          maxItems: 32
                          type: array
                          x-kubernetes-list-map-keys:
                            - conditionType
                          x-kubernetes-list-type: map
                        version:
                          description: |-
                            version defines the desired Kubernetes version.
                            This field is meant to be optionally used by bootstrap providers.
                          maxLength: 256
                          minLength: 1
                          type: string
                      required:
                        - bootstrap
                        - clusterName
                        - infrastructureRef
                      type: object
                  type: object
              required:
                - clusterName
                - selector
              type: object
            status:
              description: status is the observed state of MachineSet.
              properties:
                availableReplicas:
                  description: availableReplicas is the number of available replicas (ready for at least minReadySeconds) for this MachineSet.
                  format: int32
                  type: integer
                conditions:
                  description: conditions defines current service state of the MachineSet.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    failureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  maxLength: 10240
                  minLength: 1
                  type: string
                failureReason:
                  description: |-
                    failureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    In the event that there is a terminal problem reconciling the
                    replicas, both FailureReason and FailureMessage will be set. FailureReason
                    will be populated with a succinct value suitable for machine
                    interpretation, while FailureMessage will contain a more verbose
                    string suitable for logging and human consumption.

                    These fields should not be set for transitive errors that a
                    controller faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the MachineTemplate's spec or the configuration of
                    the machine controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the machine controller, or the
                    responsible machine controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the MachineSet object and/or logged in the
                    controller's output.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  type: string
                fullyLabeledReplicas:
                  description: |-
                    fullyLabeledReplicas is the number of replicas that have labels matching the labels of the machine template of the MachineSet.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  format: int32
                  type: integer
                observedGeneration:
                  description: observedGeneration reflects the generation of the most recently observed MachineSet.
                  format: int64
                  type: integer
                readyReplicas:
                  description: readyReplicas is the number of ready replicas for this MachineSet. A machine is considered ready when the node has been created and is "Ready".
                  format: int32
                  type: integer
                replicas:
                  description: replicas is the most recently observed number of replicas.
                  format: int32
                  type: integer
                selector:
                  description: |-
                    selector is the same as the label selector but in the string format to avoid introspection
                    by clients. The string will be in the same format as the query-param syntax.
                    More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
                  maxLength: 4096
                  minLength: 1
                  type: string
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in MachineSet's status with the V1Beta2 version.
                  properties:
                    availableReplicas:
                      description: availableReplicas is the number of available replicas for this MachineSet. A machine is considered available when Machine's Available condition is true.
                      format: int32
                      type: integer
                    conditions:
                      description: |-
                        conditions represents the observations of a MachineSet's current state.
                        Known condition types are MachinesReady, MachinesUpToDate, ScalingUp, ScalingDown, Remediating, Deleting, Paused.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                    readyReplicas:
                      description: readyReplicas is the number of ready replicas for this MachineSet. A machine is considered ready when Machine's Ready condition is true.
                      format: int32
                      type: integer
                    upToDateReplicas:
                      description: upToDateReplicas is the number of up-to-date replicas for this MachineSet. A machine is considered up-to-date when Machine's UpToDate condition is true.
                      format: int32
                      type: integer
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          labelSelectorPath: .status.selector
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: ipaddressclaims.ipam.cluster.x-k8s.io
spec:
  group: ipam.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: IPAddressClaim
    listKind: IPAddressClaimList
    plural: ipaddressclaims
    singular: ipaddressclaim
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Name of the pool to allocate an address from
          jsonPath: .spec.poolRef.name
          name: Pool Name
          type: string
        - description: Kind of the pool to allocate an address from
          jsonPath: .spec.poolRef.kind
          name: Pool Kind
          type: string
        - description: Time duration since creation of IPAdressClaim
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IPAddressClaim is the Schema for the ipaddressclaim API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of IPAddressClaim.
              properties:
                clusterName:
                  description: clusterName is the name of the Cluster this object belongs to.
                  maxLength: 63
                  minLength: 1
                  type: string
                poolRef:
                  description: poolRef is a reference to the pool from which an IP address should be created.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup is the group for the resource being referenced.
                        If APIGroup is not specified, the specified Kind must be in the core API group.
                        For any other third-party types, APIGroup is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - poolRef
              type: object
            status:
              description: status is the observed state of IPAddressClaim.
              properties:
                addressRef:
                  description: addressRef is a reference to the address that was created for this claim.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                conditions:
                  description: conditions summarises the current state of the IPAddressClaim
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in IPAddressClaim's status with the V1Beta2 version.
                  properties:
                    conditions:
                      description: conditions represents the observations of a IPAddressClaim's current state.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: ipaddresses.ipam.cluster.x-k8s.io
spec:
  group: ipam.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: IPAddress
    listKind: IPAddressList
    plural: ipaddresses
    singular: ipaddress
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Address
          jsonPath: .spec.address
          name: Address
          type: string
        - description: Name of the pool the address is from
          jsonPath: .spec.poolRef.name
          name: Pool Name
          type: string
        - description: Kind of the pool the address is from
          jsonPath: .spec.poolRef.kind
          name: Pool Kind
          type: string
        - description: Time duration since creation of IPAdress
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IPAddress is the Schema for the ipaddress API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired state of IPAddress.
              properties:
                address:
                  description: address is the IP address.
                  maxLength: 39
                  minLength: 1
                  type: string
                claimRef:
                  description: claimRef is a reference to the claim this IPAddress was created for.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                gateway:
                  description: gateway is the network gateway of the network the address is from.
                  maxLength: 39
                  minLength: 1
                  type: string
                poolRef:
                  description: poolRef is a reference to the pool that this IPAddress was created from.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup is the group for the resource being referenced.
                        If APIGroup is not specified, the specified Kind must be in the core API group.
                        For any other third-party types, APIGroup is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                  x-kubernetes-map-type: atomic
                prefix:
                  description: prefix is the prefix of the address.
                  type: integer
              required:
                - address
                - claimRef
                - poolRef
                - prefix
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: agentclusters.capi-provider.agent-install.openshift.io
spec:
  group: capi-provider.agent-install.openshift.io
  names:
    kind: AgentCluster
    listKind: AgentClusterList
    plural: agentclusters
    singular: agentcluster
  scope: Namespaced
  versions:
    - deprecated: true
      deprecationWarning: v1alpha1 is a deprecated version for AgentCluster
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AgentCluster is the Schema for the agentclusters API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AgentClusterSpec defines the desired state of AgentCluster
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                ignitionEndpoint:
                  description: IgnitionEndpoint store the data to of the custom ignition endpoint.
                  properties:
                    caCertificateReference:
                      description: |-
                        CaCertificateReference is a reference to the secret containing CA certificate to be used
                        when contacting the URL via HTTPS.
                      properties:
                        name:
                          description: Name is the name of the secret containing the CA certificate.
                          type: string
                        namespace:
                          description: Namespace is the namespace of the secret containing the CA certificate.
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                    url:
                      description: Url store the URL of the custom ignition endpoint.
                      type: string
                  type: object
              type: object
            status:
              description: AgentClusterStatus defines the observed state of AgentCluster
              properties:
                clusterDeploymentReference:
                  description: ClusterDeploymentRef is a reference to the associated Hive ClusterDeployment.
                  properties:
                    name:
                      description: Name is unique within a namespace to reference a clusterDeployment resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the clusterDeployment name must be unique.
                      type: string
                  type: object
                conditions:
                  description: Conditions defines current service state of the ClusterDeployment.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: |-
                      FailureDomainSpec is the Schema for Cluster API failure domains.
                      It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: attributes is a free form map of attributes an infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a list of failure domain objects synced from the infrastructure provider.
                  type: object
                ready:
                  type: boolean
              required:
                - clusterDeploymentReference
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AgentCluster is the Schema for the agentclusters API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AgentClusterSpec defines the desired state of AgentCluster
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                ignitionEndpoint:
                  description: IgnitionEndpoint store the data to of the custom ignition endpoint.
                  properties:
                    caCertificateReference:
                      description: |-
                        CaCertificateReference is a reference to the secret containing CA certificate to be used
                        when contacting the URL via HTTPS.
                      properties:
                        name:
                          description: Name is the name of the secret containing the CA certificate.
                          type: string
                        namespace:
                          description: Namespace is the namespace of the secret containing the CA certificate.
                          type: string
                      required:
                        - name
                        - namespace
                      type: object
                    url:
                      description: Url store the URL of the custom ignition endpoint.
                      type: string
                  type: object
              type: object
            status:
              description: AgentClusterStatus defines the observed state of AgentCluster
              properties:
                clusterDeploymentReference:
                  description: ClusterDeploymentRef is a reference to the associated Hive ClusterDeployment.
                  properties:
                    name:
                      description: Name is unique within a namespace to reference a clusterDeployment resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the clusterDeployment name must be unique.
                      type: string
                  type: object
                conditions:
                  description: Conditions defines current service state of the ClusterDeployment.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: |-
                      FailureDomainSpec is the Schema for Cluster API failure domains.
                      It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: attributes is a free form map of attributes an infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a list of failure domain objects synced from the infrastructure provider.
                  type: object
                ready:
                  type: boolean
              required:
                - clusterDeploymentReference
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: agentmachines.capi-provider.agent-install.openshift.io
spec:
  group: capi-provider.agent-install.openshift.io
  names:
    kind: AgentMachine
    listKind: AgentMachineList
    plural: agentmachines
    singular: agentmachine
  scope: Namespaced
  versions:
    - deprecated: true
      deprecationWarning: v1alpha1 is a deprecated version for AgentMachine
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AgentMachine is the Schema for the agentmachines API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AgentMachineSpec defines the desired state of AgentMachine
              properties:
                agentLabelSelector:
                  description: AgentLabelSelector contains the labels that must be set on an Agent in order to be selected for this Machine.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                providerID:
                  description: |-
                    ProviderID is the host's motherboard serial formatted as
                    agent://12345678-1234-1234-1234-123456789abc
                  type: string
              type: object
            status:
              description: AgentMachineStatus defines the observed state of AgentMachine
              properties:
                addresses:
                  description: Addresses contains the Agent's associated addresses.
                  items:
                    description: MachineAddress contains information for the node's address.
                    properties:
                      address:
                        description: address is the machine address.
                        maxLength: 256
                        minLength: 1
                        type: string
                      type:
                        description: type is the machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                        enum:
                          - Hostname
                          - ExternalIP
                          - InternalIP
                          - ExternalDNS
                          - InternalDNS
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                agentRef:
                  description: AgentRef is a reference to the Agent matched to the Machine.
                  properties:
                    name:
                      description: Name is unique within a namespace to reference an agent resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the agent name must be unique.
                      type: string
                  type: object
                conditions:
                  description: Conditions defines current service state of the AgentMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AgentMachine is the Schema for the agentmachines API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AgentMachineSpec defines the desired state of AgentMachine
              properties:
                agentLabelSelector:
                  description: AgentLabelSelector contains the labels that must be set on an Agent in order to be selected for this Machine.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                providerID:
                  description: |-
                    ProviderID is the host's motherboard serial formatted as
                    agent://12345678-1234-1234-1234-123456789abc
                  type: string
              type: object
            status:
              description: AgentMachineStatus defines the observed state of AgentMachine
              properties:
                addresses:
                  description: Addresses contains the Agent's associated addresses.
                  items:
                    description: MachineAddress contains information for the node's address.
                    properties:
                      address:
                        description: address is the machine address.
                        maxLength: 256
                        minLength: 1
                        type: string
                      type:
                        description: type is the machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                        enum:
                          - Hostname
                          - ExternalIP
                          - InternalIP
                          - ExternalDNS
                          - InternalDNS
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                agentRef:
                  description: AgentRef is a reference to the Agent matched to the Machine.
                  properties:
                    name:
                      description: Name is unique within a namespace to reference an agent resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the agent name must be unique.
                      type: string
                  type: object
                conditions:
                  description: Conditions defines current service state of the AgentMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: agentmachinetemplates.capi-provider.agent-install.openshift.io
spec:
  group: capi-provider.agent-install.openshift.io
  names:
    categories:
      - cluster-api
    kind: AgentMachineTemplate
    listKind: AgentMachineTemplateList
    plural: agentmachinetemplates
    shortNames:
      - agentmt
    singular: agentmachinetemplate
  scope: Namespaced
  versions:
    - deprecated: true
      deprecationWarning: v1alpha1 is a deprecated version for AgentMachineTemplate
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: AgentMachineTemplate is the Schema for the agentmachinetemplates API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AgentMachineTemplateSpec defines the desired state of AgentMachineTemplate
              properties:
                template:
                  description: AgentMachineTemplateResource describes the data needed to create an AgentMachine from a template
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior of the machine.
                      properties:
                        agentLabelSelector:
                          description: AgentLabelSelector contains the labels that must be set on an Agent in order to be selected for this Machine.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        providerID:
                          description: |-
                            ProviderID is the host's motherboard serial formatted as
                            agent://12345678-1234-1234-1234-123456789abc
                          type: string
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: false
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AgentMachineTemplate is the Schema for the agentmachinetemplates API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AgentMachineTemplateSpec defines the desired state of AgentMachineTemplate
              properties:
                template:
                  description: AgentMachineTemplateResource describes the data needed to create an AgentMachine from a template
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior of the machine.
                      properties:
                        agentLabelSelector:
                          description: AgentLabelSelector contains the labels that must be set on an Agent in order to be selected for this Machine.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        providerID:
                          description: |-
                            ProviderID is the host's motherboard serial formatted as
                            agent://12345678-1234-1234-1234-123456789abc
                          type: string
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: awsclustercontrolleridentities.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSClusterControllerIdentity
    listKind: AWSClusterControllerIdentityList
    plural: awsclustercontrolleridentities
    shortNames:
      - awsci
    singular: awsclustercontrolleridentity
  scope: Cluster
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            AWSClusterControllerIdentity is the Schema for the awsclustercontrolleridentities API
            It is used to grant access to use Cluster API Provider AWS Controller credentials.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterControllerIdentity.
              properties:
                allowedNamespaces:
                  description: |-
                    AllowedNamespaces is used to identify which namespaces are allowed to use the identity from.
                    Namespaces can be selected either using an array of namespaces or with label selector.
                    An empty allowedNamespaces object indicates that AWSClusters can use this identity from any namespace.
                    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: |-
                        An empty selector indicates that AWSClusters cannot use this
                        AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
              type: object
          type: object
      served: false
      storage: false
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: |-
            AWSClusterControllerIdentity is the Schema for the awsclustercontrolleridentities API
            It is used to grant access to use Cluster API Provider AWS Controller credentials.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterControllerIdentity.
              properties:
                allowedNamespaces:
                  description: |-
                    AllowedNamespaces is used to identify which namespaces are allowed to use the identity from.
                    Namespaces can be selected either using an array of namespaces or with label selector.
                    An empty allowedNamespaces object indicates that AWSClusters can use this identity from any namespace.
                    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: |-
                        An empty selector indicates that AWSClusters cannot use this
                        AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: awsclusterroleidentities.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSClusterRoleIdentity
    listKind: AWSClusterRoleIdentityList
    plural: awsclusterroleidentities
    shortNames:
      - awsri
    singular: awsclusterroleidentity
  scope: Cluster
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            AWSClusterRoleIdentity is the Schema for the awsclusterroleidentities API
            It is used to assume a role using the provided sourceRef.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterRoleIdentity.
              properties:
                allowedNamespaces:
                  description: |-
                    AllowedNamespaces is used to identify which namespaces are allowed to use the identity from.
                    Namespaces can be selected either using an array of namespaces or with label selector.
                    An empty allowedNamespaces object indicates that AWSClusters can use this identity from any namespace.
                    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: |-
                        An empty selector indicates that AWSClusters cannot use this
                        AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                durationSeconds:
                  description: The duration, in seconds, of the role session before it is renewed.
                  format: int32
                  maximum: 43200
                  minimum: 900
                  type: integer
                externalID:
                  description: |-
                    A unique identifier that might be required when you assume a role in another account.
                    If the administrator of the account to which the role belongs provided you with an
                    external ID, then provide that value in the ExternalId parameter. This value can be
                    any string, such as a passphrase or account number. A cross-account role is usually
                    set up to trust everyone in an account. Therefore, the administrator of the trusting
                    account might send an external ID to the administrator of the trusted account. That
                    way, only someone with the ID can assume the role, rather than everyone in the
                    account. For more information about the external ID, see How to Use an External ID
                    When Granting Access to Your AWS Resources to a Third Party in the IAM User Guide.
                  type: string
                inlinePolicy:
                  description: An IAM policy as a JSON-encoded string that you want to use as an inline session policy.
                  type: string
                policyARNs:
                  description: |-
                    The Amazon Resource Names (ARNs) of the IAM managed policies that you want
                    to use as managed session policies.
                    The policies must exist in the same account as the role.
                  items:
                    type: string
                  type: array
                roleARN:
                  description: The Amazon Resource Name (ARN) of the role to assume.
                  type: string
                sessionName:
                  description: An identifier for the assumed role session
                  type: string
                sourceIdentityRef:
                  description: |-
                    SourceIdentityRef is a reference to another identity which will be chained to do
                    role assumption. All identity types are accepted.
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                        - AWSClusterControllerIdentity
                        - AWSClusterRoleIdentity
                        - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
              required:
                - roleARN
              type: object
          type: object
      served: false
      storage: false
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: |-
            AWSClusterRoleIdentity is the Schema for the awsclusterroleidentities API
            It is used to assume a role using the provided sourceRef.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterRoleIdentity.
              properties:
                allowedNamespaces:
                  description: |-
                    AllowedNamespaces is used to identify which namespaces are allowed to use the identity from.
                    Namespaces can be selected either using an array of namespaces or with label selector.
                    An empty allowedNamespaces object indicates that AWSClusters can use this identity from any namespace.
                    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: |-
                        An empty selector indicates that AWSClusters cannot use this
                        AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                durationSeconds:
                  description: The duration, in seconds, of the role session before it is renewed.
                  format: int32
                  maximum: 43200
                  minimum: 900
                  type: integer
                externalID:
                  description: |-
                    A unique identifier that might be required when you assume a role in another account.
                    If the administrator of the account to which the role belongs provided you with an
                    external ID, then provide that value in the ExternalId parameter. This value can be
                    any string, such as a passphrase or account number. A cross-account role is usually
                    set up to trust everyone in an account. Therefore, the administrator of the trusting
                    account might send an external ID to the administrator of the trusted account. That
                    way, only someone with the ID can assume the role, rather than everyone in the
                    account. For more information about the external ID, see How to Use an External ID
                    When Granting Access to Your AWS Resources to a Third Party in the IAM User Guide.
                  type: string
                inlinePolicy:
                  description: An IAM policy as a JSON-encoded string that you want to use as an inline session policy.
                  type: string
                policyARNs:
                  description: |-
                    The Amazon Resource Names (ARNs) of the IAM managed policies that you want
                    to use as managed session policies.
                    The policies must exist in the same account as the role.
                  items:
                    type: string
                  type: array
                roleARN:
                  description: The Amazon Resource Name (ARN) of the role to assume.
                  type: string
                sessionName:
                  description: An identifier for the assumed role session
                  type: string
                sourceIdentityRef:
                  description: |-
                    SourceIdentityRef is a reference to another identity which will be chained to do
                    role assumption. All identity types are accepted.
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                        - AWSClusterControllerIdentity
                        - AWSClusterRoleIdentity
                        - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
              required:
                - roleARN
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta2
  name: awsclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSCluster
    listKind: AWSClusterList
    plural: awsclusters
    shortNames:
      - awsc
    singular: awscluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this AWSCluster belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Cluster infrastructure is ready for EC2 instances
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: AWS VPC the cluster is using
          jsonPath: .spec.network.vpc.id
          name: VPC
          type: string
        - description: API Endpoint
          jsonPath: .spec.controlPlaneEndpoint
          name: Endpoint
          priority: 1
          type: string
        - description: Bastion IP address for breakglass access
          jsonPath: .status.bastion.publicIp
          name: Bastion IP
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSCluster is the schema for Amazon EC2 based Kubernetes Cluster API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterSpec defines the desired state of an EC2-based Kubernetes cluster.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: |-
                    AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                bastion:
                  description: Bastion contains options to configure the bastion host.
                  properties:
                    allowedCIDRBlocks:
                      description: |-
                        AllowedCIDRBlocks is a list of CIDR blocks allowed to access the bastion host.
                        They are set as ingress rules for the Bastion host's Security Group (defaults to 0.0.0.0/0).
                      items:
                        type: string
                      type: array
                    ami:
                      description: |-
                        AMI will use the specified AMI to boot the bastion. If not specified,
                        the AMI will default to one picked out in public space.
                      type: string
                    disableIngressRules:
                      description: |-
                        DisableIngressRules will ensure there are no Ingress rules in the bastion host's security group.
                        Requires AllowedCIDRBlocks to be empty.
                      type: boolean
                    enabled:
                      description: |-
                        Enabled allows this provider to create a bastion host instance
                        with a public ip to access the VPC private network.
                      type: boolean
                    instanceType:
                      description: |-
                        InstanceType will use the specified instance type for the bastion. If not specified,
                        Cluster API Provider AWS will use t3.micro for all regions except us-east-1, where t2.micro
                        will be the default.
                      type: string
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.
                  properties:
                    additionalSecurityGroups:
                      description: |-
                        AdditionalSecurityGroups sets the security groups used by the load balancer. Expected to be security group IDs
                        This is optional - if not provided new security groups will be created for the load balancer
                      items:
                        type: string
                      type: array
                    crossZoneLoadBalancing:
                      description: |-
                        CrossZoneLoadBalancing enables the classic ELB cross availability zone balancing.

                        With cross-zone load balancing, each load balancer node for your Classic Load Balancer
                        distributes requests evenly across the registered instances in all enabled Availability Zones.
                        If cross-zone load balancing is disabled, each load balancer node distributes requests evenly across
                        the registered instances in its Availability Zone only.

                        Defaults to false.
                      type: boolean
                    healthCheckProtocol:
                      description: |-
                        HealthCheckProtocol sets the protocol type for classic ELB health check target
                        default value is ClassicELBProtocolSSL
                      type: string
                    name:
                      description: |-
                        Name sets the name of the classic ELB load balancer. As per AWS, the name must be unique
                        within your set of load balancers for the region, must have a maximum of 32 characters, must
                        contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen. Once
                        set, the value cannot be changed.
                      maxLength: 32
                      pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                      type: string
                    scheme:
                      default: internet-facing
                      description: Scheme sets the scheme of the load balancer (defaults to internet-facing)
                      enum:
                        - internet-facing
                        - internal
                      type: string
                    subnets:
                      description: Subnets sets the subnets that should be applied to the control plane load balancer (defaults to discovered subnets for managed VPCs or an empty set for unmanaged VPCs)
                      items:
                        type: string
                      type: array
                  type: object
                identityRef:
                  description: |-
                    IdentityRef is a reference to an identity to be used when reconciling the managed control plane.
                    If no identity is specified, the default identity for this controller will be used.
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                        - AWSClusterControllerIdentity
                        - AWSClusterRoleIdentity
                        - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                imageLookupBaseOS:
                  description: |-
                    ImageLookupBaseOS is the name of the base operating system used to look
                    up machine images when a machine does not specify an AMI. When set, this
                    will be used for all cluster machines unless a machine specifies a
                    different ImageLookupBaseOS.
                  type: string
                imageLookupFormat:
                  description: |-
                    ImageLookupFormat is the AMI naming format to look up machine images when
                    a machine does not specify an AMI. When set, this will be used for all
                    cluster machines unless a machine specifies a different ImageLookupOrg.
                    Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base
                    OS and kubernetes version, respectively. The BaseOS will be the value in
                    ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                    defined by the packages produced by kubernetes/release without v as a
                    prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                    image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                    searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                    Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                    also: https://golang.org/pkg/text/template/
                  type: string
                imageLookupOrg:
                  description: |-
                    ImageLookupOrg is the AWS Organization ID to look up machine images when a
                    machine does not specify an AMI. When set, this will be used for all
                    cluster machines unless a machine specifies a different ImageLookupOrg.
                  type: string
                network:
                  description: NetworkSpec encapsulates all things related to AWS network.
                  properties:
                    cni:
                      description: CNI configuration
                      properties:
                        cniIngressRules:
                          description: |-
                            CNIIngressRules specify rules to apply to control plane and worker node security groups.
                            The source for the rule will be set to control plane and worker security group IDs.
                          items:
                            description: CNIIngressRule defines an AWS ingress rule for CNI requirements.
                            properties:
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              protocol:
                                description: SecurityGroupProtocol defines the protocol type for a security group rule.
                                type: string
                              toPort:
                                format: int64
                                type: integer
                            required:
                              - description
                              - fromPort
                              - protocol
                              - toPort
                            type: object
                          type: array
                      type: object
                    securityGroupOverrides:
                      additionalProperties:
                        type: string
                      description: |-
                        SecurityGroupOverrides is an optional set of security groups to use for cluster instances
                        This is optional - if not provided new security groups will be created for the cluster
                      type: object
                    subnets:
                      description: Subnets configuration.
                      items:
                        description: SubnetSpec configures an AWS Subnet.
                        properties:
                          availabilityZone:
                            description: AvailabilityZone defines the availability zone to use for this subnet in the cluster's region.
                            type: string
                          cidrBlock:
                            description: CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
                            type: string
                          id:
                            description: ID defines a unique identifier to reference this resource.
                            type: string
                          ipv6CidrBlock:
                            description: |-
                              IPv6CidrBlock is the IPv6 CIDR block to be used when the provider creates a managed VPC.
                              A subnet can have an IPv4 and an IPv6 address.
                              IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
                            type: string
                          isIpv6:
                            description: |-
                              IsIPv6 defines the subnet as an IPv6 subnet. A subnet is IPv6 when it is associated with a VPC that has IPv6 enabled.
                              IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
                            type: boolean
                          isPublic:
                            description: IsPublic defines the subnet as a public subnet. A subnet is public when it is associated with a route table that has a route to an internet gateway.
                            type: boolean
                          natGatewayId:
                            description: |-
                              NatGatewayID is the NAT gateway id associated with the subnet.
                              Ignored unless the subnet is managed by the provider, in which case this is set on the public subnet where the NAT gateway resides. It is then used to determine routes for private subnets in the same AZ as the public subnet.
                            type: string
                          routeTableId:
                            description: RouteTableID is the routing table id associated with the subnet.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a collection of tags describing the resource.
                            type: object
                        type: object
                      type: array
                    vpc:
                      description: VPC configuration.
                      properties:
                        availabilityZoneSelection:
                          default: Ordered
                          description: |-
                            AvailabilityZoneSelection specifies how AZs should be selected if there are more AZs
                            in a region than specified by AvailabilityZoneUsageLimit. There are 2 selection schemes:
                            Ordered - selects based on alphabetical order
                            Random - selects AZs randomly in a region
                            Defaults to Ordered
                          enum:
                            - Ordered
                            - Random
                          type: string
                        availabilityZoneUsageLimit:
                          default: 3
                          description: |-
                            AvailabilityZoneUsageLimit specifies the maximum number of availability zones (AZ) that
                            should be used in a region when automatically creating subnets. If a region has more
                            than this number of AZs then this number of AZs will be picked randomly when creating
                            default subnets. Defaults to 3
                          minimum: 1
                          type: integer
                        cidrBlock:
                          description: |-
                            CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
                            Defaults to 10.0.0.0/16.
                          type: string
                        id:
                          description: ID is the vpc-id of the VPC this provider should use to create resources.
                          type: string
                        internetGatewayId:
                          description: InternetGatewayID is the id of the internet gateway associated with the VPC.
                          type: string
                        ipv6:
                          description: |-
                            IPv6 contains ipv6 specific settings for the network. Supported only in managed clusters.
                            This field cannot be set on AWSCluster object.
                          properties:
                            cidrBlock:
                              description: CidrBlock is the CIDR block provided by Amazon when VPC has enabled IPv6.
                              type: string
                            egressOnlyInternetGatewayId:
                              description: EgressOnlyInternetGatewayID is the id of the egress only internet gateway associated with an IPv6 enabled VPC.
                              type: string
                            poolId:
                              description: PoolID is the IP pool which must be defined in case of BYO IP is defined.
                              type: string
                          type: object
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the resource.
                          type: object
                      type: object
                  type: object
                region:
                  description: The AWS Region the cluster lives in.
                  type: string
                s3Bucket:
                  description: |-
                    S3Bucket contains options to configure a supporting S3 bucket for this
                    cluster - currently used for nodes requiring Ignition
                    (https://coreos.github.io/ignition/) for bootstrapping (requires
                    BootstrapFormatIgnition feature flag to be enabled).
                  properties:
                    controlPlaneIAMInstanceProfile:
                      description: |-
                        ControlPlaneIAMInstanceProfile is a name of the IAMInstanceProfile, which will be allowed
                        to read control-plane node bootstrap data from S3 Bucket.
                      type: string
                    name:
                      description: Name defines name of S3 Bucket to be created.
                      maxLength: 63
                      minLength: 3
                      pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                      type: string
                    nodesIAMInstanceProfiles:
                      description: |-
                        NodesIAMInstanceProfiles is a list of IAM instance profiles, which will be allowed to read
                        worker nodes bootstrap data from S3 Bucket.
                      items:
                        type: string
                      type: array
                  required:
                    - controlPlaneIAMInstanceProfile
                    - name
                    - nodesIAMInstanceProfiles
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to the bastion host. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
              type: object
            status:
              description: AWSClusterStatus defines the observed state of AWSCluster.
              properties:
                bastion:
                  description: Instance describes an AWS instance.
                  properties:
                    addresses:
                      description: Addresses contains the AWS instance associated addresses.
                      items:
                        description: MachineAddress contains information for the node's address.
                        properties:
                          address:
                            description: address is the machine address.
                            maxLength: 256
                            minLength: 1
                            type: string
                          type:
                            description: type is the machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                            enum:
                              - Hostname
                              - ExternalIP
                              - InternalIP
                              - ExternalDNS
                              - InternalDNS
                            type: string
                        required:
                          - address
                          - type
                        type: object
                      type: array
                    availabilityZone:
                      description: Availability zone of instance
                      type: string
                    ebsOptimized:
                      description: Indicates whether the instance is optimized for Amazon EBS I/O.
                      type: boolean
                    enaSupport:
                      description: Specifies whether enhanced networking with ENA is enabled.
                      type: boolean
                    iamProfile:
                      description: The name of the IAM instance profile associated with the instance, if applicable.
                      type: string
                    id:
                      type: string
                    imageId:
                      description: The ID of the AMI used to launch the instance.
                      type: string
                    instanceState:
                      description: The current state of the instance.
                      type: string
                    networkInterfaces:
                      description: Specifies ENIs attached to instance
                      items:
                        type: string
                      type: array
                    nonRootVolumes:
                      description: Configuration options for the non root storage volumes.
                      items:
                        description: Volume encapsulates the configuration options for the storage device.
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: |-
                              EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                              If Encrypted is set and this is omitted, the default AWS key will be used.
                              The key must already exist and be accessible by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: |-
                              Size specifies size (in Gi) of the storage device.
                              Must be greater than the image snapshot size or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          throughput:
                            description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                            format: int64
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2, io1, etc...).
                            type: string
                        required:
                          - size
                        type: object
                      type: array
                    privateIp:
                      description: The private IPv4 address assigned to the instance.
                      type: string
                    publicIp:
                      description: The public IPv4 address assigned to the instance, if applicable.
                      type: string
                    rootVolume:
                      description: Configuration options for the root storage volume.
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted or not.
                          type: boolean
                        encryptionKey:
                          description: |-
                            EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                            If Encrypted is set and this is omitted, the default AWS key will be used.
                            The key must already exist and be accessible by the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: |-
                            Size specifies size (in Gi) of the storage device.
                            Must be greater than the image snapshot size or 8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1, etc...).
                          type: string
                      required:
                        - size
                      type: object
                    securityGroupIds:
                      description: SecurityGroupIDs are one or more security group IDs this instance belongs to.
                      items:
                        type: string
                      type: array
                    spotMarketOptions:
                      description: SpotMarketOptions option for configuring instances to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: The name of the SSH key pair.
                      type: string
                    subnetId:
                      description: The ID of the subnet of the instance.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: The tags associated with the instance.
                      type: object
                    tenancy:
                      description: Tenancy indicates if instance should run on shared or single-tenant hardware.
                      type: string
                    type:
                      description: The instance type.
                      type: string
                    userData:
                      description: |-
                        UserData is the raw data script passed to the instance which is run upon bootstrap.
                        This field must not be base64 encoded and should only be used when running a new instance.
                      type: string
                    volumeIDs:
                      description: IDs of the instance's volumes
                      items:
                        type: string
                      type: array
                  required:
                    - id
                  type: object
                conditions:
                  description: Conditions provide observations of the operational state of a Cluster API resource.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: |-
                      FailureDomainSpec is the Schema for Cluster API failure domains.
                      It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: attributes is a free form map of attributes an infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of FailureDomains.
                  type: object
                networkStatus:
                  description: NetworkStatus encapsulates AWS networking resources.
                  properties:
                    apiServerElb:
                      description: APIServerELB is the Kubernetes api server classic load balancer.
                      properties:
                        attributes:
                          description: Attributes defines extra attributes associated with the load balancer.
                          properties:
                            crossZoneLoadBalancing:
                              description: CrossZoneLoadBalancing enables the classic load balancer load balancing.
                              type: boolean
                            idleTimeout:
                              description: |-
                                IdleTimeout is time that the connection is allowed to be idle (no data
                                has been sent over the connection) before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        availabilityZones:
                          description: AvailabilityZones is an array of availability zones in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        healthChecks:
                          description: HealthCheck is the classic elb health check associated with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: |-
                                A Duration represents the elapsed time between two instants
                                as an int64 nanosecond count. The representation limits the
                                largest representable duration to approximately 290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: |-
                                A Duration represents the elapsed time between two instants
                                as an int64 nanosecond count. The representation limits the
                                largest representable duration to approximately 290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                            - healthyThreshold
                            - interval
                            - target
                            - timeout
                            - unhealthyThreshold
                          type: object
                        listeners:
                          description: Listeners is an array of classic elb listeners associated with the load balancer. There must be at least one.
                          items:
                            description: ClassicELBListener defines an AWS classic load balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ClassicELBProtocol defines listener protocols for a classic load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ClassicELBProtocol defines listener protocols for a classic load balancer.
                                type: string
                            required:
                              - instancePort
                              - instanceProtocol
                              - port
                              - protocol
                            type: object
                          type: array
                        name:
                          description: |-
                            The name of the load balancer. It must be unique within the set of load balancers
                            defined in the region. It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either internet-facing or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load balancer.
                          type: object
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: SecurityGroup defines an AWS security group.
                        properties:
                          id:
                            description: ID is a unique identifier.
                            type: string
                          ingressRule:
                            description: IngressRules is the inbound rules associated with the security group.
                            items:
                              description: IngressRule defines an AWS ingress rule for security groups.
                              properties:
                                cidrBlocks:
                                  description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                description:
                                  type: string
                                fromPort:
                                  format: int64
                                  type: integer
                                ipv6CidrBlocks:
                                  description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                protocol:
                                  description: SecurityGroupProtocol defines the protocol type for a security group rule.
                                  type: string
                                sourceSecurityGroupIds:
                                  description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                                  items:
                                    type: string
                                  type: array
                                toPort:
                                  format: int64
                                  type: integer
                              required:
                                - description
                                - fromPort
                                - protocol
                                - toPort
                              type: object
                            type: array
                          name:
                            description: Name is the security group name.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a map of tags associated with the security group.
                            type: object
                        required:
                          - id
                          - name
                        type: object
                      description: SecurityGroups is a map from the role/kind of the security group to its unique name, if any.
                      type: object
                  type: object
                ready:
                  default: false
                  type: boolean
              required:
                - ready
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: Cluster to which this AWSCluster belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Cluster infrastructure is ready for EC2 instances
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: AWS VPC the cluster is using
          jsonPath: .spec.network.vpc.id
          name: VPC
          type: string
        - description: API Endpoint
          jsonPath: .spec.controlPlaneEndpoint
          name: Endpoint
          priority: 1
          type: string
        - description: Bastion IP address for breakglass access
          jsonPath: .status.bastion.publicIp
          name: Bastion IP
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSCluster is the schema for Amazon EC2 based Kubernetes Cluster API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterSpec defines the desired state of an EC2-based Kubernetes cluster.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: |-
                    AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the
                    ones added by default.
                  type: object
                bastion:
                  description: Bastion contains options to configure the bastion host.
                  properties:
                    allowedCIDRBlocks:
                      description: |-
                        AllowedCIDRBlocks is a list of CIDR blocks allowed to access the bastion host.
                        They are set as ingress rules for the Bastion host's Security Group (defaults to 0.0.0.0/0).
                      items:
                        type: string
                      type: array
                    ami:
                      description: |-
                        AMI will use the specified AMI to boot the bastion. If not specified,
                        the AMI will default to one picked out in public space.
                      type: string
                    disableIngressRules:
                      description: |-
                        DisableIngressRules will ensure there are no Ingress rules in the bastion host's security group.
                        Requires AllowedCIDRBlocks to be empty.
                      type: boolean
                    enabled:
                      description: |-
                        Enabled allows this provider to create a bastion host instance
                        with a public ip to access the VPC private network.
                      type: boolean
                    instanceType:
                      description: |-
                        InstanceType will use the specified instance type for the bastion. If not specified,
                        Cluster API Provider AWS will use t3.micro for all regions except us-east-1, where t2.micro
                        will be the default.
                      type: string
                  type: object
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.
                  properties:
                    additionalListeners:
                      description: |-
                        AdditionalListeners sets the additional listeners for the control plane load balancer.
                        This is only applicable to Network Load Balancer (NLB) types for the time being.
                      items:
                        description: |-
                          AdditionalListenerSpec defines the desired state of an
                          additional listener on an AWS load balancer.
                        properties:
                          healthCheck:
                            description: HealthCheck sets the optional custom health check configuration to the API target group.
                            properties:
                              intervalSeconds:
                                description: |-
                                  The approximate amount of time, in seconds, between health checks of an individual
                                  target.
                                format: int64
                                maximum: 300
                                minimum: 5
                                type: integer
                              path:
                                description: |-
                                  The destination for health checks on the targets when using the protocol HTTP or HTTPS,
                                  otherwise the path will be ignored.
                                type: string
                              port:
                                description: |-
                                  The port the load balancer uses when performing health checks for additional target groups. When
                                  not specified this value will be set for the same of listener port.
                                type: string
                              protocol:
                                description: |-
                                  The protocol to use to health check connect with the target. When not specified the Protocol
                                  will be the same of the listener.
                                enum:
                                  - TCP
                                  - HTTP
                                  - HTTPS
                                type: string
                              thresholdCount:
                                description: |-
                                  The number of consecutive health check successes required before considering
                                  a target healthy.
                                format: int64
                                maximum: 10
                                minimum: 2
                                type: integer
                              timeoutSeconds:
                                description: |-
                                  The amount of time, in seconds, during which no response from a target means
                                  a failed health check.
                                format: int64
                                maximum: 120
                                minimum: 2
                                type: integer
                              unhealthyThresholdCount:
                                description: |-
                                  The number of consecutive health check failures required before considering
                                  a target unhealthy.
                                format: int64
                                maximum: 10
                                minimum: 2
                                type: integer
                            type: object
                          port:
                            description: Port sets the port for the additional listener.
                            format: int64
                            maximum: 65535
                            minimum: 1
                            type: integer
                          protocol:
                            default: TCP
                            description: |-
                              Protocol sets the protocol for the additional listener.
                              Currently only TCP is supported.
                            enum:
                              - TCP
                            type: string
                        required:
                          - port
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - port
                      x-kubernetes-list-type: map
                    additionalSecurityGroups:
                      description: |-
                        AdditionalSecurityGroups sets the security groups used by the load balancer. Expected to be security group IDs
                        This is optional - if not provided new security groups will be created for the load balancer
                      items:
                        type: string
                      type: array
                    crossZoneLoadBalancing:
                      description: |-
                        CrossZoneLoadBalancing enables the classic ELB cross availability zone balancing.

                        With cross-zone load balancing, each load balancer node for your Classic Load Balancer
                        distributes requests evenly across the registered instances in all enabled Availability Zones.
                        If cross-zone load balancing is disabled, each load balancer node distributes requests evenly across
                        the registered instances in its Availability Zone only.

                        Defaults to false.
                      type: boolean
                    disableHostsRewrite:
                      description: |-
                        DisableHostsRewrite disabled the hair pinning issue solution that adds the NLB's address as 127.0.0.1 to the hosts
                        file of each instance. This is by default, false.
                      type: boolean
                    healthCheck:
                      description: HealthCheck sets custom health check configuration to the API target group.
                      properties:
                        intervalSeconds:
                          description: |-
                            The approximate amount of time, in seconds, between health checks of an individual
                            target.
                          format: int64
                          maximum: 300
                          minimum: 5
                          type: integer
                        thresholdCount:
                          description: |-
                            The number of consecutive health check successes required before considering
                            a target healthy.
                          format: int64
                          maximum: 10
                          minimum: 2
                          type: integer
                        timeoutSeconds:
                          description: |-
                            The amount of time, in seconds, during which no response from a target means
                            a failed health check.
                          format: int64
                          maximum: 120
                          minimum: 2
                          type: integer
                        unhealthyThresholdCount:
                          description: |-
                            The number of consecutive health check failures required before considering
                            a target unhealthy.
                          format: int64
                          maximum: 10
                          minimum: 2
                          type: integer
                      type: object
                    healthCheckProtocol:
                      description: |-
                        HealthCheckProtocol sets the protocol type for ELB health check target
                        default value is ELBProtocolSSL
                      enum:
                        - TCP
                        - SSL
                        - HTTP
                        - HTTPS
                        - TLS
                        - UDP
                      type: string
                    ingressRules:
                      description: IngressRules sets the ingress rules for the control plane load balancer.
                      items:
                        description: IngressRule defines an AWS ingress rule for security groups.
                        properties:
                          cidrBlocks:
                            description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                            items:
                              type: string
                            type: array
                          description:
                            description: Description provides extended information about the ingress rule.
                            type: string
                          fromPort:
                            description: FromPort is the start of port range.
                            format: int64
                            type: integer
                          ipv6CidrBlocks:
                            description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                            items:
                              type: string
                            type: array
                          natGatewaysIPsSource:
                            description: NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
                            type: boolean
                          protocol:
                            description: Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
                            enum:
                              - "-1"
                              - "4"
                              - tcp
                              - udp
                              - icmp
                              - "58"
                              - "50"
                            type: string
                          sourceSecurityGroupIds:
                            description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                            items:
                              type: string
                            type: array
                          sourceSecurityGroupRoles:
                            description: |-
                              The security group role to allow access from. Cannot be specified with CidrBlocks.
                              The field will be combined with source security group IDs if specified.
                            items:
                              description: SecurityGroupRole defines the unique role of a security group.
                              enum:
                                - bastion
                                - node
                                - controlplane
                                - apiserver-lb
                                - lb
                                - node-eks-additional
                              type: string
                            type: array
                          toPort:
                            description: ToPort is the end of port range.
                            format: int64
                            type: integer
                        required:
                          - description
                          - fromPort
                          - protocol
                          - toPort
                        type: object
                      type: array
                    loadBalancerType:
                      default: classic
                      description: LoadBalancerType sets the type for a load balancer. The default type is classic.
                      enum:
                        - classic
                        - elb
                        - alb
                        - nlb
                        - disabled
                      type: string
                    name:
                      description: |-
                        Name sets the name of the classic ELB load balancer. As per AWS, the name must be unique
                        within your set of load balancers for the region, must have a maximum of 32 characters, must
                        contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen. Once
                        set, the value cannot be changed.
                      maxLength: 32
                      pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                      type: string
                    preserveClientIP:
                      description: |-
                        PreserveClientIP lets the user control if preservation of client ips must be retained or not.
                        If this is enabled 6443 will be opened to 0.0.0.0/0.
                      type: boolean
                    scheme:
                      default: internet-facing
                      description: Scheme sets the scheme of the load balancer (defaults to internet-facing)
                      enum:
                        - internet-facing
                        - internal
                      type: string
                    subnets:
                      description: Subnets sets the subnets that should be applied to the control plane load balancer (defaults to discovered subnets for managed VPCs or an empty set for unmanaged VPCs)
                      items:
                        type: string
                      type: array
                  type: object
                identityRef:
                  description: |-
                    IdentityRef is a reference to an identity to be used when reconciling the managed control plane.
                    If no identity is specified, the default identity for this controller will be used.
                  properties:
                    kind:
                      description: Kind of the identity.
                      enum:
                        - AWSClusterControllerIdentity
                        - AWSClusterRoleIdentity
                        - AWSClusterStaticIdentity
                      type: string
                    name:
                      description: Name of the identity.
                      minLength: 1
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                imageLookupBaseOS:
                  description: |-
                    ImageLookupBaseOS is the name of the base operating system used to look
                    up machine images when a machine does not specify an AMI. When set, this
                    will be used for all cluster machines unless a machine specifies a
                    different ImageLookupBaseOS.
                  type: string
                imageLookupFormat:
                  description: |-
                    ImageLookupFormat is the AMI naming format to look up machine images when
                    a machine does not specify an AMI. When set, this will be used for all
                    cluster machines unless a machine specifies a different ImageLookupOrg.
                    Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base
                    OS and kubernetes version, respectively. The BaseOS will be the value in
                    ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                    defined by the packages produced by kubernetes/release without v as a
                    prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                    image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                    searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                    Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                    also: https://golang.org/pkg/text/template/
                  type: string
                imageLookupOrg:
                  description: |-
                    ImageLookupOrg is the AWS Organization ID to look up machine images when a
                    machine does not specify an AMI. When set, this will be used for all
                    cluster machines unless a machine specifies a different ImageLookupOrg.
                  type: string
                network:
                  description: NetworkSpec encapsulates all things related to AWS network.
                  properties:
                    additionalControlPlaneIngressRules:
                      description: AdditionalControlPlaneIngressRules is an optional set of ingress rules to add to the control plane
                      items:
                        description: IngressRule defines an AWS ingress rule for security groups.
                        properties:
                          cidrBlocks:
                            description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                            items:
                              type: string
                            type: array
                          description:
                            description: Description provides extended information about the ingress rule.
                            type: string
                          fromPort:
                            description: FromPort is the start of port range.
                            format: int64
                            type: integer
                          ipv6CidrBlocks:
                            description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                            items:
                              type: string
                            type: array
                          natGatewaysIPsSource:
                            description: NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
                            type: boolean
                          protocol:
                            description: Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
                            enum:
                              - "-1"
                              - "4"
                              - tcp
                              - udp
                              - icmp
                              - "58"
                              - "50"
                            type: string
                          sourceSecurityGroupIds:
                            description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                            items:
                              type: string
                            type: array
                          sourceSecurityGroupRoles:
                            description: |-
                              The security group role to allow access from. Cannot be specified with CidrBlocks.
                              The field will be combined with source security group IDs if specified.
                            items:
                              description: SecurityGroupRole defines the unique role of a security group.
                              enum:
                                - bastion
                                - node
                                - controlplane
                                - apiserver-lb
                                - lb
                                - node-eks-additional
                              type: string
                            type: array
                          toPort:
                            description: ToPort is the end of port range.
                            format: int64
                            type: integer
                        required:
                          - description
                          - fromPort
                          - protocol
                          - toPort
                        type: object
                      type: array
                    additionalNodeIngressRules:
                      description: AdditionalNodeIngressRules is an optional set of ingress rules to add to every node
                      items:
                        description: IngressRule defines an AWS ingress rule for security groups.
                        properties:
                          cidrBlocks:
                            description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                            items:
                              type: string
                            type: array
                          description:
                            description: Description provides extended information about the ingress rule.
                            type: string
                          fromPort:
                            description: FromPort is the start of port range.
                            format: int64
                            type: integer
                          ipv6CidrBlocks:
                            description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                            items:
                              type: string
                            type: array
                          natGatewaysIPsSource:
                            description: NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
                            type: boolean
                          protocol:
                            description: Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
                            enum:
                              - "-1"
                              - "4"
                              - tcp
                              - udp
                              - icmp
                              - "58"
                              - "50"
                            type: string
                          sourceSecurityGroupIds:
                            description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                            items:
                              type: string
                            type: array
                          sourceSecurityGroupRoles:
                            description: |-
                              The security group role to allow access from. Cannot be specified with CidrBlocks.
                              The field will be combined with source security group IDs if specified.
                            items:
                              description: SecurityGroupRole defines the unique role of a security group.
                              enum:
                                - bastion
                                - node
                                - controlplane
                                - apiserver-lb
                                - lb
                                - node-eks-additional
                              type: string
                            type: array
                          toPort:
                            description: ToPort is the end of port range.
                            format: int64
                            type: integer
                        required:
                          - description
                          - fromPort
                          - protocol
                          - toPort
                        type: object
                      type: array
                    cni:
                      description: CNI configuration
                      properties:
                        cniIngressRules:
                          description: |-
                            CNIIngressRules specify rules to apply to control plane and worker node security groups.
                            The source for the rule will be set to control plane and worker security group IDs.
                          items:
                            description: CNIIngressRule defines an AWS ingress rule for CNI requirements.
                            properties:
                              description:
                                type: string
                              fromPort:
                                format: int64
                                type: integer
                              protocol:
                                description: SecurityGroupProtocol defines the protocol type for a security group rule.
                                type: string
                              toPort:
                                format: int64
                                type: integer
                            required:
                              - description
                              - fromPort
                              - protocol
                              - toPort
                            type: object
                          type: array
                      type: object
                    nodePortIngressRuleCidrBlocks:
                      description: |-
                        NodePortIngressRuleCidrBlocks is an optional set of CIDR blocks to allow traffic to nodes' NodePort services.
                        If none are specified here, all IPs are allowed to connect.
                      items:
                        type: string
                      type: array
                    securityGroupOverrides:
                      additionalProperties:
                        type: string
                      description: |-
                        SecurityGroupOverrides is an optional set of security groups to use for cluster instances
                        This is optional - if not provided new security groups will be created for the cluster
                      type: object
                    subnets:
                      description: Subnets configuration.
                      items:
                        description: SubnetSpec configures an AWS Subnet.
                        properties:
                          availabilityZone:
                            description: AvailabilityZone defines the availability zone to use for this subnet in the cluster's region.
                            type: string
                          cidrBlock:
                            description: CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
                            type: string
                          id:
                            description: |-
                              ID defines a unique identifier to reference this resource.
                              If you're bringing your subnet, set the AWS subnet-id here, it must start with `subnet-`.

                              When the VPC is managed by CAPA, and you'd like the provider to create a subnet for you,
                              the id can be set to any placeholder value that does not start with `subnet-`;
                              upon creation, the subnet AWS identifier will be populated in the `ResourceID` field and
                              the `id` field is going to be used as the subnet name. If you specify a tag
                              called `Name`, it takes precedence.
                            type: string
                          ipv6CidrBlock:
                            description: |-
                              IPv6CidrBlock is the IPv6 CIDR block to be used when the provider creates a managed VPC.
                              A subnet can have an IPv4 and an IPv6 address.
                              IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
                            type: string
                          isIpv6:
                            description: |-
                              IsIPv6 defines the subnet as an IPv6 subnet. A subnet is IPv6 when it is associated with a VPC that has IPv6 enabled.
                              IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
                            type: boolean
                          isPublic:
                            description: IsPublic defines the subnet as a public subnet. A subnet is public when it is associated with a route table that has a route to an internet gateway.
                            type: boolean
                          natGatewayId:
                            description: |-
                              NatGatewayID is the NAT gateway id associated with the subnet.
                              Ignored unless the subnet is managed by the provider, in which case this is set on the public subnet where the NAT gateway resides. It is then used to determine routes for private subnets in the same AZ as the public subnet.
                            type: string
                          parentZoneName:
                            description: |-
                              ParentZoneName is the zone name where the current subnet's zone is tied when
                              the zone is a Local Zone.

                              The subnets in Local Zone or Wavelength Zone locations consume the ParentZoneName
                              to select the correct private route table to egress traffic to the internet.
                            type: string
                          resourceID:
                            description: |-
                              ResourceID is the subnet identifier from AWS, READ ONLY.
                              This field is populated when the provider manages the subnet.
                            type: string
                          routeTableId:
                            description: RouteTableID is the routing table id associated with the subnet.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a collection of tags describing the resource.
                            type: object
                          zoneType:
                            description: |-
                              ZoneType defines the type of the zone where the subnet is created.

                              The valid values are availability-zone, local-zone, and wavelength-zone.

                              Subnet with zone type availability-zone (regular) is always selected to create cluster
                              resources, like Load Balancers, NAT Gateways, Contol Plane nodes, etc.

                              Subnet with zone type local-zone or wavelength-zone is not eligible to automatically create
                              regular cluster resources.

                              The public subnet in availability-zone or local-zone is associated with regular public
                              route table with default route entry to a Internet Gateway.

                              The public subnet in wavelength-zone is associated with a carrier public
                              route table with default route entry to a Carrier Gateway.

                              The private subnet in the availability-zone is associated with a private route table with
                              the default route entry to a NAT Gateway created in that zone.

                              The private subnet in the local-zone or wavelength-zone is associated with a private route table with
                              the default route entry re-using the NAT Gateway in the Region (preferred from the
                              parent zone, the zone type availability-zone in the region, or first table available).
                            enum:
                              - availability-zone
                              - local-zone
                              - wavelength-zone
                            type: string
                        required:
                          - id
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - id
                      x-kubernetes-list-type: map
                    vpc:
                      description: VPC configuration.
                      properties:
                        availabilityZoneSelection:
                          default: Ordered
                          description: |-
                            AvailabilityZoneSelection specifies how AZs should be selected if there are more AZs
                            in a region than specified by AvailabilityZoneUsageLimit. There are 2 selection schemes:
                            Ordered - selects based on alphabetical order
                            Random - selects AZs randomly in a region
                            Defaults to Ordered
                          enum:
                            - Ordered
                            - Random
                          type: string
                        availabilityZoneUsageLimit:
                          default: 3
                          description: |-
                            AvailabilityZoneUsageLimit specifies the maximum number of availability zones (AZ) that
                            should be used in a region when automatically creating subnets. If a region has more
                            than this number of AZs then this number of AZs will be picked randomly when creating
                            default subnets. Defaults to 3
                          minimum: 1
                          type: integer
                        carrierGatewayId:
                          description: |-
                            CarrierGatewayID is the id of the internet gateway associated with the VPC,
                            for carrier network (Wavelength Zones).
                          type: string
                          x-kubernetes-validations:
                            - message: Carrier Gateway ID must start with 'cagw-'
                              rule: self.startsWith('cagw-')
                        cidrBlock:
                          description: |-
                            CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
                            Defaults to 10.0.0.0/16.
                            Mutually exclusive with IPAMPool.
                          type: string
                        elasticIpPool:
                          description: |-
                            ElasticIPPool contains specific configuration to allocate Public IPv4 address (Elastic IP) from user-defined pool
                            brought to AWS for core infrastructure resources, like NAT Gateways and Public Network Load Balancers for
                            the API Server.
                          properties:
                            publicIpv4Pool:
                              description: |-
                                PublicIpv4Pool sets a custom Public IPv4 Pool used to create Elastic IP address for resources
                                created in public IPv4 subnets. Every IPv4 address, Elastic IP, will be allocated from the custom
                                Public IPv4 pool that you brought to AWS, instead of Amazon-provided pool. The public IPv4 pool
                                resource ID starts with 'ipv4pool-ec2'.
                              maxLength: 30
                              type: string
                            publicIpv4PoolFallbackOrder:
                              description: |-
                                PublicIpv4PoolFallBackOrder defines the fallback action when the Public IPv4 Pool has been exhausted,
                                no more IPv4 address available in the pool.

                                When set to 'amazon-pool', the controller check if the pool has available IPv4 address, when pool has reached the
                                IPv4 limit, the address will be claimed from Amazon-pool (default).

                                When set to 'none', the controller will fail the Elastic IP allocation when the publicIpv4Pool is exhausted.
                              enum:
                                - amazon-pool
                                - none
                              type: string
                              x-kubernetes-validations:
                                - message: allowed values are 'none' and 'amazon-pool'
                                  rule: self in ['none','amazon-pool']
                          type: object
                        emptyRoutesDefaultVPCSecurityGroup:
                          description: |-
                            EmptyRoutesDefaultVPCSecurityGroup specifies whether the default VPC security group ingress
                            and egress rules should be removed.

                            By default, when creating a VPC, AWS creates a security group called `default` with ingress and egress
                            rules that allow traffic from anywhere. The group could be used as a potential surface attack and
                            it's generally suggested that the group rules are removed or modified appropriately.

                            NOTE: This only applies when the VPC is managed by the Cluster API AWS controller.
                          type: boolean
                        id:
                          description: ID is the vpc-id of the VPC this provider should use to create resources.
                          type: string
                        internetGatewayId:
                          description: InternetGatewayID is the id of the internet gateway associated with the VPC.
                          type: string
                        ipamPool:
                          description: |-
                            IPAMPool defines the IPAMv4 pool to be used for VPC.
                            Mutually exclusive with CidrBlock.
                          properties:
                            id:
                              description: ID is the ID of the IPAM pool this provider should use to create VPC.
                              type: string
                            name:
                              description: Name is the name of the IPAM pool this provider should use to create VPC.
                              type: string
                            netmaskLength:
                              description: |-
                                The netmask length of the IPv4 CIDR you want to allocate to VPC from
                                an Amazon VPC IP Address Manager (IPAM) pool.
                                Defaults to /16 for IPv4 if not specified.
                              format: int64
                              type: integer
                          type: object
                        ipv6:
                          description: |-
                            IPv6 contains ipv6 specific settings for the network. Supported only in managed clusters.
                            This field cannot be set on AWSCluster object.
                          properties:
                            cidrBlock:
                              description: |-
                                CidrBlock is the CIDR block provided by Amazon when VPC has enabled IPv6.
                                Mutually exclusive with IPAMPool.
                              type: string
                            egressOnlyInternetGatewayId:
                              description: EgressOnlyInternetGatewayID is the id of the egress only internet gateway associated with an IPv6 enabled VPC.
                              type: string
                            ipamPool:
                              description: |-
                                IPAMPool defines the IPAMv6 pool to be used for VPC.
                                Mutually exclusive with CidrBlock.
                              properties:
                                id:
                                  description: ID is the ID of the IPAM pool this provider should use to create VPC.
                                  type: string
                                name:
                                  description: Name is the name of the IPAM pool this provider should use to create VPC.
                                  type: string
                                netmaskLength:
                                  description: |-
                                    The netmask length of the IPv4 CIDR you want to allocate to VPC from
                                    an Amazon VPC IP Address Manager (IPAM) pool.
                                    Defaults to /16 for IPv4 if not specified.
                                  format: int64
                                  type: integer
                              type: object
                            poolId:
                              description: |-
                                PoolID is the IP pool which must be defined in case of BYO IP is defined.
                                Must be specified if CidrBlock is set.
                                Mutually exclusive with IPAMPool.
                              type: string
                          type: object
                        privateDnsHostnameTypeOnLaunch:
                          description: |-
                            PrivateDNSHostnameTypeOnLaunch is the type of hostname to assign to instances in the subnet at launch.
                            For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name)
                            or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).
                          enum:
                            - ip-name
                            - resource-name
                          type: string
                        secondaryCidrBlocks:
                          description: |-
                            SecondaryCidrBlocks are additional CIDR blocks to be associated when the provider creates a managed VPC.
                            Defaults to none. Mutually exclusive with IPAMPool. This makes sense to use if, for example, you want to use
                            a separate IP range for pods (e.g. Cilium ENI mode).
                          items:
                            description: VpcCidrBlock defines the CIDR block and settings to associate with the managed VPC. Currently, only IPv4 is supported.
                            properties:
                              ipv4CidrBlock:
                                description: IPv4CidrBlock is the IPv4 CIDR block to associate with the managed VPC.
                                minLength: 1
                                type: string
                            required:
                              - ipv4CidrBlock
                            type: object
                          type: array
                        subnetSchema:
                          default: PreferPrivate
                          description: |-
                            SubnetSchema specifies how CidrBlock should be divided on subnets in the VPC depending on the number of AZs.
                            PreferPrivate - one private subnet for each AZ plus one other subnet that will be further sub-divided for the public subnets.
                            PreferPublic - have the reverse logic of PreferPrivate, one public subnet for each AZ plus one other subnet
                            that will be further sub-divided for the private subnets.
                            Defaults to PreferPrivate
                          enum:
                            - PreferPrivate
                            - PreferPublic
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the resource.
                          type: object
                      type: object
                  type: object
                partition:
                  description: Partition is the AWS security partition being used. Defaults to "aws"
                  type: string
                region:
                  description: The AWS Region the cluster lives in.
                  type: string
                s3Bucket:
                  description: |-
                    S3Bucket contains options to configure a supporting S3 bucket for this
                    cluster - currently used for nodes requiring Ignition
                    (https://coreos.github.io/ignition/) for bootstrapping (requires
                    BootstrapFormatIgnition feature flag to be enabled).
                  properties:
                    bestEffortDeleteObjects:
                      description: BestEffortDeleteObjects defines whether access/permission errors during object deletion should be ignored.
                      type: boolean
                    controlPlaneIAMInstanceProfile:
                      description: |-
                        ControlPlaneIAMInstanceProfile is a name of the IAMInstanceProfile, which will be allowed
                        to read control-plane node bootstrap data from S3 Bucket.
                      type: string
                    name:
                      description: Name defines name of S3 Bucket to be created.
                      maxLength: 63
                      minLength: 3
                      pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                      type: string
                    nodesIAMInstanceProfiles:
                      description: |-
                        NodesIAMInstanceProfiles is a list of IAM instance profiles, which will be allowed to read
                        worker nodes bootstrap data from S3 Bucket.
                      items:
                        type: string
                      type: array
                    presignedURLDuration:
                      description: |-
                        PresignedURLDuration defines the duration for which presigned URLs are valid.

                        This is used to generate presigned URLs for S3 Bucket objects, which are used by
                        control-plane and worker nodes to fetch bootstrap data.

                        When enabled, the IAM instance profiles specified are not used.
                      type: string
                  required:
                    - name
                  type: object
                secondaryControlPlaneLoadBalancer:
                  description: |-
                    SecondaryControlPlaneLoadBalancer is an additional load balancer that can be used for the control plane.

                    An example use case is to have a separate internal load balancer for internal traffic,
                    and a separate external load balancer for external traffic.
                  properties:
                    additionalListeners:
                      description: |-
                        AdditionalListeners sets the additional listeners for the control plane load balancer.
                        This is only applicable to Network Load Balancer (NLB) types for the time being.
                      items:
                        description: |-
                          AdditionalListenerSpec defines the desired state of an
                          additional listener on an AWS load balancer.
                        properties:
                          healthCheck:
                            description: HealthCheck sets the optional custom health check configuration to the API target group.
                            properties:
                              intervalSeconds:
                                description: |-
                                  The approximate amount of time, in seconds, between health checks of an individual
                                  target.
                                format: int64
                                maximum: 300
                                minimum: 5
                                type: integer
                              path:
                                description: |-
                                  The destination for health checks on the targets when using the protocol HTTP or HTTPS,
                                  otherwise the path will be ignored.
                                type: string
                              port:
                                description: |-
                                  The port the load balancer uses when performing health checks for additional target groups. When
                                  not specified this value will be set for the same of listener port.
                                type: string
                              protocol:
                                description: |-
                                  The protocol to use to health check connect with the target. When not specified the Protocol
                                  will be the same of the listener.
                                enum:
                                  - TCP
                                  - HTTP
                                  - HTTPS
                                type: string
                              thresholdCount:
                                description: |-
                                  The number of consecutive health check successes required before considering
                                  a target healthy.
                                format: int64
                                maximum: 10
                                minimum: 2
                                type: integer
                              timeoutSeconds:
                                description: |-
                                  The amount of time, in seconds, during which no response from a target means
                                  a failed health check.
                                format: int64
                                maximum: 120
                                minimum: 2
                                type: integer
                              unhealthyThresholdCount:
                                description: |-
                                  The number of consecutive health check failures required before considering
                                  a target unhealthy.
                                format: int64
                                maximum: 10
                                minimum: 2
                                type: integer
                            type: object
                          port:
                            description: Port sets the port for the additional listener.
                            format: int64
                            maximum: 65535
                            minimum: 1
                            type: integer
                          protocol:
                            default: TCP
                            description: |-
                              Protocol sets the protocol for the additional listener.
                              Currently only TCP is supported.
                            enum:
                              - TCP
                            type: string
                        required:
                          - port
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - port
                      x-kubernetes-list-type: map
                    additionalSecurityGroups:
                      description: |-
                        AdditionalSecurityGroups sets the security groups used by the load balancer. Expected to be security group IDs
                        This is optional - if not provided new security groups will be created for the load balancer
                      items:
                        type: string
                      type: array
                    crossZoneLoadBalancing:
                      description: |-
                        CrossZoneLoadBalancing enables the classic ELB cross availability zone balancing.

                        With cross-zone load balancing, each load balancer node for your Classic Load Balancer
                        distributes requests evenly across the registered instances in all enabled Availability Zones.
                        If cross-zone load balancing is disabled, each load balancer node distributes requests evenly across
                        the registered instances in its Availability Zone only.

                        Defaults to false.
                      type: boolean
                    disableHostsRewrite:
                      description: |-
                        DisableHostsRewrite disabled the hair pinning issue solution that adds the NLB's address as 127.0.0.1 to the hosts
                        file of each instance. This is by default, false.
                      type: boolean
                    healthCheck:
                      description: HealthCheck sets custom health check configuration to the API target group.
                      properties:
                        intervalSeconds:
                          description: |-
                            The approximate amount of time, in seconds, between health checks of an individual
                            target.
                          format: int64
                          maximum: 300
                          minimum: 5
                          type: integer
                        thresholdCount:
                          description: |-
                            The number of consecutive health check successes required before considering
                            a target healthy.
                          format: int64
                          maximum: 10
                          minimum: 2
                          type: integer
                        timeoutSeconds:
                          description: |-
                            The amount of time, in seconds, during which no response from a target means
                            a failed health check.
                          format: int64
                          maximum: 120
                          minimum: 2
                          type: integer
                        unhealthyThresholdCount:
                          description: |-
                            The number of consecutive health check failures required before considering
                            a target unhealthy.
                          format: int64
                          maximum: 10
                          minimum: 2
                          type: integer
                      type: object
                    healthCheckProtocol:
                      description: |-
                        HealthCheckProtocol sets the protocol type for ELB health check target
                        default value is ELBProtocolSSL
                      enum:
                        - TCP
                        - SSL
                        - HTTP
                        - HTTPS
                        - TLS
                        - UDP
                      type: string
                    ingressRules:
                      description: IngressRules sets the ingress rules for the control plane load balancer.
                      items:
                        description: IngressRule defines an AWS ingress rule for security groups.
                        properties:
                          cidrBlocks:
                            description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                            items:
                              type: string
                            type: array
                          description:
                            description: Description provides extended information about the ingress rule.
                            type: string
                          fromPort:
                            description: FromPort is the start of port range.
                            format: int64
                            type: integer
                          ipv6CidrBlocks:
                            description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                            items:
                              type: string
                            type: array
                          natGatewaysIPsSource:
                            description: NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
                            type: boolean
                          protocol:
                            description: Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
                            enum:
                              - "-1"
                              - "4"
                              - tcp
                              - udp
                              - icmp
                              - "58"
                              - "50"
                            type: string
                          sourceSecurityGroupIds:
                            description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                            items:
                              type: string
                            type: array
                          sourceSecurityGroupRoles:
                            description: |-
                              The security group role to allow access from. Cannot be specified with CidrBlocks.
                              The field will be combined with source security group IDs if specified.
                            items:
                              description: SecurityGroupRole defines the unique role of a security group.
                              enum:
                                - bastion
                                - node
                                - controlplane
                                - apiserver-lb
                                - lb
                                - node-eks-additional
                              type: string
                            type: array
                          toPort:
                            description: ToPort is the end of port range.
                            format: int64
                            type: integer
                        required:
                          - description
                          - fromPort
                          - protocol
                          - toPort
                        type: object
                      type: array
                    loadBalancerType:
                      default: classic
                      description: LoadBalancerType sets the type for a load balancer. The default type is classic.
                      enum:
                        - classic
                        - elb
                        - alb
                        - nlb
                        - disabled
                      type: string
                    name:
                      description: |-
                        Name sets the name of the classic ELB load balancer. As per AWS, the name must be unique
                        within your set of load balancers for the region, must have a maximum of 32 characters, must
                        contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen. Once
                        set, the value cannot be changed.
                      maxLength: 32
                      pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                      type: string
                    preserveClientIP:
                      description: |-
                        PreserveClientIP lets the user control if preservation of client ips must be retained or not.
                        If this is enabled 6443 will be opened to 0.0.0.0/0.
                      type: boolean
                    scheme:
                      default: internet-facing
                      description: Scheme sets the scheme of the load balancer (defaults to internet-facing)
                      enum:
                        - internet-facing
                        - internal
                      type: string
                    subnets:
                      description: Subnets sets the subnets that should be applied to the control plane load balancer (defaults to discovered subnets for managed VPCs or an empty set for unmanaged VPCs)
                      items:
                        type: string
                      type: array
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to the bastion host. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
              type: object
            status:
              description: AWSClusterStatus defines the observed state of AWSCluster.
              properties:
                bastion:
                  description: Instance describes an AWS instance.
                  properties:
                    addresses:
                      description: Addresses contains the AWS instance associated addresses.
                      items:
                        description: MachineAddress contains information for the node's address.
                        properties:
                          address:
                            description: address is the machine address.
                            maxLength: 256
                            minLength: 1
                            type: string
                          type:
                            description: type is the machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                            enum:
                              - Hostname
                              - ExternalIP
                              - InternalIP
                              - ExternalDNS
                              - InternalDNS
                            type: string
                        required:
                          - address
                          - type
                        type: object
                      type: array
                    availabilityZone:
                      description: Availability zone of instance
                      type: string
                    capacityReservationId:
                      description: CapacityReservationID specifies the target Capacity Reservation into which the instance should be launched.
                      type: string
                    capacityReservationPreference:
                      allOf:
                        - enum:
                            - ""
                            - None
                            - CapacityReservationsOnly
                            - Open
                        - enum:
                            - ""
                            - None
                            - CapacityReservationsOnly
                            - Open
                      description: |-
                        CapacityReservationPreference specifies the preference for use of Capacity Reservations by the instance. Valid values include:
                        "Open": The instance may make use of open Capacity Reservations that match its AZ and InstanceType
                        "None": The instance may not make use of any Capacity Reservations. This is to conserve open reservations for desired workloads
                        "CapacityReservationsOnly": The instance will only run if matched or targeted to a Capacity Reservation
                      type: string
                    ebsOptimized:
                      description: Indicates whether the instance is optimized for Amazon EBS I/O.
                      type: boolean
                    enaSupport:
                      description: Specifies whether enhanced networking with ENA is enabled.
                      type: boolean
                    hostAffinity:
                      description: |-
                        HostAffinity specifies the dedicated host affinity setting for the instance.
                        When hostAffinity is set to host, an instance started onto a specific host always restarts on the same host if stopped.
                        When hostAffinity is set to default, and you stop and restart the instance, it can be restarted on any available host.
                        When HostAffinity is defined, HostID is required.
                      enum:
                        - default
                        - host
                      type: string
                    hostID:
                      description: HostID specifies the dedicated host on which the instance should be started.
                      type: string
                    iamProfile:
                      description: The name of the IAM instance profile associated with the instance, if applicable.
                      type: string
                    id:
                      type: string
                    imageId:
                      description: The ID of the AMI used to launch the instance.
                      type: string
                    instanceMetadataOptions:
                      description: InstanceMetadataOptions is the metadata options for the EC2 instance.
                      properties:
                        httpEndpoint:
                          default: enabled
                          description: |-
                            Enables or disables the HTTP metadata endpoint on your instances.

                            If you specify a value of disabled, you cannot access your instance metadata.

                            Default: enabled
                          enum:
                            - enabled
                            - disabled
                          type: string
                        httpPutResponseHopLimit:
                          default: 1
                          description: |-
                            The desired HTTP PUT response hop limit for instance metadata requests. The
                            larger the number, the further instance metadata requests can travel.

                            Default: 1
                          format: int64
                          maximum: 64
                          minimum: 1
                          type: integer
                        httpTokens:
                          default: optional
                          description: |-
                            The state of token usage for your instance metadata requests.

                            If the state is optional, you can choose to retrieve instance metadata with
                            or without a session token on your request. If you retrieve the IAM role
                            credentials without a token, the version 1.0 role credentials are returned.
                            If you retrieve the IAM role credentials using a valid session token, the
                            version 2.0 role credentials are returned.

                            If the state is required, you must send a session token with any instance
                            metadata retrieval requests. In this state, retrieving the IAM role credentials
                            always returns the version 2.0 credentials; the version 1.0 credentials are
                            not available.

                            Default: optional
                          enum:
                            - optional
                            - required
                          type: string
                        instanceMetadataTags:
                          default: disabled
                          description: |-
                            Set to enabled to allow access to instance tags from the instance metadata.
                            Set to disabled to turn off access to instance tags from the instance metadata.
                            For more information, see Work with instance tags using the instance metadata
                            (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).

                            Default: disabled
                          enum:
                            - enabled
                            - disabled
                          type: string
                      type: object
                    instanceState:
                      description: The current state of the instance.
                      type: string
                    marketType:
                      description: |-
                        MarketType specifies the type of market for the EC2 instance. Valid values include:
                        "OnDemand" (default): The instance runs as a standard OnDemand instance.
                        "Spot": The instance runs as a Spot instance. When SpotMarketOptions is provided, the marketType defaults to "Spot".
                        "CapacityBlock": The instance utilizes pre-purchased compute capacity (capacity blocks) with AWS Capacity Reservations.
                         If this value is selected, CapacityReservationID must be specified to identify the target reservation.
                        If marketType is not specified and spotMarketOptions is provided, the marketType defaults to "Spot".
                      enum:
                        - OnDemand
                        - Spot
                        - CapacityBlock
                      type: string
                    networkInterfaceType:
                      description: NetworkInterfaceType is the interface type of the primary network Interface.
                      type: string
                    networkInterfaces:
                      description: Specifies ENIs attached to instance
                      items:
                        type: string
                      type: array
                    nonRootVolumes:
                      description: Configuration options for the non root storage volumes.
                      items:
                        description: Volume encapsulates the configuration options for the storage device.
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: |-
                              EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                              If Encrypted is set and this is omitted, the default AWS key will be used.
                              The key must already exist and be accessible by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: |-
                              Size specifies size (in Gi) of the storage device.
                              Must be greater than the image snapshot size or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          throughput:
                            description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                            format: int64
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2, io1, etc...).
                            type: string
                        required:
                          - size
                        type: object
                      type: array
                    placementGroupName:
                      description: PlacementGroupName specifies the name of the placement group in which to launch the instance.
                      type: string
                    placementGroupPartition:
                      description: |-
                        PlacementGroupPartition is the partition number within the placement group in which to launch the instance.
                        This value is only valid if the placement group, referred in `PlacementGroupName`, was created with
                        strategy set to partition.
                      format: int64
                      maximum: 7
                      minimum: 1
                      type: integer
                    privateDnsName:
                      description: PrivateDNSName is the options for the instance hostname.
                      properties:
                        enableResourceNameDnsAAAARecord:
                          description: EnableResourceNameDNSAAAARecord indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
                          type: boolean
                        enableResourceNameDnsARecord:
                          description: EnableResourceNameDNSARecord indicates whether to respond to DNS queries for instance hostnames with DNS A records.
                          type: boolean
                        hostnameType:
                          description: The type of hostname to assign to an instance.
                          enum:
                            - ip-name
                            - resource-name
                          type: string
                      type: object
                    privateIp:
                      description: The private IPv4 address assigned to the instance.
                      type: string
                    publicIPOnLaunch:
                      description: PublicIPOnLaunch is the option to associate a public IP on instance launch
                      type: boolean
                    publicIp:
                      description: The public IPv4 address assigned to the instance, if applicable.
                      type: string
                    rootVolume:
                      description: Configuration options for the root storage volume.
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted or not.
                          type: boolean
                        encryptionKey:
                          description: |-
                            EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                            If Encrypted is set and this is omitted, the default AWS key will be used.
                            The key must already exist and be accessible by the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: |-
                            Size specifies size (in Gi) of the storage device.
                            Must be greater than the image snapshot size or 8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1, etc...).
                          type: string
                      required:
                        - size
                      type: object
                    securityGroupIds:
                      description: SecurityGroupIDs are one or more security group IDs this instance belongs to.
                      items:
                        type: string
                      type: array
                    spotMarketOptions:
                      description: SpotMarketOptions option for configuring instances to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: The name of the SSH key pair.
                      type: string
                    subnetId:
                      description: The ID of the subnet of the instance.
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: The tags associated with the instance.
                      type: object
                    tenancy:
                      description: Tenancy indicates if instance should run on shared or single-tenant hardware.
                      type: string
                    type:
                      description: The instance type.
                      type: string
                    userData:
                      description: |-
                        UserData is the raw data script passed to the instance which is run upon bootstrap.
                        This field must not be base64 encoded and should only be used when running a new instance.
                      type: string
                    volumeIDs:
                      description: IDs of the instance's volumes
                      items:
                        type: string
                      type: array
                  required:
                    - id
                  type: object
                conditions:
                  description: Conditions provide observations of the operational state of a Cluster API resource.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: |-
                      FailureDomainSpec is the Schema for Cluster API failure domains.
                      It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: attributes is a free form map of attributes an infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains is a slice of FailureDomains.
                  type: object
                networkStatus:
                  description: NetworkStatus encapsulates AWS networking resources.
                  properties:
                    apiServerElb:
                      description: APIServerELB is the Kubernetes api server load balancer.
                      properties:
                        arn:
                          description: |-
                            ARN of the load balancer. Unlike the ClassicLB, ARN is used mostly
                            to define and get it.
                          type: string
                        attributes:
                          description: ClassicElbAttributes defines extra attributes associated with the load balancer.
                          properties:
                            crossZoneLoadBalancing:
                              description: CrossZoneLoadBalancing enables the classic load balancer load balancing.
                              type: boolean
                            idleTimeout:
                              description: |-
                                IdleTimeout is time that the connection is allowed to be idle (no data
                                has been sent over the connection) before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        availabilityZones:
                          description: AvailabilityZones is an array of availability zones in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        elbAttributes:
                          additionalProperties:
                            type: string
                          description: ELBAttributes defines extra attributes associated with v2 load balancers.
                          type: object
                        elbListeners:
                          description: ELBListeners is an array of listeners associated with the load balancer. There must be at least one.
                          items:
                            description: Listener defines an AWS network load balancer listener.
                            properties:
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ELBProtocol defines listener protocols for a load balancer.
                                type: string
                              targetGroup:
                                description: |-
                                  TargetGroupSpec specifies target group settings for a given listener.
                                  This is created first, and the ARN is then passed to the listener.
                                properties:
                                  name:
                                    description: Name of the TargetGroup. Must be unique over the same group of listeners.
                                    maxLength: 32
                                    type: string
                                  port:
                                    description: Port is the exposed port
                                    format: int64
                                    type: integer
                                  protocol:
                                    description: ELBProtocol defines listener protocols for a load balancer.
                                    enum:
                                      - tcp
                                      - tls
                                      - udp
                                      - TCP
                                      - TLS
                                      - UDP
                                    type: string
                                  targetGroupHealthCheck:
                                    description: HealthCheck is the elb health check associated with the load balancer.
                                    properties:
                                      intervalSeconds:
                                        format: int64
                                        type: integer
                                      path:
                                        type: string
                                      port:
                                        type: string
                                      protocol:
                                        type: string
                                      thresholdCount:
                                        format: int64
                                        type: integer
                                      timeoutSeconds:
                                        format: int64
                                        type: integer
                                      unhealthyThresholdCount:
                                        format: int64
                                        type: integer
                                    type: object
                                  vpcId:
                                    type: string
                                required:
                                  - name
                                  - port
                                  - protocol
                                  - vpcId
                                type: object
                            required:
                              - port
                              - protocol
                              - targetGroup
                            type: object
                          type: array
                        healthChecks:
                          description: HealthCheck is the classic elb health check associated with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: |-
                                A Duration represents the elapsed time between two instants
                                as an int64 nanosecond count. The representation limits the
                                largest representable duration to approximately 290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: |-
                                A Duration represents the elapsed time between two instants
                                as an int64 nanosecond count. The representation limits the
                                largest representable duration to approximately 290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                            - healthyThreshold
                            - interval
                            - target
                            - timeout
                            - unhealthyThreshold
                          type: object
                        listeners:
                          description: ClassicELBListeners is an array of classic elb listeners associated with the load balancer. There must be at least one.
                          items:
                            description: ClassicELBListener defines an AWS classic load balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ELBProtocol defines listener protocols for a load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ELBProtocol defines listener protocols for a load balancer.
                                type: string
                            required:
                              - instancePort
                              - instanceProtocol
                              - port
                              - protocol
                            type: object
                          type: array
                        loadBalancerType:
                          description: LoadBalancerType sets the type for a load balancer. The default type is classic.
                          enum:
                            - classic
                            - elb
                            - alb
                            - nlb
                          type: string
                        name:
                          description: |-
                            The name of the load balancer. It must be unique within the set of load balancers
                            defined in the region. It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either internet-facing or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load balancer.
                          type: object
                      type: object
                    natGatewaysIPs:
                      description: NatGatewaysIPs contains the public IPs of the NAT Gateways
                      items:
                        type: string
                      type: array
                    secondaryAPIServerELB:
                      description: SecondaryAPIServerELB is the secondary Kubernetes api server load balancer.
                      properties:
                        arn:
                          description: |-
                            ARN of the load balancer. Unlike the ClassicLB, ARN is used mostly
                            to define and get it.
                          type: string
                        attributes:
                          description: ClassicElbAttributes defines extra attributes associated with the load balancer.
                          properties:
                            crossZoneLoadBalancing:
                              description: CrossZoneLoadBalancing enables the classic load balancer load balancing.
                              type: boolean
                            idleTimeout:
                              description: |-
                                IdleTimeout is time that the connection is allowed to be idle (no data
                                has been sent over the connection) before it is closed by the load balancer.
                              format: int64
                              type: integer
                          type: object
                        availabilityZones:
                          description: AvailabilityZones is an array of availability zones in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        dnsName:
                          description: DNSName is the dns name of the load balancer.
                          type: string
                        elbAttributes:
                          additionalProperties:
                            type: string
                          description: ELBAttributes defines extra attributes associated with v2 load balancers.
                          type: object
                        elbListeners:
                          description: ELBListeners is an array of listeners associated with the load balancer. There must be at least one.
                          items:
                            description: Listener defines an AWS network load balancer listener.
                            properties:
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ELBProtocol defines listener protocols for a load balancer.
                                type: string
                              targetGroup:
                                description: |-
                                  TargetGroupSpec specifies target group settings for a given listener.
                                  This is created first, and the ARN is then passed to the listener.
                                properties:
                                  name:
                                    description: Name of the TargetGroup. Must be unique over the same group of listeners.
                                    maxLength: 32
                                    type: string
                                  port:
                                    description: Port is the exposed port
                                    format: int64
                                    type: integer
                                  protocol:
                                    description: ELBProtocol defines listener protocols for a load balancer.
                                    enum:
                                      - tcp
                                      - tls
                                      - udp
                                      - TCP
                                      - TLS
                                      - UDP
                                    type: string
                                  targetGroupHealthCheck:
                                    description: HealthCheck is the elb health check associated with the load balancer.
                                    properties:
                                      intervalSeconds:
                                        format: int64
                                        type: integer
                                      path:
                                        type: string
                                      port:
                                        type: string
                                      protocol:
                                        type: string
                                      thresholdCount:
                                        format: int64
                                        type: integer
                                      timeoutSeconds:
                                        format: int64
                                        type: integer
                                      unhealthyThresholdCount:
                                        format: int64
                                        type: integer
                                    type: object
                                  vpcId:
                                    type: string
                                required:
                                  - name
                                  - port
                                  - protocol
                                  - vpcId
                                type: object
                            required:
                              - port
                              - protocol
                              - targetGroup
                            type: object
                          type: array
                        healthChecks:
                          description: HealthCheck is the classic elb health check associated with the load balancer.
                          properties:
                            healthyThreshold:
                              format: int64
                              type: integer
                            interval:
                              description: |-
                                A Duration represents the elapsed time between two instants
                                as an int64 nanosecond count. The representation limits the
                                largest representable duration to approximately 290 years.
                              format: int64
                              type: integer
                            target:
                              type: string
                            timeout:
                              description: |-
                                A Duration represents the elapsed time between two instants
                                as an int64 nanosecond count. The representation limits the
                                largest representable duration to approximately 290 years.
                              format: int64
                              type: integer
                            unhealthyThreshold:
                              format: int64
                              type: integer
                          required:
                            - healthyThreshold
                            - interval
                            - target
                            - timeout
                            - unhealthyThreshold
                          type: object
                        listeners:
                          description: ClassicELBListeners is an array of classic elb listeners associated with the load balancer. There must be at least one.
                          items:
                            description: ClassicELBListener defines an AWS classic load balancer listener.
                            properties:
                              instancePort:
                                format: int64
                                type: integer
                              instanceProtocol:
                                description: ELBProtocol defines listener protocols for a load balancer.
                                type: string
                              port:
                                format: int64
                                type: integer
                              protocol:
                                description: ELBProtocol defines listener protocols for a load balancer.
                                type: string
                            required:
                              - instancePort
                              - instanceProtocol
                              - port
                              - protocol
                            type: object
                          type: array
                        loadBalancerType:
                          description: LoadBalancerType sets the type for a load balancer. The default type is classic.
                          enum:
                            - classic
                            - elb
                            - alb
                            - nlb
                          type: string
                        name:
                          description: |-
                            The name of the load balancer. It must be unique within the set of load balancers
                            defined in the region. It also serves as identifier.
                          type: string
                        scheme:
                          description: Scheme is the load balancer scheme, either internet-facing or private.
                          type: string
                        securityGroupIds:
                          description: SecurityGroupIDs is an array of security groups assigned to the load balancer.
                          items:
                            type: string
                          type: array
                        subnetIds:
                          description: SubnetIDs is an array of subnets in the VPC attached to the load balancer.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a map of tags associated with the load balancer.
                          type: object
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: SecurityGroup defines an AWS security group.
                        properties:
                          id:
                            description: ID is a unique identifier.
                            type: string
                          ingressRule:
                            description: IngressRules is the inbound rules associated with the security group.
                            items:
                              description: IngressRule defines an AWS ingress rule for security groups.
                              properties:
                                cidrBlocks:
                                  description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                description:
                                  description: Description provides extended information about the ingress rule.
                                  type: string
                                fromPort:
                                  description: FromPort is the start of port range.
                                  format: int64
                                  type: integer
                                ipv6CidrBlocks:
                                  description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                  items:
                                    type: string
                                  type: array
                                natGatewaysIPsSource:
                                  description: NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
                                  type: boolean
                                protocol:
                                  description: Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
                                  enum:
                                    - "-1"
                                    - "4"
                                    - tcp
                                    - udp
                                    - icmp
                                    - "58"
                                    - "50"
                                  type: string
                                sourceSecurityGroupIds:
                                  description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                                  items:
                                    type: string
                                  type: array
                                sourceSecurityGroupRoles:
                                  description: |-
                                    The security group role to allow access from. Cannot be specified with CidrBlocks.
                                    The field will be combined with source security group IDs if specified.
                                  items:
                                    description: SecurityGroupRole defines the unique role of a security group.
                                    enum:
                                      - bastion
                                      - node
                                      - controlplane
                                      - apiserver-lb
                                      - lb
                                      - node-eks-additional
                                    type: string
                                  type: array
                                toPort:
                                  description: ToPort is the end of port range.
                                  format: int64
                                  type: integer
                              required:
                                - description
                                - fromPort
                                - protocol
                                - toPort
                              type: object
                            type: array
                          name:
                            description: Name is the security group name.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Tags is a map of tags associated with the security group.
                            type: object
                        required:
                          - id
                          - name
                        type: object
                      description: SecurityGroups is a map from the role/kind of the security group to its unique name, if any.
                      type: object
                  type: object
                ready:
                  default: false
                  type: boolean
              required:
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: awsclusterstaticidentities.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSClusterStaticIdentity
    listKind: AWSClusterStaticIdentityList
    plural: awsclusterstaticidentities
    shortNames:
      - awssi
    singular: awsclusterstaticidentity
  scope: Cluster
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            AWSClusterStaticIdentity is the Schema for the awsclusterstaticidentities API
            It represents a reference to an AWS access key ID and secret access key, stored in a secret.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterStaticIdentity
              properties:
                allowedNamespaces:
                  description: |-
                    AllowedNamespaces is used to identify which namespaces are allowed to use the identity from.
                    Namespaces can be selected either using an array of namespaces or with label selector.
                    An empty allowedNamespaces object indicates that AWSClusters can use this identity from any namespace.
                    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: |-
                        An empty selector indicates that AWSClusters cannot use this
                        AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                secretRef:
                  description: |-
                    Reference to a secret containing the credentials. The secret should
                    contain the following data keys:
                     AccessKeyID: AKIAIOSFODNN7EXAMPLE
                     SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
                     SessionToken: Optional
                  type: string
              required:
                - secretRef
              type: object
          type: object
      served: false
      storage: false
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: |-
            AWSClusterStaticIdentity is the Schema for the awsclusterstaticidentities API
            It represents a reference to an AWS access key ID and secret access key, stored in a secret.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: Spec for this AWSClusterStaticIdentity
              properties:
                allowedNamespaces:
                  description: |-
                    AllowedNamespaces is used to identify which namespaces are allowed to use the identity from.
                    Namespaces can be selected either using an array of namespaces or with label selector.
                    An empty allowedNamespaces object indicates that AWSClusters can use this identity from any namespace.
                    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: An nil or empty list indicates that AWSClusters cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: |-
                        An empty selector indicates that AWSClusters cannot use this
                        AWSClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                secretRef:
                  description: |-
                    Reference to a secret containing the credentials. The secret should
                    contain the following data keys:
                     AccessKeyID: AKIAIOSFODNN7EXAMPLE
                     SecretAccessKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
                     SessionToken: Optional
                  type: string
              required:
                - secretRef
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: awsclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSClusterTemplate
    listKind: AWSClusterTemplateList
    plural: awsclustertemplates
    shortNames:
      - awsct
    singular: awsclustertemplate
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Time duration since creation of AWSClusterTemplate
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSClusterTemplate is the schema for Amazon EC2 based Kubernetes Cluster Templates.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterTemplateSpec defines the desired state of AWSClusterTemplate.
              properties:
                template:
                  description: AWSClusterTemplateResource defines the desired state of AWSClusterTemplate.
                  properties:
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: AWSClusterSpec defines the desired state of an EC2-based Kubernetes cluster.
                      properties:
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: |-
                            AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the
                            ones added by default.
                          type: object
                        bastion:
                          description: Bastion contains options to configure the bastion host.
                          properties:
                            allowedCIDRBlocks:
                              description: |-
                                AllowedCIDRBlocks is a list of CIDR blocks allowed to access the bastion host.
                                They are set as ingress rules for the Bastion host's Security Group (defaults to 0.0.0.0/0).
                              items:
                                type: string
                              type: array
                            ami:
                              description: |-
                                AMI will use the specified AMI to boot the bastion. If not specified,
                                the AMI will default to one picked out in public space.
                              type: string
                            disableIngressRules:
                              description: |-
                                DisableIngressRules will ensure there are no Ingress rules in the bastion host's security group.
                                Requires AllowedCIDRBlocks to be empty.
                              type: boolean
                            enabled:
                              description: |-
                                Enabled allows this provider to create a bastion host instance
                                with a public ip to access the VPC private network.
                              type: boolean
                            instanceType:
                              description: |-
                                InstanceType will use the specified instance type for the bastion. If not specified,
                                Cluster API Provider AWS will use t3.micro for all regions except us-east-1, where t2.micro
                                will be the default.
                              type: string
                          type: object
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                          properties:
                            host:
                              description: host is the hostname on which the API server is serving.
                              maxLength: 512
                              type: string
                            port:
                              description: port is the port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                            - host
                            - port
                          type: object
                        controlPlaneLoadBalancer:
                          description: ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.
                          properties:
                            additionalSecurityGroups:
                              description: |-
                                AdditionalSecurityGroups sets the security groups used by the load balancer. Expected to be security group IDs
                                This is optional - if not provided new security groups will be created for the load balancer
                              items:
                                type: string
                              type: array
                            crossZoneLoadBalancing:
                              description: |-
                                CrossZoneLoadBalancing enables the classic ELB cross availability zone balancing.

                                With cross-zone load balancing, each load balancer node for your Classic Load Balancer
                                distributes requests evenly across the registered instances in all enabled Availability Zones.
                                If cross-zone load balancing is disabled, each load balancer node distributes requests evenly across
                                the registered instances in its Availability Zone only.

                                Defaults to false.
                              type: boolean
                            healthCheckProtocol:
                              description: |-
                                HealthCheckProtocol sets the protocol type for classic ELB health check target
                                default value is ClassicELBProtocolSSL
                              type: string
                            name:
                              description: |-
                                Name sets the name of the classic ELB load balancer. As per AWS, the name must be unique
                                within your set of load balancers for the region, must have a maximum of 32 characters, must
                                contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen. Once
                                set, the value cannot be changed.
                              maxLength: 32
                              pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                              type: string
                            scheme:
                              default: internet-facing
                              description: Scheme sets the scheme of the load balancer (defaults to internet-facing)
                              enum:
                                - internet-facing
                                - internal
                              type: string
                            subnets:
                              description: Subnets sets the subnets that should be applied to the control plane load balancer (defaults to discovered subnets for managed VPCs or an empty set for unmanaged VPCs)
                              items:
                                type: string
                              type: array
                          type: object
                        identityRef:
                          description: |-
                            IdentityRef is a reference to an identity to be used when reconciling the managed control plane.
                            If no identity is specified, the default identity for this controller will be used.
                          properties:
                            kind:
                              description: Kind of the identity.
                              enum:
                                - AWSClusterControllerIdentity
                                - AWSClusterRoleIdentity
                                - AWSClusterStaticIdentity
                              type: string
                            name:
                              description: Name of the identity.
                              minLength: 1
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        imageLookupBaseOS:
                          description: |-
                            ImageLookupBaseOS is the name of the base operating system used to look
                            up machine images when a machine does not specify an AMI. When set, this
                            will be used for all cluster machines unless a machine specifies a
                            different ImageLookupBaseOS.
                          type: string
                        imageLookupFormat:
                          description: |-
                            ImageLookupFormat is the AMI naming format to look up machine images when
                            a machine does not specify an AMI. When set, this will be used for all
                            cluster machines unless a machine specifies a different ImageLookupOrg.
                            Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base
                            OS and kubernetes version, respectively. The BaseOS will be the value in
                            ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                            defined by the packages produced by kubernetes/release without v as a
                            prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                            image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                            searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                            Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                            also: https://golang.org/pkg/text/template/
                          type: string
                        imageLookupOrg:
                          description: |-
                            ImageLookupOrg is the AWS Organization ID to look up machine images when a
                            machine does not specify an AMI. When set, this will be used for all
                            cluster machines unless a machine specifies a different ImageLookupOrg.
                          type: string
                        network:
                          description: NetworkSpec encapsulates all things related to AWS network.
                          properties:
                            cni:
                              description: CNI configuration
                              properties:
                                cniIngressRules:
                                  description: |-
                                    CNIIngressRules specify rules to apply to control plane and worker node security groups.
                                    The source for the rule will be set to control plane and worker security group IDs.
                                  items:
                                    description: CNIIngressRule defines an AWS ingress rule for CNI requirements.
                                    properties:
                                      description:
                                        type: string
                                      fromPort:
                                        format: int64
                                        type: integer
                                      protocol:
                                        description: SecurityGroupProtocol defines the protocol type for a security group rule.
                                        type: string
                                      toPort:
                                        format: int64
                                        type: integer
                                    required:
                                      - description
                                      - fromPort
                                      - protocol
                                      - toPort
                                    type: object
                                  type: array
                              type: object
                            securityGroupOverrides:
                              additionalProperties:
                                type: string
                              description: |-
                                SecurityGroupOverrides is an optional set of security groups to use for cluster instances
                                This is optional - if not provided new security groups will be created for the cluster
                              type: object
                            subnets:
                              description: Subnets configuration.
                              items:
                                description: SubnetSpec configures an AWS Subnet.
                                properties:
                                  availabilityZone:
                                    description: AvailabilityZone defines the availability zone to use for this subnet in the cluster's region.
                                    type: string
                                  cidrBlock:
                                    description: CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
                                    type: string
                                  id:
                                    description: ID defines a unique identifier to reference this resource.
                                    type: string
                                  ipv6CidrBlock:
                                    description: |-
                                      IPv6CidrBlock is the IPv6 CIDR block to be used when the provider creates a managed VPC.
                                      A subnet can have an IPv4 and an IPv6 address.
                                      IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
                                    type: string
                                  isIpv6:
                                    description: |-
                                      IsIPv6 defines the subnet as an IPv6 subnet. A subnet is IPv6 when it is associated with a VPC that has IPv6 enabled.
                                      IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
                                    type: boolean
                                  isPublic:
                                    description: IsPublic defines the subnet as a public subnet. A subnet is public when it is associated with a route table that has a route to an internet gateway.
                                    type: boolean
                                  natGatewayId:
                                    description: |-
                                      NatGatewayID is the NAT gateway id associated with the subnet.
                                      Ignored unless the subnet is managed by the provider, in which case this is set on the public subnet where the NAT gateway resides. It is then used to determine routes for private subnets in the same AZ as the public subnet.
                                    type: string
                                  routeTableId:
                                    description: RouteTableID is the routing table id associated with the subnet.
                                    type: string
                                  tags:
                                    additionalProperties:
                                      type: string
                                    description: Tags is a collection of tags describing the resource.
                                    type: object
                                type: object
                              type: array
                            vpc:
                              description: VPC configuration.
                              properties:
                                availabilityZoneSelection:
                                  default: Ordered
                                  description: |-
                                    AvailabilityZoneSelection specifies how AZs should be selected if there are more AZs
                                    in a region than specified by AvailabilityZoneUsageLimit. There are 2 selection schemes:
                                    Ordered - selects based on alphabetical order
                                    Random - selects AZs randomly in a region
                                    Defaults to Ordered
                                  enum:
                                    - Ordered
                                    - Random
                                  type: string
                                availabilityZoneUsageLimit:
                                  default: 3
                                  description: |-
                                    AvailabilityZoneUsageLimit specifies the maximum number of availability zones (AZ) that
                                    should be used in a region when automatically creating subnets. If a region has more
                                    than this number of AZs then this number of AZs will be picked randomly when creating
                                    default subnets. Defaults to 3
                                  minimum: 1
                                  type: integer
                                cidrBlock:
                                  description: |-
                                    CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
                                    Defaults to 10.0.0.0/16.
                                  type: string
                                id:
                                  description: ID is the vpc-id of the VPC this provider should use to create resources.
                                  type: string
                                internetGatewayId:
                                  description: InternetGatewayID is the id of the internet gateway associated with the VPC.
                                  type: string
                                ipv6:
                                  description: |-
                                    IPv6 contains ipv6 specific settings for the network. Supported only in managed clusters.
                                    This field cannot be set on AWSCluster object.
                                  properties:
                                    cidrBlock:
                                      description: CidrBlock is the CIDR block provided by Amazon when VPC has enabled IPv6.
                                      type: string
                                    egressOnlyInternetGatewayId:
                                      description: EgressOnlyInternetGatewayID is the id of the egress only internet gateway associated with an IPv6 enabled VPC.
                                      type: string
                                    poolId:
                                      description: PoolID is the IP pool which must be defined in case of BYO IP is defined.
                                      type: string
                                  type: object
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Tags is a collection of tags describing the resource.
                                  type: object
                              type: object
                          type: object
                        region:
                          description: The AWS Region the cluster lives in.
                          type: string
                        s3Bucket:
                          description: |-
                            S3Bucket contains options to configure a supporting S3 bucket for this
                            cluster - currently used for nodes requiring Ignition
                            (https://coreos.github.io/ignition/) for bootstrapping (requires
                            BootstrapFormatIgnition feature flag to be enabled).
                          properties:
                            controlPlaneIAMInstanceProfile:
                              description: |-
                                ControlPlaneIAMInstanceProfile is a name of the IAMInstanceProfile, which will be allowed
                                to read control-plane node bootstrap data from S3 Bucket.
                              type: string
                            name:
                              description: Name defines name of S3 Bucket to be created.
                              maxLength: 63
                              minLength: 3
                              pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                              type: string
                            nodesIAMInstanceProfiles:
                              description: |-
                                NodesIAMInstanceProfiles is a list of IAM instance profiles, which will be allowed to read
                                worker nodes bootstrap data from S3 Bucket.
                              items:
                                type: string
                              type: array
                          required:
                            - controlPlaneIAMInstanceProfile
                            - name
                            - nodesIAMInstanceProfiles
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach to the bastion host. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                          type: string
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: false
      storage: false
      subresources: {}
    - additionalPrinterColumns:
        - description: Time duration since creation of AWSClusterTemplate
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSClusterTemplate is the schema for Amazon EC2 based Kubernetes Cluster Templates.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSClusterTemplateSpec defines the desired state of AWSClusterTemplate.
              properties:
                template:
                  description: AWSClusterTemplateResource defines the desired state of AWSClusterTemplateResource.
                  properties:
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: AWSClusterSpec defines the desired state of an EC2-based Kubernetes cluster.
                      properties:
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: |-
                            AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the
                            ones added by default.
                          type: object
                        bastion:
                          description: Bastion contains options to configure the bastion host.
                          properties:
                            allowedCIDRBlocks:
                              description: |-
                                AllowedCIDRBlocks is a list of CIDR blocks allowed to access the bastion host.
                                They are set as ingress rules for the Bastion host's Security Group (defaults to 0.0.0.0/0).
                              items:
                                type: string
                              type: array
                            ami:
                              description: |-
                                AMI will use the specified AMI to boot the bastion. If not specified,
                                the AMI will default to one picked out in public space.
                              type: string
                            disableIngressRules:
                              description: |-
                                DisableIngressRules will ensure there are no Ingress rules in the bastion host's security group.
                                Requires AllowedCIDRBlocks to be empty.
                              type: boolean
                            enabled:
                              description: |-
                                Enabled allows this provider to create a bastion host instance
                                with a public ip to access the VPC private network.
                              type: boolean
                            instanceType:
                              description: |-
                                InstanceType will use the specified instance type for the bastion. If not specified,
                                Cluster API Provider AWS will use t3.micro for all regions except us-east-1, where t2.micro
                                will be the default.
                              type: string
                          type: object
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                          properties:
                            host:
                              description: host is the hostname on which the API server is serving.
                              maxLength: 512
                              type: string
                            port:
                              description: port is the port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                            - host
                            - port
                          type: object
                        controlPlaneLoadBalancer:
                          description: ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.
                          properties:
                            additionalListeners:
                              description: |-
                                AdditionalListeners sets the additional listeners for the control plane load balancer.
                                This is only applicable to Network Load Balancer (NLB) types for the time being.
                              items:
                                description: |-
                                  AdditionalListenerSpec defines the desired state of an
                                  additional listener on an AWS load balancer.
                                properties:
                                  healthCheck:
                                    description: HealthCheck sets the optional custom health check configuration to the API target group.
                                    properties:
                                      intervalSeconds:
                                        description: |-
                                          The approximate amount of time, in seconds, between health checks of an individual
                                          target.
                                        format: int64
                                        maximum: 300
                                        minimum: 5
                                        type: integer
                                      path:
                                        description: |-
                                          The destination for health checks on the targets when using the protocol HTTP or HTTPS,
                                          otherwise the path will be ignored.
                                        type: string
                                      port:
                                        description: |-
                                          The port the load balancer uses when performing health checks for additional target groups. When
                                          not specified this value will be set for the same of listener port.
                                        type: string
                                      protocol:
                                        description: |-
                                          The protocol to use to health check connect with the target. When not specified the Protocol
                                          will be the same of the listener.
                                        enum:
                                          - TCP
                                          - HTTP
                                          - HTTPS
                                        type: string
                                      thresholdCount:
                                        description: |-
                                          The number of consecutive health check successes required before considering
                                          a target healthy.
                                        format: int64
                                        maximum: 10
                                        minimum: 2
                                        type: integer
                                      timeoutSeconds:
                                        description: |-
                                          The amount of time, in seconds, during which no response from a target means
                                          a failed health check.
                                        format: int64
                                        maximum: 120
                                        minimum: 2
                                        type: integer
                                      unhealthyThresholdCount:
                                        description: |-
                                          The number of consecutive health check failures required before considering
                                          a target unhealthy.
                                        format: int64
                                        maximum: 10
                                        minimum: 2
                                        type: integer
                                    type: object
                                  port:
                                    description: Port sets the port for the additional listener.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: |-
                                      Protocol sets the protocol for the additional listener.
                                      Currently only TCP is supported.
                                    enum:
                                      - TCP
                                    type: string
                                required:
                                  - port
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - port
                              x-kubernetes-list-type: map
                            additionalSecurityGroups:
                              description: |-
                                AdditionalSecurityGroups sets the security groups used by the load balancer. Expected to be security group IDs
                                This is optional - if not provided new security groups will be created for the load balancer
                              items:
                                type: string
                              type: array
                            crossZoneLoadBalancing:
                              description: |-
                                CrossZoneLoadBalancing enables the classic ELB cross availability zone balancing.

                                With cross-zone load balancing, each load balancer node for your Classic Load Balancer
                                distributes requests evenly across the registered instances in all enabled Availability Zones.
                                If cross-zone load balancing is disabled, each load balancer node distributes requests evenly across
                                the registered instances in its Availability Zone only.

                                Defaults to false.
                              type: boolean
                            disableHostsRewrite:
                              description: |-
                                DisableHostsRewrite disabled the hair pinning issue solution that adds the NLB's address as 127.0.0.1 to the hosts
                                file of each instance. This is by default, false.
                              type: boolean
                            healthCheck:
                              description: HealthCheck sets custom health check configuration to the API target group.
                              properties:
                                intervalSeconds:
                                  description: |-
                                    The approximate amount of time, in seconds, between health checks of an individual
                                    target.
                                  format: int64
                                  maximum: 300
                                  minimum: 5
                                  type: integer
                                thresholdCount:
                                  description: |-
                                    The number of consecutive health check successes required before considering
                                    a target healthy.
                                  format: int64
                                  maximum: 10
                                  minimum: 2
                                  type: integer
                                timeoutSeconds:
                                  description: |-
                                    The amount of time, in seconds, during which no response from a target means
                                    a failed health check.
                                  format: int64
                                  maximum: 120
                                  minimum: 2
                                  type: integer
                                unhealthyThresholdCount:
                                  description: |-
                                    The number of consecutive health check failures required before considering
                                    a target unhealthy.
                                  format: int64
                                  maximum: 10
                                  minimum: 2
                                  type: integer
                              type: object
                            healthCheckProtocol:
                              description: |-
                                HealthCheckProtocol sets the protocol type for ELB health check target
                                default value is ELBProtocolSSL
                              enum:
                                - TCP
                                - SSL
                                - HTTP
                                - HTTPS
                                - TLS
                                - UDP
                              type: string
                            ingressRules:
                              description: IngressRules sets the ingress rules for the control plane load balancer.
                              items:
                                description: IngressRule defines an AWS ingress rule for security groups.
                                properties:
                                  cidrBlocks:
                                    description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                    items:
                                      type: string
                                    type: array
                                  description:
                                    description: Description provides extended information about the ingress rule.
                                    type: string
                                  fromPort:
                                    description: FromPort is the start of port range.
                                    format: int64
                                    type: integer
                                  ipv6CidrBlocks:
                                    description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                    items:
                                      type: string
                                    type: array
                                  natGatewaysIPsSource:
                                    description: NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
                                    type: boolean
                                  protocol:
                                    description: Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
                                    enum:
                                      - "-1"
                                      - "4"
                                      - tcp
                                      - udp
                                      - icmp
                                      - "58"
                                      - "50"
                                    type: string
                                  sourceSecurityGroupIds:
                                    description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                                    items:
                                      type: string
                                    type: array
                                  sourceSecurityGroupRoles:
                                    description: |-
                                      The security group role to allow access from. Cannot be specified with CidrBlocks.
                                      The field will be combined with source security group IDs if specified.
                                    items:
                                      description: SecurityGroupRole defines the unique role of a security group.
                                      enum:
                                        - bastion
                                        - node
                                        - controlplane
                                        - apiserver-lb
                                        - lb
                                        - node-eks-additional
                                      type: string
                                    type: array
                                  toPort:
                                    description: ToPort is the end of port range.
                                    format: int64
                                    type: integer
                                required:
                                  - description
                                  - fromPort
                                  - protocol
                                  - toPort
                                type: object
                              type: array
                            loadBalancerType:
                              default: classic
                              description: LoadBalancerType sets the type for a load balancer. The default type is classic.
                              enum:
                                - classic
                                - elb
                                - alb
                                - nlb
                                - disabled
                              type: string
                            name:
                              description: |-
                                Name sets the name of the classic ELB load balancer. As per AWS, the name must be unique
                                within your set of load balancers for the region, must have a maximum of 32 characters, must
                                contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen. Once
                                set, the value cannot be changed.
                              maxLength: 32
                              pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                              type: string
                            preserveClientIP:
                              description: |-
                                PreserveClientIP lets the user control if preservation of client ips must be retained or not.
                                If this is enabled 6443 will be opened to 0.0.0.0/0.
                              type: boolean
                            scheme:
                              default: internet-facing
                              description: Scheme sets the scheme of the load balancer (defaults to internet-facing)
                              enum:
                                - internet-facing
                                - internal
                              type: string
                            subnets:
                              description: Subnets sets the subnets that should be applied to the control plane load balancer (defaults to discovered subnets for managed VPCs or an empty set for unmanaged VPCs)
                              items:
                                type: string
                              type: array
                          type: object
                        identityRef:
                          description: |-
                            IdentityRef is a reference to an identity to be used when reconciling the managed control plane.
                            If no identity is specified, the default identity for this controller will be used.
                          properties:
                            kind:
                              description: Kind of the identity.
                              enum:
                                - AWSClusterControllerIdentity
                                - AWSClusterRoleIdentity
                                - AWSClusterStaticIdentity
                              type: string
                            name:
                              description: Name of the identity.
                              minLength: 1
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                        imageLookupBaseOS:
                          description: |-
                            ImageLookupBaseOS is the name of the base operating system used to look
                            up machine images when a machine does not specify an AMI. When set, this
                            will be used for all cluster machines unless a machine specifies a
                            different ImageLookupBaseOS.
                          type: string
                        imageLookupFormat:
                          description: |-
                            ImageLookupFormat is the AMI naming format to look up machine images when
                            a machine does not specify an AMI. When set, this will be used for all
                            cluster machines unless a machine specifies a different ImageLookupOrg.
                            Supports substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base
                            OS and kubernetes version, respectively. The BaseOS will be the value in
                            ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                            defined by the packages produced by kubernetes/release without v as a
                            prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                            image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                            searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                            Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                            also: https://golang.org/pkg/text/template/
                          type: string
                        imageLookupOrg:
                          description: |-
                            ImageLookupOrg is the AWS Organization ID to look up machine images when a
                            machine does not specify an AMI. When set, this will be used for all
                            cluster machines unless a machine specifies a different ImageLookupOrg.
                          type: string
                        network:
                          description: NetworkSpec encapsulates all things related to AWS network.
                          properties:
                            additionalControlPlaneIngressRules:
                              description: AdditionalControlPlaneIngressRules is an optional set of ingress rules to add to the control plane
                              items:
                                description: IngressRule defines an AWS ingress rule for security groups.
                                properties:
                                  cidrBlocks:
                                    description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                    items:
                                      type: string
                                    type: array
                                  description:
                                    description: Description provides extended information about the ingress rule.
                                    type: string
                                  fromPort:
                                    description: FromPort is the start of port range.
                                    format: int64
                                    type: integer
                                  ipv6CidrBlocks:
                                    description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                    items:
                                      type: string
                                    type: array
                                  natGatewaysIPsSource:
                                    description: NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
                                    type: boolean
                                  protocol:
                                    description: Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
                                    enum:
                                      - "-1"
                                      - "4"
                                      - tcp
                                      - udp
                                      - icmp
                                      - "58"
                                      - "50"
                                    type: string
                                  sourceSecurityGroupIds:
                                    description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                                    items:
                                      type: string
                                    type: array
                                  sourceSecurityGroupRoles:
                                    description: |-
                                      The security group role to allow access from. Cannot be specified with CidrBlocks.
                                      The field will be combined with source security group IDs if specified.
                                    items:
                                      description: SecurityGroupRole defines the unique role of a security group.
                                      enum:
                                        - bastion
                                        - node
                                        - controlplane
                                        - apiserver-lb
                                        - lb
                                        - node-eks-additional
                                      type: string
                                    type: array
                                  toPort:
                                    description: ToPort is the end of port range.
                                    format: int64
                                    type: integer
                                required:
                                  - description
                                  - fromPort
                                  - protocol
                                  - toPort
                                type: object
                              type: array
                            additionalNodeIngressRules:
                              description: AdditionalNodeIngressRules is an optional set of ingress rules to add to every node
                              items:
                                description: IngressRule defines an AWS ingress rule for security groups.
                                properties:
                                  cidrBlocks:
                                    description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                    items:
                                      type: string
                                    type: array
                                  description:
                                    description: Description provides extended information about the ingress rule.
                                    type: string
                                  fromPort:
                                    description: FromPort is the start of port range.
                                    format: int64
                                    type: integer
                                  ipv6CidrBlocks:
                                    description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                    items:
                                      type: string
                                    type: array
                                  natGatewaysIPsSource:
                                    description: NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
                                    type: boolean
                                  protocol:
                                    description: Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
                                    enum:
                                      - "-1"
                                      - "4"
                                      - tcp
                                      - udp
                                      - icmp
                                      - "58"
                                      - "50"
                                    type: string
                                  sourceSecurityGroupIds:
                                    description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                                    items:
                                      type: string
                                    type: array
                                  sourceSecurityGroupRoles:
                                    description: |-
                                      The security group role to allow access from. Cannot be specified with CidrBlocks.
                                      The field will be combined with source security group IDs if specified.
                                    items:
                                      description: SecurityGroupRole defines the unique role of a security group.
                                      enum:
                                        - bastion
                                        - node
                                        - controlplane
                                        - apiserver-lb
                                        - lb
                                        - node-eks-additional
                                      type: string
                                    type: array
                                  toPort:
                                    description: ToPort is the end of port range.
                                    format: int64
                                    type: integer
                                required:
                                  - description
                                  - fromPort
                                  - protocol
                                  - toPort
                                type: object
                              type: array
                            cni:
                              description: CNI configuration
                              properties:
                                cniIngressRules:
                                  description: |-
                                    CNIIngressRules specify rules to apply to control plane and worker node security groups.
                                    The source for the rule will be set to control plane and worker security group IDs.
                                  items:
                                    description: CNIIngressRule defines an AWS ingress rule for CNI requirements.
                                    properties:
                                      description:
                                        type: string
                                      fromPort:
                                        format: int64
                                        type: integer
                                      protocol:
                                        description: SecurityGroupProtocol defines the protocol type for a security group rule.
                                        type: string
                                      toPort:
                                        format: int64
                                        type: integer
                                    required:
                                      - description
                                      - fromPort
                                      - protocol
                                      - toPort
                                    type: object
                                  type: array
                              type: object
                            nodePortIngressRuleCidrBlocks:
                              description: |-
                                NodePortIngressRuleCidrBlocks is an optional set of CIDR blocks to allow traffic to nodes' NodePort services.
                                If none are specified here, all IPs are allowed to connect.
                              items:
                                type: string
                              type: array
                            securityGroupOverrides:
                              additionalProperties:
                                type: string
                              description: |-
                                SecurityGroupOverrides is an optional set of security groups to use for cluster instances
                                This is optional - if not provided new security groups will be created for the cluster
                              type: object
                            subnets:
                              description: Subnets configuration.
                              items:
                                description: SubnetSpec configures an AWS Subnet.
                                properties:
                                  availabilityZone:
                                    description: AvailabilityZone defines the availability zone to use for this subnet in the cluster's region.
                                    type: string
                                  cidrBlock:
                                    description: CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
                                    type: string
                                  id:
                                    description: |-
                                      ID defines a unique identifier to reference this resource.
                                      If you're bringing your subnet, set the AWS subnet-id here, it must start with `subnet-`.

                                      When the VPC is managed by CAPA, and you'd like the provider to create a subnet for you,
                                      the id can be set to any placeholder value that does not start with `subnet-`;
                                      upon creation, the subnet AWS identifier will be populated in the `ResourceID` field and
                                      the `id` field is going to be used as the subnet name. If you specify a tag
                                      called `Name`, it takes precedence.
                                    type: string
                                  ipv6CidrBlock:
                                    description: |-
                                      IPv6CidrBlock is the IPv6 CIDR block to be used when the provider creates a managed VPC.
                                      A subnet can have an IPv4 and an IPv6 address.
                                      IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
                                    type: string
                                  isIpv6:
                                    description: |-
                                      IsIPv6 defines the subnet as an IPv6 subnet. A subnet is IPv6 when it is associated with a VPC that has IPv6 enabled.
                                      IPv6 is only supported in managed clusters, this field cannot be set on AWSCluster object.
                                    type: boolean
                                  isPublic:
                                    description: IsPublic defines the subnet as a public subnet. A subnet is public when it is associated with a route table that has a route to an internet gateway.
                                    type: boolean
                                  natGatewayId:
                                    description: |-
                                      NatGatewayID is the NAT gateway id associated with the subnet.
                                      Ignored unless the subnet is managed by the provider, in which case this is set on the public subnet where the NAT gateway resides. It is then used to determine routes for private subnets in the same AZ as the public subnet.
                                    type: string
                                  parentZoneName:
                                    description: |-
                                      ParentZoneName is the zone name where the current subnet's zone is tied when
                                      the zone is a Local Zone.

                                      The subnets in Local Zone or Wavelength Zone locations consume the ParentZoneName
                                      to select the correct private route table to egress traffic to the internet.
                                    type: string
                                  resourceID:
                                    description: |-
                                      ResourceID is the subnet identifier from AWS, READ ONLY.
                                      This field is populated when the provider manages the subnet.
                                    type: string
                                  routeTableId:
                                    description: RouteTableID is the routing table id associated with the subnet.
                                    type: string
                                  tags:
                                    additionalProperties:
                                      type: string
                                    description: Tags is a collection of tags describing the resource.
                                    type: object
                                  zoneType:
                                    description: |-
                                      ZoneType defines the type of the zone where the subnet is created.

                                      The valid values are availability-zone, local-zone, and wavelength-zone.

                                      Subnet with zone type availability-zone (regular) is always selected to create cluster
                                      resources, like Load Balancers, NAT Gateways, Contol Plane nodes, etc.

                                      Subnet with zone type local-zone or wavelength-zone is not eligible to automatically create
                                      regular cluster resources.

                                      The public subnet in availability-zone or local-zone is associated with regular public
                                      route table with default route entry to a Internet Gateway.

                                      The public subnet in wavelength-zone is associated with a carrier public
                                      route table with default route entry to a Carrier Gateway.

                                      The private subnet in the availability-zone is associated with a private route table with
                                      the default route entry to a NAT Gateway created in that zone.

                                      The private subnet in the local-zone or wavelength-zone is associated with a private route table with
                                      the default route entry re-using the NAT Gateway in the Region (preferred from the
                                      parent zone, the zone type availability-zone in the region, or first table available).
                                    enum:
                                      - availability-zone
                                      - local-zone
                                      - wavelength-zone
                                    type: string
                                required:
                                  - id
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - id
                              x-kubernetes-list-type: map
                            vpc:
                              description: VPC configuration.
                              properties:
                                availabilityZoneSelection:
                                  default: Ordered
                                  description: |-
                                    AvailabilityZoneSelection specifies how AZs should be selected if there are more AZs
                                    in a region than specified by AvailabilityZoneUsageLimit. There are 2 selection schemes:
                                    Ordered - selects based on alphabetical order
                                    Random - selects AZs randomly in a region
                                    Defaults to Ordered
                                  enum:
                                    - Ordered
                                    - Random
                                  type: string
                                availabilityZoneUsageLimit:
                                  default: 3
                                  description: |-
                                    AvailabilityZoneUsageLimit specifies the maximum number of availability zones (AZ) that
                                    should be used in a region when automatically creating subnets. If a region has more
                                    than this number of AZs then this number of AZs will be picked randomly when creating
                                    default subnets. Defaults to 3
                                  minimum: 1
                                  type: integer
                                carrierGatewayId:
                                  description: |-
                                    CarrierGatewayID is the id of the internet gateway associated with the VPC,
                                    for carrier network (Wavelength Zones).
                                  type: string
                                  x-kubernetes-validations:
                                    - message: Carrier Gateway ID must start with 'cagw-'
                                      rule: self.startsWith('cagw-')
                                cidrBlock:
                                  description: |-
                                    CidrBlock is the CIDR block to be used when the provider creates a managed VPC.
                                    Defaults to 10.0.0.0/16.
                                    Mutually exclusive with IPAMPool.
                                  type: string
                                elasticIpPool:
                                  description: |-
                                    ElasticIPPool contains specific configuration to allocate Public IPv4 address (Elastic IP) from user-defined pool
                                    brought to AWS for core infrastructure resources, like NAT Gateways and Public Network Load Balancers for
                                    the API Server.
                                  properties:
                                    publicIpv4Pool:
                                      description: |-
                                        PublicIpv4Pool sets a custom Public IPv4 Pool used to create Elastic IP address for resources
                                        created in public IPv4 subnets. Every IPv4 address, Elastic IP, will be allocated from the custom
                                        Public IPv4 pool that you brought to AWS, instead of Amazon-provided pool. The public IPv4 pool
                                        resource ID starts with 'ipv4pool-ec2'.
                                      maxLength: 30
                                      type: string
                                    publicIpv4PoolFallbackOrder:
                                      description: |-
                                        PublicIpv4PoolFallBackOrder defines the fallback action when the Public IPv4 Pool has been exhausted,
                                        no more IPv4 address available in the pool.

                                        When set to 'amazon-pool', the controller check if the pool has available IPv4 address, when pool has reached the
                                        IPv4 limit, the address will be claimed from Amazon-pool (default).

                                        When set to 'none', the controller will fail the Elastic IP allocation when the publicIpv4Pool is exhausted.
                                      enum:
                                        - amazon-pool
                                        - none
                                      type: string
                                      x-kubernetes-validations:
                                        - message: allowed values are 'none' and 'amazon-pool'
                                          rule: self in ['none','amazon-pool']
                                  type: object
                                emptyRoutesDefaultVPCSecurityGroup:
                                  description: |-
                                    EmptyRoutesDefaultVPCSecurityGroup specifies whether the default VPC security group ingress
                                    and egress rules should be removed.

                                    By default, when creating a VPC, AWS creates a security group called `default` with ingress and egress
                                    rules that allow traffic from anywhere. The group could be used as a potential surface attack and
                                    it's generally suggested that the group rules are removed or modified appropriately.

                                    NOTE: This only applies when the VPC is managed by the Cluster API AWS controller.
                                  type: boolean
                                id:
                                  description: ID is the vpc-id of the VPC this provider should use to create resources.
                                  type: string
                                internetGatewayId:
                                  description: InternetGatewayID is the id of the internet gateway associated with the VPC.
                                  type: string
                                ipamPool:
                                  description: |-
                                    IPAMPool defines the IPAMv4 pool to be used for VPC.
                                    Mutually exclusive with CidrBlock.
                                  properties:
                                    id:
                                      description: ID is the ID of the IPAM pool this provider should use to create VPC.
                                      type: string
                                    name:
                                      description: Name is the name of the IPAM pool this provider should use to create VPC.
                                      type: string
                                    netmaskLength:
                                      description: |-
                                        The netmask length of the IPv4 CIDR you want to allocate to VPC from
                                        an Amazon VPC IP Address Manager (IPAM) pool.
                                        Defaults to /16 for IPv4 if not specified.
                                      format: int64
                                      type: integer
                                  type: object
                                ipv6:
                                  description: |-
                                    IPv6 contains ipv6 specific settings for the network. Supported only in managed clusters.
                                    This field cannot be set on AWSCluster object.
                                  properties:
                                    cidrBlock:
                                      description: |-
                                        CidrBlock is the CIDR block provided by Amazon when VPC has enabled IPv6.
                                        Mutually exclusive with IPAMPool.
                                      type: string
                                    egressOnlyInternetGatewayId:
                                      description: EgressOnlyInternetGatewayID is the id of the egress only internet gateway associated with an IPv6 enabled VPC.
                                      type: string
                                    ipamPool:
                                      description: |-
                                        IPAMPool defines the IPAMv6 pool to be used for VPC.
                                        Mutually exclusive with CidrBlock.
                                      properties:
                                        id:
                                          description: ID is the ID of the IPAM pool this provider should use to create VPC.
                                          type: string
                                        name:
                                          description: Name is the name of the IPAM pool this provider should use to create VPC.
                                          type: string
                                        netmaskLength:
                                          description: |-
                                            The netmask length of the IPv4 CIDR you want to allocate to VPC from
                                            an Amazon VPC IP Address Manager (IPAM) pool.
                                            Defaults to /16 for IPv4 if not specified.
                                          format: int64
                                          type: integer
                                      type: object
                                    poolId:
                                      description: |-
                                        PoolID is the IP pool which must be defined in case of BYO IP is defined.
                                        Must be specified if CidrBlock is set.
                                        Mutually exclusive with IPAMPool.
                                      type: string
                                  type: object
                                privateDnsHostnameTypeOnLaunch:
                                  description: |-
                                    PrivateDNSHostnameTypeOnLaunch is the type of hostname to assign to instances in the subnet at launch.
                                    For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name)
                                    or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).
                                  enum:
                                    - ip-name
                                    - resource-name
                                  type: string
                                secondaryCidrBlocks:
                                  description: |-
                                    SecondaryCidrBlocks are additional CIDR blocks to be associated when the provider creates a managed VPC.
                                    Defaults to none. Mutually exclusive with IPAMPool. This makes sense to use if, for example, you want to use
                                    a separate IP range for pods (e.g. Cilium ENI mode).
                                  items:
                                    description: VpcCidrBlock defines the CIDR block and settings to associate with the managed VPC. Currently, only IPv4 is supported.
                                    properties:
                                      ipv4CidrBlock:
                                        description: IPv4CidrBlock is the IPv4 CIDR block to associate with the managed VPC.
                                        minLength: 1
                                        type: string
                                    required:
                                      - ipv4CidrBlock
                                    type: object
                                  type: array
                                subnetSchema:
                                  default: PreferPrivate
                                  description: |-
                                    SubnetSchema specifies how CidrBlock should be divided on subnets in the VPC depending on the number of AZs.
                                    PreferPrivate - one private subnet for each AZ plus one other subnet that will be further sub-divided for the public subnets.
                                    PreferPublic - have the reverse logic of PreferPrivate, one public subnet for each AZ plus one other subnet
                                    that will be further sub-divided for the private subnets.
                                    Defaults to PreferPrivate
                                  enum:
                                    - PreferPrivate
                                    - PreferPublic
                                  type: string
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Tags is a collection of tags describing the resource.
                                  type: object
                              type: object
                          type: object
                        partition:
                          description: Partition is the AWS security partition being used. Defaults to "aws"
                          type: string
                        region:
                          description: The AWS Region the cluster lives in.
                          type: string
                        s3Bucket:
                          description: |-
                            S3Bucket contains options to configure a supporting S3 bucket for this
                            cluster - currently used for nodes requiring Ignition
                            (https://coreos.github.io/ignition/) for bootstrapping (requires
                            BootstrapFormatIgnition feature flag to be enabled).
                          properties:
                            bestEffortDeleteObjects:
                              description: BestEffortDeleteObjects defines whether access/permission errors during object deletion should be ignored.
                              type: boolean
                            controlPlaneIAMInstanceProfile:
                              description: |-
                                ControlPlaneIAMInstanceProfile is a name of the IAMInstanceProfile, which will be allowed
                                to read control-plane node bootstrap data from S3 Bucket.
                              type: string
                            name:
                              description: Name defines name of S3 Bucket to be created.
                              maxLength: 63
                              minLength: 3
                              pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                              type: string
                            nodesIAMInstanceProfiles:
                              description: |-
                                NodesIAMInstanceProfiles is a list of IAM instance profiles, which will be allowed to read
                                worker nodes bootstrap data from S3 Bucket.
                              items:
                                type: string
                              type: array
                            presignedURLDuration:
                              description: |-
                                PresignedURLDuration defines the duration for which presigned URLs are valid.

                                This is used to generate presigned URLs for S3 Bucket objects, which are used by
                                control-plane and worker nodes to fetch bootstrap data.

                                When enabled, the IAM instance profiles specified are not used.
                              type: string
                          required:
                            - name
                          type: object
                        secondaryControlPlaneLoadBalancer:
                          description: |-
                            SecondaryControlPlaneLoadBalancer is an additional load balancer that can be used for the control plane.

                            An example use case is to have a separate internal load balancer for internal traffic,
                            and a separate external load balancer for external traffic.
                          properties:
                            additionalListeners:
                              description: |-
                                AdditionalListeners sets the additional listeners for the control plane load balancer.
                                This is only applicable to Network Load Balancer (NLB) types for the time being.
                              items:
                                description: |-
                                  AdditionalListenerSpec defines the desired state of an
                                  additional listener on an AWS load balancer.
                                properties:
                                  healthCheck:
                                    description: HealthCheck sets the optional custom health check configuration to the API target group.
                                    properties:
                                      intervalSeconds:
                                        description: |-
                                          The approximate amount of time, in seconds, between health checks of an individual
                                          target.
                                        format: int64
                                        maximum: 300
                                        minimum: 5
                                        type: integer
                                      path:
                                        description: |-
                                          The destination for health checks on the targets when using the protocol HTTP or HTTPS,
                                          otherwise the path will be ignored.
                                        type: string
                                      port:
                                        description: |-
                                          The port the load balancer uses when performing health checks for additional target groups. When
                                          not specified this value will be set for the same of listener port.
                                        type: string
                                      protocol:
                                        description: |-
                                          The protocol to use to health check connect with the target. When not specified the Protocol
                                          will be the same of the listener.
                                        enum:
                                          - TCP
                                          - HTTP
                                          - HTTPS
                                        type: string
                                      thresholdCount:
                                        description: |-
                                          The number of consecutive health check successes required before considering
                                          a target healthy.
                                        format: int64
                                        maximum: 10
                                        minimum: 2
                                        type: integer
                                      timeoutSeconds:
                                        description: |-
                                          The amount of time, in seconds, during which no response from a target means
                                          a failed health check.
                                        format: int64
                                        maximum: 120
                                        minimum: 2
                                        type: integer
                                      unhealthyThresholdCount:
                                        description: |-
                                          The number of consecutive health check failures required before considering
                                          a target unhealthy.
                                        format: int64
                                        maximum: 10
                                        minimum: 2
                                        type: integer
                                    type: object
                                  port:
                                    description: Port sets the port for the additional listener.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  protocol:
                                    default: TCP
                                    description: |-
                                      Protocol sets the protocol for the additional listener.
                                      Currently only TCP is supported.
                                    enum:
                                      - TCP
                                    type: string
                                required:
                                  - port
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - port
                              x-kubernetes-list-type: map
                            additionalSecurityGroups:
                              description: |-
                                AdditionalSecurityGroups sets the security groups used by the load balancer. Expected to be security group IDs
                                This is optional - if not provided new security groups will be created for the load balancer
                              items:
                                type: string
                              type: array
                            crossZoneLoadBalancing:
                              description: |-
                                CrossZoneLoadBalancing enables the classic ELB cross availability zone balancing.

                                With cross-zone load balancing, each load balancer node for your Classic Load Balancer
                                distributes requests evenly across the registered instances in all enabled Availability Zones.
                                If cross-zone load balancing is disabled, each load balancer node distributes requests evenly across
                                the registered instances in its Availability Zone only.

                                Defaults to false.
                              type: boolean
                            disableHostsRewrite:
                              description: |-
                                DisableHostsRewrite disabled the hair pinning issue solution that adds the NLB's address as 127.0.0.1 to the hosts
                                file of each instance. This is by default, false.
                              type: boolean
                            healthCheck:
                              description: HealthCheck sets custom health check configuration to the API target group.
                              properties:
                                intervalSeconds:
                                  description: |-
                                    The approximate amount of time, in seconds, between health checks of an individual
                                    target.
                                  format: int64
                                  maximum: 300
                                  minimum: 5
                                  type: integer
                                thresholdCount:
                                  description: |-
                                    The number of consecutive health check successes required before considering
                                    a target healthy.
                                  format: int64
                                  maximum: 10
                                  minimum: 2
                                  type: integer
                                timeoutSeconds:
                                  description: |-
                                    The amount of time, in seconds, during which no response from a target means
                                    a failed health check.
                                  format: int64
                                  maximum: 120
                                  minimum: 2
                                  type: integer
                                unhealthyThresholdCount:
                                  description: |-
                                    The number of consecutive health check failures required before considering
                                    a target unhealthy.
                                  format: int64
                                  maximum: 10
                                  minimum: 2
                                  type: integer
                              type: object
                            healthCheckProtocol:
                              description: |-
                                HealthCheckProtocol sets the protocol type for ELB health check target
                                default value is ELBProtocolSSL
                              enum:
                                - TCP
                                - SSL
                                - HTTP
                                - HTTPS
                                - TLS
                                - UDP
                              type: string
                            ingressRules:
                              description: IngressRules sets the ingress rules for the control plane load balancer.
                              items:
                                description: IngressRule defines an AWS ingress rule for security groups.
                                properties:
                                  cidrBlocks:
                                    description: List of CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                    items:
                                      type: string
                                    type: array
                                  description:
                                    description: Description provides extended information about the ingress rule.
                                    type: string
                                  fromPort:
                                    description: FromPort is the start of port range.
                                    format: int64
                                    type: integer
                                  ipv6CidrBlocks:
                                    description: List of IPv6 CIDR blocks to allow access from. Cannot be specified with SourceSecurityGroupID.
                                    items:
                                      type: string
                                    type: array
                                  natGatewaysIPsSource:
                                    description: NatGatewaysIPsSource use the NAT gateways IPs as the source for the ingress rule.
                                    type: boolean
                                  protocol:
                                    description: Protocol is the protocol for the ingress rule. Accepted values are "-1" (all), "4" (IP in IP),"tcp", "udp", "icmp", and "58" (ICMPv6), "50" (ESP).
                                    enum:
                                      - "-1"
                                      - "4"
                                      - tcp
                                      - udp
                                      - icmp
                                      - "58"
                                      - "50"
                                    type: string
                                  sourceSecurityGroupIds:
                                    description: The security group id to allow access from. Cannot be specified with CidrBlocks.
                                    items:
                                      type: string
                                    type: array
                                  sourceSecurityGroupRoles:
                                    description: |-
                                      The security group role to allow access from. Cannot be specified with CidrBlocks.
                                      The field will be combined with source security group IDs if specified.
                                    items:
                                      description: SecurityGroupRole defines the unique role of a security group.
                                      enum:
                                        - bastion
                                        - node
                                        - controlplane
                                        - apiserver-lb
                                        - lb
                                        - node-eks-additional
                                      type: string
                                    type: array
                                  toPort:
                                    description: ToPort is the end of port range.
                                    format: int64
                                    type: integer
                                required:
                                  - description
                                  - fromPort
                                  - protocol
                                  - toPort
                                type: object
                              type: array
                            loadBalancerType:
                              default: classic
                              description: LoadBalancerType sets the type for a load balancer. The default type is classic.
                              enum:
                                - classic
                                - elb
                                - alb
                                - nlb
                                - disabled
                              type: string
                            name:
                              description: |-
                                Name sets the name of the classic ELB load balancer. As per AWS, the name must be unique
                                within your set of load balancers for the region, must have a maximum of 32 characters, must
                                contain only alphanumeric characters or hyphens, and cannot begin or end with a hyphen. Once
                                set, the value cannot be changed.
                              maxLength: 32
                              pattern: ^[A-Za-z0-9]([A-Za-z0-9]{0,31}|[-A-Za-z0-9]{0,30}[A-Za-z0-9])$
                              type: string
                            preserveClientIP:
                              description: |-
                                PreserveClientIP lets the user control if preservation of client ips must be retained or not.
                                If this is enabled 6443 will be opened to 0.0.0.0/0.
                              type: boolean
                            scheme:
                              default: internet-facing
                              description: Scheme sets the scheme of the load balancer (defaults to internet-facing)
                              enum:
                                - internet-facing
                                - internal
                              type: string
                            subnets:
                              description: Subnets sets the subnets that should be applied to the control plane load balancer (defaults to discovered subnets for managed VPCs or an empty set for unmanaged VPCs)
                              items:
                                type: string
                              type: array
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach to the bastion host. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                          type: string
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: awsmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSMachinePool
    listKind: AWSMachinePoolList
    plural: awsmachinepools
    shortNames:
      - awsmp
    singular: awsmachinepool
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Machine ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: Machine ready status
          jsonPath: .status.replicas
          name: Replicas
          type: integer
        - description: Minimum instanes in ASG
          jsonPath: .spec.minSize
          name: MinSize
          type: integer
        - description: Maximum instanes in ASG
          jsonPath: .spec.maxSize
          name: MaxSize
          type: integer
        - description: Launch Template ID
          jsonPath: .status.launchTemplateID
          name: LaunchTemplate ID
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSMachinePool is the Schema for the awsmachinepools API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachinePoolSpec defines the desired state of AWSMachinePool.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: |-
                    AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                    AWS provider.
                  type: object
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones instances can run in
                  items:
                    type: string
                  type: array
                awsLaunchTemplate:
                  description: AWSLaunchTemplate specifies the launch template and version to use when an instance is launched.
                  properties:
                    additionalSecurityGroups:
                      description: |-
                        AdditionalSecurityGroups is an array of references to security groups that should be applied to the
                        instances. These security groups would be set in addition to any security groups defined
                        at the cluster level or in the actuator.
                      items:
                        description: |-
                          AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                          Only one of ID or Filters may be specified. Specifying more than one will result in
                          a validation error.
                        properties:
                          filters:
                            description: |-
                              Filters is a set of key/value pairs used to identify a resource
                              They are applied according to the rules defined by the AWS API:
                              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                            items:
                              description: Filter is a filter used to identify an AWS resource.
                              properties:
                                name:
                                  description: Name of the filter. Filter names are case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - name
                                - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      type: array
                    ami:
                      description: AMI is the reference to the AMI from which to create the machine instance.
                      properties:
                        eksLookupType:
                          description: EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
                          enum:
                            - AmazonLinux
                            - AmazonLinuxGPU
                            - AmazonLinux2023
                            - AmazonLinux2023GPU
                          type: string
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    iamInstanceProfile:
                      description: |-
                        The name or the Amazon Resource Name (ARN) of the instance profile associated
                        with the IAM role for the instance. The instance profile contains the IAM
                        role.
                      type: string
                    imageLookupBaseOS:
                      description: |-
                        ImageLookupBaseOS is the name of the base operating system to use for
                        image lookup the AMI is not set.
                      type: string
                    imageLookupFormat:
                      description: |-
                        ImageLookupFormat is the AMI naming format to look up the image for this
                        machine It will be ignored if an explicit AMI is set. Supports
                        substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                        kubernetes version, respectively. The BaseOS will be the value in
                        ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                        defined by the packages produced by kubernetes/release without v as a
                        prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                        image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                        searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                        Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                        also: https://golang.org/pkg/text/template/
                      type: string
                    imageLookupOrg:
                      description: ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
                      type: string
                    instanceType:
                      description: 'InstanceType is the type of instance to create. Example: m4.xlarge'
                      type: string
                    name:
                      description: The name of the launch template.
                      type: string
                    rootVolume:
                      description: RootVolume encapsulates the configuration options for the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted or not.
                          type: boolean
                        encryptionKey:
                          description: |-
                            EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                            If Encrypted is set and this is omitted, the default AWS key will be used.
                            The key must already exist and be accessible by the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: |-
                            Size specifies size (in Gi) of the storage device.
                            Must be greater than the image snapshot size or 8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1, etc...).
                          type: string
                      required:
                        - size
                      type: object
                    spotMarketOptions:
                      description: SpotMarketOptions are options for configuring AWSMachinePool instances to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: |-
                        SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string
                        (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                      type: string
                    versionNumber:
                      description: |-
                        VersionNumber is the version of the launch template that is applied.
                        Typically a new version is created when at least one of the following happens:
                        1) A new launch template spec is applied.
                        2) One or more parameters in an existing template is changed.
                        3) A new AMI is discovered.
                      format: int64
                      type: integer
                  type: object
                capacityRebalance:
                  description: Enable or disable the capacity rebalance autoscaling group feature
                  type: boolean
                defaultCoolDown:
                  description: |-
                    The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
                    If no value is supplied by user a default value of 300 seconds is set
                  type: string
                maxSize:
                  default: 1
                  description: MaxSize defines the maximum size of the group.
                  format: int32
                  minimum: 1
                  type: integer
                minSize:
                  default: 1
                  description: MinSize defines the minimum size of the group.
                  format: int32
                  minimum: 0
                  type: integer
                mixedInstancesPolicy:
                  description: MixedInstancesPolicy describes how multiple instance types will be used by the ASG.
                  properties:
                    instancesDistribution:
                      description: InstancesDistribution to configure distribution of On-Demand Instances and Spot Instances.
                      properties:
                        onDemandAllocationStrategy:
                          default: prioritized
                          description: OnDemandAllocationStrategy indicates how to allocate instance types to fulfill On-Demand capacity.
                          enum:
                            - prioritized
                          type: string
                        onDemandBaseCapacity:
                          default: 0
                          format: int64
                          type: integer
                        onDemandPercentageAboveBaseCapacity:
                          default: 100
                          format: int64
                          type: integer
                        spotAllocationStrategy:
                          default: lowest-price
                          description: SpotAllocationStrategy indicates how to allocate instances across Spot Instance pools.
                          enum:
                            - lowest-price
                            - capacity-optimized
                          type: string
                      type: object
                    overrides:
                      items:
                        description: |-
                          Overrides are used to override the instance type specified by the launch template with multiple
                          instance types that can be used to launch On-Demand Instances and Spot Instances.
                        properties:
                          instanceType:
                            type: string
                        required:
                          - instanceType
                        type: object
                      type: array
                  type: object
                providerID:
                  description: ProviderID is the ARN of the associated ASG
                  type: string
                providerIDList:
                  description: |-
                    ProviderIDList are the identification IDs of machine instances provided by the provider.
                    This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                  items:
                    type: string
                  type: array
                refreshPreferences:
                  description: RefreshPreferences describes set of preferences associated with the instance refresh request.
                  properties:
                    instanceWarmup:
                      description: |-
                        The number of seconds until a newly launched instance is configured and ready
                        to use. During this time, the next replacement will not be initiated.
                        The default is to use the value for the health check grace period defined for the group.
                      format: int64
                      type: integer
                    minHealthyPercentage:
                      description: |-
                        The amount of capacity as a percentage in ASG that must remain healthy
                        during an instance refresh. The default is 90.
                      format: int64
                      type: integer
                    strategy:
                      description: |-
                        The strategy to use for the instance refresh. The only valid value is Rolling.
                        A rolling update is an update that is applied to all instances in an Auto
                        Scaling group until all instances have been updated.
                      type: string
                  type: object
                subnets:
                  description: Subnets is an array of subnet configurations
                  items:
                    description: |-
                      AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                      Only one of ID or Filters may be specified. Specifying more than one will result in
                      a validation error.
                    properties:
                      filters:
                        description: |-
                          Filters is a set of key/value pairs used to identify a resource
                          They are applied according to the rules defined by the AWS API:
                          https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                        items:
                          description: Filter is a filter used to identify an AWS resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values. Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                            - name
                            - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
              required:
                - awsLaunchTemplate
                - maxSize
                - minSize
              type: object
            status:
              description: AWSMachinePoolStatus defines the observed state of AWSMachinePool.
              properties:
                asgStatus:
                  description: ASGStatus is a status string returned by the autoscaling API.
                  type: string
                conditions:
                  description: Conditions defines current service state of the AWSMachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                instances:
                  description: Instances contains the status for each instance in the pool
                  items:
                    description: AWSMachinePoolInstanceStatus defines the status of the AWSMachinePoolInstance.
                    properties:
                      instanceID:
                        description: InstanceID is the identification of the Machine Instance within ASG
                        type: string
                      version:
                        description: Version defines the Kubernetes version for the Machine Instance
                        type: string
                    type: object
                  type: array
                launchTemplateID:
                  description: The ID of the launch template
                  type: string
                launchTemplateVersion:
                  description: The version of the launch template
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas
                  format: int32
                  type: integer
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: Machine ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: Machine ready status
          jsonPath: .status.replicas
          name: Replicas
          type: integer
        - description: Minimum instanes in ASG
          jsonPath: .spec.minSize
          name: MinSize
          type: integer
        - description: Maximum instanes in ASG
          jsonPath: .spec.maxSize
          name: MaxSize
          type: integer
        - description: Launch Template ID
          jsonPath: .status.launchTemplateID
          name: LaunchTemplate ID
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSMachinePool is the Schema for the awsmachinepools API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachinePoolSpec defines the desired state of AWSMachinePool.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: |-
                    AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                    AWS provider.
                  type: object
                availabilityZoneSubnetType:
                  description: AvailabilityZoneSubnetType specifies which type of subnets to use when an availability zone is specified.
                  enum:
                    - public
                    - private
                    - all
                  type: string
                availabilityZones:
                  description: AvailabilityZones is an array of availability zones instances can run in
                  items:
                    type: string
                  type: array
                awsLaunchTemplate:
                  description: AWSLaunchTemplate specifies the launch template and version to use when an instance is launched.
                  properties:
                    additionalSecurityGroups:
                      description: |-
                        AdditionalSecurityGroups is an array of references to security groups that should be applied to the
                        instances. These security groups would be set in addition to any security groups defined
                        at the cluster level or in the actuator.
                      items:
                        description: |-
                          AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                          Only one of ID or Filters may be specified. Specifying more than one will result in
                          a validation error.
                        properties:
                          filters:
                            description: |-
                              Filters is a set of key/value pairs used to identify a resource
                              They are applied according to the rules defined by the AWS API:
                              https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                            items:
                              description: Filter is a filter used to identify an AWS resource.
                              properties:
                                name:
                                  description: Name of the filter. Filter names are case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - name
                                - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      type: array
                    ami:
                      description: AMI is the reference to the AMI from which to create the machine instance.
                      properties:
                        eksLookupType:
                          description: EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
                          enum:
                            - AmazonLinux
                            - AmazonLinuxGPU
                            - AmazonLinux2023
                            - AmazonLinux2023GPU
                          type: string
                        id:
                          description: ID of resource
                          type: string
                      type: object
                    capacityReservationId:
                      description: CapacityReservationID specifies the target Capacity Reservation into which the instance should be launched.
                      type: string
                    capacityReservationPreference:
                      allOf:
                        - enum:
                            - ""
                            - None
                            - CapacityReservationsOnly
                            - Open
                        - enum:
                            - ""
                            - None
                            - CapacityReservationsOnly
                            - Open
                      description: |-
                        CapacityReservationPreference specifies the preference for use of Capacity Reservations by the instance. Valid values include:
                        "Open": The instance may make use of open Capacity Reservations that match its AZ and InstanceType
                        "None": The instance may not make use of any Capacity Reservations. This is to conserve open reservations for desired workloads
                        "CapacityReservationsOnly": The instance will only run if matched or targeted to a Capacity Reservation
                      type: string
                    iamInstanceProfile:
                      description: |-
                        The name or the Amazon Resource Name (ARN) of the instance profile associated
                        with the IAM role for the instance. The instance profile contains the IAM
                        role.
                      type: string
                    imageLookupBaseOS:
                      description: |-
                        ImageLookupBaseOS is the name of the base operating system to use for
                        image lookup the AMI is not set.
                      type: string
                    imageLookupFormat:
                      description: |-
                        ImageLookupFormat is the AMI naming format to look up the image for this
                        machine It will be ignored if an explicit AMI is set. Supports
                        substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                        kubernetes version, respectively. The BaseOS will be the value in
                        ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                        defined by the packages produced by kubernetes/release without v as a
                        prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                        image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                        searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                        Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                        also: https://golang.org/pkg/text/template/
                      type: string
                    imageLookupOrg:
                      description: ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
                      type: string
                    instanceMetadataOptions:
                      description: InstanceMetadataOptions defines the behavior for applying metadata to instances.
                      properties:
                        httpEndpoint:
                          default: enabled
                          description: |-
                            Enables or disables the HTTP metadata endpoint on your instances.

                            If you specify a value of disabled, you cannot access your instance metadata.

                            Default: enabled
                          enum:
                            - enabled
                            - disabled
                          type: string
                        httpPutResponseHopLimit:
                          default: 1
                          description: |-
                            The desired HTTP PUT response hop limit for instance metadata requests. The
                            larger the number, the further instance metadata requests can travel.

                            Default: 1
                          format: int64
                          maximum: 64
                          minimum: 1
                          type: integer
                        httpTokens:
                          default: optional
                          description: |-
                            The state of token usage for your instance metadata requests.

                            If the state is optional, you can choose to retrieve instance metadata with
                            or without a session token on your request. If you retrieve the IAM role
                            credentials without a token, the version 1.0 role credentials are returned.
                            If you retrieve the IAM role credentials using a valid session token, the
                            version 2.0 role credentials are returned.

                            If the state is required, you must send a session token with any instance
                            metadata retrieval requests. In this state, retrieving the IAM role credentials
                            always returns the version 2.0 credentials; the version 1.0 credentials are
                            not available.

                            Default: optional
                          enum:
                            - optional
                            - required
                          type: string
                        instanceMetadataTags:
                          default: disabled
                          description: |-
                            Set to enabled to allow access to instance tags from the instance metadata.
                            Set to disabled to turn off access to instance tags from the instance metadata.
                            For more information, see Work with instance tags using the instance metadata
                            (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).

                            Default: disabled
                          enum:
                            - enabled
                            - disabled
                          type: string
                      type: object
                    instanceType:
                      description: 'InstanceType is the type of instance to create. Example: m4.xlarge'
                      type: string
                    marketType:
                      description: |-
                        MarketType specifies the type of market for the EC2 instance. Valid values include:
                        "OnDemand" (default): The instance runs as a standard OnDemand instance.
                        "Spot": The instance runs as a Spot instance. When SpotMarketOptions is provided, the marketType defaults to "Spot".
                        "CapacityBlock": The instance utilizes pre-purchased compute capacity (capacity blocks) with AWS Capacity Reservations.
                         If this value is selected, CapacityReservationID must be specified to identify the target reservation.
                        If marketType is not specified and spotMarketOptions is provided, the marketType defaults to "Spot".
                      enum:
                        - OnDemand
                        - Spot
                        - CapacityBlock
                      type: string
                    name:
                      description: The name of the launch template.
                      type: string
                    nonRootVolumes:
                      description: Configuration options for the non root storage volumes.
                      items:
                        description: Volume encapsulates the configuration options for the storage device.
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: |-
                              EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                              If Encrypted is set and this is omitted, the default AWS key will be used.
                              The key must already exist and be accessible by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: |-
                              Size specifies size (in Gi) of the storage device.
                              Must be greater than the image snapshot size or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          throughput:
                            description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                            format: int64
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2, io1, etc...).
                            type: string
                        required:
                          - size
                        type: object
                      type: array
                    privateDnsName:
                      description: PrivateDNSName is the options for the instance hostname.
                      properties:
                        enableResourceNameDnsAAAARecord:
                          description: EnableResourceNameDNSAAAARecord indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
                          type: boolean
                        enableResourceNameDnsARecord:
                          description: EnableResourceNameDNSARecord indicates whether to respond to DNS queries for instance hostnames with DNS A records.
                          type: boolean
                        hostnameType:
                          description: The type of hostname to assign to an instance.
                          enum:
                            - ip-name
                            - resource-name
                          type: string
                      type: object
                    rootVolume:
                      description: RootVolume encapsulates the configuration options for the root volume
                      properties:
                        deviceName:
                          description: Device name
                          type: string
                        encrypted:
                          description: Encrypted is whether the volume should be encrypted or not.
                          type: boolean
                        encryptionKey:
                          description: |-
                            EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                            If Encrypted is set and this is omitted, the default AWS key will be used.
                            The key must already exist and be accessible by the controller.
                          type: string
                        iops:
                          description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                          format: int64
                          type: integer
                        size:
                          description: |-
                            Size specifies size (in Gi) of the storage device.
                            Must be greater than the image snapshot size or 8 (whichever is greater).
                          format: int64
                          minimum: 8
                          type: integer
                        throughput:
                          description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of the volume (e.g. gp2, io1, etc...).
                          type: string
                      required:
                        - size
                      type: object
                    spotMarketOptions:
                      description: SpotMarketOptions are options for configuring AWSMachinePool instances to be run using AWS Spot instances.
                      properties:
                        maxPrice:
                          description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                          type: string
                      type: object
                    sshKeyName:
                      description: |-
                        SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string
                        (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                      type: string
                    versionNumber:
                      description: |-
                        VersionNumber is the version of the launch template that is applied.
                        Typically a new version is created when at least one of the following happens:
                        1) A new launch template spec is applied.
                        2) One or more parameters in an existing template is changed.
                        3) A new AMI is discovered.
                      format: int64
                      type: integer
                  type: object
                capacityRebalance:
                  description: Enable or disable the capacity rebalance autoscaling group feature
                  type: boolean
                defaultCoolDown:
                  description: |-
                    The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.
                    If no value is supplied by user a default value of 300 seconds is set
                  type: string
                defaultInstanceWarmup:
                  description: |-
                    The amount of time, in seconds, until a new instance is considered to
                    have finished initializing and resource consumption to become stable
                    after it enters the InService state.
                    If no value is supplied by user a default value of 300 seconds is set
                  type: string
                ignition:
                  description: Ignition defined options related to the bootstrapping systems where Ignition is used.
                  properties:
                    proxy:
                      description: |-
                        Proxy defines proxy settings for Ignition.
                        Only valid for Ignition versions 3.1 and above.
                      properties:
                        httpProxy:
                          description: |-
                            HTTPProxy is the HTTP proxy to use for Ignition.
                            A single URL that specifies the proxy server to use for HTTP and HTTPS requests,
                            unless overridden by the HTTPSProxy or NoProxy options.
                          type: string
                        httpsProxy:
                          description: |-
                            HTTPSProxy is the HTTPS proxy to use for Ignition.
                            A single URL that specifies the proxy server to use for HTTPS requests,
                            unless overridden by the NoProxy option.
                          type: string
                        noProxy:
                          description: |-
                            NoProxy is the list of domains to not proxy for Ignition.
                            Specifies a list of strings to hosts that should be excluded from proxying.

                            Each value is represented by:
                            - An IP address prefix (1.2.3.4)
                            - An IP address prefix in CIDR notation (1.2.3.4/8)
                            - A domain name
                              - A domain name matches that name and all subdomains
                              - A domain name with a leading . matches subdomains only
                            - A special DNS label (*), indicates that no proxying should be done

                            An IP address prefix and domain name can also include a literal port number (1.2.3.4:80).
                          items:
                            description: IgnitionNoProxy defines the list of domains to not proxy for Ignition.
                            maxLength: 2048
                            type: string
                          maxItems: 64
                          type: array
                      type: object
                    storageType:
                      default: ClusterObjectStore
                      description: |-
                        StorageType defines how to store the boostrap user data for Ignition.
                        This can be used to instruct Ignition from where to fetch the user data to bootstrap an instance.

                        When omitted, the storage option will default to ClusterObjectStore.

                        When set to "ClusterObjectStore", if the capability is available and a Cluster ObjectStore configuration
                        is correctly provided in the Cluster object (under .spec.s3Bucket),
                        an object store will be used to store bootstrap user data.

                        When set to "UnencryptedUserData", EC2 Instance User Data will be used to store the machine bootstrap user data, unencrypted.
                        This option is considered less secure than others as user data may contain sensitive informations (keys, certificates, etc.)
                        and users with ec2:DescribeInstances permission or users running pods
                        that can access the ec2 metadata service have access to this sensitive information.
                        So this is only to be used at ones own risk, and only when other more secure options are not viable.
                      enum:
                        - ClusterObjectStore
                        - UnencryptedUserData
                      type: string
                    tls:
                      description: |-
                        TLS defines TLS settings for Ignition.
                        Only valid for Ignition versions 3.1 and above.
                      properties:
                        certificateAuthorities:
                          description: |-
                            CASources defines the list of certificate authorities to use for Ignition.
                            The value is the certificate bundle (in PEM format). The bundle can contain multiple concatenated certificates.
                            Supported schemes are http, https, tftp, s3, arn, gs, and `data` (RFC 2397) URL scheme.
                          items:
                            description: IgnitionCASource defines the source of the certificate authority to use for Ignition.
                            maxLength: 65536
                            type: string
                          maxItems: 64
                          type: array
                      type: object
                    version:
                      default: "2.3"
                      description: Version defines which version of Ignition will be used to generate bootstrap data.
                      enum:
                        - "2.3"
                        - "3.0"
                        - "3.1"
                        - "3.2"
                        - "3.3"
                        - "3.4"
                      type: string
                  type: object
                lifecycleHooks:
                  description: AWSLifecycleHooks specifies lifecycle hooks for the autoscaling group.
                  items:
                    description: AWSLifecycleHook describes an AWS lifecycle hook
                    properties:
                      defaultResult:
                        description: The default result for the lifecycle hook. The possible values are CONTINUE and ABANDON.
                        enum:
                          - CONTINUE
                          - ABANDON
                        type: string
                      heartbeatTimeout:
                        description: |-
                          The maximum time, in seconds, that an instance can remain in a Pending:Wait or
                          Terminating:Wait state. The maximum is 172800 seconds (48 hours) or 100 times
                          HeartbeatTimeout, whichever is smaller.
                        format: duration
                        type: string
                      lifecycleTransition:
                        description: The state of the EC2 instance to which to attach the lifecycle hook.
                        enum:
                          - autoscaling:EC2_INSTANCE_LAUNCHING
                          - autoscaling:EC2_INSTANCE_TERMINATING
                        type: string
                      name:
                        description: The name of the lifecycle hook.
                        type: string
                      notificationMetadata:
                        description: Contains additional metadata that will be passed to the notification target.
                        type: string
                      notificationTargetARN:
                        description: |-
                          The ARN of the notification target that Amazon EC2 Auto Scaling uses to
                          notify you when an instance is in the transition state for the lifecycle hook.
                        type: string
                      roleARN:
                        description: |-
                          The ARN of the IAM role that allows the Auto Scaling group to publish to the
                          specified notification target.
                        type: string
                    required:
                      - lifecycleTransition
                      - name
                    type: object
                  type: array
                maxSize:
                  default: 1
                  description: MaxSize defines the maximum size of the group.
                  format: int32
                  minimum: 1
                  type: integer
                minSize:
                  default: 1
                  description: MinSize defines the minimum size of the group.
                  format: int32
                  minimum: 0
                  type: integer
                mixedInstancesPolicy:
                  description: MixedInstancesPolicy describes how multiple instance types will be used by the ASG.
                  properties:
                    instancesDistribution:
                      description: InstancesDistribution to configure distribution of On-Demand Instances and Spot Instances.
                      properties:
                        onDemandAllocationStrategy:
                          default: prioritized
                          description: OnDemandAllocationStrategy indicates how to allocate instance types to fulfill On-Demand capacity.
                          enum:
                            - prioritized
                            - lowest-price
                          type: string
                        onDemandBaseCapacity:
                          default: 0
                          format: int64
                          type: integer
                        onDemandPercentageAboveBaseCapacity:
                          default: 100
                          format: int64
                          type: integer
                        spotAllocationStrategy:
                          default: lowest-price
                          description: SpotAllocationStrategy indicates how to allocate instances across Spot Instance pools.
                          enum:
                            - lowest-price
                            - capacity-optimized
                            - capacity-optimized-prioritized
                            - price-capacity-optimized
                          type: string
                      type: object
                    overrides:
                      items:
                        description: |-
                          Overrides are used to override the instance type specified by the launch template with multiple
                          instance types that can be used to launch On-Demand Instances and Spot Instances.
                        properties:
                          instanceType:
                            type: string
                        required:
                          - instanceType
                        type: object
                      type: array
                  type: object
                providerID:
                  description: ProviderID is the ARN of the associated ASG
                  type: string
                providerIDList:
                  description: |-
                    ProviderIDList are the identification IDs of machine instances provided by the provider.
                    This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.
                  items:
                    type: string
                  type: array
                refreshPreferences:
                  description: RefreshPreferences describes set of preferences associated with the instance refresh request.
                  properties:
                    disable:
                      description: |-
                        Disable, if true, disables instance refresh from triggering when new launch templates are detected.
                        This is useful in scenarios where ASG nodes are externally managed.
                      type: boolean
                    instanceWarmup:
                      description: |-
                        The number of seconds until a newly launched instance is configured and ready
                        to use. During this time, the next replacement will not be initiated.
                        The default is to use the value for the health check grace period defined for the group.
                      format: int64
                      type: integer
                    maxHealthyPercentage:
                      description: |-
                        The amount of capacity as a percentage in ASG that can be in service and healthy, or pending,
                        to support your workload when replacing instances.
                        The value is expressed as a percentage of the desired capacity of the ASG. Value range is 100 to 200.
                        If you specify MaxHealthyPercentage , you must also specify MinHealthyPercentage , and the difference between
                        them cannot be greater than 100.
                        A larger range increases the number of instances that can be replaced at the same time.
                      format: int64
                      maximum: 200
                      minimum: 100
                      type: integer
                    minHealthyPercentage:
                      description: |-
                        The amount of capacity as a percentage in ASG that must remain healthy
                        during an instance refresh. The default is 90.
                      format: int64
                      type: integer
                    strategy:
                      description: |-
                        The strategy to use for the instance refresh. The only valid value is Rolling.
                        A rolling update is an update that is applied to all instances in an Auto
                        Scaling group until all instances have been updated.
                      type: string
                  type: object
                subnets:
                  description: Subnets is an array of subnet configurations
                  items:
                    description: |-
                      AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                      Only one of ID or Filters may be specified. Specifying more than one will result in
                      a validation error.
                    properties:
                      filters:
                        description: |-
                          Filters is a set of key/value pairs used to identify a resource
                          They are applied according to the rules defined by the AWS API:
                          https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                        items:
                          description: Filter is a filter used to identify an AWS resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values. Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                            - name
                            - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                suspendProcesses:
                  description: |-
                    SuspendProcesses defines a list of processes to suspend for the given ASG. This is constantly reconciled.
                    If a process is removed from this list it will automatically be resumed.
                  properties:
                    all:
                      type: boolean
                    processes:
                      description: Processes defines the processes which can be enabled or disabled individually.
                      properties:
                        addToLoadBalancer:
                          type: boolean
                        alarmNotification:
                          type: boolean
                        azRebalance:
                          type: boolean
                        healthCheck:
                          type: boolean
                        instanceRefresh:
                          type: boolean
                        launch:
                          type: boolean
                        replaceUnhealthy:
                          type: boolean
                        scheduledActions:
                          type: boolean
                        terminate:
                          type: boolean
                      type: object
                  type: object
              required:
                - awsLaunchTemplate
                - maxSize
                - minSize
              type: object
            status:
              description: AWSMachinePoolStatus defines the observed state of AWSMachinePool.
              properties:
                asgStatus:
                  description: ASGStatus is a status string returned by the autoscaling API.
                  type: string
                conditions:
                  description: Conditions defines current service state of the AWSMachinePool.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                infrastructureMachineKind:
                  description: InfrastructureMachineKind is the kind of the infrastructure resources behind MachinePool Machines.
                  type: string
                instances:
                  description: Instances contains the status for each instance in the pool
                  items:
                    description: AWSMachinePoolInstanceStatus defines the status of the AWSMachinePoolInstance.
                    properties:
                      instanceID:
                        description: InstanceID is the identification of the Machine Instance within ASG
                        type: string
                      version:
                        description: Version defines the Kubernetes version for the Machine Instance
                        type: string
                    type: object
                  type: array
                launchTemplateID:
                  description: The ID of the launch template
                  type: string
                launchTemplateVersion:
                  description: The version of the launch template
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                replicas:
                  description: Replicas is the most recently observed number of replicas
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta2
  name: awsmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSMachine
    listKind: AWSMachineList
    plural: awsmachines
    shortNames:
      - awsm
    singular: awsmachine
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this AWSMachine belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: EC2 instance state
          jsonPath: .status.instanceState
          name: State
          type: string
        - description: Machine ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: EC2 instance ID
          jsonPath: .spec.providerID
          name: InstanceID
          type: string
        - description: Machine object which owns with this AWSMachine
          jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
          name: Machine
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSMachine is the schema for Amazon EC2 machines.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineSpec defines the desired state of an Amazon EC2 instance.
              properties:
                additionalSecurityGroups:
                  description: |-
                    AdditionalSecurityGroups is an array of references to security groups that should be applied to the
                    instance. These security groups would be set in addition to any security groups defined
                    at the cluster level or in the actuator. It is possible to specify either IDs of Filters. Using Filters
                    will cause additional requests to AWS API and if tags change the attached security groups might change too.
                  items:
                    description: |-
                      AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                      Only one of ID or Filters may be specified. Specifying more than one will result in
                      a validation error.
                    properties:
                      arn:
                        description: |-
                          ARN of resource.
                          Deprecated: This field has no function and is going to be removed in the next release.
                        type: string
                      filters:
                        description: |-
                          Filters is a set of key/value pairs used to identify a resource
                          They are applied according to the rules defined by the AWS API:
                          https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                        items:
                          description: Filter is a filter used to identify an AWS resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values. Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                            - name
                            - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                additionalTags:
                  additionalProperties:
                    type: string
                  description: |-
                    AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                    AWS provider. If both the AWSCluster and the AWSMachine specify the same tag name with different values, the
                    AWSMachine's value takes precedence.
                  type: object
                ami:
                  description: AMI is the reference to the AMI from which to create the machine instance.
                  properties:
                    eksLookupType:
                      description: EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
                      enum:
                        - AmazonLinux
                        - AmazonLinuxGPU
                      type: string
                    id:
                      description: ID of resource
                      type: string
                  type: object
                cloudInit:
                  description: |-
                    CloudInit defines options related to the bootstrapping systems where
                    CloudInit is used.
                  properties:
                    insecureSkipSecretsManager:
                      description: |-
                        InsecureSkipSecretsManager, when set to true will not use AWS Secrets Manager
                        or AWS Systems Manager Parameter Store to ensure privacy of userdata.
                        By default, a cloud-init boothook shell script is prepended to download
                        the userdata from Secrets Manager and additionally delete the secret.
                      type: boolean
                    secretCount:
                      description: SecretCount is the number of secrets used to form the complete secret
                      format: int32
                      type: integer
                    secretPrefix:
                      description: |-
                        SecretPrefix is the prefix for the secret name. This is stored
                        temporarily, and deleted when the machine registers as a node against
                        the workload cluster.
                      type: string
                    secureSecretsBackend:
                      description: |-
                        SecureSecretsBackend, when set to parameter-store will utilize the AWS Systems Manager
                        Parameter Storage to distribute secrets. By default or with the value of secrets-manager,
                        will use AWS Secrets Manager instead.
                      enum:
                        - secrets-manager
                        - ssm-parameter-store
                      type: string
                  type: object
                failureDomain:
                  description: |-
                    FailureDomain is the failure domain unique identifier this Machine should be attached to, as defined in Cluster API.
                    For this infrastructure provider, the ID is equivalent to an AWS Availability Zone.
                    If multiple subnets are matched for the availability zone, the first one returned is picked.
                  type: string
                iamInstanceProfile:
                  description: IAMInstanceProfile is a name of an IAM instance profile to assign to the instance
                  type: string
                ignition:
                  description: Ignition defined options related to the bootstrapping systems where Ignition is used.
                  properties:
                    version:
                      default: "2.3"
                      description: Version defines which version of Ignition will be used to generate bootstrap data.
                      enum:
                        - "2.3"
                      type: string
                  type: object
                imageLookupBaseOS:
                  description: |-
                    ImageLookupBaseOS is the name of the base operating system to use for
                    image lookup the AMI is not set.
                  type: string
                imageLookupFormat:
                  description: |-
                    ImageLookupFormat is the AMI naming format to look up the image for this
                    machine It will be ignored if an explicit AMI is set. Supports
                    substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                    kubernetes version, respectively. The BaseOS will be the value in
                    ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                    defined by the packages produced by kubernetes/release without v as a
                    prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                    image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                    searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                    Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                    also: https://golang.org/pkg/text/template/
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
                  type: string
                instanceID:
                  description: InstanceID is the EC2 instance ID for this machine.
                  type: string
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example: m4.xlarge'
                  minLength: 2
                  type: string
                networkInterfaces:
                  description: |-
                    NetworkInterfaces is a list of ENIs to associate with the instance.
                    A maximum of 2 may be specified.
                  items:
                    type: string
                  maxItems: 2
                  type: array
                nonRootVolumes:
                  description: Configuration options for the non root storage volumes.
                  items:
                    description: Volume encapsulates the configuration options for the storage device.
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted or not.
                        type: boolean
                      encryptionKey:
                        description: |-
                          EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                          If Encrypted is set and this is omitted, the default AWS key will be used.
                          The key must already exist and be accessible by the controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: |-
                          Size specifies size (in Gi) of the storage device.
                          Must be greater than the image snapshot size or 8 (whichever is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      throughput:
                        description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                        format: int64
                        type: integer
                      type:
                        description: Type is the type of the volume (e.g. gp2, io1, etc...).
                        type: string
                    required:
                      - size
                    type: object
                  type: array
                providerID:
                  description: ProviderID is the unique identifier as specified by the cloud provider.
                  type: string
                publicIP:
                  description: |-
                    PublicIP specifies whether the instance should get a public IP.
                    Precedence for this setting is as follows:
                    1. This field if set
                    2. Cluster/flavor setting
                    3. Subnet default
                  type: boolean
                rootVolume:
                  description: RootVolume encapsulates the configuration options for the root volume
                  properties:
                    deviceName:
                      description: Device name
                      type: string
                    encrypted:
                      description: Encrypted is whether the volume should be encrypted or not.
                      type: boolean
                    encryptionKey:
                      description: |-
                        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                        If Encrypted is set and this is omitted, the default AWS key will be used.
                        The key must already exist and be accessible by the controller.
                      type: string
                    iops:
                      description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                      format: int64
                      type: integer
                    size:
                      description: |-
                        Size specifies size (in Gi) of the storage device.
                        Must be greater than the image snapshot size or 8 (whichever is greater).
                      format: int64
                      minimum: 8
                      type: integer
                    throughput:
                      description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                      format: int64
                      type: integer
                    type:
                      description: Type is the type of the volume (e.g. gp2, io1, etc...).
                      type: string
                  required:
                    - size
                  type: object
                spotMarketOptions:
                  description: SpotMarketOptions allows users to configure instances to be run using AWS Spot instances.
                  properties:
                    maxPrice:
                      description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                      type: string
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
                subnet:
                  description: |-
                    Subnet is a reference to the subnet to use for this instance. If not specified,
                    the cluster subnet will be used.
                  properties:
                    arn:
                      description: |-
                        ARN of resource.
                        Deprecated: This field has no function and is going to be removed in the next release.
                      type: string
                    filters:
                      description: |-
                        Filters is a set of key/value pairs used to identify a resource
                        They are applied according to the rules defined by the AWS API:
                        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                      items:
                        description: Filter is a filter used to identify an AWS resource.
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values. Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                          - name
                          - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                tenancy:
                  description: Tenancy indicates if instance should run on shared or single-tenant hardware.
                  enum:
                    - default
                    - dedicated
                    - host
                  type: string
                uncompressedUserData:
                  description: |-
                    UncompressedUserData specify whether the user data is gzip-compressed before it is sent to ec2 instance.
                    cloud-init has built-in support for gzip-compressed user data
                    user data stored in aws secret manager is always gzip-compressed.
                  type: boolean
              required:
                - instanceType
              type: object
            status:
              description: AWSMachineStatus defines the observed state of AWSMachine.
              properties:
                addresses:
                  description: Addresses contains the AWS instance associated addresses.
                  items:
                    description: MachineAddress contains information for the node's address.
                    properties:
                      address:
                        description: address is the machine address.
                        maxLength: 256
                        minLength: 1
                        type: string
                      type:
                        description: type is the machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                        enum:
                          - Hostname
                          - ExternalIP
                          - InternalIP
                          - ExternalDNS
                          - InternalDNS
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the AWSMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                instanceState:
                  description: InstanceState is the state of the AWS instance for this machine.
                  type: string
                interruptible:
                  description: |-
                    Interruptible reports that this machine is using spot instances and can therefore be interrupted by CAPI when it receives a notice that the spot instance is to be terminated by AWS.
                    This will be set to true when SpotMarketOptions is not nil (i.e. this machine is using a spot instance).
                  type: boolean
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: false
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: Cluster to which this AWSMachine belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: EC2 instance state
          jsonPath: .status.instanceState
          name: State
          type: string
        - description: Machine ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: EC2 instance ID
          jsonPath: .spec.providerID
          name: InstanceID
          type: string
        - description: Machine object which owns with this AWSMachine
          jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
          name: Machine
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSMachine is the schema for Amazon EC2 machines.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineSpec defines the desired state of an Amazon EC2 instance.
              properties:
                additionalSecurityGroups:
                  description: |-
                    AdditionalSecurityGroups is an array of references to security groups that should be applied to the
                    instance. These security groups would be set in addition to any security groups defined
                    at the cluster level or in the actuator. It is possible to specify either IDs of Filters. Using Filters
                    will cause additional requests to AWS API and if tags change the attached security groups might change too.
                  items:
                    description: |-
                      AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                      Only one of ID or Filters may be specified. Specifying more than one will result in
                      a validation error.
                    properties:
                      filters:
                        description: |-
                          Filters is a set of key/value pairs used to identify a resource
                          They are applied according to the rules defined by the AWS API:
                          https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                        items:
                          description: Filter is a filter used to identify an AWS resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values. Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                            - name
                            - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                additionalTags:
                  additionalProperties:
                    type: string
                  description: |-
                    AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                    AWS provider. If both the AWSCluster and the AWSMachine specify the same tag name with different values, the
                    AWSMachine's value takes precedence.
                  type: object
                ami:
                  description: AMI is the reference to the AMI from which to create the machine instance.
                  properties:
                    eksLookupType:
                      description: EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
                      enum:
                        - AmazonLinux
                        - AmazonLinuxGPU
                        - AmazonLinux2023
                        - AmazonLinux2023GPU
                      type: string
                    id:
                      description: ID of resource
                      type: string
                  type: object
                capacityReservationId:
                  description: CapacityReservationID specifies the target Capacity Reservation into which the instance should be launched.
                  type: string
                capacityReservationPreference:
                  allOf:
                    - enum:
                        - ""
                        - None
                        - CapacityReservationsOnly
                        - Open
                    - enum:
                        - ""
                        - None
                        - CapacityReservationsOnly
                        - Open
                  description: |-
                    CapacityReservationPreference specifies the preference for use of Capacity Reservations by the instance. Valid values include:
                    "Open": The instance may make use of open Capacity Reservations that match its AZ and InstanceType
                    "None": The instance may not make use of any Capacity Reservations. This is to conserve open reservations for desired workloads
                    "CapacityReservationsOnly": The instance will only run if matched or targeted to a Capacity Reservation
                  type: string
                cloudInit:
                  description: |-
                    CloudInit defines options related to the bootstrapping systems where
                    CloudInit is used.
                  properties:
                    insecureSkipSecretsManager:
                      description: |-
                        InsecureSkipSecretsManager, when set to true will not use AWS Secrets Manager
                        or AWS Systems Manager Parameter Store to ensure privacy of userdata.
                        By default, a cloud-init boothook shell script is prepended to download
                        the userdata from Secrets Manager and additionally delete the secret.
                      type: boolean
                    secretCount:
                      description: SecretCount is the number of secrets used to form the complete secret
                      format: int32
                      type: integer
                    secretPrefix:
                      description: |-
                        SecretPrefix is the prefix for the secret name. This is stored
                        temporarily, and deleted when the machine registers as a node against
                        the workload cluster.
                      type: string
                    secureSecretsBackend:
                      description: |-
                        SecureSecretsBackend, when set to parameter-store will utilize the AWS Systems Manager
                        Parameter Storage to distribute secrets. By default or with the value of secrets-manager,
                        will use AWS Secrets Manager instead.
                      enum:
                        - secrets-manager
                        - ssm-parameter-store
                      type: string
                  type: object
                elasticIpPool:
                  description: ElasticIPPool is the configuration to allocate Public IPv4 address (Elastic IP/EIP) from user-defined pool.
                  properties:
                    publicIpv4Pool:
                      description: |-
                        PublicIpv4Pool sets a custom Public IPv4 Pool used to create Elastic IP address for resources
                        created in public IPv4 subnets. Every IPv4 address, Elastic IP, will be allocated from the custom
                        Public IPv4 pool that you brought to AWS, instead of Amazon-provided pool. The public IPv4 pool
                        resource ID starts with 'ipv4pool-ec2'.
                      maxLength: 30
                      type: string
                    publicIpv4PoolFallbackOrder:
                      description: |-
                        PublicIpv4PoolFallBackOrder defines the fallback action when the Public IPv4 Pool has been exhausted,
                        no more IPv4 address available in the pool.

                        When set to 'amazon-pool', the controller check if the pool has available IPv4 address, when pool has reached the
                        IPv4 limit, the address will be claimed from Amazon-pool (default).

                        When set to 'none', the controller will fail the Elastic IP allocation when the publicIpv4Pool is exhausted.
                      enum:
                        - amazon-pool
                        - none
                      type: string
                      x-kubernetes-validations:
                        - message: allowed values are 'none' and 'amazon-pool'
                          rule: self in ['none','amazon-pool']
                  type: object
                hostAffinity:
                  description: |-
                    HostAffinity specifies the dedicated host affinity setting for the instance.
                    When hostAffinity is set to host, an instance started onto a specific host always restarts on the same host if stopped.
                    When hostAffinity is set to default, and you stop and restart the instance, it can be restarted on any available host.
                    When HostAffinity is defined, HostID is required.
                  enum:
                    - default
                    - host
                  type: string
                hostID:
                  description: HostID specifies the Dedicated Host on which the instance must be started.
                  type: string
                iamInstanceProfile:
                  description: IAMInstanceProfile is a name of an IAM instance profile to assign to the instance
                  type: string
                ignition:
                  description: Ignition defined options related to the bootstrapping systems where Ignition is used.
                  properties:
                    proxy:
                      description: |-
                        Proxy defines proxy settings for Ignition.
                        Only valid for Ignition versions 3.1 and above.
                      properties:
                        httpProxy:
                          description: |-
                            HTTPProxy is the HTTP proxy to use for Ignition.
                            A single URL that specifies the proxy server to use for HTTP and HTTPS requests,
                            unless overridden by the HTTPSProxy or NoProxy options.
                          type: string
                        httpsProxy:
                          description: |-
                            HTTPSProxy is the HTTPS proxy to use for Ignition.
                            A single URL that specifies the proxy server to use for HTTPS requests,
                            unless overridden by the NoProxy option.
                          type: string
                        noProxy:
                          description: |-
                            NoProxy is the list of domains to not proxy for Ignition.
                            Specifies a list of strings to hosts that should be excluded from proxying.

                            Each value is represented by:
                            - An IP address prefix (1.2.3.4)
                            - An IP address prefix in CIDR notation (1.2.3.4/8)
                            - A domain name
                              - A domain name matches that name and all subdomains
                              - A domain name with a leading . matches subdomains only
                            - A special DNS label (*), indicates that no proxying should be done

                            An IP address prefix and domain name can also include a literal port number (1.2.3.4:80).
                          items:
                            description: IgnitionNoProxy defines the list of domains to not proxy for Ignition.
                            maxLength: 2048
                            type: string
                          maxItems: 64
                          type: array
                      type: object
                    storageType:
                      default: ClusterObjectStore
                      description: |-
                        StorageType defines how to store the boostrap user data for Ignition.
                        This can be used to instruct Ignition from where to fetch the user data to bootstrap an instance.

                        When omitted, the storage option will default to ClusterObjectStore.

                        When set to "ClusterObjectStore", if the capability is available and a Cluster ObjectStore configuration
                        is correctly provided in the Cluster object (under .spec.s3Bucket),
                        an object store will be used to store bootstrap user data.

                        When set to "UnencryptedUserData", EC2 Instance User Data will be used to store the machine bootstrap user data, unencrypted.
                        This option is considered less secure than others as user data may contain sensitive informations (keys, certificates, etc.)
                        and users with ec2:DescribeInstances permission or users running pods
                        that can access the ec2 metadata service have access to this sensitive information.
                        So this is only to be used at ones own risk, and only when other more secure options are not viable.
                      enum:
                        - ClusterObjectStore
                        - UnencryptedUserData
                      type: string
                    tls:
                      description: |-
                        TLS defines TLS settings for Ignition.
                        Only valid for Ignition versions 3.1 and above.
                      properties:
                        certificateAuthorities:
                          description: |-
                            CASources defines the list of certificate authorities to use for Ignition.
                            The value is the certificate bundle (in PEM format). The bundle can contain multiple concatenated certificates.
                            Supported schemes are http, https, tftp, s3, arn, gs, and `data` (RFC 2397) URL scheme.
                          items:
                            description: IgnitionCASource defines the source of the certificate authority to use for Ignition.
                            maxLength: 65536
                            type: string
                          maxItems: 64
                          type: array
                      type: object
                    version:
                      default: "2.3"
                      description: Version defines which version of Ignition will be used to generate bootstrap data.
                      enum:
                        - "2.3"
                        - "3.0"
                        - "3.1"
                        - "3.2"
                        - "3.3"
                        - "3.4"
                      type: string
                  type: object
                imageLookupBaseOS:
                  description: |-
                    ImageLookupBaseOS is the name of the base operating system to use for
                    image lookup the AMI is not set.
                  type: string
                imageLookupFormat:
                  description: |-
                    ImageLookupFormat is the AMI naming format to look up the image for this
                    machine It will be ignored if an explicit AMI is set. Supports
                    substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                    kubernetes version, respectively. The BaseOS will be the value in
                    ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                    defined by the packages produced by kubernetes/release without v as a
                    prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                    image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                    searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                    Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                    also: https://golang.org/pkg/text/template/
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
                  type: string
                instanceID:
                  description: InstanceID is the EC2 instance ID for this machine.
                  type: string
                instanceMetadataOptions:
                  description: InstanceMetadataOptions is the metadata options for the EC2 instance.
                  properties:
                    httpEndpoint:
                      default: enabled
                      description: |-
                        Enables or disables the HTTP metadata endpoint on your instances.

                        If you specify a value of disabled, you cannot access your instance metadata.

                        Default: enabled
                      enum:
                        - enabled
                        - disabled
                      type: string
                    httpPutResponseHopLimit:
                      default: 1
                      description: |-
                        The desired HTTP PUT response hop limit for instance metadata requests. The
                        larger the number, the further instance metadata requests can travel.

                        Default: 1
                      format: int64
                      maximum: 64
                      minimum: 1
                      type: integer
                    httpTokens:
                      default: optional
                      description: |-
                        The state of token usage for your instance metadata requests.

                        If the state is optional, you can choose to retrieve instance metadata with
                        or without a session token on your request. If you retrieve the IAM role
                        credentials without a token, the version 1.0 role credentials are returned.
                        If you retrieve the IAM role credentials using a valid session token, the
                        version 2.0 role credentials are returned.

                        If the state is required, you must send a session token with any instance
                        metadata retrieval requests. In this state, retrieving the IAM role credentials
                        always returns the version 2.0 credentials; the version 1.0 credentials are
                        not available.

                        Default: optional
                      enum:
                        - optional
                        - required
                      type: string
                    instanceMetadataTags:
                      default: disabled
                      description: |-
                        Set to enabled to allow access to instance tags from the instance metadata.
                        Set to disabled to turn off access to instance tags from the instance metadata.
                        For more information, see Work with instance tags using the instance metadata
                        (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).

                        Default: disabled
                      enum:
                        - enabled
                        - disabled
                      type: string
                  type: object
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example: m4.xlarge'
                  minLength: 2
                  type: string
                marketType:
                  description: |-
                    MarketType specifies the type of market for the EC2 instance. Valid values include:
                    "OnDemand" (default): The instance runs as a standard OnDemand instance.
                    "Spot": The instance runs as a Spot instance. When SpotMarketOptions is provided, the marketType defaults to "Spot".
                    "CapacityBlock": The instance utilizes pre-purchased compute capacity (capacity blocks) with AWS Capacity Reservations.
                     If this value is selected, CapacityReservationID must be specified to identify the target reservation.
                    If marketType is not specified and spotMarketOptions is provided, the marketType defaults to "Spot".
                  enum:
                    - OnDemand
                    - Spot
                    - CapacityBlock
                  type: string
                networkInterfaceType:
                  description: |-
                    NetworkInterfaceType is the interface type of the primary network Interface.
                    If not specified, AWS applies a default value.
                  enum:
                    - interface
                    - efa
                  type: string
                networkInterfaces:
                  description: |-
                    NetworkInterfaces is a list of ENIs to associate with the instance.
                    A maximum of 2 may be specified.
                  items:
                    type: string
                  maxItems: 2
                  type: array
                nonRootVolumes:
                  description: Configuration options for the non root storage volumes.
                  items:
                    description: Volume encapsulates the configuration options for the storage device.
                    properties:
                      deviceName:
                        description: Device name
                        type: string
                      encrypted:
                        description: Encrypted is whether the volume should be encrypted or not.
                        type: boolean
                      encryptionKey:
                        description: |-
                          EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                          If Encrypted is set and this is omitted, the default AWS key will be used.
                          The key must already exist and be accessible by the controller.
                        type: string
                      iops:
                        description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                        format: int64
                        type: integer
                      size:
                        description: |-
                          Size specifies size (in Gi) of the storage device.
                          Must be greater than the image snapshot size or 8 (whichever is greater).
                        format: int64
                        minimum: 8
                        type: integer
                      throughput:
                        description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                        format: int64
                        type: integer
                      type:
                        description: Type is the type of the volume (e.g. gp2, io1, etc...).
                        type: string
                    required:
                      - size
                    type: object
                  type: array
                placementGroupName:
                  description: PlacementGroupName specifies the name of the placement group in which to launch the instance.
                  type: string
                placementGroupPartition:
                  description: |-
                    PlacementGroupPartition is the partition number within the placement group in which to launch the instance.
                    This value is only valid if the placement group, referred in `PlacementGroupName`, was created with
                    strategy set to partition.
                  format: int64
                  maximum: 7
                  minimum: 1
                  type: integer
                privateDnsName:
                  description: PrivateDNSName is the options for the instance hostname.
                  properties:
                    enableResourceNameDnsAAAARecord:
                      description: EnableResourceNameDNSAAAARecord indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
                      type: boolean
                    enableResourceNameDnsARecord:
                      description: EnableResourceNameDNSARecord indicates whether to respond to DNS queries for instance hostnames with DNS A records.
                      type: boolean
                    hostnameType:
                      description: The type of hostname to assign to an instance.
                      enum:
                        - ip-name
                        - resource-name
                      type: string
                  type: object
                providerID:
                  description: ProviderID is the unique identifier as specified by the cloud provider.
                  type: string
                publicIP:
                  description: |-
                    PublicIP specifies whether the instance should get a public IP.
                    Precedence for this setting is as follows:
                    1. This field if set
                    2. Cluster/flavor setting
                    3. Subnet default
                  type: boolean
                rootVolume:
                  description: RootVolume encapsulates the configuration options for the root volume
                  properties:
                    deviceName:
                      description: Device name
                      type: string
                    encrypted:
                      description: Encrypted is whether the volume should be encrypted or not.
                      type: boolean
                    encryptionKey:
                      description: |-
                        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                        If Encrypted is set and this is omitted, the default AWS key will be used.
                        The key must already exist and be accessible by the controller.
                      type: string
                    iops:
                      description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                      format: int64
                      type: integer
                    size:
                      description: |-
                        Size specifies size (in Gi) of the storage device.
                        Must be greater than the image snapshot size or 8 (whichever is greater).
                      format: int64
                      minimum: 8
                      type: integer
                    throughput:
                      description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                      format: int64
                      type: integer
                    type:
                      description: Type is the type of the volume (e.g. gp2, io1, etc...).
                      type: string
                  required:
                    - size
                  type: object
                securityGroupOverrides:
                  additionalProperties:
                    type: string
                  description: |-
                    SecurityGroupOverrides is an optional set of security groups to use for the node.
                    This is optional - if not provided security groups from the cluster will be used.
                  type: object
                spotMarketOptions:
                  description: SpotMarketOptions allows users to configure instances to be run using AWS Spot instances.
                  properties:
                    maxPrice:
                      description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                      type: string
                  type: object
                sshKeyName:
                  description: SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
                subnet:
                  description: |-
                    Subnet is a reference to the subnet to use for this instance. If not specified,
                    the cluster subnet will be used.
                  properties:
                    filters:
                      description: |-
                        Filters is a set of key/value pairs used to identify a resource
                        They are applied according to the rules defined by the AWS API:
                        https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                      items:
                        description: Filter is a filter used to identify an AWS resource.
                        properties:
                          name:
                            description: Name of the filter. Filter names are case-sensitive.
                            type: string
                          values:
                            description: Values includes one or more filter values. Filter values are case-sensitive.
                            items:
                              type: string
                            type: array
                        required:
                          - name
                          - values
                        type: object
                      type: array
                    id:
                      description: ID of resource
                      type: string
                  type: object
                tenancy:
                  description: Tenancy indicates if instance should run on shared or single-tenant hardware.
                  enum:
                    - default
                    - dedicated
                    - host
                  type: string
                uncompressedUserData:
                  description: |-
                    UncompressedUserData specify whether the user data is gzip-compressed before it is sent to ec2 instance.
                    cloud-init has built-in support for gzip-compressed user data
                    user data stored in aws secret manager is always gzip-compressed.
                  type: boolean
              required:
                - instanceType
              type: object
              x-kubernetes-validations:
                - message: capacityReservationId may not be set when marketType is Spot
                  rule: '!has(self.capacityReservationId) || !has(self.marketType) || self.marketType != ''Spot'''
                - message: capacityReservationId cannot be set when spotMarketOptions is specified
                  rule: '!has(self.capacityReservationId) || !has(self.spotMarketOptions)'
            status:
              description: AWSMachineStatus defines the observed state of AWSMachine.
              properties:
                addresses:
                  description: Addresses contains the AWS instance associated addresses.
                  items:
                    description: MachineAddress contains information for the node's address.
                    properties:
                      address:
                        description: address is the machine address.
                        maxLength: 256
                        minLength: 1
                        type: string
                      type:
                        description: type is the machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                        enum:
                          - Hostname
                          - ExternalIP
                          - InternalIP
                          - ExternalDNS
                          - InternalDNS
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the AWSMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                instanceState:
                  description: InstanceState is the state of the AWS instance for this machine.
                  type: string
                interruptible:
                  description: |-
                    Interruptible reports that this machine is using spot instances and can therefore be interrupted by CAPI when it receives a notice that the spot instance is to be terminated by AWS.
                    This will be set to true when SpotMarketOptions is not nil (i.e. this machine is using a spot instance).
                  type: boolean
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta2
  name: awsmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AWSMachineTemplate
    listKind: AWSMachineTemplateList
    plural: awsmachinetemplates
    shortNames:
      - awsmt
    singular: awsmachinetemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSMachineTemplate is the schema for the Amazon EC2 Machine Templates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate.
              properties:
                template:
                  description: AWSMachineTemplateResource describes the data needed to create am AWSMachine from a template.
                  properties:
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: Spec is the specification of the desired behavior of the machine.
                      properties:
                        additionalSecurityGroups:
                          description: |-
                            AdditionalSecurityGroups is an array of references to security groups that should be applied to the
                            instance. These security groups would be set in addition to any security groups defined
                            at the cluster level or in the actuator. It is possible to specify either IDs of Filters. Using Filters
                            will cause additional requests to AWS API and if tags change the attached security groups might change too.
                          items:
                            description: |-
                              AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                              Only one of ID or Filters may be specified. Specifying more than one will result in
                              a validation error.
                            properties:
                              arn:
                                description: |-
                                  ARN of resource.
                                  Deprecated: This field has no function and is going to be removed in the next release.
                                type: string
                              filters:
                                description: |-
                                  Filters is a set of key/value pairs used to identify a resource
                                  They are applied according to the rules defined by the AWS API:
                                  https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                                items:
                                  description: Filter is a filter used to identify an AWS resource.
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - name
                                    - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: |-
                            AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                            AWS provider. If both the AWSCluster and the AWSMachine specify the same tag name with different values, the
                            AWSMachine's value takes precedence.
                          type: object
                        ami:
                          description: AMI is the reference to the AMI from which to create the machine instance.
                          properties:
                            eksLookupType:
                              description: EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
                              enum:
                                - AmazonLinux
                                - AmazonLinuxGPU
                              type: string
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        cloudInit:
                          description: |-
                            CloudInit defines options related to the bootstrapping systems where
                            CloudInit is used.
                          properties:
                            insecureSkipSecretsManager:
                              description: |-
                                InsecureSkipSecretsManager, when set to true will not use AWS Secrets Manager
                                or AWS Systems Manager Parameter Store to ensure privacy of userdata.
                                By default, a cloud-init boothook shell script is prepended to download
                                the userdata from Secrets Manager and additionally delete the secret.
                              type: boolean
                            secretCount:
                              description: SecretCount is the number of secrets used to form the complete secret
                              format: int32
                              type: integer
                            secretPrefix:
                              description: |-
                                SecretPrefix is the prefix for the secret name. This is stored
                                temporarily, and deleted when the machine registers as a node against
                                the workload cluster.
                              type: string
                            secureSecretsBackend:
                              description: |-
                                SecureSecretsBackend, when set to parameter-store will utilize the AWS Systems Manager
                                Parameter Storage to distribute secrets. By default or with the value of secrets-manager,
                                will use AWS Secrets Manager instead.
                              enum:
                                - secrets-manager
                                - ssm-parameter-store
                              type: string
                          type: object
                        failureDomain:
                          description: |-
                            FailureDomain is the failure domain unique identifier this Machine should be attached to, as defined in Cluster API.
                            For this infrastructure provider, the ID is equivalent to an AWS Availability Zone.
                            If multiple subnets are matched for the availability zone, the first one returned is picked.
                          type: string
                        iamInstanceProfile:
                          description: IAMInstanceProfile is a name of an IAM instance profile to assign to the instance
                          type: string
                        ignition:
                          description: Ignition defined options related to the bootstrapping systems where Ignition is used.
                          properties:
                            version:
                              default: "2.3"
                              description: Version defines which version of Ignition will be used to generate bootstrap data.
                              enum:
                                - "2.3"
                              type: string
                          type: object
                        imageLookupBaseOS:
                          description: |-
                            ImageLookupBaseOS is the name of the base operating system to use for
                            image lookup the AMI is not set.
                          type: string
                        imageLookupFormat:
                          description: |-
                            ImageLookupFormat is the AMI naming format to look up the image for this
                            machine It will be ignored if an explicit AMI is set. Supports
                            substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                            kubernetes version, respectively. The BaseOS will be the value in
                            ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                            defined by the packages produced by kubernetes/release without v as a
                            prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                            image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                            searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                            Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                            also: https://golang.org/pkg/text/template/
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
                          type: string
                        instanceID:
                          description: InstanceID is the EC2 instance ID for this machine.
                          type: string
                        instanceType:
                          description: 'InstanceType is the type of instance to create. Example: m4.xlarge'
                          minLength: 2
                          type: string
                        networkInterfaces:
                          description: |-
                            NetworkInterfaces is a list of ENIs to associate with the instance.
                            A maximum of 2 may be specified.
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        nonRootVolumes:
                          description: Configuration options for the non root storage volumes.
                          items:
                            description: Volume encapsulates the configuration options for the storage device.
                            properties:
                              deviceName:
                                description: Device name
                                type: string
                              encrypted:
                                description: Encrypted is whether the volume should be encrypted or not.
                                type: boolean
                              encryptionKey:
                                description: |-
                                  EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                                  If Encrypted is set and this is omitted, the default AWS key will be used.
                                  The key must already exist and be accessible by the controller.
                                type: string
                              iops:
                                description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                                format: int64
                                type: integer
                              size:
                                description: |-
                                  Size specifies size (in Gi) of the storage device.
                                  Must be greater than the image snapshot size or 8 (whichever is greater).
                                format: int64
                                minimum: 8
                                type: integer
                              throughput:
                                description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                                format: int64
                                type: integer
                              type:
                                description: Type is the type of the volume (e.g. gp2, io1, etc...).
                                type: string
                            required:
                              - size
                            type: object
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified by the cloud provider.
                          type: string
                        publicIP:
                          description: |-
                            PublicIP specifies whether the instance should get a public IP.
                            Precedence for this setting is as follows:
                            1. This field if set
                            2. Cluster/flavor setting
                            3. Subnet default
                          type: boolean
                        rootVolume:
                          description: RootVolume encapsulates the configuration options for the root volume
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: |-
                                EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                                If Encrypted is set and this is omitted, the default AWS key will be used.
                                The key must already exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: |-
                                Size specifies size (in Gi) of the storage device.
                                Must be greater than the image snapshot size or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            throughput:
                              description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                              format: int64
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2, io1, etc...).
                              type: string
                          required:
                            - size
                          type: object
                        spotMarketOptions:
                          description: SpotMarketOptions allows users to configure instances to be run using AWS Spot instances.
                          properties:
                            maxPrice:
                              description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                              type: string
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                          type: string
                        subnet:
                          description: |-
                            Subnet is a reference to the subnet to use for this instance. If not specified,
                            the cluster subnet will be used.
                          properties:
                            arn:
                              description: |-
                                ARN of resource.
                                Deprecated: This field has no function and is going to be removed in the next release.
                              type: string
                            filters:
                              description: |-
                                Filters is a set of key/value pairs used to identify a resource
                                They are applied according to the rules defined by the AWS API:
                                https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                              items:
                                description: Filter is a filter used to identify an AWS resource.
                                properties:
                                  name:
                                    description: Name of the filter. Filter names are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - name
                                  - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        tenancy:
                          description: Tenancy indicates if instance should run on shared or single-tenant hardware.
                          enum:
                            - default
                            - dedicated
                            - host
                          type: string
                        uncompressedUserData:
                          description: |-
                            UncompressedUserData specify whether the user data is gzip-compressed before it is sent to ec2 instance.
                            cloud-init has built-in support for gzip-compressed user data
                            user data stored in aws secret manager is always gzip-compressed.
                          type: boolean
                      required:
                        - instanceType
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
            status:
              description: AWSMachineTemplateStatus defines a status for an AWSMachineTemplate.
              properties:
                capacity:
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: |-
                    Capacity defines the resource capacity for this machine.
                    This value is used for autoscaling from zero operations as defined in:
                    https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md
                  type: object
              type: object
          type: object
      served: false
      storage: false
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: AWSMachineTemplate is the schema for the Amazon EC2 Machine Templates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate.
              properties:
                template:
                  description: AWSMachineTemplateResource describes the data needed to create am AWSMachine from a template.
                  properties:
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: Spec is the specification of the desired behavior of the machine.
                      properties:
                        additionalSecurityGroups:
                          description: |-
                            AdditionalSecurityGroups is an array of references to security groups that should be applied to the
                            instance. These security groups would be set in addition to any security groups defined
                            at the cluster level or in the actuator. It is possible to specify either IDs of Filters. Using Filters
                            will cause additional requests to AWS API and if tags change the attached security groups might change too.
                          items:
                            description: |-
                              AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                              Only one of ID or Filters may be specified. Specifying more than one will result in
                              a validation error.
                            properties:
                              filters:
                                description: |-
                                  Filters is a set of key/value pairs used to identify a resource
                                  They are applied according to the rules defined by the AWS API:
                                  https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                                items:
                                  description: Filter is a filter used to identify an AWS resource.
                                  properties:
                                    name:
                                      description: Name of the filter. Filter names are case-sensitive.
                                      type: string
                                    values:
                                      description: Values includes one or more filter values. Filter values are case-sensitive.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - name
                                    - values
                                  type: object
                                type: array
                              id:
                                description: ID of resource
                                type: string
                            type: object
                          type: array
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: |-
                            AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                            AWS provider. If both the AWSCluster and the AWSMachine specify the same tag name with different values, the
                            AWSMachine's value takes precedence.
                          type: object
                        ami:
                          description: AMI is the reference to the AMI from which to create the machine instance.
                          properties:
                            eksLookupType:
                              description: EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store
                              enum:
                                - AmazonLinux
                                - AmazonLinuxGPU
                                - AmazonLinux2023
                                - AmazonLinux2023GPU
                              type: string
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        capacityReservationId:
                          description: CapacityReservationID specifies the target Capacity Reservation into which the instance should be launched.
                          type: string
                        capacityReservationPreference:
                          allOf:
                            - enum:
                                - ""
                                - None
                                - CapacityReservationsOnly
                                - Open
                            - enum:
                                - ""
                                - None
                                - CapacityReservationsOnly
                                - Open
                          description: |-
                            CapacityReservationPreference specifies the preference for use of Capacity Reservations by the instance. Valid values include:
                            "Open": The instance may make use of open Capacity Reservations that match its AZ and InstanceType
                            "None": The instance may not make use of any Capacity Reservations. This is to conserve open reservations for desired workloads
                            "CapacityReservationsOnly": The instance will only run if matched or targeted to a Capacity Reservation
                          type: string
                        cloudInit:
                          description: |-
                            CloudInit defines options related to the bootstrapping systems where
                            CloudInit is used.
                          properties:
                            insecureSkipSecretsManager:
                              description: |-
                                InsecureSkipSecretsManager, when set to true will not use AWS Secrets Manager
                                or AWS Systems Manager Parameter Store to ensure privacy of userdata.
                                By default, a cloud-init boothook shell script is prepended to download
                                the userdata from Secrets Manager and additionally delete the secret.
                              type: boolean
                            secretCount:
                              description: SecretCount is the number of secrets used to form the complete secret
                              format: int32
                              type: integer
                            secretPrefix:
                              description: |-
                                SecretPrefix is the prefix for the secret name. This is stored
                                temporarily, and deleted when the machine registers as a node against
                                the workload cluster.
                              type: string
                            secureSecretsBackend:
                              description: |-
                                SecureSecretsBackend, when set to parameter-store will utilize the AWS Systems Manager
                                Parameter Storage to distribute secrets. By default or with the value of secrets-manager,
                                will use AWS Secrets Manager instead.
                              enum:
                                - secrets-manager
                                - ssm-parameter-store
                              type: string
                          type: object
                        elasticIpPool:
                          description: ElasticIPPool is the configuration to allocate Public IPv4 address (Elastic IP/EIP) from user-defined pool.
                          properties:
                            publicIpv4Pool:
                              description: |-
                                PublicIpv4Pool sets a custom Public IPv4 Pool used to create Elastic IP address for resources
                                created in public IPv4 subnets. Every IPv4 address, Elastic IP, will be allocated from the custom
                                Public IPv4 pool that you brought to AWS, instead of Amazon-provided pool. The public IPv4 pool
                                resource ID starts with 'ipv4pool-ec2'.
                              maxLength: 30
                              type: string
                            publicIpv4PoolFallbackOrder:
                              description: |-
                                PublicIpv4PoolFallBackOrder defines the fallback action when the Public IPv4 Pool has been exhausted,
                                no more IPv4 address available in the pool.

                                When set to 'amazon-pool', the controller check if the pool has available IPv4 address, when pool has reached the
                                IPv4 limit, the address will be claimed from Amazon-pool (default).

                                When set to 'none', the controller will fail the Elastic IP allocation when the publicIpv4Pool is exhausted.
                              enum:
                                - amazon-pool
                                - none
                              type: string
                              x-kubernetes-validations:
                                - message: allowed values are 'none' and 'amazon-pool'
                                  rule: self in ['none','amazon-pool']
                          type: object
                        hostAffinity:
                          description: |-
                            HostAffinity specifies the dedicated host affinity setting for the instance.
                            When hostAffinity is set to host, an instance started onto a specific host always restarts on the same host if stopped.
                            When hostAffinity is set to default, and you stop and restart the instance, it can be restarted on any available host.
                            When HostAffinity is defined, HostID is required.
                          enum:
                            - default
                            - host
                          type: string
                        hostID:
                          description: HostID specifies the Dedicated Host on which the instance must be started.
                          type: string
                        iamInstanceProfile:
                          description: IAMInstanceProfile is a name of an IAM instance profile to assign to the instance
                          type: string
                        ignition:
                          description: Ignition defined options related to the bootstrapping systems where Ignition is used.
                          properties:
                            proxy:
                              description: |-
                                Proxy defines proxy settings for Ignition.
                                Only valid for Ignition versions 3.1 and above.
                              properties:
                                httpProxy:
                                  description: |-
                                    HTTPProxy is the HTTP proxy to use for Ignition.
                                    A single URL that specifies the proxy server to use for HTTP and HTTPS requests,
                                    unless overridden by the HTTPSProxy or NoProxy options.
                                  type: string
                                httpsProxy:
                                  description: |-
                                    HTTPSProxy is the HTTPS proxy to use for Ignition.
                                    A single URL that specifies the proxy server to use for HTTPS requests,
                                    unless overridden by the NoProxy option.
                                  type: string
                                noProxy:
                                  description: |-
                                    NoProxy is the list of domains to not proxy for Ignition.
                                    Specifies a list of strings to hosts that should be excluded from proxying.

                                    Each value is represented by:
                                    - An IP address prefix (1.2.3.4)
                                    - An IP address prefix in CIDR notation (1.2.3.4/8)
                                    - A domain name
                                      - A domain name matches that name and all subdomains
                                      - A domain name with a leading . matches subdomains only
                                    - A special DNS label (*), indicates that no proxying should be done

                                    An IP address prefix and domain name can also include a literal port number (1.2.3.4:80).
                                  items:
                                    description: IgnitionNoProxy defines the list of domains to not proxy for Ignition.
                                    maxLength: 2048
                                    type: string
                                  maxItems: 64
                                  type: array
                              type: object
                            storageType:
                              default: ClusterObjectStore
                              description: |-
                                StorageType defines how to store the boostrap user data for Ignition.
                                This can be used to instruct Ignition from where to fetch the user data to bootstrap an instance.

                                When omitted, the storage option will default to ClusterObjectStore.

                                When set to "ClusterObjectStore", if the capability is available and a Cluster ObjectStore configuration
                                is correctly provided in the Cluster object (under .spec.s3Bucket),
                                an object store will be used to store bootstrap user data.

                                When set to "UnencryptedUserData", EC2 Instance User Data will be used to store the machine bootstrap user data, unencrypted.
                                This option is considered less secure than others as user data may contain sensitive informations (keys, certificates, etc.)
                                and users with ec2:DescribeInstances permission or users running pods
                                that can access the ec2 metadata service have access to this sensitive information.
                                So this is only to be used at ones own risk, and only when other more secure options are not viable.
                              enum:
                                - ClusterObjectStore
                                - UnencryptedUserData
                              type: string
                            tls:
                              description: |-
                                TLS defines TLS settings for Ignition.
                                Only valid for Ignition versions 3.1 and above.
                              properties:
                                certificateAuthorities:
                                  description: |-
                                    CASources defines the list of certificate authorities to use for Ignition.
                                    The value is the certificate bundle (in PEM format). The bundle can contain multiple concatenated certificates.
                                    Supported schemes are http, https, tftp, s3, arn, gs, and `data` (RFC 2397) URL scheme.
                                  items:
                                    description: IgnitionCASource defines the source of the certificate authority to use for Ignition.
                                    maxLength: 65536
                                    type: string
                                  maxItems: 64
                                  type: array
                              type: object
                            version:
                              default: "2.3"
                              description: Version defines which version of Ignition will be used to generate bootstrap data.
                              enum:
                                - "2.3"
                                - "3.0"
                                - "3.1"
                                - "3.2"
                                - "3.3"
                                - "3.4"
                              type: string
                          type: object
                        imageLookupBaseOS:
                          description: |-
                            ImageLookupBaseOS is the name of the base operating system to use for
                            image lookup the AMI is not set.
                          type: string
                        imageLookupFormat:
                          description: |-
                            ImageLookupFormat is the AMI naming format to look up the image for this
                            machine It will be ignored if an explicit AMI is set. Supports
                            substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                            kubernetes version, respectively. The BaseOS will be the value in
                            ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                            defined by the packages produced by kubernetes/release without v as a
                            prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                            image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                            searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                            Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                            also: https://golang.org/pkg/text/template/
                          type: string
                        imageLookupOrg:
                          description: ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.
                          type: string
                        instanceID:
                          description: InstanceID is the EC2 instance ID for this machine.
                          type: string
                        instanceMetadataOptions:
                          description: InstanceMetadataOptions is the metadata options for the EC2 instance.
                          properties:
                            httpEndpoint:
                              default: enabled
                              description: |-
                                Enables or disables the HTTP metadata endpoint on your instances.

                                If you specify a value of disabled, you cannot access your instance metadata.

                                Default: enabled
                              enum:
                                - enabled
                                - disabled
                              type: string
                            httpPutResponseHopLimit:
                              default: 1
                              description: |-
                                The desired HTTP PUT response hop limit for instance metadata requests. The
                                larger the number, the further instance metadata requests can travel.

                                Default: 1
                              format: int64
                              maximum: 64
                              minimum: 1
                              type: integer
                            httpTokens:
                              default: optional
                              description: |-
                                The state of token usage for your instance metadata requests.

                                If the state is optional, you can choose to retrieve instance metadata with
                                or without a session token on your request. If you retrieve the IAM role
                                credentials without a token, the version 1.0 role credentials are returned.
                                If you retrieve the IAM role credentials using a valid session token, the
                                version 2.0 role credentials are returned.

                                If the state is required, you must send a session token with any instance
                                metadata retrieval requests. In this state, retrieving the IAM role credentials
                                always returns the version 2.0 credentials; the version 1.0 credentials are
                                not available.

                                Default: optional
                              enum:
                                - optional
                                - required
                              type: string
                            instanceMetadataTags:
                              default: disabled
                              description: |-
                                Set to enabled to allow access to instance tags from the instance metadata.
                                Set to disabled to turn off access to instance tags from the instance metadata.
                                For more information, see Work with instance tags using the instance metadata
                                (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).

                                Default: disabled
                              enum:
                                - enabled
                                - disabled
                              type: string
                          type: object
                        instanceType:
                          description: 'InstanceType is the type of instance to create. Example: m4.xlarge'
                          minLength: 2
                          type: string
                        marketType:
                          description: |-
                            MarketType specifies the type of market for the EC2 instance. Valid values include:
                            "OnDemand" (default): The instance runs as a standard OnDemand instance.
                            "Spot": The instance runs as a Spot instance. When SpotMarketOptions is provided, the marketType defaults to "Spot".
                            "CapacityBlock": The instance utilizes pre-purchased compute capacity (capacity blocks) with AWS Capacity Reservations.
                             If this value is selected, CapacityReservationID must be specified to identify the target reservation.
                            If marketType is not specified and spotMarketOptions is provided, the marketType defaults to "Spot".
                          enum:
                            - OnDemand
                            - Spot
                            - CapacityBlock
                          type: string
                        networkInterfaceType:
                          description: |-
                            NetworkInterfaceType is the interface type of the primary network Interface.
                            If not specified, AWS applies a default value.
                          enum:
                            - interface
                            - efa
                          type: string
                        networkInterfaces:
                          description: |-
                            NetworkInterfaces is a list of ENIs to associate with the instance.
                            A maximum of 2 may be specified.
                          items:
                            type: string
                          maxItems: 2
                          type: array
                        nonRootVolumes:
                          description: Configuration options for the non root storage volumes.
                          items:
                            description: Volume encapsulates the configuration options for the storage device.
                            properties:
                              deviceName:
                                description: Device name
                                type: string
                              encrypted:
                                description: Encrypted is whether the volume should be encrypted or not.
                                type: boolean
                              encryptionKey:
                                description: |-
                                  EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                                  If Encrypted is set and this is omitted, the default AWS key will be used.
                                  The key must already exist and be accessible by the controller.
                                type: string
                              iops:
                                description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                                format: int64
                                type: integer
                              size:
                                description: |-
                                  Size specifies size (in Gi) of the storage device.
                                  Must be greater than the image snapshot size or 8 (whichever is greater).
                                format: int64
                                minimum: 8
                                type: integer
                              throughput:
                                description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                                format: int64
                                type: integer
                              type:
                                description: Type is the type of the volume (e.g. gp2, io1, etc...).
                                type: string
                            required:
                              - size
                            type: object
                          type: array
                        placementGroupName:
                          description: PlacementGroupName specifies the name of the placement group in which to launch the instance.
                          type: string
                        placementGroupPartition:
                          description: |-
                            PlacementGroupPartition is the partition number within the placement group in which to launch the instance.
                            This value is only valid if the placement group, referred in `PlacementGroupName`, was created with
                            strategy set to partition.
                          format: int64
                          maximum: 7
                          minimum: 1
                          type: integer
                        privateDnsName:
                          description: PrivateDNSName is the options for the instance hostname.
                          properties:
                            enableResourceNameDnsAAAARecord:
                              description: EnableResourceNameDNSAAAARecord indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
                              type: boolean
                            enableResourceNameDnsARecord:
                              description: EnableResourceNameDNSARecord indicates whether to respond to DNS queries for instance hostnames with DNS A records.
                              type: boolean
                            hostnameType:
                              description: The type of hostname to assign to an instance.
                              enum:
                                - ip-name
                                - resource-name
                              type: string
                          type: object
                        providerID:
                          description: ProviderID is the unique identifier as specified by the cloud provider.
                          type: string
                        publicIP:
                          description: |-
                            PublicIP specifies whether the instance should get a public IP.
                            Precedence for this setting is as follows:
                            1. This field if set
                            2. Cluster/flavor setting
                            3. Subnet default
                          type: boolean
                        rootVolume:
                          description: RootVolume encapsulates the configuration options for the root volume
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: |-
                                EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                                If Encrypted is set and this is omitted, the default AWS key will be used.
                                The key must already exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: |-
                                Size specifies size (in Gi) of the storage device.
                                Must be greater than the image snapshot size or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            throughput:
                              description: Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.
                              format: int64
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2, io1, etc...).
                              type: string
                          required:
                            - size
                          type: object
                        securityGroupOverrides:
                          additionalProperties:
                            type: string
                          description: |-
                            SecurityGroupOverrides is an optional set of security groups to use for the node.
                            This is optional - if not provided security groups from the cluster will be used.
                          type: object
                        spotMarketOptions:
                          description: SpotMarketOptions allows users to configure instances to be run using AWS Spot instances.
                          properties:
                            maxPrice:
                              description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                              type: string
                          type: object
                        sshKeyName:
                          description: SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                          type: string
                        subnet:
                          description: |-
                            Subnet is a reference to the subnet to use for this instance. If not specified,
                            the cluster subnet will be used.
                          properties:
                            filters:
                              description: |-
                                Filters is a set of key/value pairs used to identify a resource
                                They are applied according to the rules defined by the AWS API:
                                https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                              items:
                                description: Filter is a filter used to identify an AWS resource.
                                properties:
                                  name:
                                    description: Name of the filter. Filter names are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - name
                                  - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        tenancy:
                          description: Tenancy indicates if instance should run on shared or single-tenant hardware.
                          enum:
                            - default
                            - dedicated
                            - host
                          type: string
                        uncompressedUserData:
                          description: |-
                            UncompressedUserData specify whether the user data is gzip-compressed before it is sent to ec2 instance.
                            cloud-init has built-in support for gzip-compressed user data
                            user data stored in aws secret manager is always gzip-compressed.
                          type: boolean
                      required:
                        - instanceType
                      type: object
                      x-kubernetes-validations:
                        - message: capacityReservationId may not be set when marketType is Spot
                          rule: '!has(self.capacityReservationId) || !has(self.marketType) || self.marketType != ''Spot'''
                        - message: capacityReservationId cannot be set when spotMarketOptions is specified
                          rule: '!has(self.capacityReservationId) || !has(self.spotMarketOptions)'
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
            status:
              description: AWSMachineTemplateStatus defines a status for an AWSMachineTemplate.
              properties:
                capacity:
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: |-
                    Capacity defines the resource capacity for this machine.
                    This value is used for autoscaling from zero operations as defined in:
                    https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md
                  type: object
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: azureasomanagedclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedCluster
    listKind: AzureASOManagedClusterList
    plural: azureasomanagedclusters
    singular: azureasomanagedcluster
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureASOManagedCluster is the Schema for the azureasomanagedclusters API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureASOManagedClusterSpec defines the desired state of AzureASOManagedCluster.
              properties:
                controlPlaneEndpoint:
                  description: |-
                    ControlPlaneEndpoint is the location of the API server within the control plane. CAPZ manages this field
                    and it should not be set by the user. It fulfills Cluster API's cluster infrastructure provider contract.
                    Because this field is programmatically set by CAPZ after resource creation, we define it as +optional
                    in the API schema to permit resource admission.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                resources:
                  description: Resources are embedded ASO resources to be managed by this resource.
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
              type: object
            status:
              description: AzureASOManagedClusterStatus defines the observed state of AzureASOManagedCluster.
              properties:
                ready:
                  description: |-
                    Ready represents whether or not the cluster has been provisioned and is ready. It fulfills Cluster
                    API's cluster infrastructure provider contract.
                  type: boolean
                resources:
                  items:
                    description: ResourceStatus represents the status of a resource.
                    properties:
                      ready:
                        type: boolean
                      resource:
                        description: StatusResource is a handle to a resource.
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          version:
                            type: string
                        required:
                          - group
                          - kind
                          - name
                          - version
                        type: object
                    required:
                      - ready
                      - resource
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: azureasomanagedclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedClusterTemplate
    listKind: AzureASOManagedClusterTemplateList
    plural: azureasomanagedclustertemplates
    singular: azureasomanagedclustertemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureASOManagedClusterTemplate is the Schema for the azureasomanagedclustertemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureASOManagedClusterTemplateSpec defines the desired state of AzureASOManagedClusterTemplate.
              properties:
                template:
                  description: AzureASOManagedClusterTemplateResource defines the templated resource.
                  properties:
                    spec:
                      description: AzureASOManagedClusterTemplateResourceSpec defines the desired state of the templated resource.
                      properties:
                        resources:
                          description: Resources are embedded ASO resources to be managed by this resource.
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                      type: object
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: azureasomanagedcontrolplanes.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedControlPlane
    listKind: AzureASOManagedControlPlaneList
    plural: azureasomanagedcontrolplanes
    singular: azureasomanagedcontrolplane
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureASOManagedControlPlane is the Schema for the azureasomanagedcontrolplanes API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureASOManagedControlPlaneSpec defines the desired state of AzureASOManagedControlPlane.
              properties:
                resources:
                  description: Resources are embedded ASO resources to be managed by this resource.
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
                version:
                  description: |-
                    Version is the Kubernetes version of the control plane. It fulfills Cluster API's control plane
                    provider contract.
                  type: string
              type: object
            status:
              description: AzureASOManagedControlPlaneStatus defines the observed state of AzureASOManagedControlPlane.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint for the cluster's API server.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                initialized:
                  description: |-
                    Initialized represents whether or not the API server has been provisioned. It fulfills Cluster API's
                    control plane provider contract. For AKS, this is equivalent to `ready`.
                  type: boolean
                ready:
                  description: |-
                    Ready represents whether or not the API server is ready to receive requests. It fulfills Cluster API's
                    control plane provider contract. For AKS, this is equivalent to `initialized`.
                  type: boolean
                resources:
                  items:
                    description: ResourceStatus represents the status of a resource.
                    properties:
                      ready:
                        type: boolean
                      resource:
                        description: StatusResource is a handle to a resource.
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          version:
                            type: string
                        required:
                          - group
                          - kind
                          - name
                          - version
                        type: object
                    required:
                      - ready
                      - resource
                    type: object
                  type: array
                version:
                  description: |-
                    Version is the observed Kubernetes version of the control plane. It fulfills Cluster API's control
                    plane provider contract.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: azureasomanagedcontrolplanetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedControlPlaneTemplate
    listKind: AzureASOManagedControlPlaneTemplateList
    plural: azureasomanagedcontrolplanetemplates
    singular: azureasomanagedcontrolplanetemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureASOManagedControlPlaneTemplate is the Schema for the azureasomanagedcontrolplanetemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureASOManagedControlPlaneTemplateSpec defines the desired state of AzureASOManagedControlPlane.
              properties:
                template:
                  description: AzureASOManagedControlPlaneResource defines the templated resource.
                  properties:
                    spec:
                      description: AzureASOManagedControlPlaneTemplateResourceSpec defines the desired state of the templated resource.
                      properties:
                        resources:
                          description: Resources are embedded ASO resources to be managed by this resource.
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                        version:
                          description: |-
                            Version is the Kubernetes version of the control plane. It fulfills Cluster API's control plane
                            provider contract.
                          type: string
                      type: object
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: azureasomanagedmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedMachinePool
    listKind: AzureASOManagedMachinePoolList
    plural: azureasomanagedmachinepools
    singular: azureasomanagedmachinepool
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureASOManagedMachinePool is the Schema for the azureasomanagedmachinepools API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureASOManagedMachinePoolSpec defines the desired state of AzureASOManagedMachinePool.
              properties:
                providerIDList:
                  description: |-
                    ProviderIDList is the list of cloud provider IDs for the instances. It fulfills Cluster API's machine
                    pool infrastructure provider contract.
                  items:
                    type: string
                  type: array
                resources:
                  description: Resources are embedded ASO resources to be managed by this resource.
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
              type: object
            status:
              description: AzureASOManagedMachinePoolStatus defines the observed state of AzureASOManagedMachinePool.
              properties:
                ready:
                  description: |-
                    Ready represents whether or not the infrastructure is ready to be used. It fulfills Cluster API's
                    machine pool infrastructure provider contract.
                  type: boolean
                replicas:
                  description: |-
                    Replicas is the current number of provisioned replicas. It fulfills Cluster API's machine pool
                    infrastructure provider contract.
                  format: int32
                  type: integer
                resources:
                  items:
                    description: ResourceStatus represents the status of a resource.
                    properties:
                      ready:
                        type: boolean
                      resource:
                        description: StatusResource is a handle to a resource.
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          version:
                            type: string
                        required:
                          - group
                          - kind
                          - name
                          - version
                        type: object
                    required:
                      - ready
                      - resource
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: azureasomanagedmachinepooltemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: AzureASOManagedMachinePoolTemplate
    listKind: AzureASOManagedMachinePoolTemplateList
    plural: azureasomanagedmachinepooltemplates
    singular: azureasomanagedmachinepooltemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureASOManagedMachinePoolTemplate is the Schema for the azureasomanagedmachinepooltemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureASOManagedMachinePoolTemplateSpec defines the desired state of AzureASOManagedMachinePoolTemplate.
              properties:
                template:
                  description: AzureASOManagedControlPlaneResource defines the templated resource.
                  properties:
                    spec:
                      description: AzureASOManagedControlPlaneTemplateResourceSpec defines the desired state of the templated resource.
                      properties:
                        resources:
                          description: Resources are embedded ASO resources to be managed by this resource.
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                        version:
                          description: |-
                            Version is the Kubernetes version of the control plane. It fulfills Cluster API's control plane
                            provider contract.
                          type: string
                      type: object
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: azureclusteridentities.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AzureClusterIdentity
    listKind: AzureClusterIdentityList
    plural: azureclusteridentities
    singular: azureclusteridentity
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Type of AzureClusterIdentity
          jsonPath: .spec.type
          name: Type
          type: string
        - description: Time duration since creation of this AzureClusterIdentity
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureClusterIdentity is the Schema for the azureclustersidentities API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureClusterIdentitySpec defines the parameters that are used to create an AzureIdentity.
              properties:
                allowedNamespaces:
                  description: |-
                    AllowedNamespaces is used to identify the namespaces the clusters are allowed to use the identity from.
                    Namespaces can be selected either using an array of namespaces or with label selector.
                    An empty allowedNamespaces object indicates that AzureClusters can use this identity from any namespace.
                    If this object is nil, no namespaces will be allowed (default behaviour, if this field is not provided)
                    A namespace should be either in the NamespaceList or match with Selector to use the identity.
                  nullable: true
                  properties:
                    list:
                      description: A nil or empty list indicates that AzureCluster cannot use the identity from any namespace.
                      items:
                        type: string
                      nullable: true
                      type: array
                    selector:
                      description: |-
                        Selector is a selector of namespaces that AzureCluster can
                        use this Identity from. This is a standard Kubernetes LabelSelector,
                        a label query over a set of resources. The result of matchLabels and
                        matchExpressions are ANDed.

                        A nil or empty selector indicates that AzureCluster cannot use this
                        AzureClusterIdentity from any namespace.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                certPath:
                  description: CertPath is the path where certificates exist. When set, it takes precedence over ClientSecret for types that use certs like ServicePrincipalCertificate.
                  type: string
                clientID:
                  description: |-
                    ClientID is the service principal client ID.
                    Both User Assigned MSI and SP can use this field.
                  type: string
                clientSecret:
                  description: ClientSecret is a secret reference which should contain either a Service Principal password or certificate secret.
                  properties:
                    name:
                      description: name is unique within a namespace to reference a secret resource.
                      type: string
                    namespace:
                      description: namespace defines the space within which the secret name must be unique.
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                resourceID:
                  description: |-
                    ResourceID is the Azure resource ID for the User Assigned MSI resource.
                    Only applicable when type is UserAssignedMSI.

                    Deprecated: This field no longer has any effect.
                  type: string
                tenantID:
                  description: TenantID is the service principal primary tenant id.
                  type: string
                type:
                  description: |-
                    Type is the type of Azure Identity used.
                    ServicePrincipal, ServicePrincipalCertificate, UserAssignedMSI, ManualServicePrincipal, UserAssignedIdentityCredential, or WorkloadIdentity.
                  enum:
                    - ServicePrincipal
                    - UserAssignedMSI
                    - ManualServicePrincipal
                    - ServicePrincipalCertificate
                    - WorkloadIdentity
                    - UserAssignedIdentityCredential
                  type: string
                userAssignedIdentityCredentialsCloudType:
                  description: |-
                    UserAssignedIdentityCredentialsCloudType is used with UserAssignedIdentityCredentialsPath to specify the Cloud
                    type. Can only be one of the following values: public, china, or usgovernment
                    If a value is not specified, defaults to public
                  type: string
                userAssignedIdentityCredentialsPath:
                  description: |-
                    UserAssignedIdentityCredentialsPath is the path where an existing JSON file exists containing the JSON format of
                    a UserAssignedIdentityCredentials struct.
                    See the msi-dataplane for more details on UserAssignedIdentityCredentials - https://github.com/Azure/msi-dataplane/blob/main/pkg/dataplane/internal/client/models.go#L125
                  type: string
              required:
                - clientID
                - tenantID
                - type
              type: object
            status:
              description: AzureClusterIdentityStatus defines the observed state of AzureClusterIdentity.
              properties:
                conditions:
                  description: Conditions defines current service state of the AzureClusterIdentity.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: azureclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AzureCluster
    listKind: AzureClusterList
    plural: azureclusters
    singular: azurecluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this AzureCluster belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].message
          name: Message
          priority: 1
          type: string
        - jsonPath: .spec.resourceGroup
          name: Resource Group
          priority: 1
          type: string
        - jsonPath: .spec.subscriptionID
          name: SubscriptionID
          priority: 1
          type: string
        - jsonPath: .spec.location
          name: Location
          priority: 1
          type: string
        - description: Control Plane Endpoint
          jsonPath: .spec.controlPlaneEndpoint.host
          name: Endpoint
          priority: 1
          type: string
        - description: Time duration since creation of this AzureCluster
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureCluster is the Schema for the azureclusters API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureClusterSpec defines the desired state of AzureCluster.
              properties:
                additionalTags:
                  additionalProperties:
                    type: string
                  description: |-
                    AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the
                    ones added by default.
                  type: object
                azureEnvironment:
                  description: |-
                    AzureEnvironment is the name of the AzureCloud to be used.
                    The default value that would be used by most users is "AzurePublicCloud", other values are:
                    - ChinaCloud: "AzureChinaCloud"
                    - GermanCloud: "AzureGermanCloud"
                    - PublicCloud: "AzurePublicCloud"
                    - USGovernmentCloud: "AzureUSGovernmentCloud"

                    Note that values other than the default must also be accompanied by corresponding changes to the
                    aso-controller-settings Secret to configure ASO to refer to the non-Public cloud. ASO currently does
                    not support referring to multiple different clouds in a single installation. The following fields must
                    be defined in the Secret:
                    - AZURE_AUTHORITY_HOST
                    - AZURE_RESOURCE_MANAGER_ENDPOINT
                    - AZURE_RESOURCE_MANAGER_AUDIENCE

                    See the [ASO docs] for more details.

                    [ASO docs]: https://azure.github.io/azure-service-operator/guide/aso-controller-settings-options/
                  type: string
                bastionSpec:
                  description: BastionSpec encapsulates all things related to the Bastions in the cluster.
                  properties:
                    azureBastion:
                      description: AzureBastion specifies how the Azure Bastion cloud component should be configured.
                      properties:
                        enableTunneling:
                          default: false
                          description: EnableTunneling enables the native client support feature for the Azure Bastion Host. Defaults to false.
                          type: boolean
                        name:
                          type: string
                        publicIP:
                          description: PublicIPSpec defines the inputs to create an Azure public IP address.
                          properties:
                            dnsName:
                              type: string
                            ipTags:
                              items:
                                description: IPTag contains the IpTag associated with the object.
                                properties:
                                  tag:
                                    description: 'Tag specifies the value of the IP tag associated with the public IP. Example: SQL.'
                                    type: string
                                  type:
                                    description: 'Type specifies the IP tag type. Example: FirstPartyUsage.'
                                    type: string
                                required:
                                  - tag
                                  - type
                                type: object
                              type: array
                            name:
                              type: string
                          required:
                            - name
                          type: object
                        sku:
                          default: Basic
                          description: BastionHostSkuName configures the tier of the Azure Bastion Host. Can be either Basic or Standard. Defaults to Basic.
                          enum:
                            - Basic
                            - Standard
                          type: string
                        subnet:
                          description: SubnetSpec configures an Azure subnet.
                          properties:
                            cidrBlocks:
                              description: CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.
                              items:
                                type: string
                              type: array
                            id:
                              description: |-
                                ID is the Azure resource ID of the subnet.
                                READ-ONLY
                              type: string
                            name:
                              description: Name defines a name for the subnet resource.
                              type: string
                            natGateway:
                              description: NatGateway associated with this subnet.
                              properties:
                                id:
                                  description: |-
                                    ID is the Azure resource ID of the NAT gateway.
                                    READ-ONLY
                                  type: string
                                ip:
                                  description: PublicIPSpec defines the inputs to create an Azure public IP address.
                                  properties:
                                    dnsName:
                                      type: string
                                    ipTags:
                                      items:
                                        description: IPTag contains the IpTag associated with the object.
                                        properties:
                                          tag:
                                            description: 'Tag specifies the value of the IP tag associated with the public IP. Example: SQL.'
                                            type: string
                                          type:
                                            description: 'Type specifies the IP tag type. Example: FirstPartyUsage.'
                                            type: string
                                        required:
                                          - tag
                                          - type
                                        type: object
                                      type: array
                                    name:
                                      type: string
                                  required:
                                    - name
                                  type: object
                                name:
                                  type: string
                              required:
                                - name
                              type: object
                            privateEndpoints:
                              description: PrivateEndpoints defines a list of private endpoints that should be attached to this subnet.
                              items:
                                description: PrivateEndpointSpec configures an Azure Private Endpoint.
                                properties:
                                  applicationSecurityGroups:
                                    description: ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.
                                    items:
                                      type: string
                                    type: array
                                  customNetworkInterfaceName:
                                    description: CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.
                                    type: string
                                  location:
                                    description: Location specifies the region to create the private endpoint.
                                    type: string
                                  manualApproval:
                                    description: |-
                                      ManualApproval specifies if the connection approval needs to be done manually or not.
                                      Set it true when the network admin does not have access to approve connections to the remote resource.
                                      Defaults to false.
                                    type: boolean
                                  name:
                                    description: Name specifies the name of the private endpoint.
                                    type: string
                                  privateIPAddresses:
                                    description: |-
                                      PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                      They have to be part of the subnet where the private endpoint is linked.
                                    items:
                                      type: string
                                    type: array
                                  privateLinkServiceConnections:
                                    description: PrivateLinkServiceConnections specifies Private Link Service Connections of the private endpoint.
                                    items:
                                      description: PrivateLinkServiceConnection defines the specification for a private link service connection associated with a private endpoint.
                                      properties:
                                        groupIDs:
                                          description: GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: Name specifies the name of the private link service.
                                          type: string
                                        privateLinkServiceID:
                                          description: PrivateLinkServiceID specifies the resource ID of the private link service.
                                          type: string
                                        requestMessage:
                                          description: RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.
                                          maxLength: 140
                                          type: string
                                      type: object
                                    type: array
                                required:
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            role:
                              description: Role defines the subnet role (eg. Node, ControlPlane)
                              enum:
                                - node
                                - control-plane
                                - bastion
                                - cluster
                              type: string
                            routeTable:
                              description: RouteTable defines the route table that should be attached to this subnet.
                              properties:
                                id:
                                  description: |-
                                    ID is the Azure resource ID of the route table.
                                    READ-ONLY
                                  type: string
                                name:
                                  type: string
                              required:
                                - name
                              type: object
                            securityGroup:
                              description: SecurityGroup defines the NSG (network security group) that should be attached to this subnet.
                              properties:
                                id:
                                  description: |-
                                    ID is the Azure resource ID of the security group.
                                    READ-ONLY
                                  type: string
                                name:
                                  type: string
                                securityRules:
                                  description: SecurityRules is a slice of Azure security rules for security groups.
                                  items:
                                    description: SecurityRule defines an Azure security rule for security groups.
                                    properties:
                                      action:
                                        default: Allow
                                        description: Action specifies whether network traffic is allowed or denied. Can either be "Allow" or "Deny". Defaults to "Allow".
                                        enum:
                                          - Allow
                                          - Deny
                                        type: string
                                      description:
                                        description: A description for this rule. Restricted to 140 chars.
                                        type: string
                                      destination:
                                        description: Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                                        type: string
                                      destinationPorts:
                                        description: DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                        type: string
                                      direction:
                                        description: Direction indicates whether the rule applies to inbound, or outbound traffic. "Inbound" or "Outbound".
                                        enum:
                                          - Inbound
                                          - Outbound
                                        type: string
                                      name:
                                        description: Name is a unique name within the network security group.
                                        type: string
                                      priority:
                                        description: Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.
                                        format: int32
                                        type: integer
                                      protocol:
                                        description: Protocol specifies the protocol type. "Tcp", "Udp", "Icmp", or "*".
                                        enum:
                                          - Tcp
                                          - Udp
                                          - Icmp
                                          - '*'
                                        type: string
                                      source:
                                        description: Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
                                        type: string
                                      sourcePorts:
                                        description: SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                        type: string
                                      sources:
                                        description: Sources specifies The CIDR or source IP ranges.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - description
                                      - direction
                                      - name
                                      - protocol
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Tags defines a map of tags.
                                  type: object
                              required:
                                - name
                              type: object
                            serviceEndpoints:
                              description: ServiceEndpoints is a slice of Virtual Network service endpoints to enable for the subnets.
                              items:
                                description: ServiceEndpointSpec configures an Azure Service Endpoint.
                                properties:
                                  locations:
                                    items:
                                      type: string
                                    type: array
                                  service:
                                    type: string
                                required:
                                  - locations
                                  - service
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - service
                              x-kubernetes-list-type: map
                          required:
                            - name
                            - role
                          type: object
                      type: object
                  type: object
                cloudProviderConfigOverrides:
                  description: |-
                    CloudProviderConfigOverrides is an optional set of configuration values that can be overridden in azure cloud provider config.
                    This is only a subset of options that are available in azure cloud provider config.
                    Some values for the cloud provider config are inferred from other parts of cluster api provider azure spec, and may not be available for overrides.
                    See: https://cloud-provider-azure.sigs.k8s.io/install/configs
                    Note: All cloud provider config values can be customized by creating the secret beforehand. CloudProviderConfigOverrides is only used when the secret is managed by the Azure Provider.
                  properties:
                    backOffs:
                      description: BackOffConfig indicates the back-off config options.
                      properties:
                        cloudProviderBackoff:
                          type: boolean
                        cloudProviderBackoffDuration:
                          type: integer
                        cloudProviderBackoffExponent:
                          anyOf:
                            - type: integer
                            - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        cloudProviderBackoffJitter:
                          anyOf:
                            - type: integer
                            - type: string
                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                          x-kubernetes-int-or-string: true
                        cloudProviderBackoffRetries:
                          type: integer
                      type: object
                    rateLimits:
                      items:
                        description: |-
                          RateLimitSpec represents the rate limit configuration for a particular kind of resource.
                          Eg. loadBalancerRateLimit is used to configure rate limits for load balancers.
                          This eventually gets converted to CloudProviderRateLimitConfig that cloud-provider-azure expects.
                          See: https://github.com/kubernetes-sigs/cloud-provider-azure/blob/d585c2031925b39c925624302f22f8856e29e352/pkg/provider/azure_ratelimit.go#L25
                          We cannot use CloudProviderRateLimitConfig directly because floating point values are not supported in controller-tools.
                          See: https://github.com/kubernetes-sigs/controller-tools/issues/245
                        properties:
                          config:
                            description: RateLimitConfig indicates the rate limit config options.
                            properties:
                              cloudProviderRateLimit:
                                type: boolean
                              cloudProviderRateLimitBucket:
                                type: integer
                              cloudProviderRateLimitBucketWrite:
                                type: integer
                              cloudProviderRateLimitQPS:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              cloudProviderRateLimitQPSWrite:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                          name:
                            description: Name is the name of the rate limit spec.
                            enum:
                              - defaultRateLimit
                              - routeRateLimit
                              - subnetsRateLimit
                              - interfaceRateLimit
                              - routeTableRateLimit
                              - loadBalancerRateLimit
                              - publicIPAddressRateLimit
                              - securityGroupRateLimit
                              - virtualMachineRateLimit
                              - storageAccountRateLimit
                              - diskRateLimit
                              - snapshotRateLimit
                              - virtualMachineScaleSetRateLimit
                              - virtualMachineSizesRateLimit
                              - availabilitySetRateLimit
                            type: string
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                controlPlaneEnabled:
                  default: true
                  description: ControlPlaneEnabled enables control plane components in the cluster.
                  type: boolean
                controlPlaneEndpoint:
                  description: |-
                    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane. It is not recommended to set
                    this when creating an AzureCluster as CAPZ will set this for you. However, if it is set, CAPZ will not change it.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                extendedLocation:
                  description: ExtendedLocation is an optional set of ExtendedLocation properties for clusters on Azure public MEC.
                  properties:
                    name:
                      description: Name defines the name for the extended location.
                      type: string
                    type:
                      description: Type defines the type for the extended location.
                      enum:
                        - EdgeZone
                      type: string
                  required:
                    - name
                    - type
                  type: object
                failureDomains:
                  additionalProperties:
                    description: |-
                      FailureDomainSpec is the Schema for Cluster API failure domains.
                      It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: attributes is a free form map of attributes an infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: |-
                    FailureDomains is a list of failure domains in the cluster's region, used to restrict
                    eligibility to host the control plane. A FailureDomain maps to an availability zone,
                    which is a separated group of datacenters within a region.
                    See: https://learn.microsoft.com/azure/reliability/availability-zones-overview
                  type: object
                identityRef:
                  description: IdentityRef is a reference to an AzureIdentity to be used when reconciling this cluster
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                location:
                  type: string
                networkSpec:
                  description: NetworkSpec encapsulates all things related to Azure network.
                  properties:
                    additionalAPIServerLBPorts:
                      description: |-
                        AdditionalAPIServerLBPorts specifies extra inbound ports for the APIServer load balancer.
                        Each port specified (e.g., 9345) creates an inbound rule where the frontend port and the backend port are the same.
                      items:
                        description: LoadBalancerPort specifies additional port for the API server load balancer.
                        properties:
                          name:
                            description: Name for the additional port within LB definition
                            type: string
                          port:
                            description: Port for the LB definition
                            format: int32
                            type: integer
                        required:
                          - name
                          - port
                        type: object
                      type: array
                    apiServerLB:
                      description: APIServerLB is the configuration for the control-plane load balancer.
                      properties:
                        backendPool:
                          description: BackendPool describes the backend pool of the load balancer.
                          properties:
                            name:
                              description: |-
                                Name specifies the name of backend pool for the load balancer. If not specified, the default name will
                                be set, depending on the load balancer role.
                              type: string
                          type: object
                        frontendIPs:
                          items:
                            description: FrontendIP defines a load balancer frontend IP configuration.
                            properties:
                              name:
                                minLength: 1
                                type: string
                              privateIP:
                                type: string
                              publicIP:
                                description: PublicIPSpec defines the inputs to create an Azure public IP address.
                                properties:
                                  dnsName:
                                    type: string
                                  ipTags:
                                    items:
                                      description: IPTag contains the IpTag associated with the object.
                                      properties:
                                        tag:
                                          description: 'Tag specifies the value of the IP tag associated with the public IP. Example: SQL.'
                                          type: string
                                        type:
                                          description: 'Type specifies the IP tag type. Example: FirstPartyUsage.'
                                          type: string
                                      required:
                                        - tag
                                        - type
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                  - name
                                type: object
                            required:
                              - name
                            type: object
                          type: array
                        frontendIPsCount:
                          description: FrontendIPsCount specifies the number of frontend IP addresses for the load balancer.
                          format: int32
                          type: integer
                        id:
                          description: |-
                            ID is the Azure resource ID of the load balancer.
                            READ-ONLY
                          type: string
                        idleTimeoutInMinutes:
                          description: IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.
                          format: int32
                          type: integer
                        name:
                          type: string
                        sku:
                          description: SKU defines an Azure load balancer SKU.
                          type: string
                        type:
                          description: LBType defines an Azure load balancer Type.
                          type: string
                      type: object
                    controlPlaneOutboundLB:
                      description: |-
                        ControlPlaneOutboundLB is the configuration for the control-plane outbound load balancer.
                        This is different from APIServerLB, and is used only in private clusters (optionally) for enabling outbound traffic.
                      properties:
                        backendPool:
                          description: BackendPool describes the backend pool of the load balancer.
                          properties:
                            name:
                              description: |-
                                Name specifies the name of backend pool for the load balancer. If not specified, the default name will
                                be set, depending on the load balancer role.
                              type: string
                          type: object
                        frontendIPs:
                          items:
                            description: FrontendIP defines a load balancer frontend IP configuration.
                            properties:
                              name:
                                minLength: 1
                                type: string
                              privateIP:
                                type: string
                              publicIP:
                                description: PublicIPSpec defines the inputs to create an Azure public IP address.
                                properties:
                                  dnsName:
                                    type: string
                                  ipTags:
                                    items:
                                      description: IPTag contains the IpTag associated with the object.
                                      properties:
                                        tag:
                                          description: 'Tag specifies the value of the IP tag associated with the public IP. Example: SQL.'
                                          type: string
                                        type:
                                          description: 'Type specifies the IP tag type. Example: FirstPartyUsage.'
                                          type: string
                                      required:
                                        - tag
                                        - type
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                  - name
                                type: object
                            required:
                              - name
                            type: object
                          type: array
                        frontendIPsCount:
                          description: FrontendIPsCount specifies the number of frontend IP addresses for the load balancer.
                          format: int32
                          type: integer
                        id:
                          description: |-
                            ID is the Azure resource ID of the load balancer.
                            READ-ONLY
                          type: string
                        idleTimeoutInMinutes:
                          description: IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.
                          format: int32
                          type: integer
                        name:
                          type: string
                        sku:
                          description: SKU defines an Azure load balancer SKU.
                          type: string
                        type:
                          description: LBType defines an Azure load balancer Type.
                          type: string
                      type: object
                    nodeOutboundLB:
                      description: NodeOutboundLB is the configuration for the node outbound load balancer.
                      properties:
                        backendPool:
                          description: BackendPool describes the backend pool of the load balancer.
                          properties:
                            name:
                              description: |-
                                Name specifies the name of backend pool for the load balancer. If not specified, the default name will
                                be set, depending on the load balancer role.
                              type: string
                          type: object
                        frontendIPs:
                          items:
                            description: FrontendIP defines a load balancer frontend IP configuration.
                            properties:
                              name:
                                minLength: 1
                                type: string
                              privateIP:
                                type: string
                              publicIP:
                                description: PublicIPSpec defines the inputs to create an Azure public IP address.
                                properties:
                                  dnsName:
                                    type: string
                                  ipTags:
                                    items:
                                      description: IPTag contains the IpTag associated with the object.
                                      properties:
                                        tag:
                                          description: 'Tag specifies the value of the IP tag associated with the public IP. Example: SQL.'
                                          type: string
                                        type:
                                          description: 'Type specifies the IP tag type. Example: FirstPartyUsage.'
                                          type: string
                                      required:
                                        - tag
                                        - type
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                  - name
                                type: object
                            required:
                              - name
                            type: object
                          type: array
                        frontendIPsCount:
                          description: FrontendIPsCount specifies the number of frontend IP addresses for the load balancer.
                          format: int32
                          type: integer
                        id:
                          description: |-
                            ID is the Azure resource ID of the load balancer.
                            READ-ONLY
                          type: string
                        idleTimeoutInMinutes:
                          description: IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.
                          format: int32
                          type: integer
                        name:
                          type: string
                        sku:
                          description: SKU defines an Azure load balancer SKU.
                          type: string
                        type:
                          description: LBType defines an Azure load balancer Type.
                          type: string
                      type: object
                    privateDNSZone:
                      description: |-
                        PrivateDNSZone enables private dns zone creation modes for a private cluster.
                        When unspecified, it defaults to PrivateDNSZoneModeSystem which creates a private DNS zone.
                      enum:
                        - System
                        - None
                      type: string
                    privateDNSZoneName:
                      description: PrivateDNSZoneName defines the zone name for the Azure Private DNS.
                      type: string
                    privateDNSZoneResourceGroup:
                      description: |-
                        PrivateDNSZoneResourceGroup defines the resource group to be used for Azure Private DNS Zone.
                        If not specified, the resource group of the cluster will be used to create the Azure Private DNS Zone.
                      type: string
                    subnets:
                      description: Subnets is the configuration for the control-plane subnet and the node subnet.
                      items:
                        description: SubnetSpec configures an Azure subnet.
                        properties:
                          cidrBlocks:
                            description: CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.
                            items:
                              type: string
                            type: array
                          id:
                            description: |-
                              ID is the Azure resource ID of the subnet.
                              READ-ONLY
                            type: string
                          name:
                            description: Name defines a name for the subnet resource.
                            type: string
                          natGateway:
                            description: NatGateway associated with this subnet.
                            properties:
                              id:
                                description: |-
                                  ID is the Azure resource ID of the NAT gateway.
                                  READ-ONLY
                                type: string
                              ip:
                                description: PublicIPSpec defines the inputs to create an Azure public IP address.
                                properties:
                                  dnsName:
                                    type: string
                                  ipTags:
                                    items:
                                      description: IPTag contains the IpTag associated with the object.
                                      properties:
                                        tag:
                                          description: 'Tag specifies the value of the IP tag associated with the public IP. Example: SQL.'
                                          type: string
                                        type:
                                          description: 'Type specifies the IP tag type. Example: FirstPartyUsage.'
                                          type: string
                                      required:
                                        - tag
                                        - type
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                  - name
                                type: object
                              name:
                                type: string
                            required:
                              - name
                            type: object
                          privateEndpoints:
                            description: PrivateEndpoints defines a list of private endpoints that should be attached to this subnet.
                            items:
                              description: PrivateEndpointSpec configures an Azure Private Endpoint.
                              properties:
                                applicationSecurityGroups:
                                  description: ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.
                                  items:
                                    type: string
                                  type: array
                                customNetworkInterfaceName:
                                  description: CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.
                                  type: string
                                location:
                                  description: Location specifies the region to create the private endpoint.
                                  type: string
                                manualApproval:
                                  description: |-
                                    ManualApproval specifies if the connection approval needs to be done manually or not.
                                    Set it true when the network admin does not have access to approve connections to the remote resource.
                                    Defaults to false.
                                  type: boolean
                                name:
                                  description: Name specifies the name of the private endpoint.
                                  type: string
                                privateIPAddresses:
                                  description: |-
                                    PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                    They have to be part of the subnet where the private endpoint is linked.
                                  items:
                                    type: string
                                  type: array
                                privateLinkServiceConnections:
                                  description: PrivateLinkServiceConnections specifies Private Link Service Connections of the private endpoint.
                                  items:
                                    description: PrivateLinkServiceConnection defines the specification for a private link service connection associated with a private endpoint.
                                    properties:
                                      groupIDs:
                                        description: GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: Name specifies the name of the private link service.
                                        type: string
                                      privateLinkServiceID:
                                        description: PrivateLinkServiceID specifies the resource ID of the private link service.
                                        type: string
                                      requestMessage:
                                        description: RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.
                                        maxLength: 140
                                        type: string
                                    type: object
                                  type: array
                              required:
                                - name
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                          role:
                            description: Role defines the subnet role (eg. Node, ControlPlane)
                            enum:
                              - node
                              - control-plane
                              - bastion
                              - cluster
                            type: string
                          routeTable:
                            description: RouteTable defines the route table that should be attached to this subnet.
                            properties:
                              id:
                                description: |-
                                  ID is the Azure resource ID of the route table.
                                  READ-ONLY
                                type: string
                              name:
                                type: string
                            required:
                              - name
                            type: object
                          securityGroup:
                            description: SecurityGroup defines the NSG (network security group) that should be attached to this subnet.
                            properties:
                              id:
                                description: |-
                                  ID is the Azure resource ID of the security group.
                                  READ-ONLY
                                type: string
                              name:
                                type: string
                              securityRules:
                                description: SecurityRules is a slice of Azure security rules for security groups.
                                items:
                                  description: SecurityRule defines an Azure security rule for security groups.
                                  properties:
                                    action:
                                      default: Allow
                                      description: Action specifies whether network traffic is allowed or denied. Can either be "Allow" or "Deny". Defaults to "Allow".
                                      enum:
                                        - Allow
                                        - Deny
                                      type: string
                                    description:
                                      description: A description for this rule. Restricted to 140 chars.
                                      type: string
                                    destination:
                                      description: Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                                      type: string
                                    destinationPorts:
                                      description: DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                      type: string
                                    direction:
                                      description: Direction indicates whether the rule applies to inbound, or outbound traffic. "Inbound" or "Outbound".
                                      enum:
                                        - Inbound
                                        - Outbound
                                      type: string
                                    name:
                                      description: Name is a unique name within the network security group.
                                      type: string
                                    priority:
                                      description: Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.
                                      format: int32
                                      type: integer
                                    protocol:
                                      description: Protocol specifies the protocol type. "Tcp", "Udp", "Icmp", or "*".
                                      enum:
                                        - Tcp
                                        - Udp
                                        - Icmp
                                        - '*'
                                      type: string
                                    source:
                                      description: Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
                                      type: string
                                    sourcePorts:
                                      description: SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                      type: string
                                    sources:
                                      description: Sources specifies The CIDR or source IP ranges.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - description
                                    - direction
                                    - name
                                    - protocol
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              tags:
                                additionalProperties:
                                  type: string
                                description: Tags defines a map of tags.
                                type: object
                            required:
                              - name
                            type: object
                          serviceEndpoints:
                            description: ServiceEndpoints is a slice of Virtual Network service endpoints to enable for the subnets.
                            items:
                              description: ServiceEndpointSpec configures an Azure Service Endpoint.
                              properties:
                                locations:
                                  items:
                                    type: string
                                  type: array
                                service:
                                  type: string
                              required:
                                - locations
                                - service
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                              - service
                            x-kubernetes-list-type: map
                        required:
                          - name
                          - role
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    vnet:
                      description: Vnet is the configuration for the Azure virtual network.
                      properties:
                        cidrBlocks:
                          description: CIDRBlocks defines the virtual network's address space, specified as one or more address prefixes in CIDR notation.
                          items:
                            type: string
                          type: array
                        id:
                          description: |-
                            ID is the Azure resource ID of the virtual network.
                            READ-ONLY
                          type: string
                        name:
                          description: Name defines a name for the virtual network resource.
                          type: string
                        peerings:
                          description: Peerings defines a list of peerings of the newly created virtual network with existing virtual networks.
                          items:
                            description: VnetPeeringSpec specifies an existing remote virtual network to peer with the AzureCluster's virtual network.
                            properties:
                              forwardPeeringProperties:
                                description: |-
                                  ForwardPeeringProperties specifies VnetPeeringProperties for peering from the cluster's virtual network to the
                                  remote virtual network.
                                properties:
                                  allowForwardedTraffic:
                                    description: |-
                                      AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
                                      allowed/disallowed in remote virtual network.
                                    type: boolean
                                  allowGatewayTransit:
                                    description: |-
                                      AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
                                      network.
                                    type: boolean
                                  allowVirtualNetworkAccess:
                                    description: |-
                                      AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
                                      the VMs in remote virtual network space.
                                    type: boolean
                                  useRemoteGateways:
                                    description: |-
                                      UseRemoteGateways specifies if remote gateways can be used on this virtual network.
                                      If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
                                      will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
                                      This flag cannot be set if virtual network already has a gateway.
                                    type: boolean
                                type: object
                              remoteVnetName:
                                description: RemoteVnetName defines name of the remote virtual network.
                                type: string
                              resourceGroup:
                                description: ResourceGroup is the resource group name of the remote virtual network.
                                type: string
                              reversePeeringProperties:
                                description: |-
                                  ReversePeeringProperties specifies VnetPeeringProperties for peering from the remote virtual network to the
                                  cluster's virtual network.
                                properties:
                                  allowForwardedTraffic:
                                    description: |-
                                      AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
                                      allowed/disallowed in remote virtual network.
                                    type: boolean
                                  allowGatewayTransit:
                                    description: |-
                                      AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
                                      network.
                                    type: boolean
                                  allowVirtualNetworkAccess:
                                    description: |-
                                      AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
                                      the VMs in remote virtual network space.
                                    type: boolean
                                  useRemoteGateways:
                                    description: |-
                                      UseRemoteGateways specifies if remote gateways can be used on this virtual network.
                                      If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
                                      will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
                                      This flag cannot be set if virtual network already has a gateway.
                                    type: boolean
                                type: object
                            required:
                              - remoteVnetName
                            type: object
                          type: array
                        resourceGroup:
                          description: |-
                            ResourceGroup is the name of the resource group of the existing virtual network
                            or the resource group where a managed virtual network should be created.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a collection of tags describing the resource.
                          type: object
                      required:
                        - name
                      type: object
                  type: object
                resourceGroup:
                  type: string
                subscriptionID:
                  type: string
              required:
                - location
              type: object
            status:
              description: AzureClusterStatus defines the observed state of AzureCluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the AzureCluster.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: |-
                      FailureDomainSpec is the Schema for Cluster API failure domains.
                      It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: attributes is a free form map of attributes an infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: |-
                    FailureDomains specifies the list of unique failure domains for the location/region of the cluster.
                    A FailureDomain maps to Availability Zone with an Azure Region (if the region support them). An
                    Availability Zone is a separate data center within a region and they can be used to ensure
                    the cluster is more resilient to failure.
                    See: https://learn.microsoft.com/azure/reliability/availability-zones-overview
                    This list will be used by Cluster API to try and spread the machines across the failure domains.
                  type: object
                longRunningOperationStates:
                  description: |-
                    LongRunningOperationStates saves the states for Azure long-running operations so they can be continued on the
                    next reconciliation loop.
                  items:
                    description: Future contains the data needed for an Azure long-running operation to continue across reconcile loops.
                    properties:
                      data:
                        description: Data is the base64 url encoded json Azure AutoRest Future.
                        type: string
                      name:
                        description: |-
                          Name is the name of the Azure resource.
                          Together with the service name, this forms the unique identifier for the future.
                        type: string
                      resourceGroup:
                        description: ResourceGroup is the Azure resource group for the resource.
                        type: string
                      serviceName:
                        description: |-
                          ServiceName is the name of the Azure service.
                          Together with the name of the resource, this forms the unique identifier for the future.
                        type: string
                      type:
                        description: Type describes the type of future, such as update, create, delete, etc.
                        type: string
                    required:
                      - data
                      - name
                      - serviceName
                      - type
                    type: object
                  type: array
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: azureclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AzureClusterTemplate
    listKind: AzureClusterTemplateList
    plural: azureclustertemplates
    singular: azureclustertemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureClusterTemplate is the Schema for the azureclustertemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureClusterTemplateSpec defines the desired state of AzureClusterTemplate.
              properties:
                template:
                  description: AzureClusterTemplateResource describes the data needed to create an AzureCluster from a template.
                  properties:
                    spec:
                      description: AzureClusterTemplateResourceSpec specifies an Azure cluster template resource.
                      properties:
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: |-
                            AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the
                            ones added by default.
                          type: object
                        azureEnvironment:
                          description: |-
                            AzureEnvironment is the name of the AzureCloud to be used.
                            The default value that would be used by most users is "AzurePublicCloud", other values are:
                            - ChinaCloud: "AzureChinaCloud"
                            - GermanCloud: "AzureGermanCloud"
                            - PublicCloud: "AzurePublicCloud"
                            - USGovernmentCloud: "AzureUSGovernmentCloud"

                            Note that values other than the default must also be accompanied by corresponding changes to the
                            aso-controller-settings Secret to configure ASO to refer to the non-Public cloud. ASO currently does
                            not support referring to multiple different clouds in a single installation. The following fields must
                            be defined in the Secret:
                            - AZURE_AUTHORITY_HOST
                            - AZURE_RESOURCE_MANAGER_ENDPOINT
                            - AZURE_RESOURCE_MANAGER_AUDIENCE

                            See the [ASO docs] for more details.

                            [ASO docs]: https://azure.github.io/azure-service-operator/guide/aso-controller-settings-options/
                          type: string
                        bastionSpec:
                          description: BastionSpec encapsulates all things related to the Bastions in the cluster.
                          properties:
                            azureBastion:
                              description: AzureBastionTemplateSpec specifies a template for an Azure Bastion host.
                              properties:
                                subnet:
                                  description: SubnetTemplateSpec specifies a template for a subnet.
                                  properties:
                                    cidrBlocks:
                                      description: CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: Name defines a name for the subnet resource.
                                      type: string
                                    natGateway:
                                      description: NatGateway associated with this subnet.
                                      properties:
                                        name:
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    privateEndpoints:
                                      description: PrivateEndpoints defines a list of private endpoints that should be attached to this subnet.
                                      items:
                                        description: PrivateEndpointSpec configures an Azure Private Endpoint.
                                        properties:
                                          applicationSecurityGroups:
                                            description: ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.
                                            items:
                                              type: string
                                            type: array
                                          customNetworkInterfaceName:
                                            description: CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.
                                            type: string
                                          location:
                                            description: Location specifies the region to create the private endpoint.
                                            type: string
                                          manualApproval:
                                            description: |-
                                              ManualApproval specifies if the connection approval needs to be done manually or not.
                                              Set it true when the network admin does not have access to approve connections to the remote resource.
                                              Defaults to false.
                                            type: boolean
                                          name:
                                            description: Name specifies the name of the private endpoint.
                                            type: string
                                          privateIPAddresses:
                                            description: |-
                                              PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                              They have to be part of the subnet where the private endpoint is linked.
                                            items:
                                              type: string
                                            type: array
                                          privateLinkServiceConnections:
                                            description: PrivateLinkServiceConnections specifies Private Link Service Connections of the private endpoint.
                                            items:
                                              description: PrivateLinkServiceConnection defines the specification for a private link service connection associated with a private endpoint.
                                              properties:
                                                groupIDs:
                                                  description: GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
                                                  items:
                                                    type: string
                                                  type: array
                                                name:
                                                  description: Name specifies the name of the private link service.
                                                  type: string
                                                privateLinkServiceID:
                                                  description: PrivateLinkServiceID specifies the resource ID of the private link service.
                                                  type: string
                                                requestMessage:
                                                  description: RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.
                                                  maxLength: 140
                                                  type: string
                                              type: object
                                            type: array
                                        required:
                                          - name
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                        - name
                                      x-kubernetes-list-type: map
                                    role:
                                      description: Role defines the subnet role (eg. Node, ControlPlane)
                                      enum:
                                        - node
                                        - control-plane
                                        - bastion
                                        - cluster
                                      type: string
                                    securityGroup:
                                      description: SecurityGroup defines the NSG (network security group) that should be attached to this subnet.
                                      properties:
                                        securityRules:
                                          description: SecurityRules is a slice of Azure security rules for security groups.
                                          items:
                                            description: SecurityRule defines an Azure security rule for security groups.
                                            properties:
                                              action:
                                                default: Allow
                                                description: Action specifies whether network traffic is allowed or denied. Can either be "Allow" or "Deny". Defaults to "Allow".
                                                enum:
                                                  - Allow
                                                  - Deny
                                                type: string
                                              description:
                                                description: A description for this rule. Restricted to 140 chars.
                                                type: string
                                              destination:
                                                description: Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                                                type: string
                                              destinationPorts:
                                                description: DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                                type: string
                                              direction:
                                                description: Direction indicates whether the rule applies to inbound, or outbound traffic. "Inbound" or "Outbound".
                                                enum:
                                                  - Inbound
                                                  - Outbound
                                                type: string
                                              name:
                                                description: Name is a unique name within the network security group.
                                                type: string
                                              priority:
                                                description: Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.
                                                format: int32
                                                type: integer
                                              protocol:
                                                description: Protocol specifies the protocol type. "Tcp", "Udp", "Icmp", or "*".
                                                enum:
                                                  - Tcp
                                                  - Udp
                                                  - Icmp
                                                  - '*'
                                                type: string
                                              source:
                                                description: Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
                                                type: string
                                              sourcePorts:
                                                description: SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                                type: string
                                              sources:
                                                description: Sources specifies The CIDR or source IP ranges.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - description
                                              - direction
                                              - name
                                              - protocol
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                            - name
                                          x-kubernetes-list-type: map
                                        tags:
                                          additionalProperties:
                                            type: string
                                          description: Tags defines a map of tags.
                                          type: object
                                      type: object
                                    serviceEndpoints:
                                      description: ServiceEndpoints is a slice of Virtual Network service endpoints to enable for the subnets.
                                      items:
                                        description: ServiceEndpointSpec configures an Azure Service Endpoint.
                                        properties:
                                          locations:
                                            items:
                                              type: string
                                            type: array
                                          service:
                                            type: string
                                        required:
                                          - locations
                                          - service
                                        type: object
                                      type: array
                                      x-kubernetes-list-map-keys:
                                        - service
                                      x-kubernetes-list-type: map
                                  required:
                                    - name
                                    - role
                                  type: object
                              type: object
                          type: object
                        cloudProviderConfigOverrides:
                          description: |-
                            CloudProviderConfigOverrides is an optional set of configuration values that can be overridden in azure cloud provider config.
                            This is only a subset of options that are available in azure cloud provider config.
                            Some values for the cloud provider config are inferred from other parts of cluster api provider azure spec, and may not be available for overrides.
                            See: https://cloud-provider-azure.sigs.k8s.io/install/configs
                            Note: All cloud provider config values can be customized by creating the secret beforehand. CloudProviderConfigOverrides is only used when the secret is managed by the Azure Provider.
                          properties:
                            backOffs:
                              description: BackOffConfig indicates the back-off config options.
                              properties:
                                cloudProviderBackoff:
                                  type: boolean
                                cloudProviderBackoffDuration:
                                  type: integer
                                cloudProviderBackoffExponent:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                cloudProviderBackoffJitter:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                cloudProviderBackoffRetries:
                                  type: integer
                              type: object
                            rateLimits:
                              items:
                                description: |-
                                  RateLimitSpec represents the rate limit configuration for a particular kind of resource.
                                  Eg. loadBalancerRateLimit is used to configure rate limits for load balancers.
                                  This eventually gets converted to CloudProviderRateLimitConfig that cloud-provider-azure expects.
                                  See: https://github.com/kubernetes-sigs/cloud-provider-azure/blob/d585c2031925b39c925624302f22f8856e29e352/pkg/provider/azure_ratelimit.go#L25
                                  We cannot use CloudProviderRateLimitConfig directly because floating point values are not supported in controller-tools.
                                  See: https://github.com/kubernetes-sigs/controller-tools/issues/245
                                properties:
                                  config:
                                    description: RateLimitConfig indicates the rate limit config options.
                                    properties:
                                      cloudProviderRateLimit:
                                        type: boolean
                                      cloudProviderRateLimitBucket:
                                        type: integer
                                      cloudProviderRateLimitBucketWrite:
                                        type: integer
                                      cloudProviderRateLimitQPS:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      cloudProviderRateLimitQPSWrite:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                    type: object
                                  name:
                                    description: Name is the name of the rate limit spec.
                                    enum:
                                      - defaultRateLimit
                                      - routeRateLimit
                                      - subnetsRateLimit
                                      - interfaceRateLimit
                                      - routeTableRateLimit
                                      - loadBalancerRateLimit
                                      - publicIPAddressRateLimit
                                      - securityGroupRateLimit
                                      - virtualMachineRateLimit
                                      - storageAccountRateLimit
                                      - diskRateLimit
                                      - snapshotRateLimit
                                      - virtualMachineScaleSetRateLimit
                                      - virtualMachineSizesRateLimit
                                      - availabilitySetRateLimit
                                    type: string
                                required:
                                  - name
                                type: object
                              type: array
                          type: object
                        extendedLocation:
                          description: ExtendedLocation is an optional set of ExtendedLocation properties for clusters on Azure public MEC.
                          properties:
                            name:
                              description: Name defines the name for the extended location.
                              type: string
                            type:
                              description: Type defines the type for the extended location.
                              enum:
                                - EdgeZone
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        failureDomains:
                          additionalProperties:
                            description: |-
                              FailureDomainSpec is the Schema for Cluster API failure domains.
                              It allows controllers to understand how many failure domains a cluster can optionally span across.
                            properties:
                              attributes:
                                additionalProperties:
                                  type: string
                                description: attributes is a free form map of attributes an infrastructure provider might use or require.
                                type: object
                              controlPlane:
                                description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                                type: boolean
                            type: object
                          description: |-
                            FailureDomains is a list of failure domains in the cluster's region, used to restrict
                            eligibility to host the control plane. A FailureDomain maps to an availability zone,
                            which is a separated group of datacenters within a region.
                            See: https://learn.microsoft.com/azure/reliability/availability-zones-overview
                          type: object
                        identityRef:
                          description: IdentityRef is a reference to an AzureIdentity to be used when reconciling this cluster
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        location:
                          type: string
                        networkSpec:
                          description: NetworkSpec encapsulates all things related to Azure network.
                          properties:
                            additionalAPIServerLBPorts:
                              description: |-
                                AdditionalAPIServerLBPorts is the configuration for the additional inbound control-plane load balancer ports
                                Each port specified (e.g., 9345) creates an inbound rule where the frontend port and the backend port are the same.
                              items:
                                description: LoadBalancerPort specifies additional port for the API server load balancer.
                                properties:
                                  name:
                                    description: Name for the additional port within LB definition
                                    type: string
                                  port:
                                    description: Port for the LB definition
                                    format: int32
                                    type: integer
                                required:
                                  - name
                                  - port
                                type: object
                              type: array
                            apiServerLB:
                              description: APIServerLB is the configuration for the control-plane load balancer.
                              properties:
                                idleTimeoutInMinutes:
                                  description: IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.
                                  format: int32
                                  type: integer
                                sku:
                                  description: SKU defines an Azure load balancer SKU.
                                  type: string
                                type:
                                  description: LBType defines an Azure load balancer Type.
                                  type: string
                              type: object
                            controlPlaneOutboundLB:
                              description: |-
                                ControlPlaneOutboundLB is the configuration for the control-plane outbound load balancer.
                                This is different from APIServerLB, and is used only in private clusters (optionally) for enabling outbound traffic.
                              properties:
                                idleTimeoutInMinutes:
                                  description: IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.
                                  format: int32
                                  type: integer
                                sku:
                                  description: SKU defines an Azure load balancer SKU.
                                  type: string
                                type:
                                  description: LBType defines an Azure load balancer Type.
                                  type: string
                              type: object
                            nodeOutboundLB:
                              description: NodeOutboundLB is the configuration for the node outbound load balancer.
                              properties:
                                idleTimeoutInMinutes:
                                  description: IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.
                                  format: int32
                                  type: integer
                                sku:
                                  description: SKU defines an Azure load balancer SKU.
                                  type: string
                                type:
                                  description: LBType defines an Azure load balancer Type.
                                  type: string
                              type: object
                            privateDNSZoneName:
                              description: PrivateDNSZoneName defines the zone name for the Azure Private DNS.
                              type: string
                            privateDNSZoneResourceGroup:
                              description: |-
                                PrivateDNSZoneResourceGroup defines the resource group to be used for Azure Private DNS Zone.
                                If not specified, the resource group of the cluster will be used to create the Azure Private DNS Zone.
                              type: string
                            subnets:
                              description: Subnets is the configuration for the control-plane subnet and the node subnet.
                              items:
                                description: SubnetTemplateSpec specifies a template for a subnet.
                                properties:
                                  cidrBlocks:
                                    description: CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: Name defines a name for the subnet resource.
                                    type: string
                                  natGateway:
                                    description: NatGateway associated with this subnet.
                                    properties:
                                      name:
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  privateEndpoints:
                                    description: PrivateEndpoints defines a list of private endpoints that should be attached to this subnet.
                                    items:
                                      description: PrivateEndpointSpec configures an Azure Private Endpoint.
                                      properties:
                                        applicationSecurityGroups:
                                          description: ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.
                                          items:
                                            type: string
                                          type: array
                                        customNetworkInterfaceName:
                                          description: CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.
                                          type: string
                                        location:
                                          description: Location specifies the region to create the private endpoint.
                                          type: string
                                        manualApproval:
                                          description: |-
                                            ManualApproval specifies if the connection approval needs to be done manually or not.
                                            Set it true when the network admin does not have access to approve connections to the remote resource.
                                            Defaults to false.
                                          type: boolean
                                        name:
                                          description: Name specifies the name of the private endpoint.
                                          type: string
                                        privateIPAddresses:
                                          description: |-
                                            PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.
                                            They have to be part of the subnet where the private endpoint is linked.
                                          items:
                                            type: string
                                          type: array
                                        privateLinkServiceConnections:
                                          description: PrivateLinkServiceConnections specifies Private Link Service Connections of the private endpoint.
                                          items:
                                            description: PrivateLinkServiceConnection defines the specification for a private link service connection associated with a private endpoint.
                                            properties:
                                              groupIDs:
                                                description: GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: Name specifies the name of the private link service.
                                                type: string
                                              privateLinkServiceID:
                                                description: PrivateLinkServiceID specifies the resource ID of the private link service.
                                                type: string
                                              requestMessage:
                                                description: RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.
                                                maxLength: 140
                                                type: string
                                            type: object
                                          type: array
                                      required:
                                        - name
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                      - name
                                    x-kubernetes-list-type: map
                                  role:
                                    description: Role defines the subnet role (eg. Node, ControlPlane)
                                    enum:
                                      - node
                                      - control-plane
                                      - bastion
                                      - cluster
                                    type: string
                                  securityGroup:
                                    description: SecurityGroup defines the NSG (network security group) that should be attached to this subnet.
                                    properties:
                                      securityRules:
                                        description: SecurityRules is a slice of Azure security rules for security groups.
                                        items:
                                          description: SecurityRule defines an Azure security rule for security groups.
                                          properties:
                                            action:
                                              default: Allow
                                              description: Action specifies whether network traffic is allowed or denied. Can either be "Allow" or "Deny". Defaults to "Allow".
                                              enum:
                                                - Allow
                                                - Deny
                                              type: string
                                            description:
                                              description: A description for this rule. Restricted to 140 chars.
                                              type: string
                                            destination:
                                              description: Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.
                                              type: string
                                            destinationPorts:
                                              description: DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                              type: string
                                            direction:
                                              description: Direction indicates whether the rule applies to inbound, or outbound traffic. "Inbound" or "Outbound".
                                              enum:
                                                - Inbound
                                                - Outbound
                                              type: string
                                            name:
                                              description: Name is a unique name within the network security group.
                                              type: string
                                            priority:
                                              description: Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.
                                              format: int32
                                              type: integer
                                            protocol:
                                              description: Protocol specifies the protocol type. "Tcp", "Udp", "Icmp", or "*".
                                              enum:
                                                - Tcp
                                                - Udp
                                                - Icmp
                                                - '*'
                                              type: string
                                            source:
                                              description: Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.
                                              type: string
                                            sourcePorts:
                                              description: SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.
                                              type: string
                                            sources:
                                              description: Sources specifies The CIDR or source IP ranges.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - description
                                            - direction
                                            - name
                                            - protocol
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      tags:
                                        additionalProperties:
                                          type: string
                                        description: Tags defines a map of tags.
                                        type: object
                                    type: object
                                  serviceEndpoints:
                                    description: ServiceEndpoints is a slice of Virtual Network service endpoints to enable for the subnets.
                                    items:
                                      description: ServiceEndpointSpec configures an Azure Service Endpoint.
                                      properties:
                                        locations:
                                          items:
                                            type: string
                                          type: array
                                        service:
                                          type: string
                                      required:
                                        - locations
                                        - service
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                      - service
                                    x-kubernetes-list-type: map
                                required:
                                  - name
                                  - role
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            vnet:
                              description: Vnet is the configuration for the Azure virtual network.
                              properties:
                                cidrBlocks:
                                  description: CIDRBlocks defines the virtual network's address space, specified as one or more address prefixes in CIDR notation.
                                  items:
                                    type: string
                                  type: array
                                peerings:
                                  description: Peerings defines a list of peerings of the newly created virtual network with existing virtual networks.
                                  items:
                                    description: VnetPeeringClassSpec specifies a virtual network peering class.
                                    properties:
                                      forwardPeeringProperties:
                                        description: |-
                                          ForwardPeeringProperties specifies VnetPeeringProperties for peering from the cluster's virtual network to the
                                          remote virtual network.
                                        properties:
                                          allowForwardedTraffic:
                                            description: |-
                                              AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
                                              allowed/disallowed in remote virtual network.
                                            type: boolean
                                          allowGatewayTransit:
                                            description: |-
                                              AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
                                              network.
                                            type: boolean
                                          allowVirtualNetworkAccess:
                                            description: |-
                                              AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
                                              the VMs in remote virtual network space.
                                            type: boolean
                                          useRemoteGateways:
                                            description: |-
                                              UseRemoteGateways specifies if remote gateways can be used on this virtual network.
                                              If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
                                              will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
                                              This flag cannot be set if virtual network already has a gateway.
                                            type: boolean
                                        type: object
                                      remoteVnetName:
                                        description: RemoteVnetName defines name of the remote virtual network.
                                        type: string
                                      resourceGroup:
                                        description: ResourceGroup is the resource group name of the remote virtual network.
                                        type: string
                                      reversePeeringProperties:
                                        description: |-
                                          ReversePeeringProperties specifies VnetPeeringProperties for peering from the remote virtual network to the
                                          cluster's virtual network.
                                        properties:
                                          allowForwardedTraffic:
                                            description: |-
                                              AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be
                                              allowed/disallowed in remote virtual network.
                                            type: boolean
                                          allowGatewayTransit:
                                            description: |-
                                              AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual
                                              network.
                                            type: boolean
                                          allowVirtualNetworkAccess:
                                            description: |-
                                              AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access
                                              the VMs in remote virtual network space.
                                            type: boolean
                                          useRemoteGateways:
                                            description: |-
                                              UseRemoteGateways specifies if remote gateways can be used on this virtual network.
                                              If the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network
                                              will use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.
                                              This flag cannot be set if virtual network already has a gateway.
                                            type: boolean
                                        type: object
                                    required:
                                      - remoteVnetName
                                    type: object
                                  type: array
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Tags is a collection of tags describing the resource.
                                  type: object
                              type: object
                          type: object
                        subscriptionID:
                          type: string
                      required:
                        - location
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: azuremachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AzureMachine
    listKind: AzureMachineList
    plural: azuremachines
    singular: azuremachine
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this AzureMachine belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].status
          name: Ready
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].severity
          name: Severity
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].reason
          name: Reason
          type: string
        - jsonPath: .status.conditions[?(@.type=='Ready')].message
          name: Message
          priority: 1
          type: string
        - description: Azure VM provisioning state
          jsonPath: .status.vmState
          name: State
          type: string
        - description: Machine object to which this AzureMachine belongs
          jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
          name: Machine
          priority: 1
          type: string
        - description: Azure VM ID
          jsonPath: .spec.providerID
          name: VM ID
          priority: 1
          type: string
        - description: Azure VM Size
          jsonPath: .spec.vmSize
          name: VM Size
          priority: 1
          type: string
        - description: Time duration since creation of this AzureMachine
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureMachine is the Schema for the azuremachines API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureMachineSpec defines the desired state of AzureMachine.
              properties:
                acceleratedNetworking:
                  description: 'Deprecated: AcceleratedNetworking should be set in the networkInterfaces field.'
                  type: boolean
                additionalCapabilities:
                  description: AdditionalCapabilities specifies additional capabilities enabled or disabled on the virtual machine.
                  properties:
                    ultraSSDEnabled:
                      description: |-
                        UltraSSDEnabled enables or disables Azure UltraSSD capability for the virtual machine.
                        Defaults to true if Ultra SSD data disks are specified,
                        otherwise it doesn't set the capability on the VM.
                      type: boolean
                  type: object
                additionalTags:
                  additionalProperties:
                    type: string
                  description: |-
                    AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                    Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the
                    AzureMachine's value takes precedence.
                  type: object
                allocatePublicIP:
                  description: AllocatePublicIP allows the ability to create dynamic public ips for machines where this value is true.
                  type: boolean
                capacityReservationGroupID:
                  description: |-
                    CapacityReservationGroupID specifies the capacity reservation group resource id that should be
                    used for allocating the virtual machine.
                    The field size should be greater than 0 and the field input must start with '/'.
                    The input for capacityReservationGroupID must be similar to '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}'.
                    The keys which are used should be among 'subscriptions', 'providers' and 'resourcegroups' followed by valid ID or names respectively.
                    It is optional but may not be changed once set.
                  type: string
                dataDisks:
                  description: DataDisk specifies the parameters that are used to add one or more data disks to the machine
                  items:
                    description: DataDisk specifies the parameters that are used to add one or more data disks to the machine.
                    properties:
                      cachingType:
                        description: CachingType specifies the caching requirements.
                        enum:
                          - None
                          - ReadOnly
                          - ReadWrite
                        type: string
                      diskSizeGB:
                        description: DiskSizeGB is the size in GB to assign to the data disk.
                        format: int32
                        type: integer
                      lun:
                        description: |-
                          Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
                          The value must be between 0 and 63.
                        format: int32
                        type: integer
                      managedDisk:
                        description: ManagedDisk specifies the Managed Disk parameters for the data disk.
                        properties:
                          diskEncryptionSet:
                            description: DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.
                            properties:
                              id:
                                description: ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
                                type: string
                            type: object
                          securityProfile:
                            description: SecurityProfile specifies the security profile for the managed disk.
                            properties:
                              diskEncryptionSet:
                                description: |-
                                  DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                                  managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                                  VMGuest blob.
                                properties:
                                  id:
                                    description: ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
                                    type: string
                                type: object
                              securityEncryptionType:
                                description: |-
                                  SecurityEncryptionType specifies the encryption type of the managed disk.
                                  It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                                  blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                                  When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                                  When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                                  VirtualizedTrustedPlatformModule should be set to Enabled.
                                  It can be set only for Confidential VMs.
                                enum:
                                  - VMGuestStateOnly
                                  - DiskWithVMGuestState
                                type: string
                            type: object
                          storageAccountType:
                            type: string
                        type: object
                      nameSuffix:
                        description: |-
                          NameSuffix is the suffix to be appended to the machine name to generate the disk name.
                          Each disk name will be in format <machineName>_<nameSuffix>.
                        type: string
                    required:
                      - diskSizeGB
                      - nameSuffix
                    type: object
                  type: array
                diagnostics:
                  description: |-
                    Diagnostics specifies the diagnostics settings for a virtual machine.
                    If not specified then Boot diagnostics (Managed) will be enabled.
                  properties:
                    boot:
                      description: |-
                        Boot configures the boot diagnostics settings for the virtual machine.
                        This allows to configure capturing serial output from the virtual machine on boot.
                        This is useful for debugging software based launch issues.
                        If not specified then Boot diagnostics (Managed) will be enabled.
                      properties:
                        storageAccountType:
                          description: |-
                            StorageAccountType determines if the storage account for storing the diagnostics data
                            should be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).
                          enum:
                            - Managed
                            - UserManaged
                            - Disabled
                          type: string
                        userManaged:
                          description: UserManaged provides a reference to the user-managed storage account.
                          properties:
                            storageAccountURI:
                              description: |-
                                StorageAccountURI is the URI of the user-managed storage account.
                                The URI typically will be `https://<mystorageaccountname>.blob.core.windows.net/`
                                but may differ if you are using Azure DNS zone endpoints.
                                You can find the correct endpoint by looking for the Blob Primary Endpoint in the
                                endpoints tab in the Azure console or with the CLI by issuing
                                `az storage account list --query='[].{name: name, "resource group": resourceGroup, "blob endpoint": primaryEndpoints.blob}'`.
                              maxLength: 1024
                              pattern: ^https://
                              type: string
                          required:
                            - storageAccountURI
                          type: object
                      required:
                        - storageAccountType
                      type: object
                  type: object
                disableExtensionOperations:
                  description: |-
                    DisableExtensionOperations specifies whether extension operations should be disabled on the virtual machine.
                    Use this setting only if VMExtensions are not supported by your image, as it disables CAPZ bootstrapping extension used for detecting Kubernetes bootstrap failure.
                    This may only be set to True when no extensions are configured on the virtual machine.
                  type: boolean
                disableVMBootstrapExtension:
                  description: |-
                    DisableVMBootstrapExtension specifies whether the VM bootstrap extension should be disabled on the virtual machine.
                    Use this setting if you want to disable only the bootstrapping extension and not all extensions.
                  type: boolean
                dnsServers:
                  description: DNSServers adds a list of DNS Server IP addresses to the VM NICs.
                  items:
                    type: string
                  type: array
                enableIPForwarding:
                  description: |-
                    EnableIPForwarding enables IP Forwarding in Azure which is required for some CNI's to send traffic from a pods on one machine
                    to another. This is required for IpV6 with Calico in combination with User Defined Routes (set by the Azure Cloud Controller
                    manager). Default is false for disabled.
                  type: boolean
                failureDomain:
                  description: |-
                    FailureDomain is the failure domain unique identifier this Machine should be attached to,
                    as defined in Cluster API. This relates to an Azure Availability Zone
                  type: string
                identity:
                  default: None
                  description: |-
                    Identity is the type of identity used for the virtual machine.
                    The type 'SystemAssigned' is an implicitly created identity.
                    The generated identity will be assigned a Subscription contributor role.
                    The type 'UserAssigned' is a standalone Azure resource provided by the user
                    and assigned to the VM
                  enum:
                    - None
                    - SystemAssigned
                    - UserAssigned
                  type: string
                image:
                  description: |-
                    Image is used to provide details of an image to use during VM creation.
                    If image details are omitted, the default is to use an Azure Compute Gallery Image
                    from CAPZ's community gallery.
                  properties:
                    computeGallery:
                      description: ComputeGallery specifies an image to use from the Azure Compute Gallery
                      properties:
                        gallery:
                          description: Gallery specifies the name of the compute image gallery that contains the image
                          minLength: 1
                          type: string
                        name:
                          description: Name is the name of the image
                          minLength: 1
                          type: string
                        plan:
                          description: Plan contains plan information.
                          properties:
                            offer:
                              description: |-
                                Offer specifies the name of a group of related images created by the publisher.
                                For example, UbuntuServer, WindowsServer
                              minLength: 1
                              type: string
                            publisher:
                              description: Publisher is the name of the organization that created the image
                              minLength: 1
                              type: string
                            sku:
                              description: |-
                                SKU specifies an instance of an offer, such as a major release of a distribution.
                                For example, 18.04-LTS, 2019-Datacenter
                              minLength: 1
                              type: string
                          required:
                            - offer
                            - publisher
                            - sku
                          type: object
                        resourceGroup:
                          description: ResourceGroup specifies the resource group containing the private compute gallery.
                          type: string
                        subscriptionID:
                          description: SubscriptionID is the identifier of the subscription that contains the private compute gallery.
                          type: string
                        version:
                          description: |-
                            Version specifies the version of the marketplace image. The allowed formats
                            are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                            Specify 'latest' to use the latest version of an image available at deploy time.
                            Even if you use 'latest', the VM image will not automatically update after deploy
                            time even if a new version becomes available.
                          minLength: 1
                          type: string
                      required:
                        - gallery
                        - name
                        - version
                      type: object
                    id:
                      description: ID specifies an image to use by ID
                      type: string
                    marketplace:
                      description: Marketplace specifies an image to use from the Azure Marketplace
                      properties:
                        offer:
                          description: |-
                            Offer specifies the name of a group of related images created by the publisher.
                            For example, UbuntuServer, WindowsServer
                          minLength: 1
                          type: string
                        publisher:
                          description: Publisher is the name of the organization that created the image
                          minLength: 1
                          type: string
                        sku:
                          description: |-
                            SKU specifies an instance of an offer, such as a major release of a distribution.
                            For example, 18.04-LTS, 2019-Datacenter
                          minLength: 1
                          type: string
                        thirdPartyImage:
                          default: false
                          description: |-
                            ThirdPartyImage indicates the image is published by a third party publisher and a Plan
                            will be generated for it.
                          type: boolean
                        version:
                          description: |-
                            Version specifies the version of an image sku. The allowed formats
                            are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                            Specify 'latest' to use the latest version of an image available at deploy time.
                            Even if you use 'latest', the VM image will not automatically update after deploy
                            time even if a new version becomes available.
                          minLength: 1
                          type: string
                      required:
                        - offer
                        - publisher
                        - sku
                        - version
                      type: object
                    sharedGallery:
                      description: |-
                        SharedGallery specifies an image to use from an Azure Shared Image Gallery
                        Deprecated: use ComputeGallery instead.
                      properties:
                        gallery:
                          description: Gallery specifies the name of the shared image gallery that contains the image
                          minLength: 1
                          type: string
                        name:
                          description: Name is the name of the image
                          minLength: 1
                          type: string
                        offer:
                          description: |-
                            Offer specifies the name of a group of related images created by the publisher.
                            For example, UbuntuServer, WindowsServer
                            This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                            This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                          type: string
                        publisher:
                          description: |-
                            Publisher is the name of the organization that created the image.
                            This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                            This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                          type: string
                        resourceGroup:
                          description: ResourceGroup specifies the resource group containing the shared image gallery
                          minLength: 1
                          type: string
                        sku:
                          description: |-
                            SKU specifies an instance of an offer, such as a major release of a distribution.
                            For example, 18.04-LTS, 2019-Datacenter
                            This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                            This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                          type: string
                        subscriptionID:
                          description: SubscriptionID is the identifier of the subscription that contains the shared image gallery
                          minLength: 1
                          type: string
                        version:
                          description: |-
                            Version specifies the version of the marketplace image. The allowed formats
                            are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                            Specify 'latest' to use the latest version of an image available at deploy time.
                            Even if you use 'latest', the VM image will not automatically update after deploy
                            time even if a new version becomes available.
                          minLength: 1
                          type: string
                      required:
                        - gallery
                        - name
                        - resourceGroup
                        - subscriptionID
                        - version
                      type: object
                  type: object
                networkInterfaces:
                  description: |-
                    NetworkInterfaces specifies a list of network interface configurations.
                    If left unspecified, the VM will get a single network interface with a
                    single IPConfig in the subnet specified in the cluster's node subnet field.
                    The primary interface will be the first networkInterface specified (index 0) in the list.
                  items:
                    description: NetworkInterface defines a network interface.
                    properties:
                      acceleratedNetworking:
                        description: |-
                          AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on
                          whether the requested VMSize supports accelerated networking.
                          If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
                        type: boolean
                      privateIPConfigs:
                        description: |-
                          PrivateIPConfigs specifies the number of private IP addresses to attach to the interface.
                          Defaults to 1 if not specified.
                        type: integer
                      subnetName:
                        description: SubnetName specifies the subnet in which the new network interface will be placed.
                        type: string
                    type: object
                  type: array
                osDisk:
                  description: OSDisk specifies the parameters for the operating system disk of the machine
                  properties:
                    cachingType:
                      default: None
                      description: CachingType specifies the caching requirements.
                      enum:
                        - None
                        - ReadOnly
                        - ReadWrite
                      type: string
                    diffDiskSettings:
                      description: DiffDiskSettings describe ephemeral disk settings for the os disk.
                      properties:
                        option:
                          description: |-
                            Option enables ephemeral OS when set to "Local"
                            See https://learn.microsoft.com/azure/virtual-machines/ephemeral-os-disks for full details
                          enum:
                            - Local
                          type: string
                        placement:
                          description: Placement specifies the ephemeral disk placement for operating system disk. If placement is specified, Option must be set to "Local".
                          enum:
                            - CacheDisk
                            - NvmeDisk
                            - ResourceDisk
                          type: string
                      required:
                        - option
                      type: object
                    diskSizeGB:
                      description: |-
                        DiskSizeGB is the size in GB to assign to the OS disk.
                        Will have a default of 30GB if not provided
                      format: int32
                      type: integer
                    managedDisk:
                      description: ManagedDisk specifies the Managed Disk parameters for the OS disk.
                      properties:
                        diskEncryptionSet:
                          description: DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.
                          properties:
                            id:
                              description: ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
                              type: string
                          type: object
                        securityProfile:
                          description: SecurityProfile specifies the security profile for the managed disk.
                          properties:
                            diskEncryptionSet:
                              description: |-
                                DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                                managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                                VMGuest blob.
                              properties:
                                id:
                                  description: ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
                                  type: string
                              type: object
                            securityEncryptionType:
                              description: |-
                                SecurityEncryptionType specifies the encryption type of the managed disk.
                                It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                                blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                                When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                                When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                                VirtualizedTrustedPlatformModule should be set to Enabled.
                                It can be set only for Confidential VMs.
                              enum:
                                - VMGuestStateOnly
                                - DiskWithVMGuestState
                              type: string
                          type: object
                        storageAccountType:
                          type: string
                      type: object
                    osType:
                      default: Linux
                      type: string
                  required:
                    - osType
                  type: object
                providerID:
                  description: ProviderID is the unique identifier as specified by the cloud provider.
                  type: string
                roleAssignmentName:
                  description: 'Deprecated: RoleAssignmentName should be set in the systemAssignedIdentityRole field.'
                  type: string
                securityProfile:
                  description: SecurityProfile specifies the Security profile settings for a virtual machine.
                  properties:
                    encryptionAtHost:
                      description: |-
                        This field indicates whether Host Encryption should be enabled
                        or disabled for a virtual machine or virtual machine scale set.
                        This should be disabled when SecurityEncryptionType is set to DiskWithVMGuestState.
                        Default is disabled.
                      type: boolean
                    securityType:
                      description: |-
                        SecurityType specifies the SecurityType of the virtual machine. It has to be set to any specified value to
                        enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.
                      enum:
                        - ConfidentialVM
                        - TrustedLaunch
                      type: string
                    uefiSettings:
                      description: UefiSettings specifies the security settings like secure boot and vTPM used while creating the virtual machine.
                      properties:
                        secureBootEnabled:
                          description: |-
                            SecureBootEnabled specifies whether secure boot should be enabled on the virtual machine.
                            Secure Boot verifies the digital signature of all boot components and halts the boot process if signature verification fails.
                            If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                          type: boolean
                        vTpmEnabled:
                          description: |-
                            VTpmEnabled specifies whether vTPM should be enabled on the virtual machine.
                            When true it enables the virtualized trusted platform module measurements to create a known good boot integrity policy baseline.
                            The integrity policy baseline is used for comparison with measurements from subsequent VM boots to determine if anything has changed.
                            This is required to be set to Enabled if SecurityEncryptionType is defined.
                            If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                          type: boolean
                      type: object
                  type: object
                spotVMOptions:
                  description: SpotVMOptions allows the ability to specify the Machine should use a Spot VM
                  properties:
                    evictionPolicy:
                      description: EvictionPolicy defines the behavior of the virtual machine when it is evicted. It can be either Delete or Deallocate.
                      enum:
                        - Deallocate
                        - Delete
                      type: string
                    maxPrice:
                      anyOf:
                        - type: integer
                        - type: string
                      description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                  type: object
                sshPublicKey:
                  description: |-
                    SSHPublicKey is the SSH public key string, base64-encoded to add to a Virtual Machine. Linux only.
                    Refer to documentation on how to set up SSH access on Windows instances.
                  type: string
                subnetName:
                  description: 'Deprecated: SubnetName should be set in the networkInterfaces field.'
                  type: string
                systemAssignedIdentityRole:
                  description: SystemAssignedIdentityRole defines the role and scope to assign to the system-assigned identity.
                  properties:
                    definitionID:
                      description: |-
                        DefinitionID is the ID of the role definition to create for a system assigned identity. It can be an Azure built-in role or a custom role.
                        Refer to built-in roles: https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles
                      type: string
                    name:
                      description: |-
                        Name is the name of the role assignment to create for a system assigned identity. It can be any valid UUID.
                        If not specified, a random UUID will be generated.
                      type: string
                    scope:
                      description: |-
                        Scope is the scope that the role assignment or definition applies to. The scope can be any REST resource instance.
                        If not specified, the scope will be the subscription.
                      type: string
                  type: object
                userAssignedIdentities:
                  description: |-
                    UserAssignedIdentities is a list of standalone Azure identities provided by the user
                    The lifecycle of a user-assigned identity is managed separately from the lifecycle of
                    the AzureMachine.
                    See https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
                  items:
                    description: |-
                      UserAssignedIdentity defines the user-assigned identities provided
                      by the user to be assigned to Azure resources.
                    properties:
                      providerID:
                        description: |-
                          ProviderID is the identification ID of the user-assigned Identity, the format of an identity is:
                          'azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'
                        type: string
                    required:
                      - providerID
                    type: object
                  type: array
                vmExtensions:
                  description: VMExtensions specifies a list of extensions to be added to the virtual machine.
                  items:
                    description: VMExtension specifies the parameters for a custom VM extension.
                    properties:
                      name:
                        description: Name is the name of the extension.
                        type: string
                      protectedSettings:
                        additionalProperties:
                          type: string
                        description: ProtectedSettings is a JSON formatted protected settings for the extension.
                        type: object
                      publisher:
                        description: Publisher is the name of the extension handler publisher.
                        type: string
                      settings:
                        additionalProperties:
                          type: string
                        description: Settings is a JSON formatted public settings for the extension.
                        type: object
                      version:
                        description: Version specifies the version of the script handler.
                        type: string
                    required:
                      - name
                      - publisher
                      - version
                    type: object
                  type: array
                vmSize:
                  type: string
              required:
                - osDisk
                - vmSize
              type: object
            status:
              description: AzureMachineStatus defines the observed state of AzureMachine.
              properties:
                addresses:
                  description: Addresses contains the Azure instance associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the AzureMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    ErrorMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    ErrorReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                longRunningOperationStates:
                  description: |-
                    LongRunningOperationStates saves the states for Azure long-running operations so they can be continued on the
                    next reconciliation loop.
                  items:
                    description: Future contains the data needed for an Azure long-running operation to continue across reconcile loops.
                    properties:
                      data:
                        description: Data is the base64 url encoded json Azure AutoRest Future.
                        type: string
                      name:
                        description: |-
                          Name is the name of the Azure resource.
                          Together with the service name, this forms the unique identifier for the future.
                        type: string
                      resourceGroup:
                        description: ResourceGroup is the Azure resource group for the resource.
                        type: string
                      serviceName:
                        description: |-
                          ServiceName is the name of the Azure service.
                          Together with the name of the resource, this forms the unique identifier for the future.
                        type: string
                      type:
                        description: Type describes the type of future, such as update, create, delete, etc.
                        type: string
                    required:
                      - data
                      - name
                      - serviceName
                      - type
                    type: object
                  type: array
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                vmState:
                  description: VMState is the provisioning state of the Azure virtual machine.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: azuremachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: AzureMachineTemplate
    listKind: AzureMachineTemplateList
    plural: azuremachinetemplates
    singular: azuremachinetemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AzureMachineTemplate is the Schema for the azuremachinetemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: AzureMachineTemplateSpec defines the desired state of AzureMachineTemplate.
              properties:
                template:
                  description: AzureMachineTemplateResource describes the data needed to create an AzureMachine from a template.
                  properties:
                    metadata:
                      description: |-
                        ObjectMeta is metadata that all persisted resources must have, which includes all objects
                        users must create. This is a copy of customizable fields from metav1.ObjectMeta.

                        ObjectMeta is embedded in `Machine.Spec`, `MachineDeployment.Template` and `MachineSet.Template`,
                        which are not top-level Kubernetes objects. Given that metav1.ObjectMeta has lots of special cases
                        and read-only fields which end up in the generated CRD validation, having it as a subset simplifies
                        the API and some issues that can impact user experience.

                        During the [upgrade to controller-tools@v2](https://github.com/kubernetes-sigs/cluster-api/pull/1054)
                        for v1alpha2, we noticed a failure would occur running Cluster API test suite against the new CRDs,
                        specifically `spec.metadata.creationTimestamp in body must be of type string: "null"`.
                        The investigation showed that `controller-tools@v2` behaves differently than its previous version
                        when handling types from [metav1](k8s.io/apimachinery/pkg/apis/meta/v1) package.

                        In more details, we found that embedded (non-top level) types that embedded `metav1.ObjectMeta`
                        had validation properties, including for `creationTimestamp` (metav1.Time).
                        The `metav1.Time` type specifies a custom json marshaller that, when IsZero() is true, returns `null`
                        which breaks validation because the field isn't marked as nullable.

                        In future versions, controller-tools@v2 might allow overriding the type and validation for embedded
                        types. When that happens, this hack should be revisited.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: Spec is the specification of the desired behavior of the machine.
                      properties:
                        acceleratedNetworking:
                          description: 'Deprecated: AcceleratedNetworking should be set in the networkInterfaces field.'
                          type: boolean
                        additionalCapabilities:
                          description: AdditionalCapabilities specifies additional capabilities enabled or disabled on the virtual machine.
                          properties:
                            ultraSSDEnabled:
                              description: |-
                                UltraSSDEnabled enables or disables Azure UltraSSD capability for the virtual machine.
                                Defaults to true if Ultra SSD data disks are specified,
                                otherwise it doesn't set the capability on the VM.
                              type: boolean
                          type: object
                        additionalTags:
                          additionalProperties:
                            type: string
                          description: |-
                            AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the
                            Azure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the
                            AzureMachine's value takes precedence.
                          type: object
                        allocatePublicIP:
                          description: AllocatePublicIP allows the ability to create dynamic public ips for machines where this value is true.
                          type: boolean
                        capacityReservationGroupID:
                          description: |-
                            CapacityReservationGroupID specifies the capacity reservation group resource id that should be
                            used for allocating the virtual machine.
                            The field size should be greater than 0 and the field input must start with '/'.
                            The input for capacityReservationGroupID must be similar to '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/capacityReservationGroups/{capacityReservationGroupName}'.
                            The keys which are used should be among 'subscriptions', 'providers' and 'resourcegroups' followed by valid ID or names respectively.
                            It is optional but may not be changed once set.
                          type: string
                        dataDisks:
                          description: DataDisk specifies the parameters that are used to add one or more data disks to the machine
                          items:
                            description: DataDisk specifies the parameters that are used to add one or more data disks to the machine.
                            properties:
                              cachingType:
                                description: CachingType specifies the caching requirements.
                                enum:
                                  - None
                                  - ReadOnly
                                  - ReadWrite
                                type: string
                              diskSizeGB:
                                description: DiskSizeGB is the size in GB to assign to the data disk.
                                format: int32
                                type: integer
                              lun:
                                description: |-
                                  Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
                                  The value must be between 0 and 63.
                                format: int32
                                type: integer
                              managedDisk:
                                description: ManagedDisk specifies the Managed Disk parameters for the data disk.
                                properties:
                                  diskEncryptionSet:
                                    description: DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.
                                    properties:
                                      id:
                                        description: ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
                                        type: string
                                    type: object
                                  securityProfile:
                                    description: SecurityProfile specifies the security profile for the managed disk.
                                    properties:
                                      diskEncryptionSet:
                                        description: |-
                                          DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                                          managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                                          VMGuest blob.
                                        properties:
                                          id:
                                            description: ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
                                            type: string
                                        type: object
                                      securityEncryptionType:
                                        description: |-
                                          SecurityEncryptionType specifies the encryption type of the managed disk.
                                          It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                                          blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                                          When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                                          When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                                          VirtualizedTrustedPlatformModule should be set to Enabled.
                                          It can be set only for Confidential VMs.
                                        enum:
                                          - VMGuestStateOnly
                                          - DiskWithVMGuestState
                                        type: string
                                    type: object
                                  storageAccountType:
                                    type: string
                                type: object
                              nameSuffix:
                                description: |-
                                  NameSuffix is the suffix to be appended to the machine name to generate the disk name.
                                  Each disk name will be in format <machineName>_<nameSuffix>.
                                type: string
                            required:
                              - diskSizeGB
                              - nameSuffix
                            type: object
                          type: array
                        diagnostics:
                          description: |-
                            Diagnostics specifies the diagnostics settings for a virtual machine.
                            If not specified then Boot diagnostics (Managed) will be enabled.
                          properties:
                            boot:
                              description: |-
                                Boot configures the boot diagnostics settings for the virtual machine.
                                This allows to configure capturing serial output from the virtual machine on boot.
                                This is useful for debugging software based launch issues.
                                If not specified then Boot diagnostics (Managed) will be enabled.
                              properties:
                                storageAccountType:
                                  description: |-
                                    StorageAccountType determines if the storage account for storing the diagnostics data
                                    should be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).
                                  enum:
                                    - Managed
                                    - UserManaged
                                    - Disabled
                                  type: string
                                userManaged:
                                  description: UserManaged provides a reference to the user-managed storage account.
                                  properties:
                                    storageAccountURI:
                                      description: |-
                                        StorageAccountURI is the URI of the user-managed storage account.
                                        The URI typically will be `https://<mystorageaccountname>.blob.core.windows.net/`
                                        but may differ if you are using Azure DNS zone endpoints.
                                        You can find the correct endpoint by looking for the Blob Primary Endpoint in the
                                        endpoints tab in the Azure console or with the CLI by issuing
                                        `az storage account list --query='[].{name: name, "resource group": resourceGroup, "blob endpoint": primaryEndpoints.blob}'`.
                                      maxLength: 1024
                                      pattern: ^https://
                                      type: string
                                  required:
                                    - storageAccountURI
                                  type: object
                              required:
                                - storageAccountType
                              type: object
                          type: object
                        disableExtensionOperations:
                          description: |-
                            DisableExtensionOperations specifies whether extension operations should be disabled on the virtual machine.
                            Use this setting only if VMExtensions are not supported by your image, as it disables CAPZ bootstrapping extension used for detecting Kubernetes bootstrap failure.
                            This may only be set to True when no extensions are configured on the virtual machine.
                          type: boolean
                        disableVMBootstrapExtension:
                          description: |-
                            DisableVMBootstrapExtension specifies whether the VM bootstrap extension should be disabled on the virtual machine.
                            Use this setting if you want to disable only the bootstrapping extension and not all extensions.
                          type: boolean
                        dnsServers:
                          description: DNSServers adds a list of DNS Server IP addresses to the VM NICs.
                          items:
                            type: string
                          type: array
                        enableIPForwarding:
                          description: |-
                            EnableIPForwarding enables IP Forwarding in Azure which is required for some CNI's to send traffic from a pods on one machine
                            to another. This is required for IpV6 with Calico in combination with User Defined Routes (set by the Azure Cloud Controller
                            manager). Default is false for disabled.
                          type: boolean
                        failureDomain:
                          description: |-
                            FailureDomain is the failure domain unique identifier this Machine should be attached to,
                            as defined in Cluster API. This relates to an Azure Availability Zone
                          type: string
                        identity:
                          default: None
                          description: |-
                            Identity is the type of identity used for the virtual machine.
                            The type 'SystemAssigned' is an implicitly created identity.
                            The generated identity will be assigned a Subscription contributor role.
                            The type 'UserAssigned' is a standalone Azure resource provided by the user
                            and assigned to the VM
                          enum:
                            - None
                            - SystemAssigned
                            - UserAssigned
                          type: string
                        image:
                          description: |-
                            Image is used to provide details of an image to use during VM creation.
                            If image details are omitted, the default is to use an Azure Compute Gallery Image
                            from CAPZ's community gallery.
                          properties:
                            computeGallery:
                              description: ComputeGallery specifies an image to use from the Azure Compute Gallery
                              properties:
                                gallery:
                                  description: Gallery specifies the name of the compute image gallery that contains the image
                                  minLength: 1
                                  type: string
                                name:
                                  description: Name is the name of the image
                                  minLength: 1
                                  type: string
                                plan:
                                  description: Plan contains plan information.
                                  properties:
                                    offer:
                                      description: |-
                                        Offer specifies the name of a group of related images created by the publisher.
                                        For example, UbuntuServer, WindowsServer
                                      minLength: 1
                                      type: string
                                    publisher:
                                      description: Publisher is the name of the organization that created the image
                                      minLength: 1
                                      type: string
                                    sku:
                                      description: |-
                                        SKU specifies an instance of an offer, such as a major release of a distribution.
                                        For example, 18.04-LTS, 2019-Datacenter
                                      minLength: 1
                                      type: string
                                  required:
                                    - offer
                                    - publisher
                                    - sku
                                  type: object
                                resourceGroup:
                                  description: ResourceGroup specifies the resource group containing the private compute gallery.
                                  type: string
                                subscriptionID:
                                  description: SubscriptionID is the identifier of the subscription that contains the private compute gallery.
                                  type: string
                                version:
                                  description: |-
                                    Version specifies the version of the marketplace image. The allowed formats
                                    are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                                    Specify 'latest' to use the latest version of an image available at deploy time.
                                    Even if you use 'latest', the VM image will not automatically update after deploy
                                    time even if a new version becomes available.
                                  minLength: 1
                                  type: string
                              required:
                                - gallery
                                - name
                                - version
                              type: object
                            id:
                              description: ID specifies an image to use by ID
                              type: string
                            marketplace:
                              description: Marketplace specifies an image to use from the Azure Marketplace
                              properties:
                                offer:
                                  description: |-
                                    Offer specifies the name of a group of related images created by the publisher.
                                    For example, UbuntuServer, WindowsServer
                                  minLength: 1
                                  type: string
                                publisher:
                                  description: Publisher is the name of the organization that created the image
                                  minLength: 1
                                  type: string
                                sku:
                                  description: |-
                                    SKU specifies an instance of an offer, such as a major release of a distribution.
                                    For example, 18.04-LTS, 2019-Datacenter
                                  minLength: 1
                                  type: string
                                thirdPartyImage:
                                  default: false
                                  description: |-
                                    ThirdPartyImage indicates the image is published by a third party publisher and a Plan
                                    will be generated for it.
                                  type: boolean
                                version:
                                  description: |-
                                    Version specifies the version of an image sku. The allowed formats
                                    are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                                    Specify 'latest' to use the latest version of an image available at deploy time.
                                    Even if you use 'latest', the VM image will not automatically update after deploy
                                    time even if a new version becomes available.
                                  minLength: 1
                                  type: string
                              required:
                                - offer
                                - publisher
                                - sku
                                - version
                              type: object
                            sharedGallery:
                              description: |-
                                SharedGallery specifies an image to use from an Azure Shared Image Gallery
                                Deprecated: use ComputeGallery instead.
                              properties:
                                gallery:
                                  description: Gallery specifies the name of the shared image gallery that contains the image
                                  minLength: 1
                                  type: string
                                name:
                                  description: Name is the name of the image
                                  minLength: 1
                                  type: string
                                offer:
                                  description: |-
                                    Offer specifies the name of a group of related images created by the publisher.
                                    For example, UbuntuServer, WindowsServer
                                    This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                                    This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                                  type: string
                                publisher:
                                  description: |-
                                    Publisher is the name of the organization that created the image.
                                    This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                                    This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                                  type: string
                                resourceGroup:
                                  description: ResourceGroup specifies the resource group containing the shared image gallery
                                  minLength: 1
                                  type: string
                                sku:
                                  description: |-
                                    SKU specifies an instance of an offer, such as a major release of a distribution.
                                    For example, 18.04-LTS, 2019-Datacenter
                                    This value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.
                                    This is needed when the source image from which this SIG image was built requires the `Plan` to be used.
                                  type: string
                                subscriptionID:
                                  description: SubscriptionID is the identifier of the subscription that contains the shared image gallery
                                  minLength: 1
                                  type: string
                                version:
                                  description: |-
                                    Version specifies the version of the marketplace image. The allowed formats
                                    are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.
                                    Specify 'latest' to use the latest version of an image available at deploy time.
                                    Even if you use 'latest', the VM image will not automatically update after deploy
                                    time even if a new version becomes available.
                                  minLength: 1
                                  type: string
                              required:
                                - gallery
                                - name
                                - resourceGroup
                                - subscriptionID
                                - version
                              type: object
                          type: object
                        networkInterfaces:
                          description: |-
                            NetworkInterfaces specifies a list of network interface configurations.
                            If left unspecified, the VM will get a single network interface with a
                            single IPConfig in the subnet specified in the cluster's node subnet field.
                            The primary interface will be the first networkInterface specified (index 0) in the list.
                          items:
                            description: NetworkInterface defines a network interface.
                            properties:
                              acceleratedNetworking:
                                description: |-
                                  AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on
                                  whether the requested VMSize supports accelerated networking.
                                  If AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.
                                type: boolean
                              privateIPConfigs:
                                description: |-
                                  PrivateIPConfigs specifies the number of private IP addresses to attach to the interface.
                                  Defaults to 1 if not specified.
                                type: integer
                              subnetName:
                                description: SubnetName specifies the subnet in which the new network interface will be placed.
                                type: string
                            type: object
                          type: array
                        osDisk:
                          description: OSDisk specifies the parameters for the operating system disk of the machine
                          properties:
                            cachingType:
                              default: None
                              description: CachingType specifies the caching requirements.
                              enum:
                                - None
                                - ReadOnly
                                - ReadWrite
                              type: string
                            diffDiskSettings:
                              description: DiffDiskSettings describe ephemeral disk settings for the os disk.
                              properties:
                                option:
                                  description: |-
                                    Option enables ephemeral OS when set to "Local"
                                    See https://learn.microsoft.com/azure/virtual-machines/ephemeral-os-disks for full details
                                  enum:
                                    - Local
                                  type: string
                                placement:
                                  description: Placement specifies the ephemeral disk placement for operating system disk. If placement is specified, Option must be set to "Local".
                                  enum:
                                    - CacheDisk
                                    - NvmeDisk
                                    - ResourceDisk
                                  type: string
                              required:
                                - option
                              type: object
                            diskSizeGB:
                              description: |-
                                DiskSizeGB is the size in GB to assign to the OS disk.
                                Will have a default of 30GB if not provided
                              format: int32
                              type: integer
                            managedDisk:
                              description: ManagedDisk specifies the Managed Disk parameters for the OS disk.
                              properties:
                                diskEncryptionSet:
                                  description: DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.
                                  properties:
                                    id:
                                      description: ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
                                      type: string
                                  type: object
                                securityProfile:
                                  description: SecurityProfile specifies the security profile for the managed disk.
                                  properties:
                                    diskEncryptionSet:
                                      description: |-
                                        DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the
                                        managed disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and
                                        VMGuest blob.
                                      properties:
                                        id:
                                          description: ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription
                                          type: string
                                      type: object
                                    securityEncryptionType:
                                      description: |-
                                        SecurityEncryptionType specifies the encryption type of the managed disk.
                                        It is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState
                                        blob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.
                                        When set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.
                                        When set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and
                                        VirtualizedTrustedPlatformModule should be set to Enabled.
                                        It can be set only for Confidential VMs.
                                      enum:
                                        - VMGuestStateOnly
                                        - DiskWithVMGuestState
                                      type: string
                                  type: object
                                storageAccountType:
                                  type: string
                              type: object
                            osType:
                              default: Linux
                              type: string
                          required:
                            - osType
                          type: object
                        providerID:
                          description: ProviderID is the unique identifier as specified by the cloud provider.
                          type: string
                        roleAssignmentName:
                          description: 'Deprecated: RoleAssignmentName should be set in the systemAssignedIdentityRole field.'
                          type: string
                        securityProfile:
                          description: SecurityProfile specifies the Security profile settings for a virtual machine.
                          properties:
                            encryptionAtHost:
                              description: |-
                                This field indicates whether Host Encryption should be enabled
                                or disabled for a virtual machine or virtual machine scale set.
                                This should be disabled when SecurityEncryptionType is set to DiskWithVMGuestState.
                                Default is disabled.
                              type: boolean
                            securityType:
                              description: |-
                                SecurityType specifies the SecurityType of the virtual machine. It has to be set to any specified value to
                                enable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.
                              enum:
                                - ConfidentialVM
                                - TrustedLaunch
                              type: string
                            uefiSettings:
                              description: UefiSettings specifies the security settings like secure boot and vTPM used while creating the virtual machine.
                              properties:
                                secureBootEnabled:
                                  description: |-
                                    SecureBootEnabled specifies whether secure boot should be enabled on the virtual machine.
                                    Secure Boot verifies the digital signature of all boot components and halts the boot process if signature verification fails.
                                    If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                                  type: boolean
                                vTpmEnabled:
                                  description: |-
                                    VTpmEnabled specifies whether vTPM should be enabled on the virtual machine.
                                    When true it enables the virtualized trusted platform module measurements to create a known good boot integrity policy baseline.
                                    The integrity policy baseline is used for comparison with measurements from subsequent VM boots to determine if anything has changed.
                                    This is required to be set to Enabled if SecurityEncryptionType is defined.
                                    If omitted, the platform chooses a default, which is subject to change over time, currently that default is false.
                                  type: boolean
                              type: object
                          type: object
                        spotVMOptions:
                          description: SpotVMOptions allows the ability to specify the Machine should use a Spot VM
                          properties:
                            evictionPolicy:
                              description: EvictionPolicy defines the behavior of the virtual machine when it is evicted. It can be either Delete or Deallocate.
                              enum:
                                - Deallocate
                                - Delete
                              type: string
                            maxPrice:
                              anyOf:
                                - type: integer
                                - type: string
                              description: MaxPrice defines the maximum price the user is willing to pay for Spot VM instances
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                          type: object
                        sshPublicKey:
                          description: |-
                            SSHPublicKey is the SSH public key string, base64-encoded to add to a Virtual Machine. Linux only.
                            Refer to documentation on how to set up SSH access on Windows instances.
                          type: string
                        subnetName:
                          description: 'Deprecated: SubnetName should be set in the networkInterfaces field.'
                          type: string
                        systemAssignedIdentityRole:
                          description: SystemAssignedIdentityRole defines the role and scope to assign to the system-assigned identity.
                          properties:
                            definitionID:
                              description: |-
                                DefinitionID is the ID of the role definition to create for a system assigned identity. It can be an Azure built-in role or a custom role.
                                Refer to built-in roles: https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles
                              type: string
                            name:
                              description: |-
                                Name is the name of the role assignment to create for a system assigned identity. It can be any valid UUID.
                                If not specified, a random UUID will be generated.
                              type: string
                            scope:
                              description: |-
                                Scope is the scope that the role assignment or definition applies to. The scope can be any REST resource instance.
                                If not specified, the scope will be the subscription.
                              type: string
                          type: object
                        userAssignedIdentities:
                          description: |-
                            UserAssignedIdentities is a list of standalone Azure identities provided by the user
                            The lifecycle of a user-assigned identity is managed separately from the lifecycle of
                            the AzureMachine.
                            See https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli
                          items:
                            description: |-
                              UserAssignedIdentity defines the user-assigned identities provided
                              by the user to be assigned to Azure resources.
                            properties:
                              providerID:
                                description: |-
                                  ProviderID is the identification ID of the user-assigned Identity, the format of an identity is:
                                  'azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'
                                type: string
                            required:
                              - providerID
                            type: object
                          type: array
                        vmExtensions:
                          description: VMExtensions specifies a list of extensions to be added to the virtual machine.
                          items:
                            description: VMExtension specifies the parameters for a custom VM extension.
                            properties:
                              name:
                                description: Name is the name of the extension.
                                type: string
                              protectedSettings:
                                additionalProperties:
                                  type: string
                                description: ProtectedSettings is a JSON formatted protected settings for the extension.
                                type: object
                              publisher:
                                description: Publisher is the name of the extension handler publisher.
                                type: string
                              settings:
                                additionalProperties:
                                  type: string
                                description: Settings is a JSON formatted public settings for the extension.
                                type: object
                              version:
                                description: Version specifies the version of the script handler.
                                type: string
                            required:
                              - name
                              - publisher
                              - version
                            type: object
                          type: array
                        vmSize:
                          type: string
                      required:
                        - osDisk
                        - vmSize
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta2
  name: ibmpowervsclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSCluster
    listKind: IBMPowerVSClusterList
    plural: ibmpowervsclusters
    singular: ibmpowervscluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this IBMPowerVSCluster belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Time duration since creation of IBMPowerVSCluster
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .spec.serviceInstanceID
          name: PowerVS Cloud Instance ID
          priority: 1
          type: string
        - description: Control Plane Endpoint
          jsonPath: .spec.controlPlaneEndpoint.host
          name: Endpoint
          priority: 1
          type: string
        - description: Control Plane Port
          jsonPath: .spec.controlPlaneEndpoint.port
          name: Port
          priority: 1
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSCluster is the Schema for the ibmpowervsclusters API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                network:
                  description: Network is the reference to the Network to use for this cluster.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                serviceInstanceID:
                  description: ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.
                  minLength: 1
                  type: string
              required:
                - network
                - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSClusterStatus defines the observed state of IBMPowerVSCluster.
              properties:
                ready:
                  description: |-
                    INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  type: boolean
              required:
                - ready
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: Cluster to which this IBMPowerVSCluster belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Time duration since creation of IBMPowerVSCluster
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .spec.serviceInstanceID
          name: PowerVS Cloud Instance ID
          priority: 1
          type: string
        - description: Control Plane Endpoint
          jsonPath: .spec.controlPlaneEndpoint.host
          name: Endpoint
          priority: 1
          type: string
        - description: Control Plane Port
          jsonPath: .spec.controlPlaneEndpoint.port
          name: Port
          priority: 1
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: IBMPowerVSCluster is the Schema for the ibmpowervsclusters API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                cosInstance:
                  description: |-
                    cosInstance contains options to configure a supporting IBM Cloud COS bucket for this
                    cluster - currently used for nodes requiring Ignition
                    (https://coreos.github.io/ignition/) for bootstrapping (requires
                    BootstrapFormatIgnition feature flag to be enabled).
                    when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource and Ignition is set, then
                    1. CosInstance.Name should be set not setting will result in webhook error.
                    2. CosInstance.BucketName should be set not setting will result in webhook error.
                    3. CosInstance.BucketRegion should be set not setting will result in webhook error.
                  properties:
                    bucketName:
                      description: bucketName is IBM cloud COS bucket name
                      type: string
                    bucketRegion:
                      description: bucketRegion is IBM cloud COS bucket region
                      type: string
                    name:
                      description: |-
                        name defines name of IBM cloud COS instance to be created.
                        when IBMPowerVSCluster.Ignition is set
                      maxLength: 63
                      minLength: 3
                      pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                      type: string
                  type: object
                dhcpServer:
                  description: |-
                    dhcpServer is contains the configuration to be used while creating a new DHCP server in PowerVS workspace.
                    when the field is omitted, CLUSTER_NAME will be used as DHCPServer.Name and DHCP server will be created.
                    it will automatically create network with name DHCPSERVER<DHCPServer.Name>_Private in PowerVS workspace.
                  properties:
                    cidr:
                      description: Optional cidr for DHCP private network
                      type: string
                    dnsServer:
                      default: 1.1.1.1
                      description: Optional DNS Server for DHCP service
                      type: string
                    id:
                      description: Optional id of the existing DHCPServer
                      type: string
                    name:
                      description: Optional name of DHCP Service. Only alphanumeric characters and dashes are allowed.
                      type: string
                    snat:
                      default: true
                      description: Optional indicates if SNAT will be enabled for DHCP service
                      type: boolean
                  type: object
                ignition:
                  description: Ignition defined options related to the bootstrapping systems where Ignition is used.
                  properties:
                    version:
                      default: "2.3"
                      description: Version defines which version of Ignition will be used to generate bootstrap data.
                      enum:
                        - "2.3"
                        - "2.4"
                        - "3.0"
                        - "3.1"
                        - "3.2"
                        - "3.3"
                        - "3.4"
                      type: string
                  type: object
                loadBalancers:
                  description: |-
                    loadBalancers is optional configuration for configuring loadbalancers to control plane or data plane nodes.
                    when omitted system will create a default public loadbalancer with name CLUSTER_NAME-loadbalancer.
                    when specified a vpc loadbalancer will be created and controlPlaneEndpoint will be set with associated hostname of loadbalancer.
                    ControlPlaneEndpoint will be set with associated hostname of public loadbalancer.
                    when LoadBalancers[].ID is set, its expected that there exist a loadbalancer with ID or else system will give error.
                    when LoadBalancers[].Name is set, system will first check for loadbalancer with Name, if not exist system will create new loadbalancer.
                    For each loadbalancer a default backed pool and front listener will be configured with port 6443.
                  items:
                    description: VPCLoadBalancerSpec defines the desired state of an VPC load balancer.
                    properties:
                      additionalListeners:
                        description: AdditionalListeners sets the additional listeners for the control plane load balancer.
                        items:
                          description: |-
                            AdditionalListenerSpec defines the desired state of an
                            additional listener on an VPC load balancer.
                          properties:
                            defaultPoolName:
                              description: defaultPoolName defines the name of a VPC Load Balancer Backend Pool to use for the VPC Load Balancer Listener.
                              maxLength: 63
                              minLength: 1
                              pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                              type: string
                            port:
                              description: Port sets the port for the additional listener.
                              format: int64
                              maximum: 65535
                              minimum: 1
                              type: integer
                            protocol:
                              description: |-
                                protocol defines the protocol to use for the VPC Load Balancer Listener.
                                Will default to TCP protocol if not specified.
                              enum:
                                - http
                                - https
                                - tcp
                                - udp
                              type: string
                          required:
                            - port
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                          - port
                        x-kubernetes-list-type: map
                      backendPools:
                        description: backendPools defines the load balancer's backend pools.
                        items:
                          description: VPCLoadBalancerBackendPoolSpec defines the desired configuration of a VPC Load Balancer Backend Pool.
                          properties:
                            algorithm:
                              description: algorithm defines the load balancing algorithm to use.
                              enum:
                                - least_connections
                                - round_robin
                                - weighted_round_robin
                              type: string
                            healthMonitor:
                              description: healthMonitor defines the backend pool's health monitor.
                              properties:
                                delay:
                                  description: delay defines the seconds to wait between health checks.
                                  format: int64
                                  maximum: 60
                                  minimum: 2
                                  type: integer
                                port:
                                  description: port defines the port to perform health monitoring on.
                                  format: int64
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                retries:
                                  description: retries defines the max retries for health check.
                                  format: int64
                                  maximum: 10
                                  minimum: 1
                                  type: integer
                                timeout:
                                  description: timeout defines the seconds to wait for a health check response.
                                  format: int64
                                  maximum: 59
                                  minimum: 1
                                  type: integer
                                type:
                                  description: type defines the protocol used for health checks.
                                  enum:
                                    - http
                                    - https
                                    - tcp
                                  type: string
                                urlPath:
                                  description: urlPath defines the URL to use for health monitoring.
                                  pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                  type: string
                              required:
                                - delay
                                - retries
                                - timeout
                                - type
                              type: object
                            name:
                              description: name defines the name of the Backend Pool.
                              maxLength: 63
                              minLength: 1
                              pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                              type: string
                            protocol:
                              description: protocol defines the protocol to use for the Backend Pool.
                              enum:
                                - http
                                - https
                                - tcp
                                - udp
                              type: string
                          required:
                            - algorithm
                            - healthMonitor
                            - protocol
                          type: object
                        type: array
                      id:
                        description: id of the loadbalancer
                        maxLength: 64
                        minLength: 1
                        pattern: ^[-0-9a-z_]+$
                        type: string
                      name:
                        description: Name sets the name of the VPC load balancer.
                        maxLength: 63
                        minLength: 1
                        pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                        type: string
                      public:
                        default: true
                        description: public indicates that load balancer is public or private
                        type: boolean
                      securityGroups:
                        description: |-
                          securityGroups defines the Security Groups to attach to the load balancer.
                          Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                        items:
                          description: VPCResource represents a VPC resource.
                          properties:
                            id:
                              description: id of the resource.
                              minLength: 1
                              type: string
                            name:
                              description: name of the resource.
                              minLength: 1
                              type: string
                          type: object
                          x-kubernetes-validations:
                            - message: an id or name must be provided
                              rule: has(self.id) || has(self.name)
                        type: array
                      subnets:
                        description: |-
                          subnets defines the VPC Subnets to attach to the load balancer.
                          Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                        items:
                          description: VPCResource represents a VPC resource.
                          properties:
                            id:
                              description: id of the resource.
                              minLength: 1
                              type: string
                            name:
                              description: name of the resource.
                              minLength: 1
                              type: string
                          type: object
                          x-kubernetes-validations:
                            - message: an id or name must be provided
                              rule: has(self.id) || has(self.name)
                        type: array
                    type: object
                  type: array
                network:
                  description: |-
                    Network is the reference to the Network to use for this cluster.
                    when the field is omitted, A DHCP service will be created in the Power VS workspace and its private network will be used.
                    the DHCP service created network will have the following name format
                    1. in the case of DHCPServer.Name is not set the name will be DHCPSERVER<CLUSTER_NAME>_Private.
                    2. if DHCPServer.Name is set the name will be DHCPSERVER<DHCPServer.Name>_Private.
                    when Network.ID is set, its expected that there exist a network in PowerVS workspace with id or else system will give error.
                    when Network.Name is set, system will first check for network with Name in PowerVS workspace, if not exist system will check DHCP network with given Network.name, if that also not exist, it will create a new DHCP service and name will be DHCPSERVER<Network.Name>_Private.
                    Network.RegEx is not yet supported and system will ignore the value.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                resourceGroup:
                  description: |-
                    resourceGroup name under which the resources will be created.
                    when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                    1. it is expected to set the ResourceGroup.Name, not setting will result in webhook error.
                    ResourceGroup.ID and ResourceGroup.Regex is not yet supported and system will ignore the value.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                serviceInstance:
                  description: |-
                    serviceInstance is the reference to the Power VS server workspace on which the server instance(VM) will be created.
                    Power VS server workspace is a container for all Power VS instances at a specific geographic region.
                    serviceInstance can be created via IBM Cloud catalog or CLI.
                    supported serviceInstance identifier in PowerVSResource are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                    More detail about Power VS service instance.
                    https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                    when omitted system will dynamically create the service instance with name CLUSTER_NAME-serviceInstance.
                    when ServiceInstance.ID is set, its expected that there exist a service instance in PowerVS workspace with id or else system will give error.
                    when ServiceInstance.Name is set, system will first check for service instance with Name in PowerVS workspace, if not exist system will create new instance.
                    if there are more than one service instance exist with the ServiceInstance.Name in given Zone, installation fails with an error. Use ServiceInstance.ID in those situations to use the specific service instance.
                    ServiceInstance.Regex is not yet supported not yet supported and system will ignore the value.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                serviceInstanceID:
                  description: |-
                    ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.
                    Deprecated: use ServiceInstance instead
                  type: string
                transitGateway:
                  description: |-
                    transitGateway contains information about IBM Cloud TransitGateway
                    IBM Cloud TransitGateway helps in establishing network connectivity between IBM Cloud Power VS and VPC infrastructure
                    more information about TransitGateway can be found here https://www.ibm.com/products/transit-gateway.
                    when TransitGateway.ID is set, its expected that there exist a TransitGateway with ID or else system will give error.
                    when TransitGateway.Name is set, system will first check for TransitGateway with Name, if not exist system will create new TransitGateway.
                  properties:
                    globalRouting:
                      description: |-
                        globalRouting indicates whether to set global routing true or not while creating the transit gateway.
                        set this field to true only when PowerVS and VPC are from different regions, if they are same it's suggested to use local routing by setting the field to false.
                        when the field is omitted,  based on PowerVS region (region associated with IBMPowerVSCluster.Spec.Zone) and VPC region(IBMPowerVSCluster.Spec.VPC.Region) system will decide whether to enable globalRouting or not.
                      type: boolean
                    id:
                      description: id of resource.
                      type: string
                    name:
                      description: name of resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^([a-zA-Z]|[a-zA-Z][-_a-zA-Z0-9]*[a-zA-Z0-9])$
                      type: string
                  type: object
                vpc:
                  description: |-
                    vpc contains information about IBM Cloud VPC resources.
                    when omitted system will dynamically create the VPC with name CLUSTER_NAME-vpc.
                    when VPC.ID is set, its expected that there exist a VPC with ID or else system will give error.
                    when VPC.Name is set, system will first check for VPC with Name, if not exist system will create new VPC.
                    when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                    1. it is expected to set the VPC.Region, not setting will result in webhook error.
                  properties:
                    id:
                      description: id of resource.
                      maxLength: 64
                      minLength: 1
                      pattern: ^[-0-9a-z_]+$
                      type: string
                    name:
                      description: name of resource.
                      maxLength: 63
                      minLength: 1
                      pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                      type: string
                    region:
                      description: |-
                        region of IBM Cloud VPC.
                        when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                        it is expected to set the region, not setting will result in webhook error.
                      type: string
                  type: object
                vpcSecurityGroups:
                  description: VPCSecurityGroups to attach it to the VPC resource
                  items:
                    description: VPCSecurityGroup defines a VPC Security Group that should exist or be created within the specified VPC, with the specified Security Group Rules.
                    properties:
                      id:
                        description: id of the Security Group.
                        type: string
                      name:
                        description: name of the Security Group.
                        type: string
                      rules:
                        description: rules are the Security Group Rules for the Security Group.
                        items:
                          description: VPCSecurityGroupRule defines a VPC Security Group Rule for a specified Security Group.
                          properties:
                            action:
                              description: action defines whether to allow or deny traffic defined by the Security Group Rule.
                              enum:
                                - allow
                                - deny
                              type: string
                            destination:
                              description: |-
                                destination is a VPCSecurityGroupRulePrototype which defines the destination of outbound traffic for the Security Group Rule.
                                Only used when direction is VPCSecurityGroupRuleDirectionOutbound.
                              properties:
                                icmpCode:
                                  description: |-
                                    icmpCode is the ICMP code for the Rule.
                                    Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                  format: int64
                                  type: integer
                                icmpType:
                                  description: |-
                                    icmpType is the ICMP type for the Rule.
                                    Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                  format: int64
                                  type: integer
                                portRange:
                                  description: portRange is a range of ports allowed for the Rule's remote.
                                  properties:
                                    maximumPort:
                                      description: maximumPort is the inclusive upper range of ports.
                                      format: int64
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    minimumPort:
                                      description: minimumPort is the inclusive lower range of ports.
                                      format: int64
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  type: object
                                  x-kubernetes-validations:
                                    - message: maximum port must be greater than or equal to minimum port
                                      rule: self.maximumPort >= self.minimumPort
                                protocol:
                                  description: protocol defines the traffic protocol used for the Security Group Rule.
                                  enum:
                                    - all
                                    - icmp
                                    - tcp
                                    - udp
                                  type: string
                                remotes:
                                  description: |-
                                    remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                    Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                    This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                  items:
                                    description: |-
                                      VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                      The type of remote defines the additional remote details where are used for defining the remote.
                                    properties:
                                      address:
                                        description: |2-
                                           address is the address to use for the remote's destination/source.
                                          Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                        type: string
                                      cidrSubnetName:
                                        description: |-
                                          cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                          Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                        type: string
                                      remoteType:
                                        description: remoteType defines the type of filter to define for the remote's destination/source.
                                        enum:
                                          - any
                                          - cidr
                                          - address
                                          - sg
                                        type: string
                                      securityGroupName:
                                        description: |-
                                          securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                          Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                        type: string
                                    required:
                                      - remoteType
                                    type: object
                                    x-kubernetes-validations:
                                      - message: cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType
                                        rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                      - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                        rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                      - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType
                                        rule: 'self.remoteType == ''address'' ? (has(self.address) && !has(self.cidrSubnetName) && !has(self.securityGroupName)) : true'
                                      - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType
                                        rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName) && !has(self.cidrSubnetName) && !has(self.address)) : true'
                                  type: array
                              required:
                                - protocol
                                - remotes
                              type: object
                              x-kubernetes-validations:
                                - message: icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol
                                  rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode) && !has(self.icmpType)) : true'
                                - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol
                                  rule: 'self.protocol == ''all'' ? !has(self.portRange) : true'
                                - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol
                                  rule: 'self.protocol == ''icmp'' ? !has(self.portRange) : true'
                            direction:
                              description: direction defines whether the traffic is inbound or outbound for the Security Group Rule.
                              enum:
                                - inbound
                                - outbound
                              type: string
                            securityGroupID:
                              description: securityGroupID is the ID of the Security Group for the Security Group Rule.
                              type: string
                            source:
                              description: |-
                                source is a VPCSecurityGroupRulePrototype which defines the source of inbound traffic for the Security Group Rule.
                                Only used when direction is VPCSecurityGroupRuleDirectionInbound.
                              properties:
                                icmpCode:
                                  description: |-
                                    icmpCode is the ICMP code for the Rule.
                                    Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                  format: int64
                                  type: integer
                                icmpType:
                                  description: |-
                                    icmpType is the ICMP type for the Rule.
                                    Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                  format: int64
                                  type: integer
                                portRange:
                                  description: portRange is a range of ports allowed for the Rule's remote.
                                  properties:
                                    maximumPort:
                                      description: maximumPort is the inclusive upper range of ports.
                                      format: int64
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    minimumPort:
                                      description: minimumPort is the inclusive lower range of ports.
                                      format: int64
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                  type: object
                                  x-kubernetes-validations:
                                    - message: maximum port must be greater than or equal to minimum port
                                      rule: self.maximumPort >= self.minimumPort
                                protocol:
                                  description: protocol defines the traffic protocol used for the Security Group Rule.
                                  enum:
                                    - all
                                    - icmp
                                    - tcp
                                    - udp
                                  type: string
                                remotes:
                                  description: |-
                                    remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                    Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                    This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                  items:
                                    description: |-
                                      VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                      The type of remote defines the additional remote details where are used for defining the remote.
                                    properties:
                                      address:
                                        description: |2-
                                           address is the address to use for the remote's destination/source.
                                          Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                        type: string
                                      cidrSubnetName:
                                        description: |-
                                          cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                          Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                        type: string
                                      remoteType:
                                        description: remoteType defines the type of filter to define for the remote's destination/source.
                                        enum:
                                          - any
                                          - cidr
                                          - address
                                          - sg
                                        type: string
                                      securityGroupName:
                                        description: |-
                                          securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                          Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                        type: string
                                    required:
                                      - remoteType
                                    type: object
                                    x-kubernetes-validations:
                                      - message: cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType
                                        rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                      - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                        rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                      - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType
                                        rule: 'self.remoteType == ''address'' ? (has(self.address) && !has(self.cidrSubnetName) && !has(self.securityGroupName)) : true'
                                      - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType
                                        rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName) && !has(self.cidrSubnetName) && !has(self.address)) : true'
                                  type: array
                              required:
                                - protocol
                                - remotes
                              type: object
                              x-kubernetes-validations:
                                - message: icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol
                                  rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode) && !has(self.icmpType)) : true'
                                - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol
                                  rule: 'self.protocol == ''all'' ? !has(self.portRange) : true'
                                - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol
                                  rule: 'self.protocol == ''icmp'' ? !has(self.portRange) : true'
                          required:
                            - action
                            - direction
                          type: object
                          x-kubernetes-validations:
                            - message: both destination and source cannot be provided
                              rule: (has(self.destination) && !has(self.source)) || (!has(self.destination) && has(self.source))
                            - message: source must be set for VPCSecurityGroupRuleDirectionInbound direction
                              rule: 'self.direction == ''inbound'' ? has(self.source) : true'
                            - message: destination is not valid for VPCSecurityGroupRuleDirectionInbound direction
                              rule: 'self.direction == ''inbound'' ? !has(self.destination) : true'
                            - message: destination must be set for VPCSecurityGroupRuleDirectionOutbound direction
                              rule: 'self.direction == ''outbound'' ? has(self.destination) : true'
                            - message: source is not valid for VPCSecurityGroupRuleDirectionOutbound direction
                              rule: 'self.direction == ''outbound'' ? !has(self.source) : true'
                        type: array
                      tags:
                        description: tags are tags to add to the Security Group.
                        items:
                          type: string
                        type: array
                    type: object
                    x-kubernetes-validations:
                      - message: either an id or name must be specified
                        rule: has(self.id) || has(self.name)
                  type: array
                vpcSubnets:
                  description: |-
                    vpcSubnets contains information about IBM Cloud VPC Subnet resources.
                    when omitted system will create the subnets in all the zone corresponding to VPC.Region, with name CLUSTER_NAME-vpcsubnet-ZONE_NAME.
                    possible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                    when VPCSubnets[].ID is set, its expected that there exist a subnet with ID or else system will give error.
                    when VPCSubnets[].Zone is not set, a random zone is picked from available zones of VPC.Region.
                    when VPCSubnets[].Name is not set, system will set name as CLUSTER_NAME-vpcsubnet-INDEX.
                    if subnet with name VPCSubnets[].Name not found, system will create new subnet in VPCSubnets[].Zone.
                  items:
                    description: Subnet describes a subnet.
                    properties:
                      cidr:
                        type: string
                      id:
                        maxLength: 64
                        minLength: 1
                        pattern: ^[-0-9a-z_]+$
                        type: string
                      name:
                        maxLength: 63
                        minLength: 1
                        pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                        type: string
                      zone:
                        type: string
                    type: object
                  type: array
                zone:
                  description: |-
                    zone is the name of Power VS zone where the cluster will be created
                    possible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                    when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                    1. it is expected to set the zone, not setting will result in webhook error.
                    2. the zone should have PER capabilities, or else system will give error.
                  type: string
              required:
                - network
                - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSClusterStatus defines the observed state of IBMPowerVSCluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the IBMPowerVSCluster.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                cosInstance:
                  description: cosInstance is reference to IBM Cloud COS Instance resource.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                  type: object
                dhcpServer:
                  description: dhcpServer is the reference to the Power VS DHCP server.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                  type: object
                loadBalancers:
                  additionalProperties:
                    description: VPCLoadBalancerStatus defines the status VPC load balancer.
                    properties:
                      controllerCreated:
                        default: false
                        description: controllerCreated indicates whether the resource is created by the controller.
                        type: boolean
                      hostname:
                        description: hostname is the hostname of load balancer.
                        type: string
                      id:
                        description: id of VPC load balancer.
                        type: string
                      state:
                        description: State is the status of the load balancer.
                        type: string
                    type: object
                  description: loadBalancers reference to IBM Cloud VPC Loadbalancer.
                  type: object
                network:
                  description: networkID is the reference to the Power VS network to use for this cluster.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                  type: object
                ready:
                  default: false
                  description: ready is true when the provider resource is ready.
                  type: boolean
                resourceGroupID:
                  description: ResourceGroup is the reference to the Power VS resource group under which the resources will be created.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                  type: object
                serviceInstance:
                  description: serviceInstance is the reference to the Power VS service on which the server instance(VM) will be created.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                  type: object
                transitGateway:
                  description: transitGateway is reference to IBM Cloud TransitGateway.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                    powerVSConnection:
                      description: powerVSConnection defines the powervs connection status in transit gateway.
                      properties:
                        controllerCreated:
                          default: false
                          description: controllerCreated indicates whether the resource is created by the controller.
                          type: boolean
                        id:
                          description: id represents the id of the resource.
                          type: string
                      type: object
                    vpcConnection:
                      description: vpcConnection defines the vpc connection status in transit gateway.
                      properties:
                        controllerCreated:
                          default: false
                          description: controllerCreated indicates whether the resource is created by the controller.
                          type: boolean
                        id:
                          description: id represents the id of the resource.
                          type: string
                      type: object
                  type: object
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in IBMPowerVSCluster's status with the V1Beta2 version.
                  properties:
                    conditions:
                      description: conditions represents the observations of a DevCluster's current state.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                  type: object
                vpc:
                  description: vpc is reference to IBM Cloud VPC resources.
                  properties:
                    controllerCreated:
                      default: false
                      description: controllerCreated indicates whether the resource is created by the controller.
                      type: boolean
                    id:
                      description: id represents the id of the resource.
                      type: string
                  type: object
                vpcSecurityGroups:
                  additionalProperties:
                    description: VPCSecurityGroupStatus defines a vpc security group resource status with its id and respective rule's ids.
                    properties:
                      controllerCreated:
                        default: false
                        description: controllerCreated indicates whether the resource is created by the controller.
                        type: boolean
                      id:
                        description: id represents the id of the resource.
                        type: string
                      ruleIDs:
                        description: rules contains the id of rules created under the security group
                        items:
                          type: string
                        type: array
                    type: object
                  description: vpcSecurityGroups is reference to IBM Cloud VPC security group.
                  type: object
                vpcSubnet:
                  additionalProperties:
                    description: ResourceReference identifies a resource with id.
                    properties:
                      controllerCreated:
                        default: false
                        description: controllerCreated indicates whether the resource is created by the controller.
                        type: boolean
                      id:
                        description: id represents the id of the resource.
                        type: string
                    type: object
                  description: vpcSubnet is reference to IBM Cloud VPC subnet.
                  type: object
              required:
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: ibmpowervsclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: IBMPowerVSClusterTemplate
    listKind: IBMPowerVSClusterTemplateList
    plural: ibmpowervsclustertemplates
    shortNames:
      - ibmpowervsct
    singular: ibmpowervsclustertemplate
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Time duration since creation of IBMPowerVSClusterTemplate
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSClusterTemplate is the schema for IBM Power VS Kubernetes Cluster Templates.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSClusterTemplateSpec defines the desired state of IBMPowerVSClusterTemplate.
              properties:
                template:
                  description: IBMPowerVSClusterTemplateResource describes the data needed to create an IBMPowerVSCluster from a template.
                  properties:
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.
                      properties:
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                          properties:
                            host:
                              description: host is the hostname on which the API server is serving.
                              maxLength: 512
                              type: string
                            port:
                              description: port is the port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                            - host
                            - port
                          type: object
                        network:
                          description: Network is the reference to the Network to use for this cluster.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: |-
                                Regular expression to match resource,
                                In case of multiple resources matches the provided regular expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        serviceInstanceID:
                          description: ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.
                          minLength: 1
                          type: string
                      required:
                        - network
                        - serviceInstanceID
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: false
      subresources: {}
    - additionalPrinterColumns:
        - description: Time duration since creation of IBMPowerVSClusterTemplate
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: IBMPowerVSClusterTemplate is the schema for IBM Power VS Kubernetes Cluster Templates.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSClusterTemplateSpec defines the desired state of IBMPowerVSClusterTemplate.
              properties:
                template:
                  description: IBMPowerVSClusterTemplateResource describes the data needed to create an IBMPowerVSCluster from a template.
                  properties:
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.
                      properties:
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                          properties:
                            host:
                              description: host is the hostname on which the API server is serving.
                              maxLength: 512
                              type: string
                            port:
                              description: port is the port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                            - host
                            - port
                          type: object
                        cosInstance:
                          description: |-
                            cosInstance contains options to configure a supporting IBM Cloud COS bucket for this
                            cluster - currently used for nodes requiring Ignition
                            (https://coreos.github.io/ignition/) for bootstrapping (requires
                            BootstrapFormatIgnition feature flag to be enabled).
                            when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource and Ignition is set, then
                            1. CosInstance.Name should be set not setting will result in webhook error.
                            2. CosInstance.BucketName should be set not setting will result in webhook error.
                            3. CosInstance.BucketRegion should be set not setting will result in webhook error.
                          properties:
                            bucketName:
                              description: bucketName is IBM cloud COS bucket name
                              type: string
                            bucketRegion:
                              description: bucketRegion is IBM cloud COS bucket region
                              type: string
                            name:
                              description: |-
                                name defines name of IBM cloud COS instance to be created.
                                when IBMPowerVSCluster.Ignition is set
                              maxLength: 63
                              minLength: 3
                              pattern: ^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$
                              type: string
                          type: object
                        dhcpServer:
                          description: |-
                            dhcpServer is contains the configuration to be used while creating a new DHCP server in PowerVS workspace.
                            when the field is omitted, CLUSTER_NAME will be used as DHCPServer.Name and DHCP server will be created.
                            it will automatically create network with name DHCPSERVER<DHCPServer.Name>_Private in PowerVS workspace.
                          properties:
                            cidr:
                              description: Optional cidr for DHCP private network
                              type: string
                            dnsServer:
                              default: 1.1.1.1
                              description: Optional DNS Server for DHCP service
                              type: string
                            id:
                              description: Optional id of the existing DHCPServer
                              type: string
                            name:
                              description: Optional name of DHCP Service. Only alphanumeric characters and dashes are allowed.
                              type: string
                            snat:
                              default: true
                              description: Optional indicates if SNAT will be enabled for DHCP service
                              type: boolean
                          type: object
                        ignition:
                          description: Ignition defined options related to the bootstrapping systems where Ignition is used.
                          properties:
                            version:
                              default: "2.3"
                              description: Version defines which version of Ignition will be used to generate bootstrap data.
                              enum:
                                - "2.3"
                                - "2.4"
                                - "3.0"
                                - "3.1"
                                - "3.2"
                                - "3.3"
                                - "3.4"
                              type: string
                          type: object
                        loadBalancers:
                          description: |-
                            loadBalancers is optional configuration for configuring loadbalancers to control plane or data plane nodes.
                            when omitted system will create a default public loadbalancer with name CLUSTER_NAME-loadbalancer.
                            when specified a vpc loadbalancer will be created and controlPlaneEndpoint will be set with associated hostname of loadbalancer.
                            ControlPlaneEndpoint will be set with associated hostname of public loadbalancer.
                            when LoadBalancers[].ID is set, its expected that there exist a loadbalancer with ID or else system will give error.
                            when LoadBalancers[].Name is set, system will first check for loadbalancer with Name, if not exist system will create new loadbalancer.
                            For each loadbalancer a default backed pool and front listener will be configured with port 6443.
                          items:
                            description: VPCLoadBalancerSpec defines the desired state of an VPC load balancer.
                            properties:
                              additionalListeners:
                                description: AdditionalListeners sets the additional listeners for the control plane load balancer.
                                items:
                                  description: |-
                                    AdditionalListenerSpec defines the desired state of an
                                    additional listener on an VPC load balancer.
                                  properties:
                                    defaultPoolName:
                                      description: defaultPoolName defines the name of a VPC Load Balancer Backend Pool to use for the VPC Load Balancer Listener.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                      type: string
                                    port:
                                      description: Port sets the port for the additional listener.
                                      format: int64
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    protocol:
                                      description: |-
                                        protocol defines the protocol to use for the VPC Load Balancer Listener.
                                        Will default to TCP protocol if not specified.
                                      enum:
                                        - http
                                        - https
                                        - tcp
                                        - udp
                                      type: string
                                  required:
                                    - port
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - port
                                x-kubernetes-list-type: map
                              backendPools:
                                description: backendPools defines the load balancer's backend pools.
                                items:
                                  description: VPCLoadBalancerBackendPoolSpec defines the desired configuration of a VPC Load Balancer Backend Pool.
                                  properties:
                                    algorithm:
                                      description: algorithm defines the load balancing algorithm to use.
                                      enum:
                                        - least_connections
                                        - round_robin
                                        - weighted_round_robin
                                      type: string
                                    healthMonitor:
                                      description: healthMonitor defines the backend pool's health monitor.
                                      properties:
                                        delay:
                                          description: delay defines the seconds to wait between health checks.
                                          format: int64
                                          maximum: 60
                                          minimum: 2
                                          type: integer
                                        port:
                                          description: port defines the port to perform health monitoring on.
                                          format: int64
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        retries:
                                          description: retries defines the max retries for health check.
                                          format: int64
                                          maximum: 10
                                          minimum: 1
                                          type: integer
                                        timeout:
                                          description: timeout defines the seconds to wait for a health check response.
                                          format: int64
                                          maximum: 59
                                          minimum: 1
                                          type: integer
                                        type:
                                          description: type defines the protocol used for health checks.
                                          enum:
                                            - http
                                            - https
                                            - tcp
                                          type: string
                                        urlPath:
                                          description: urlPath defines the URL to use for health monitoring.
                                          pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                          type: string
                                      required:
                                        - delay
                                        - retries
                                        - timeout
                                        - type
                                      type: object
                                    name:
                                      description: name defines the name of the Backend Pool.
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                      type: string
                                    protocol:
                                      description: protocol defines the protocol to use for the Backend Pool.
                                      enum:
                                        - http
                                        - https
                                        - tcp
                                        - udp
                                      type: string
                                  required:
                                    - algorithm
                                    - healthMonitor
                                    - protocol
                                  type: object
                                type: array
                              id:
                                description: id of the loadbalancer
                                maxLength: 64
                                minLength: 1
                                pattern: ^[-0-9a-z_]+$
                                type: string
                              name:
                                description: Name sets the name of the VPC load balancer.
                                maxLength: 63
                                minLength: 1
                                pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                type: string
                              public:
                                default: true
                                description: public indicates that load balancer is public or private
                                type: boolean
                              securityGroups:
                                description: |-
                                  securityGroups defines the Security Groups to attach to the load balancer.
                                  Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                                items:
                                  description: VPCResource represents a VPC resource.
                                  properties:
                                    id:
                                      description: id of the resource.
                                      minLength: 1
                                      type: string
                                    name:
                                      description: name of the resource.
                                      minLength: 1
                                      type: string
                                  type: object
                                  x-kubernetes-validations:
                                    - message: an id or name must be provided
                                      rule: has(self.id) || has(self.name)
                                type: array
                              subnets:
                                description: |-
                                  subnets defines the VPC Subnets to attach to the load balancer.
                                  Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                                items:
                                  description: VPCResource represents a VPC resource.
                                  properties:
                                    id:
                                      description: id of the resource.
                                      minLength: 1
                                      type: string
                                    name:
                                      description: name of the resource.
                                      minLength: 1
                                      type: string
                                  type: object
                                  x-kubernetes-validations:
                                    - message: an id or name must be provided
                                      rule: has(self.id) || has(self.name)
                                type: array
                            type: object
                          type: array
                        network:
                          description: |-
                            Network is the reference to the Network to use for this cluster.
                            when the field is omitted, A DHCP service will be created in the Power VS workspace and its private network will be used.
                            the DHCP service created network will have the following name format
                            1. in the case of DHCPServer.Name is not set the name will be DHCPSERVER<CLUSTER_NAME>_Private.
                            2. if DHCPServer.Name is set the name will be DHCPSERVER<DHCPServer.Name>_Private.
                            when Network.ID is set, its expected that there exist a network in PowerVS workspace with id or else system will give error.
                            when Network.Name is set, system will first check for network with Name in PowerVS workspace, if not exist system will check DHCP network with given Network.name, if that also not exist, it will create a new DHCP service and name will be DHCPSERVER<Network.Name>_Private.
                            Network.RegEx is not yet supported and system will ignore the value.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: |-
                                Regular expression to match resource,
                                In case of multiple resources matches the provided regular expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        resourceGroup:
                          description: |-
                            resourceGroup name under which the resources will be created.
                            when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                            1. it is expected to set the ResourceGroup.Name, not setting will result in webhook error.
                            ResourceGroup.ID and ResourceGroup.Regex is not yet supported and system will ignore the value.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: |-
                                Regular expression to match resource,
                                In case of multiple resources matches the provided regular expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        serviceInstance:
                          description: |-
                            serviceInstance is the reference to the Power VS server workspace on which the server instance(VM) will be created.
                            Power VS server workspace is a container for all Power VS instances at a specific geographic region.
                            serviceInstance can be created via IBM Cloud catalog or CLI.
                            supported serviceInstance identifier in PowerVSResource are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                            More detail about Power VS service instance.
                            https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                            when omitted system will dynamically create the service instance with name CLUSTER_NAME-serviceInstance.
                            when ServiceInstance.ID is set, its expected that there exist a service instance in PowerVS workspace with id or else system will give error.
                            when ServiceInstance.Name is set, system will first check for service instance with Name in PowerVS workspace, if not exist system will create new instance.
                            if there are more than one service instance exist with the ServiceInstance.Name in given Zone, installation fails with an error. Use ServiceInstance.ID in those situations to use the specific service instance.
                            ServiceInstance.Regex is not yet supported not yet supported and system will ignore the value.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: |-
                                Regular expression to match resource,
                                In case of multiple resources matches the provided regular expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        serviceInstanceID:
                          description: |-
                            ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.
                            Deprecated: use ServiceInstance instead
                          type: string
                        transitGateway:
                          description: |-
                            transitGateway contains information about IBM Cloud TransitGateway
                            IBM Cloud TransitGateway helps in establishing network connectivity between IBM Cloud Power VS and VPC infrastructure
                            more information about TransitGateway can be found here https://www.ibm.com/products/transit-gateway.
                            when TransitGateway.ID is set, its expected that there exist a TransitGateway with ID or else system will give error.
                            when TransitGateway.Name is set, system will first check for TransitGateway with Name, if not exist system will create new TransitGateway.
                          properties:
                            globalRouting:
                              description: |-
                                globalRouting indicates whether to set global routing true or not while creating the transit gateway.
                                set this field to true only when PowerVS and VPC are from different regions, if they are same it's suggested to use local routing by setting the field to false.
                                when the field is omitted,  based on PowerVS region (region associated with IBMPowerVSCluster.Spec.Zone) and VPC region(IBMPowerVSCluster.Spec.VPC.Region) system will decide whether to enable globalRouting or not.
                              type: boolean
                            id:
                              description: id of resource.
                              type: string
                            name:
                              description: name of resource.
                              maxLength: 63
                              minLength: 1
                              pattern: ^([a-zA-Z]|[a-zA-Z][-_a-zA-Z0-9]*[a-zA-Z0-9])$
                              type: string
                          type: object
                        vpc:
                          description: |-
                            vpc contains information about IBM Cloud VPC resources.
                            when omitted system will dynamically create the VPC with name CLUSTER_NAME-vpc.
                            when VPC.ID is set, its expected that there exist a VPC with ID or else system will give error.
                            when VPC.Name is set, system will first check for VPC with Name, if not exist system will create new VPC.
                            when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                            1. it is expected to set the VPC.Region, not setting will result in webhook error.
                          properties:
                            id:
                              description: id of resource.
                              maxLength: 64
                              minLength: 1
                              pattern: ^[-0-9a-z_]+$
                              type: string
                            name:
                              description: name of resource.
                              maxLength: 63
                              minLength: 1
                              pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                              type: string
                            region:
                              description: |-
                                region of IBM Cloud VPC.
                                when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                                it is expected to set the region, not setting will result in webhook error.
                              type: string
                          type: object
                        vpcSecurityGroups:
                          description: VPCSecurityGroups to attach it to the VPC resource
                          items:
                            description: VPCSecurityGroup defines a VPC Security Group that should exist or be created within the specified VPC, with the specified Security Group Rules.
                            properties:
                              id:
                                description: id of the Security Group.
                                type: string
                              name:
                                description: name of the Security Group.
                                type: string
                              rules:
                                description: rules are the Security Group Rules for the Security Group.
                                items:
                                  description: VPCSecurityGroupRule defines a VPC Security Group Rule for a specified Security Group.
                                  properties:
                                    action:
                                      description: action defines whether to allow or deny traffic defined by the Security Group Rule.
                                      enum:
                                        - allow
                                        - deny
                                      type: string
                                    destination:
                                      description: |-
                                        destination is a VPCSecurityGroupRulePrototype which defines the destination of outbound traffic for the Security Group Rule.
                                        Only used when direction is VPCSecurityGroupRuleDirectionOutbound.
                                      properties:
                                        icmpCode:
                                          description: |-
                                            icmpCode is the ICMP code for the Rule.
                                            Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                          format: int64
                                          type: integer
                                        icmpType:
                                          description: |-
                                            icmpType is the ICMP type for the Rule.
                                            Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                          format: int64
                                          type: integer
                                        portRange:
                                          description: portRange is a range of ports allowed for the Rule's remote.
                                          properties:
                                            maximumPort:
                                              description: maximumPort is the inclusive upper range of ports.
                                              format: int64
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            minimumPort:
                                              description: minimumPort is the inclusive lower range of ports.
                                              format: int64
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                          type: object
                                          x-kubernetes-validations:
                                            - message: maximum port must be greater than or equal to minimum port
                                              rule: self.maximumPort >= self.minimumPort
                                        protocol:
                                          description: protocol defines the traffic protocol used for the Security Group Rule.
                                          enum:
                                            - all
                                            - icmp
                                            - tcp
                                            - udp
                                          type: string
                                        remotes:
                                          description: |-
                                            remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                            Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                            This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                          items:
                                            description: |-
                                              VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                              The type of remote defines the additional remote details where are used for defining the remote.
                                            properties:
                                              address:
                                                description: |2-
                                                   address is the address to use for the remote's destination/source.
                                                  Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                                type: string
                                              cidrSubnetName:
                                                description: |-
                                                  cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                                  Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                                type: string
                                              remoteType:
                                                description: remoteType defines the type of filter to define for the remote's destination/source.
                                                enum:
                                                  - any
                                                  - cidr
                                                  - address
                                                  - sg
                                                type: string
                                              securityGroupName:
                                                description: |-
                                                  securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                                  Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                                type: string
                                            required:
                                              - remoteType
                                            type: object
                                            x-kubernetes-validations:
                                              - message: cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType
                                                rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                              - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                                rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                              - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType
                                                rule: 'self.remoteType == ''address'' ? (has(self.address) && !has(self.cidrSubnetName) && !has(self.securityGroupName)) : true'
                                              - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType
                                                rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName) && !has(self.cidrSubnetName) && !has(self.address)) : true'
                                          type: array
                                      required:
                                        - protocol
                                        - remotes
                                      type: object
                                      x-kubernetes-validations:
                                        - message: icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol
                                          rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode) && !has(self.icmpType)) : true'
                                        - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol
                                          rule: 'self.protocol == ''all'' ? !has(self.portRange) : true'
                                        - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol
                                          rule: 'self.protocol == ''icmp'' ? !has(self.portRange) : true'
                                    direction:
                                      description: direction defines whether the traffic is inbound or outbound for the Security Group Rule.
                                      enum:
                                        - inbound
                                        - outbound
                                      type: string
                                    securityGroupID:
                                      description: securityGroupID is the ID of the Security Group for the Security Group Rule.
                                      type: string
                                    source:
                                      description: |-
                                        source is a VPCSecurityGroupRulePrototype which defines the source of inbound traffic for the Security Group Rule.
                                        Only used when direction is VPCSecurityGroupRuleDirectionInbound.
                                      properties:
                                        icmpCode:
                                          description: |-
                                            icmpCode is the ICMP code for the Rule.
                                            Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                          format: int64
                                          type: integer
                                        icmpType:
                                          description: |-
                                            icmpType is the ICMP type for the Rule.
                                            Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                          format: int64
                                          type: integer
                                        portRange:
                                          description: portRange is a range of ports allowed for the Rule's remote.
                                          properties:
                                            maximumPort:
                                              description: maximumPort is the inclusive upper range of ports.
                                              format: int64
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            minimumPort:
                                              description: minimumPort is the inclusive lower range of ports.
                                              format: int64
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                          type: object
                                          x-kubernetes-validations:
                                            - message: maximum port must be greater than or equal to minimum port
                                              rule: self.maximumPort >= self.minimumPort
                                        protocol:
                                          description: protocol defines the traffic protocol used for the Security Group Rule.
                                          enum:
                                            - all
                                            - icmp
                                            - tcp
                                            - udp
                                          type: string
                                        remotes:
                                          description: |-
                                            remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                            Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                            This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                          items:
                                            description: |-
                                              VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                              The type of remote defines the additional remote details where are used for defining the remote.
                                            properties:
                                              address:
                                                description: |2-
                                                   address is the address to use for the remote's destination/source.
                                                  Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                                type: string
                                              cidrSubnetName:
                                                description: |-
                                                  cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                                  Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                                type: string
                                              remoteType:
                                                description: remoteType defines the type of filter to define for the remote's destination/source.
                                                enum:
                                                  - any
                                                  - cidr
                                                  - address
                                                  - sg
                                                type: string
                                              securityGroupName:
                                                description: |-
                                                  securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                                  Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                                type: string
                                            required:
                                              - remoteType
                                            type: object
                                            x-kubernetes-validations:
                                              - message: cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType
                                                rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                              - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                                rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                              - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType
                                                rule: 'self.remoteType == ''address'' ? (has(self.address) && !has(self.cidrSubnetName) && !has(self.securityGroupName)) : true'
                                              - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType
                                                rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName) && !has(self.cidrSubnetName) && !has(self.address)) : true'
                                          type: array
                                      required:
                                        - protocol
                                        - remotes
                                      type: object
                                      x-kubernetes-validations:
                                        - message: icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol
                                          rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode) && !has(self.icmpType)) : true'
                                        - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol
                                          rule: 'self.protocol == ''all'' ? !has(self.portRange) : true'
                                        - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol
                                          rule: 'self.protocol == ''icmp'' ? !has(self.portRange) : true'
                                  required:
                                    - action
                                    - direction
                                  type: object
                                  x-kubernetes-validations:
                                    - message: both destination and source cannot be provided
                                      rule: (has(self.destination) && !has(self.source)) || (!has(self.destination) && has(self.source))
                                    - message: source must be set for VPCSecurityGroupRuleDirectionInbound direction
                                      rule: 'self.direction == ''inbound'' ? has(self.source) : true'
                                    - message: destination is not valid for VPCSecurityGroupRuleDirectionInbound direction
                                      rule: 'self.direction == ''inbound'' ? !has(self.destination) : true'
                                    - message: destination must be set for VPCSecurityGroupRuleDirectionOutbound direction
                                      rule: 'self.direction == ''outbound'' ? has(self.destination) : true'
                                    - message: source is not valid for VPCSecurityGroupRuleDirectionOutbound direction
                                      rule: 'self.direction == ''outbound'' ? !has(self.source) : true'
                                type: array
                              tags:
                                description: tags are tags to add to the Security Group.
                                items:
                                  type: string
                                type: array
                            type: object
                            x-kubernetes-validations:
                              - message: either an id or name must be specified
                                rule: has(self.id) || has(self.name)
                          type: array
                        vpcSubnets:
                          description: |-
                            vpcSubnets contains information about IBM Cloud VPC Subnet resources.
                            when omitted system will create the subnets in all the zone corresponding to VPC.Region, with name CLUSTER_NAME-vpcsubnet-ZONE_NAME.
                            possible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                            when VPCSubnets[].ID is set, its expected that there exist a subnet with ID or else system will give error.
                            when VPCSubnets[].Zone is not set, a random zone is picked from available zones of VPC.Region.
                            when VPCSubnets[].Name is not set, system will set name as CLUSTER_NAME-vpcsubnet-INDEX.
                            if subnet with name VPCSubnets[].Name not found, system will create new subnet in VPCSubnets[].Zone.
                          items:
                            description: Subnet describes a subnet.
                            properties:
                              cidr:
                                type: string
                              id:
                                maxLength: 64
                                minLength: 1
                                pattern: ^[-0-9a-z_]+$
                                type: string
                              name:
                                maxLength: 63
                                minLength: 1
                                pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                type: string
                              zone:
                                type: string
                            type: object
                          type: array
                        zone:
                          description: |-
                            zone is the name of Power VS zone where the cluster will be created
                            possible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.
                            when powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,
                            1. it is expected to set the zone, not setting will result in webhook error.
                            2. the zone should have PER capabilities, or else system will give error.
                          type: string
                      required:
                        - network
                        - serviceInstanceID
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta2
  name: ibmpowervsimages.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSImage
    listKind: IBMPowerVSImageList
    plural: ibmpowervsimages
    singular: ibmpowervsimage
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: PowerVS image state
          jsonPath: .status.imageState
          name: State
          type: string
        - description: Image is ready for IBM PowerVS instances
          jsonPath: .status.ready
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSImage is the Schema for the ibmpowervsimages API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSImageSpec defines the desired state of IBMPowerVSImage.
              properties:
                bucket:
                  description: Cloud Object Storage bucket name; bucket-name[/optional/folder]
                  type: string
                clusterName:
                  description: ClusterName is the name of the Cluster this object belongs to.
                  minLength: 1
                  type: string
                deletePolicy:
                  default: delete
                  description: DeletePolicy defines the policy used to identify images to be preserved beyond the lifecycle of associated cluster.
                  enum:
                    - delete
                    - retain
                  type: string
                object:
                  description: Cloud Object Storage image filename.
                  type: string
                region:
                  description: Cloud Object Storage region.
                  type: string
                serviceInstanceID:
                  description: ServiceInstanceID is the id of the power cloud instance where the image will get imported.
                  type: string
                storageType:
                  default: tier1
                  description: Type of storage, storage pool with the most available space will be selected.
                  enum:
                    - tier1
                    - tier3
                  type: string
              required:
                - bucket
                - clusterName
                - object
                - region
                - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSImageStatus defines the observed state of IBMPowerVSImage.
              properties:
                conditions:
                  description: Conditions defines current service state of the IBMPowerVSImage.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                imageID:
                  description: ImageID is the id of the imported image.
                  type: string
                imageState:
                  description: ImageState is the status of the imported image.
                  type: string
                jobID:
                  description: JobID is the job ID of an import operation.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: PowerVS image state
          jsonPath: .status.imageState
          name: State
          type: string
        - description: Image is ready for IBM PowerVS instances
          jsonPath: .status.ready
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: IBMPowerVSImage is the Schema for the ibmpowervsimages API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSImageSpec defines the desired state of IBMPowerVSImage.
              properties:
                bucket:
                  description: Cloud Object Storage bucket name; bucket-name[/optional/folder]
                  type: string
                clusterName:
                  description: ClusterName is the name of the Cluster this object belongs to.
                  minLength: 1
                  type: string
                deletePolicy:
                  default: delete
                  description: DeletePolicy defines the policy used to identify images to be preserved beyond the lifecycle of associated cluster.
                  enum:
                    - delete
                    - retain
                  type: string
                object:
                  description: Cloud Object Storage image filename.
                  type: string
                region:
                  description: Cloud Object Storage region.
                  type: string
                serviceInstance:
                  description: |-
                    serviceInstance is the reference to the Power VS workspace on which the server instance(VM) will be created.
                    Power VS workspace is a container for all Power VS instances at a specific geographic region.
                    serviceInstance can be created via IBM Cloud catalog or CLI.
                    supported serviceInstance identifier in PowerVSResource are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                    More detail about Power VS service instance.
                    https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                    when omitted system will dynamically create the service instance
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                serviceInstanceID:
                  description: |-
                    ServiceInstanceID is the id of the power cloud instance where the image will get imported.
                    Deprecated: use ServiceInstance instead
                  type: string
                storageType:
                  default: tier1
                  description: Type of storage, storage pool with the most available space will be selected.
                  enum:
                    - tier1
                    - tier3
                  type: string
              required:
                - bucket
                - clusterName
                - object
                - region
                - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSImageStatus defines the observed state of IBMPowerVSImage.
              properties:
                conditions:
                  description: Conditions defines current service state of the IBMPowerVSImage.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                imageID:
                  description: ImageID is the id of the imported image.
                  type: string
                imageState:
                  description: ImageState is the status of the imported image.
                  type: string
                jobID:
                  description: JobID is the job ID of an import operation.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta2
  name: ibmpowervsmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSMachine
    listKind: IBMPowerVSMachineList
    plural: ibmpowervsmachines
    singular: ibmpowervsmachine
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this IBMPowerVSMachine belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Machine object to which this IBMPowerVSMachine belongs
          jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
          name: Machine
          priority: 1
          type: string
        - description: Time duration since creation of IBMPowerVSMachine
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Cluster infrastructure is ready for IBM PowerVS instances
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: Instance Internal Addresses
          jsonPath: .status.addresses[?(@.type=="InternalIP")].address
          name: Internal-IP
          priority: 1
          type: string
        - description: Instance External Addresses
          jsonPath: .status.addresses[?(@.type=="ExternalIP")].address
          name: External-IP
          priority: 1
          type: string
        - description: PowerVS instance state
          jsonPath: .status.instanceState
          name: State
          type: string
        - description: PowerVS instance health
          jsonPath: .status.health
          name: Health
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSMachine is the Schema for the ibmpowervsmachines API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine.
              properties:
                image:
                  description: Image is the reference to the Image from which to create the machine instance.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                imageRef:
                  description: |-
                    ImageRef is an optional reference to a provider-specific resource that holds
                    the details for provisioning the Image for a Cluster.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                memory:
                  description: Memory is Amount of memory allocated (in GB)
                  type: string
                network:
                  description: Network is the reference to the Network to use for this instance.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                procType:
                  description: 'ProcType is the processor type, e.g: dedicated, shared, capped'
                  type: string
                processors:
                  description: Processors is Number of processors allocated.
                  pattern: ^\d+(\.)?(\d)?(\d)?$
                  type: string
                providerID:
                  description: ProviderID is the unique identifier as specified by the cloud provider.
                  type: string
                serviceInstanceID:
                  description: ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.
                  minLength: 1
                  type: string
                sshKey:
                  description: SSHKey is the name of the SSH key pair provided to the vsi for authenticating users.
                  type: string
                sysType:
                  description: SysType is the System type used to host the vsi.
                  type: string
              required:
                - network
                - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSMachineStatus defines the observed state of IBMPowerVSMachine.
              properties:
                addresses:
                  description: Addresses contains the vsi associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the IBMPowerVSMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                fault:
                  description: Fault will report if any fault messages for the vsi.
                  type: string
                health:
                  description: Health is the health of the vsi.
                  type: string
                instanceID:
                  type: string
                instanceState:
                  description: InstanceState is the status of the vsi.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                region:
                  description: Region specifies the Power VS Service instance region.
                  type: string
                zone:
                  description: Zone specifies the Power VS Service instance zone.
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: Cluster to which this IBMPowerVSMachine belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Machine object to which this IBMPowerVSMachine belongs
          jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
          name: Machine
          priority: 1
          type: string
        - description: Time duration since creation of IBMPowerVSMachine
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Cluster infrastructure is ready for IBM PowerVS instances
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: Instance Internal Addresses
          jsonPath: .status.addresses[?(@.type=="InternalIP")].address
          name: Internal-IP
          priority: 1
          type: string
        - description: Instance External Addresses
          jsonPath: .status.addresses[?(@.type=="ExternalIP")].address
          name: External-IP
          priority: 1
          type: string
        - description: PowerVS instance state
          jsonPath: .status.instanceState
          name: State
          type: string
        - description: PowerVS instance health
          jsonPath: .status.health
          name: Health
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: IBMPowerVSMachine is the Schema for the ibmpowervsmachines API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine.
              properties:
                image:
                  description: |-
                    Image the reference to the image which is used to create the instance.
                    supported image identifier in IBMPowerVSResourceReference are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                imageRef:
                  description: |-
                    ImageRef is an optional reference to a provider-specific resource that holds
                    the details for provisioning the Image for a Cluster.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                memoryGiB:
                  description: |-
                    memoryGiB is the size of a virtual machine's memory, in GiB.
                    maximum value for the MemoryGiB depends on the selected SystemType, which can be found here: https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-pricing-virtual-server-on-cloud
                    The minimum memory is 2 GiB.
                    When omitted, this means the user has no opinion and the platform is left to choose a reasonable
                    default, which is subject to change over time. The current default is 2.
                  format: int32
                  type: integer
                network:
                  description: |-
                    Network is the reference to the Network to use for this instance.
                    supported network identifier in IBMPowerVSResourceReference are Name, ID and RegEx and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                processorType:
                  description: |-
                    processorType is the VM instance processor type.
                    It must be set to one of the following values: Dedicated, Capped or Shared.
                    Dedicated: resources are allocated for a specific client, The hypervisor makes a 1:1 binding of a partition’s processor to a physical processor core.
                    Shared: Shared among other clients.
                    Capped: Shared, but resources do not expand beyond those that are requested, the amount of CPU time is Capped to the value specified for the entitlement.
                    if the processorType is selected as Dedicated, then processors value cannot be fractional.
                    When omitted, this means that the user has no opinion and the platform is left to choose a
                    reasonable default, which is subject to change over time. The current default is Shared.
                  enum:
                    - Dedicated
                    - Shared
                    - Capped
                    - ""
                  type: string
                processors:
                  anyOf:
                    - type: integer
                    - type: string
                  description: |-
                    processors is the number of virtual processors in a virtual machine.
                    when the processorType is selected as Dedicated the processors value cannot be fractional.
                    maximum value for the Processors depends on the selected SystemType,
                    and minimum value for Processors depends on the selected ProcessorType, which can be found here: https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-pricing-virtual-server-on-cloud.
                    when ProcessorType is set as Shared or Capped, The minimum processors is 0.25.
                    when ProcessorType is set as Dedicated, The minimum processors is 1.
                    When omitted, this means that the user has no opinion and the platform is left to choose a
                    reasonable default, which is subject to change over time. The default is set based on the selected ProcessorType.
                    when ProcessorType selected as Dedicated, the default is set to 1.
                    when ProcessorType selected as Shared or Capped, the default is set to 0.25.
                  x-kubernetes-int-or-string: true
                providerID:
                  description: ProviderID is the unique identifier as specified by the cloud provider.
                  type: string
                serviceInstance:
                  description: |-
                    serviceInstance is the reference to the Power VS workspace on which the server instance(VM) will be created.
                    Power VS workspace is a container for all Power VS instances at a specific geographic region.
                    serviceInstance can be created via IBM Cloud catalog or CLI.
                    supported serviceInstance identifier in PowerVSResource are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                    More detail about Power VS service instance.
                    https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                    when omitted system will dynamically create the service instance
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                    regex:
                      description: |-
                        Regular expression to match resource,
                        In case of multiple resources matches the provided regular expression the first matched resource will be selected
                      minLength: 1
                      type: string
                  type: object
                serviceInstanceID:
                  description: |-
                    ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.
                    Deprecated: use ServiceInstance instead
                  type: string
                sshKey:
                  description: SSHKey is the name of the SSH key pair provided to the vsi for authenticating users.
                  type: string
                systemType:
                  description: |-
                    systemType is the System type used to host the instance.
                    systemType determines the number of cores and memory that is available.
                    Few of the supported SystemTypes are s922,e980,s1022,e1050,e1080.
                    When omitted, this means that the user has no opinion and the platform is left to choose a
                    reasonable default, which is subject to change over time. The current default is s922 which is generally available.
                  enum:
                    - s922
                    - e980
                    - s1022
                    - e1050
                    - e1080
                    - ""
                  type: string
              required:
                - network
                - serviceInstanceID
              type: object
            status:
              description: IBMPowerVSMachineStatus defines the observed state of IBMPowerVSMachine.
              properties:
                addresses:
                  description: Addresses contains the vsi associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the IBMPowerVSMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.

                    Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                  type: string
                fault:
                  description: Fault will report if any fault messages for the vsi.
                  type: string
                health:
                  description: Health is the health of the vsi.
                  type: string
                instanceID:
                  type: string
                instanceState:
                  description: InstanceState is the status of the vsi.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                region:
                  description: Region specifies the Power VS Service instance region.
                  type: string
                v1beta2:
                  description: v1beta2 groups all the fields that will be added or modified in IBMPowerVSMachine's status with the V1Beta2 version.
                  properties:
                    conditions:
                      description: |-
                        conditions represents the observations of a IBMPowerVSMachine's current state.
                        Known condition types are Ready, InstanceReady and Paused.
                      items:
                        description: Condition contains details for one aspect of the current state of this API Resource.
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False, Unknown.
                            enum:
                              - "True"
                              - "False"
                              - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                          - lastTransitionTime
                          - message
                          - reason
                          - status
                          - type
                        type: object
                      maxItems: 32
                      type: array
                      x-kubernetes-list-map-keys:
                        - type
                      x-kubernetes-list-type: map
                  type: object
                zone:
                  description: Zone specifies the Power VS Service instance zone.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta2
  name: ibmpowervsmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: IBMPowerVSMachineTemplate
    listKind: IBMPowerVSMachineTemplateList
    plural: ibmpowervsmachinetemplates
    singular: ibmpowervsmachinetemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMPowerVSMachineTemplate is the Schema for the ibmpowervsmachinetemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSMachineTemplateSpec defines the desired state of IBMPowerVSMachineTemplate.
              properties:
                template:
                  description: IBMPowerVSMachineTemplateResource holds the IBMPowerVSMachine spec.
                  properties:
                    spec:
                      description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine.
                      properties:
                        image:
                          description: Image is the reference to the Image from which to create the machine instance.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: |-
                                Regular expression to match resource,
                                In case of multiple resources matches the provided regular expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        imageRef:
                          description: |-
                            ImageRef is an optional reference to a provider-specific resource that holds
                            the details for provisioning the Image for a Cluster.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        memory:
                          description: Memory is Amount of memory allocated (in GB)
                          type: string
                        network:
                          description: Network is the reference to the Network to use for this instance.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: |-
                                Regular expression to match resource,
                                In case of multiple resources matches the provided regular expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        procType:
                          description: 'ProcType is the processor type, e.g: dedicated, shared, capped'
                          type: string
                        processors:
                          description: Processors is Number of processors allocated.
                          pattern: ^\d+(\.)?(\d)?(\d)?$
                          type: string
                        providerID:
                          description: ProviderID is the unique identifier as specified by the cloud provider.
                          type: string
                        serviceInstanceID:
                          description: ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.
                          minLength: 1
                          type: string
                        sshKey:
                          description: SSHKey is the name of the SSH key pair provided to the vsi for authenticating users.
                          type: string
                        sysType:
                          description: SysType is the System type used to host the vsi.
                          type: string
                      required:
                        - network
                        - serviceInstanceID
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
            status:
              description: IBMPowerVSMachineTemplateStatus defines the observed state of IBMPowerVSMachineTemplate.
              properties:
                capacity:
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: |-
                    Capacity defines the resource capacity for this machine.
                    This value is used for autoscaling from zero operations as defined in:
                    https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md
                  type: object
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: IBMPowerVSMachineTemplate is the Schema for the ibmpowervsmachinetemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMPowerVSMachineTemplateSpec defines the desired state of IBMPowerVSMachineTemplate.
              properties:
                template:
                  description: IBMPowerVSMachineTemplateResource holds the IBMPowerVSMachine spec.
                  properties:
                    spec:
                      description: IBMPowerVSMachineSpec defines the desired state of IBMPowerVSMachine.
                      properties:
                        image:
                          description: |-
                            Image the reference to the image which is used to create the instance.
                            supported image identifier in IBMPowerVSResourceReference are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: |-
                                Regular expression to match resource,
                                In case of multiple resources matches the provided regular expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        imageRef:
                          description: |-
                            ImageRef is an optional reference to a provider-specific resource that holds
                            the details for provisioning the Image for a Cluster.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        memoryGiB:
                          description: |-
                            memoryGiB is the size of a virtual machine's memory, in GiB.
                            maximum value for the MemoryGiB depends on the selected SystemType, which can be found here: https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-pricing-virtual-server-on-cloud
                            The minimum memory is 2 GiB.
                            When omitted, this means the user has no opinion and the platform is left to choose a reasonable
                            default, which is subject to change over time. The current default is 2.
                          format: int32
                          type: integer
                        network:
                          description: |-
                            Network is the reference to the Network to use for this instance.
                            supported network identifier in IBMPowerVSResourceReference are Name, ID and RegEx and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: |-
                                Regular expression to match resource,
                                In case of multiple resources matches the provided regular expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        processorType:
                          description: |-
                            processorType is the VM instance processor type.
                            It must be set to one of the following values: Dedicated, Capped or Shared.
                            Dedicated: resources are allocated for a specific client, The hypervisor makes a 1:1 binding of a partition’s processor to a physical processor core.
                            Shared: Shared among other clients.
                            Capped: Shared, but resources do not expand beyond those that are requested, the amount of CPU time is Capped to the value specified for the entitlement.
                            if the processorType is selected as Dedicated, then processors value cannot be fractional.
                            When omitted, this means that the user has no opinion and the platform is left to choose a
                            reasonable default, which is subject to change over time. The current default is Shared.
                          enum:
                            - Dedicated
                            - Shared
                            - Capped
                            - ""
                          type: string
                        processors:
                          anyOf:
                            - type: integer
                            - type: string
                          description: |-
                            processors is the number of virtual processors in a virtual machine.
                            when the processorType is selected as Dedicated the processors value cannot be fractional.
                            maximum value for the Processors depends on the selected SystemType,
                            and minimum value for Processors depends on the selected ProcessorType, which can be found here: https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-pricing-virtual-server-on-cloud.
                            when ProcessorType is set as Shared or Capped, The minimum processors is 0.25.
                            when ProcessorType is set as Dedicated, The minimum processors is 1.
                            When omitted, this means that the user has no opinion and the platform is left to choose a
                            reasonable default, which is subject to change over time. The default is set based on the selected ProcessorType.
                            when ProcessorType selected as Dedicated, the default is set to 1.
                            when ProcessorType selected as Shared or Capped, the default is set to 0.25.
                          x-kubernetes-int-or-string: true
                        providerID:
                          description: ProviderID is the unique identifier as specified by the cloud provider.
                          type: string
                        serviceInstance:
                          description: |-
                            serviceInstance is the reference to the Power VS workspace on which the server instance(VM) will be created.
                            Power VS workspace is a container for all Power VS instances at a specific geographic region.
                            serviceInstance can be created via IBM Cloud catalog or CLI.
                            supported serviceInstance identifier in PowerVSResource are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.
                            More detail about Power VS service instance.
                            https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server
                            when omitted system will dynamically create the service instance
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                            regex:
                              description: |-
                                Regular expression to match resource,
                                In case of multiple resources matches the provided regular expression the first matched resource will be selected
                              minLength: 1
                              type: string
                          type: object
                        serviceInstanceID:
                          description: |-
                            ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.
                            Deprecated: use ServiceInstance instead
                          type: string
                        sshKey:
                          description: SSHKey is the name of the SSH key pair provided to the vsi for authenticating users.
                          type: string
                        systemType:
                          description: |-
                            systemType is the System type used to host the instance.
                            systemType determines the number of cores and memory that is available.
                            Few of the supported SystemTypes are s922,e980,s1022,e1050,e1080.
                            When omitted, this means that the user has no opinion and the platform is left to choose a
                            reasonable default, which is subject to change over time. The current default is s922 which is generally available.
                          enum:
                            - s922
                            - e980
                            - s1022
                            - e1050
                            - e1080
                            - ""
                          type: string
                      required:
                        - network
                        - serviceInstanceID
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
            status:
              description: IBMPowerVSMachineTemplateStatus defines the observed state of IBMPowerVSMachineTemplate.
              properties:
                capacity:
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: |-
                    Capacity defines the resource capacity for this machine.
                    This value is used for autoscaling from zero operations as defined in:
                    https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta2
  name: ibmvpcclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: IBMVPCCluster
    listKind: IBMVPCClusterList
    plural: ibmvpcclusters
    singular: ibmvpccluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this IBMVPCCluster belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Cluster infrastructure is ready for IBM VPC instances
          jsonPath: .status.ready
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMVPCCluster is the Schema for the ibmvpcclusters API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                controlPlaneLoadBalancer:
                  description: ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.
                  properties:
                    name:
                      description: Name sets the name of the VPC load balancer.
                      maxLength: 63
                      pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                      type: string
                  type: object
                region:
                  description: The IBM Cloud Region the cluster lives in.
                  type: string
                resourceGroup:
                  description: The VPC resources should be created under the resource group.
                  type: string
                vpc:
                  description: The Name of VPC.
                  type: string
                zone:
                  description: The Name of availability zone.
                  type: string
              required:
                - region
                - resourceGroup
              type: object
            status:
              description: IBMVPCClusterStatus defines the observed state of IBMVPCCluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the load balancer.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                controlPlaneLoadBalancerState:
                  description: ControlPlaneLoadBalancerState is the status of the load balancer.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                subnet:
                  description: Subnet describes a subnet.
                  properties:
                    cidr:
                      type: string
                    id:
                      type: string
                    name:
                      type: string
                    zone:
                      type: string
                  required:
                    - cidr
                    - id
                    - name
                    - zone
                  type: object
                vpc:
                  description: |-
                    INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
                    Important: Run "make" to regenerate code after modifying this file
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name
                  type: object
                vpcEndpoint:
                  description: VPCEndpoint describes a VPCEndpoint.
                  properties:
                    address:
                      type: string
                    floatingIPID:
                      description: 'Deprecated: This field has no function and is going to be removed in the next release.'
                      type: string
                    loadBalancerIPID:
                      type: string
                  required:
                    - address
                  type: object
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: Cluster to which this IBMVPCCluster belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Cluster infrastructure is ready for IBM VPC instances
          jsonPath: .status.ready
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: IBMVPCCluster is the Schema for the ibmvpcclusters API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                controlPlaneLoadBalancer:
                  description: |-
                    ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.
                    Use this for legacy support, use Network.LoadBalancers for the extended VPC support.
                  properties:
                    additionalListeners:
                      description: AdditionalListeners sets the additional listeners for the control plane load balancer.
                      items:
                        description: |-
                          AdditionalListenerSpec defines the desired state of an
                          additional listener on an VPC load balancer.
                        properties:
                          defaultPoolName:
                            description: defaultPoolName defines the name of a VPC Load Balancer Backend Pool to use for the VPC Load Balancer Listener.
                            maxLength: 63
                            minLength: 1
                            pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                            type: string
                          port:
                            description: Port sets the port for the additional listener.
                            format: int64
                            maximum: 65535
                            minimum: 1
                            type: integer
                          protocol:
                            description: |-
                              protocol defines the protocol to use for the VPC Load Balancer Listener.
                              Will default to TCP protocol if not specified.
                            enum:
                              - http
                              - https
                              - tcp
                              - udp
                            type: string
                        required:
                          - port
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - port
                      x-kubernetes-list-type: map
                    backendPools:
                      description: backendPools defines the load balancer's backend pools.
                      items:
                        description: VPCLoadBalancerBackendPoolSpec defines the desired configuration of a VPC Load Balancer Backend Pool.
                        properties:
                          algorithm:
                            description: algorithm defines the load balancing algorithm to use.
                            enum:
                              - least_connections
                              - round_robin
                              - weighted_round_robin
                            type: string
                          healthMonitor:
                            description: healthMonitor defines the backend pool's health monitor.
                            properties:
                              delay:
                                description: delay defines the seconds to wait between health checks.
                                format: int64
                                maximum: 60
                                minimum: 2
                                type: integer
                              port:
                                description: port defines the port to perform health monitoring on.
                                format: int64
                                maximum: 65535
                                minimum: 1
                                type: integer
                              retries:
                                description: retries defines the max retries for health check.
                                format: int64
                                maximum: 10
                                minimum: 1
                                type: integer
                              timeout:
                                description: timeout defines the seconds to wait for a health check response.
                                format: int64
                                maximum: 59
                                minimum: 1
                                type: integer
                              type:
                                description: type defines the protocol used for health checks.
                                enum:
                                  - http
                                  - https
                                  - tcp
                                type: string
                              urlPath:
                                description: urlPath defines the URL to use for health monitoring.
                                pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                type: string
                            required:
                              - delay
                              - retries
                              - timeout
                              - type
                            type: object
                          name:
                            description: name defines the name of the Backend Pool.
                            maxLength: 63
                            minLength: 1
                            pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                            type: string
                          protocol:
                            description: protocol defines the protocol to use for the Backend Pool.
                            enum:
                              - http
                              - https
                              - tcp
                              - udp
                            type: string
                        required:
                          - algorithm
                          - healthMonitor
                          - protocol
                        type: object
                      type: array
                    id:
                      description: id of the loadbalancer
                      maxLength: 64
                      minLength: 1
                      pattern: ^[-0-9a-z_]+$
                      type: string
                    name:
                      description: Name sets the name of the VPC load balancer.
                      maxLength: 63
                      minLength: 1
                      pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                      type: string
                    public:
                      default: true
                      description: public indicates that load balancer is public or private
                      type: boolean
                    securityGroups:
                      description: |-
                        securityGroups defines the Security Groups to attach to the load balancer.
                        Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                      items:
                        description: VPCResource represents a VPC resource.
                        properties:
                          id:
                            description: id of the resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of the resource.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-validations:
                          - message: an id or name must be provided
                            rule: has(self.id) || has(self.name)
                      type: array
                    subnets:
                      description: |-
                        subnets defines the VPC Subnets to attach to the load balancer.
                        Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                      items:
                        description: VPCResource represents a VPC resource.
                        properties:
                          id:
                            description: id of the resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of the resource.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-validations:
                          - message: an id or name must be provided
                            rule: has(self.id) || has(self.name)
                      type: array
                  type: object
                image:
                  description: image represents the Image details used for the cluster.
                  properties:
                    cosBucket:
                      description: cosBucket is the name of the IBM Cloud COS Bucket containing the source of the image, if necessary.
                      type: string
                    cosBucketRegion:
                      description: cosBucketRegion is the COS region the bucket is in.
                      type: string
                    cosInstance:
                      description: cosInstance is the name of the IBM Cloud COS Instance containing the source of the image, if necessary.
                      type: string
                    cosObject:
                      description: cosObject is the name of a IBM Cloud COS Object used as the source of the image, if necessary.
                      type: string
                    crn:
                      description: crn is the IBM Cloud CRN of the existing VPC Custom Image.
                      type: string
                    name:
                      description: name is the name of the desired VPC Custom Image.
                      maxLength: 63
                      minLength: 1
                      pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                      type: string
                    operatingSystem:
                      description: operatingSystem is the Custom Image's Operating System name.
                      type: string
                    resourceGroup:
                      description: resourceGroup is the Resource Group to create the Custom Image in.
                      properties:
                        id:
                          description: id defines the IBM Cloud Resource ID.
                          type: string
                        name:
                          description: name defines the IBM Cloud Resource Name.
                          type: string
                      required:
                        - id
                      type: object
                  type: object
                  x-kubernetes-validations:
                    - message: if any of cosInstance, cosBucket, or cosObject are specified, all must be specified
                      rule: (!has(self.cosInstance) && !has(self.cosBucket) && !has(self.cosObject)) || (has(self.cosInstance) && has(self.cosBucket) && has(self.cosObject))
                    - message: an existing image name or crn must be provided, or to create a new image the cos resources must be provided, with or without a name
                      rule: has(self.name) || has(self.crn) || (has(self.cosInstance) && has(self.cosBucket) && has(self.cosObject))
                network:
                  description: network represents the VPC network to use for the cluster.
                  properties:
                    controlPlaneSubnets:
                      description: controlPlaneSubnets is a set of Subnet's which define the Control Plane subnets.
                      items:
                        description: Subnet describes a subnet.
                        properties:
                          cidr:
                            type: string
                          id:
                            maxLength: 64
                            minLength: 1
                            pattern: ^[-0-9a-z_]+$
                            type: string
                          name:
                            maxLength: 63
                            minLength: 1
                            pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                            type: string
                          zone:
                            type: string
                        type: object
                      type: array
                    loadBalancers:
                      description: loadBalancers is a set of VPC Load Balancer definitions to use for the cluster.
                      items:
                        description: VPCLoadBalancerSpec defines the desired state of an VPC load balancer.
                        properties:
                          additionalListeners:
                            description: AdditionalListeners sets the additional listeners for the control plane load balancer.
                            items:
                              description: |-
                                AdditionalListenerSpec defines the desired state of an
                                additional listener on an VPC load balancer.
                              properties:
                                defaultPoolName:
                                  description: defaultPoolName defines the name of a VPC Load Balancer Backend Pool to use for the VPC Load Balancer Listener.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                  type: string
                                port:
                                  description: Port sets the port for the additional listener.
                                  format: int64
                                  maximum: 65535
                                  minimum: 1
                                  type: integer
                                protocol:
                                  description: |-
                                    protocol defines the protocol to use for the VPC Load Balancer Listener.
                                    Will default to TCP protocol if not specified.
                                  enum:
                                    - http
                                    - https
                                    - tcp
                                    - udp
                                  type: string
                              required:
                                - port
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                              - port
                            x-kubernetes-list-type: map
                          backendPools:
                            description: backendPools defines the load balancer's backend pools.
                            items:
                              description: VPCLoadBalancerBackendPoolSpec defines the desired configuration of a VPC Load Balancer Backend Pool.
                              properties:
                                algorithm:
                                  description: algorithm defines the load balancing algorithm to use.
                                  enum:
                                    - least_connections
                                    - round_robin
                                    - weighted_round_robin
                                  type: string
                                healthMonitor:
                                  description: healthMonitor defines the backend pool's health monitor.
                                  properties:
                                    delay:
                                      description: delay defines the seconds to wait between health checks.
                                      format: int64
                                      maximum: 60
                                      minimum: 2
                                      type: integer
                                    port:
                                      description: port defines the port to perform health monitoring on.
                                      format: int64
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    retries:
                                      description: retries defines the max retries for health check.
                                      format: int64
                                      maximum: 10
                                      minimum: 1
                                      type: integer
                                    timeout:
                                      description: timeout defines the seconds to wait for a health check response.
                                      format: int64
                                      maximum: 59
                                      minimum: 1
                                      type: integer
                                    type:
                                      description: type defines the protocol used for health checks.
                                      enum:
                                        - http
                                        - https
                                        - tcp
                                      type: string
                                    urlPath:
                                      description: urlPath defines the URL to use for health monitoring.
                                      pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                      type: string
                                  required:
                                    - delay
                                    - retries
                                    - timeout
                                    - type
                                  type: object
                                name:
                                  description: name defines the name of the Backend Pool.
                                  maxLength: 63
                                  minLength: 1
                                  pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                  type: string
                                protocol:
                                  description: protocol defines the protocol to use for the Backend Pool.
                                  enum:
                                    - http
                                    - https
                                    - tcp
                                    - udp
                                  type: string
                              required:
                                - algorithm
                                - healthMonitor
                                - protocol
                              type: object
                            type: array
                          id:
                            description: id of the loadbalancer
                            maxLength: 64
                            minLength: 1
                            pattern: ^[-0-9a-z_]+$
                            type: string
                          name:
                            description: Name sets the name of the VPC load balancer.
                            maxLength: 63
                            minLength: 1
                            pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                            type: string
                          public:
                            default: true
                            description: public indicates that load balancer is public or private
                            type: boolean
                          securityGroups:
                            description: |-
                              securityGroups defines the Security Groups to attach to the load balancer.
                              Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                            items:
                              description: VPCResource represents a VPC resource.
                              properties:
                                id:
                                  description: id of the resource.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name of the resource.
                                  minLength: 1
                                  type: string
                              type: object
                              x-kubernetes-validations:
                                - message: an id or name must be provided
                                  rule: has(self.id) || has(self.name)
                            type: array
                          subnets:
                            description: |-
                              subnets defines the VPC Subnets to attach to the load balancer.
                              Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                            items:
                              description: VPCResource represents a VPC resource.
                              properties:
                                id:
                                  description: id of the resource.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name of the resource.
                                  minLength: 1
                                  type: string
                              type: object
                              x-kubernetes-validations:
                                - message: an id or name must be provided
                                  rule: has(self.id) || has(self.name)
                            type: array
                        type: object
                      type: array
                    resourceGroup:
                      description: |-
                        resourceGroup is the Resource Group containing all of the newtork resources.
                        This can be different than the Resource Group containing the remaining cluster resources.
                      properties:
                        id:
                          description: id defines the IBM Cloud Resource ID.
                          type: string
                        name:
                          description: name defines the IBM Cloud Resource Name.
                          type: string
                      required:
                        - id
                      type: object
                    securityGroups:
                      description: securityGroups is a set of VPCSecurityGroup's which define the VPC Security Groups that manage traffic within and out of the VPC.
                      items:
                        description: VPCSecurityGroup defines a VPC Security Group that should exist or be created within the specified VPC, with the specified Security Group Rules.
                        properties:
                          id:
                            description: id of the Security Group.
                            type: string
                          name:
                            description: name of the Security Group.
                            type: string
                          rules:
                            description: rules are the Security Group Rules for the Security Group.
                            items:
                              description: VPCSecurityGroupRule defines a VPC Security Group Rule for a specified Security Group.
                              properties:
                                action:
                                  description: action defines whether to allow or deny traffic defined by the Security Group Rule.
                                  enum:
                                    - allow
                                    - deny
                                  type: string
                                destination:
                                  description: |-
                                    destination is a VPCSecurityGroupRulePrototype which defines the destination of outbound traffic for the Security Group Rule.
                                    Only used when direction is VPCSecurityGroupRuleDirectionOutbound.
                                  properties:
                                    icmpCode:
                                      description: |-
                                        icmpCode is the ICMP code for the Rule.
                                        Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                      format: int64
                                      type: integer
                                    icmpType:
                                      description: |-
                                        icmpType is the ICMP type for the Rule.
                                        Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                      format: int64
                                      type: integer
                                    portRange:
                                      description: portRange is a range of ports allowed for the Rule's remote.
                                      properties:
                                        maximumPort:
                                          description: maximumPort is the inclusive upper range of ports.
                                          format: int64
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        minimumPort:
                                          description: minimumPort is the inclusive lower range of ports.
                                          format: int64
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      type: object
                                      x-kubernetes-validations:
                                        - message: maximum port must be greater than or equal to minimum port
                                          rule: self.maximumPort >= self.minimumPort
                                    protocol:
                                      description: protocol defines the traffic protocol used for the Security Group Rule.
                                      enum:
                                        - all
                                        - icmp
                                        - tcp
                                        - udp
                                      type: string
                                    remotes:
                                      description: |-
                                        remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                        Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                        This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                      items:
                                        description: |-
                                          VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                          The type of remote defines the additional remote details where are used for defining the remote.
                                        properties:
                                          address:
                                            description: |2-
                                               address is the address to use for the remote's destination/source.
                                              Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                            type: string
                                          cidrSubnetName:
                                            description: |-
                                              cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                              Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                            type: string
                                          remoteType:
                                            description: remoteType defines the type of filter to define for the remote's destination/source.
                                            enum:
                                              - any
                                              - cidr
                                              - address
                                              - sg
                                            type: string
                                          securityGroupName:
                                            description: |-
                                              securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                              Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                            type: string
                                        required:
                                          - remoteType
                                        type: object
                                        x-kubernetes-validations:
                                          - message: cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType
                                            rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                          - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                            rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                          - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType
                                            rule: 'self.remoteType == ''address'' ? (has(self.address) && !has(self.cidrSubnetName) && !has(self.securityGroupName)) : true'
                                          - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType
                                            rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName) && !has(self.cidrSubnetName) && !has(self.address)) : true'
                                      type: array
                                  required:
                                    - protocol
                                    - remotes
                                  type: object
                                  x-kubernetes-validations:
                                    - message: icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol
                                      rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode) && !has(self.icmpType)) : true'
                                    - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol
                                      rule: 'self.protocol == ''all'' ? !has(self.portRange) : true'
                                    - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol
                                      rule: 'self.protocol == ''icmp'' ? !has(self.portRange) : true'
                                direction:
                                  description: direction defines whether the traffic is inbound or outbound for the Security Group Rule.
                                  enum:
                                    - inbound
                                    - outbound
                                  type: string
                                securityGroupID:
                                  description: securityGroupID is the ID of the Security Group for the Security Group Rule.
                                  type: string
                                source:
                                  description: |-
                                    source is a VPCSecurityGroupRulePrototype which defines the source of inbound traffic for the Security Group Rule.
                                    Only used when direction is VPCSecurityGroupRuleDirectionInbound.
                                  properties:
                                    icmpCode:
                                      description: |-
                                        icmpCode is the ICMP code for the Rule.
                                        Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                      format: int64
                                      type: integer
                                    icmpType:
                                      description: |-
                                        icmpType is the ICMP type for the Rule.
                                        Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                      format: int64
                                      type: integer
                                    portRange:
                                      description: portRange is a range of ports allowed for the Rule's remote.
                                      properties:
                                        maximumPort:
                                          description: maximumPort is the inclusive upper range of ports.
                                          format: int64
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        minimumPort:
                                          description: minimumPort is the inclusive lower range of ports.
                                          format: int64
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      type: object
                                      x-kubernetes-validations:
                                        - message: maximum port must be greater than or equal to minimum port
                                          rule: self.maximumPort >= self.minimumPort
                                    protocol:
                                      description: protocol defines the traffic protocol used for the Security Group Rule.
                                      enum:
                                        - all
                                        - icmp
                                        - tcp
                                        - udp
                                      type: string
                                    remotes:
                                      description: |-
                                        remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                        Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                        This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                      items:
                                        description: |-
                                          VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                          The type of remote defines the additional remote details where are used for defining the remote.
                                        properties:
                                          address:
                                            description: |2-
                                               address is the address to use for the remote's destination/source.
                                              Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                            type: string
                                          cidrSubnetName:
                                            description: |-
                                              cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                              Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                            type: string
                                          remoteType:
                                            description: remoteType defines the type of filter to define for the remote's destination/source.
                                            enum:
                                              - any
                                              - cidr
                                              - address
                                              - sg
                                            type: string
                                          securityGroupName:
                                            description: |-
                                              securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                              Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                            type: string
                                        required:
                                          - remoteType
                                        type: object
                                        x-kubernetes-validations:
                                          - message: cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType
                                            rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                          - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                            rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                          - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType
                                            rule: 'self.remoteType == ''address'' ? (has(self.address) && !has(self.cidrSubnetName) && !has(self.securityGroupName)) : true'
                                          - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType
                                            rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName) && !has(self.cidrSubnetName) && !has(self.address)) : true'
                                      type: array
                                  required:
                                    - protocol
                                    - remotes
                                  type: object
                                  x-kubernetes-validations:
                                    - message: icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol
                                      rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode) && !has(self.icmpType)) : true'
                                    - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol
                                      rule: 'self.protocol == ''all'' ? !has(self.portRange) : true'
                                    - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol
                                      rule: 'self.protocol == ''icmp'' ? !has(self.portRange) : true'
                              required:
                                - action
                                - direction
                              type: object
                              x-kubernetes-validations:
                                - message: both destination and source cannot be provided
                                  rule: (has(self.destination) && !has(self.source)) || (!has(self.destination) && has(self.source))
                                - message: source must be set for VPCSecurityGroupRuleDirectionInbound direction
                                  rule: 'self.direction == ''inbound'' ? has(self.source) : true'
                                - message: destination is not valid for VPCSecurityGroupRuleDirectionInbound direction
                                  rule: 'self.direction == ''inbound'' ? !has(self.destination) : true'
                                - message: destination must be set for VPCSecurityGroupRuleDirectionOutbound direction
                                  rule: 'self.direction == ''outbound'' ? has(self.destination) : true'
                                - message: source is not valid for VPCSecurityGroupRuleDirectionOutbound direction
                                  rule: 'self.direction == ''outbound'' ? !has(self.source) : true'
                            type: array
                          tags:
                            description: tags are tags to add to the Security Group.
                            items:
                              type: string
                            type: array
                        type: object
                        x-kubernetes-validations:
                          - message: either an id or name must be specified
                            rule: has(self.id) || has(self.name)
                      type: array
                    vpc:
                      description: vpc defines the IBM Cloud VPC for extended VPC Infrastructure support.
                      properties:
                        id:
                          description: id of the resource.
                          minLength: 1
                          type: string
                        name:
                          description: name of the resource.
                          minLength: 1
                          type: string
                      type: object
                      x-kubernetes-validations:
                        - message: an id or name must be provided
                          rule: has(self.id) || has(self.name)
                    workerSubnets:
                      description: workerSubnets is a set of Subnet's which define the Worker subnets.
                      items:
                        description: Subnet describes a subnet.
                        properties:
                          cidr:
                            type: string
                          id:
                            maxLength: 64
                            minLength: 1
                            pattern: ^[-0-9a-z_]+$
                            type: string
                          name:
                            maxLength: 63
                            minLength: 1
                            pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                            type: string
                          zone:
                            type: string
                        type: object
                      type: array
                  type: object
                region:
                  description: The IBM Cloud Region the cluster lives in.
                  type: string
                resourceGroup:
                  description: The VPC resources should be created under the resource group.
                  type: string
                vpc:
                  description: The Name of VPC.
                  type: string
                zone:
                  description: The Name of availability zone.
                  type: string
              required:
                - region
                - resourceGroup
              type: object
            status:
              description: IBMVPCClusterStatus defines the observed state of IBMVPCCluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the load balancer.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                controlPlaneLoadBalancerState:
                  description: ControlPlaneLoadBalancerState is the status of the load balancer.
                  type: string
                image:
                  description: image is the status of the VPC Custom Image.
                  properties:
                    id:
                      description: id defines the Id of the IBM Cloud resource status.
                      type: string
                    name:
                      description: name defines the name of the IBM Cloud resource status.
                      type: string
                    ready:
                      description: ready defines whether the IBM Cloud resource is ready.
                      type: boolean
                  required:
                    - id
                    - ready
                  type: object
                network:
                  description: network is the status of the VPC network resources for extended VPC Infrastructure support.
                  properties:
                    controlPlaneSubnets:
                      additionalProperties:
                        description: ResourceStatus identifies a resource by id (and name) and whether it is ready.
                        properties:
                          id:
                            description: id defines the Id of the IBM Cloud resource status.
                            type: string
                          name:
                            description: name defines the name of the IBM Cloud resource status.
                            type: string
                          ready:
                            description: ready defines whether the IBM Cloud resource is ready.
                            type: boolean
                        required:
                          - id
                          - ready
                        type: object
                      description: |-
                        controlPlaneSubnets references the VPC Subnets for the cluster's Control Plane.
                        The map simplifies lookups.
                      type: object
                    loadBalancers:
                      additionalProperties:
                        description: VPCLoadBalancerStatus defines the status VPC load balancer.
                        properties:
                          controllerCreated:
                            default: false
                            description: controllerCreated indicates whether the resource is created by the controller.
                            type: boolean
                          hostname:
                            description: hostname is the hostname of load balancer.
                            type: string
                          id:
                            description: id of VPC load balancer.
                            type: string
                          state:
                            description: State is the status of the load balancer.
                            type: string
                        type: object
                      description: |-
                        loadBalancers references the VPC Load Balancer's for the cluster.
                        The map simplifies lookups.
                      type: object
                    publicGateways:
                      additionalProperties:
                        description: ResourceStatus identifies a resource by id (and name) and whether it is ready.
                        properties:
                          id:
                            description: id defines the Id of the IBM Cloud resource status.
                            type: string
                          name:
                            description: name defines the name of the IBM Cloud resource status.
                            type: string
                          ready:
                            description: ready defines whether the IBM Cloud resource is ready.
                            type: boolean
                        required:
                          - id
                          - ready
                        type: object
                      description: |-
                        publicGateways references the VPC Public Gateways for the cluster.
                        The map simplifies lookups.
                      type: object
                    resourceGroup:
                      description: |-
                        resourceGroup references the Resource Group for Network resources for the cluster.
                        This can be the same or unique from the cluster's Resource Group.
                      properties:
                        id:
                          description: id defines the Id of the IBM Cloud resource status.
                          type: string
                        name:
                          description: name defines the name of the IBM Cloud resource status.
                          type: string
                        ready:
                          description: ready defines whether the IBM Cloud resource is ready.
                          type: boolean
                      required:
                        - id
                        - ready
                      type: object
                    securityGroups:
                      additionalProperties:
                        description: ResourceStatus identifies a resource by id (and name) and whether it is ready.
                        properties:
                          id:
                            description: id defines the Id of the IBM Cloud resource status.
                            type: string
                          name:
                            description: name defines the name of the IBM Cloud resource status.
                            type: string
                          ready:
                            description: ready defines whether the IBM Cloud resource is ready.
                            type: boolean
                        required:
                          - id
                          - ready
                        type: object
                      description: |-
                        securityGroups references the VPC Security Groups for the cluster.
                        The map simplifies lookups.
                      type: object
                    vpc:
                      description: vpc references the status of the IBM Cloud VPC as part of the extended VPC Infrastructure support.
                      properties:
                        id:
                          description: id defines the Id of the IBM Cloud resource status.
                          type: string
                        name:
                          description: name defines the name of the IBM Cloud resource status.
                          type: string
                        ready:
                          description: ready defines whether the IBM Cloud resource is ready.
                          type: boolean
                      required:
                        - id
                        - ready
                      type: object
                    workerSubnets:
                      additionalProperties:
                        description: ResourceStatus identifies a resource by id (and name) and whether it is ready.
                        properties:
                          id:
                            description: id defines the Id of the IBM Cloud resource status.
                            type: string
                          name:
                            description: name defines the name of the IBM Cloud resource status.
                            type: string
                          ready:
                            description: ready defines whether the IBM Cloud resource is ready.
                            type: boolean
                        required:
                          - id
                          - ready
                        type: object
                      description: |-
                        workerSubnets references the VPC Subnets for the cluster's Data Plane.
                        The map simplifies lookups.
                      type: object
                  type: object
                ready:
                  default: false
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                resourceGroup:
                  description: resourceGroup is the status of the cluster's Resource Group for extended VPC Infrastructure support.
                  properties:
                    id:
                      description: id defines the Id of the IBM Cloud resource status.
                      type: string
                    name:
                      description: name defines the name of the IBM Cloud resource status.
                      type: string
                    ready:
                      description: ready defines whether the IBM Cloud resource is ready.
                      type: boolean
                  required:
                    - id
                    - ready
                  type: object
                subnet:
                  description: Subnet describes a subnet.
                  properties:
                    cidr:
                      type: string
                    id:
                      maxLength: 64
                      minLength: 1
                      pattern: ^[-0-9a-z_]+$
                      type: string
                    name:
                      maxLength: 63
                      minLength: 1
                      pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                      type: string
                    zone:
                      type: string
                  type: object
                vpc:
                  description: |-
                    Important: Run "make" to regenerate code after modifying this file
                    dep: rely on Network instead.
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                  required:
                    - id
                    - name
                  type: object
                vpcEndpoint:
                  description: VPCEndpoint describes a VPCEndpoint.
                  properties:
                    address:
                      type: string
                    floatingIPID:
                      description: 'Deprecated: This field has no function and is going to be removed in the next release.'
                      type: string
                    loadBalancerIPID:
                      type: string
                  required:
                    - address
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: ibmvpcclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: IBMVPCClusterTemplate
    listKind: IBMVPCClusterTemplateList
    plural: ibmvpcclustertemplates
    shortNames:
      - ibmvpcct
    singular: ibmvpcclustertemplate
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Time duration since creation of IBMVPCClusterTemplate
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: IBMVPCClusterTemplate is the Schema for the ibmvpcclustertemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCClusterTemplateSpec defines the desired state of IBMVPCClusterTemplate.
              properties:
                template:
                  description: IBMVPCClusterTemplateResource describes the data needed to create an IBMVPCCluster from a template.
                  properties:
                    metadata:
                      description: |-
                        Standard object's metadata.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: IBMVPCClusterSpec defines the desired state of IBMVPCCluster.
                      properties:
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                          properties:
                            host:
                              description: host is the hostname on which the API server is serving.
                              maxLength: 512
                              type: string
                            port:
                              description: port is the port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                            - host
                            - port
                          type: object
                        controlPlaneLoadBalancer:
                          description: |-
                            ControlPlaneLoadBalancer is optional configuration for customizing control plane behavior.
                            Use this for legacy support, use Network.LoadBalancers for the extended VPC support.
                          properties:
                            additionalListeners:
                              description: AdditionalListeners sets the additional listeners for the control plane load balancer.
                              items:
                                description: |-
                                  AdditionalListenerSpec defines the desired state of an
                                  additional listener on an VPC load balancer.
                                properties:
                                  defaultPoolName:
                                    description: defaultPoolName defines the name of a VPC Load Balancer Backend Pool to use for the VPC Load Balancer Listener.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                    type: string
                                  port:
                                    description: Port sets the port for the additional listener.
                                    format: int64
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                  protocol:
                                    description: |-
                                      protocol defines the protocol to use for the VPC Load Balancer Listener.
                                      Will default to TCP protocol if not specified.
                                    enum:
                                      - http
                                      - https
                                      - tcp
                                      - udp
                                    type: string
                                required:
                                  - port
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - port
                              x-kubernetes-list-type: map
                            backendPools:
                              description: backendPools defines the load balancer's backend pools.
                              items:
                                description: VPCLoadBalancerBackendPoolSpec defines the desired configuration of a VPC Load Balancer Backend Pool.
                                properties:
                                  algorithm:
                                    description: algorithm defines the load balancing algorithm to use.
                                    enum:
                                      - least_connections
                                      - round_robin
                                      - weighted_round_robin
                                    type: string
                                  healthMonitor:
                                    description: healthMonitor defines the backend pool's health monitor.
                                    properties:
                                      delay:
                                        description: delay defines the seconds to wait between health checks.
                                        format: int64
                                        maximum: 60
                                        minimum: 2
                                        type: integer
                                      port:
                                        description: port defines the port to perform health monitoring on.
                                        format: int64
                                        maximum: 65535
                                        minimum: 1
                                        type: integer
                                      retries:
                                        description: retries defines the max retries for health check.
                                        format: int64
                                        maximum: 10
                                        minimum: 1
                                        type: integer
                                      timeout:
                                        description: timeout defines the seconds to wait for a health check response.
                                        format: int64
                                        maximum: 59
                                        minimum: 1
                                        type: integer
                                      type:
                                        description: type defines the protocol used for health checks.
                                        enum:
                                          - http
                                          - https
                                          - tcp
                                        type: string
                                      urlPath:
                                        description: urlPath defines the URL to use for health monitoring.
                                        pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                        type: string
                                    required:
                                      - delay
                                      - retries
                                      - timeout
                                      - type
                                    type: object
                                  name:
                                    description: name defines the name of the Backend Pool.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                    type: string
                                  protocol:
                                    description: protocol defines the protocol to use for the Backend Pool.
                                    enum:
                                      - http
                                      - https
                                      - tcp
                                      - udp
                                    type: string
                                required:
                                  - algorithm
                                  - healthMonitor
                                  - protocol
                                type: object
                              type: array
                            id:
                              description: id of the loadbalancer
                              maxLength: 64
                              minLength: 1
                              pattern: ^[-0-9a-z_]+$
                              type: string
                            name:
                              description: Name sets the name of the VPC load balancer.
                              maxLength: 63
                              minLength: 1
                              pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                              type: string
                            public:
                              default: true
                              description: public indicates that load balancer is public or private
                              type: boolean
                            securityGroups:
                              description: |-
                                securityGroups defines the Security Groups to attach to the load balancer.
                                Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                              items:
                                description: VPCResource represents a VPC resource.
                                properties:
                                  id:
                                    description: id of the resource.
                                    minLength: 1
                                    type: string
                                  name:
                                    description: name of the resource.
                                    minLength: 1
                                    type: string
                                type: object
                                x-kubernetes-validations:
                                  - message: an id or name must be provided
                                    rule: has(self.id) || has(self.name)
                              type: array
                            subnets:
                              description: |-
                                subnets defines the VPC Subnets to attach to the load balancer.
                                Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                              items:
                                description: VPCResource represents a VPC resource.
                                properties:
                                  id:
                                    description: id of the resource.
                                    minLength: 1
                                    type: string
                                  name:
                                    description: name of the resource.
                                    minLength: 1
                                    type: string
                                type: object
                                x-kubernetes-validations:
                                  - message: an id or name must be provided
                                    rule: has(self.id) || has(self.name)
                              type: array
                          type: object
                        image:
                          description: image represents the Image details used for the cluster.
                          properties:
                            cosBucket:
                              description: cosBucket is the name of the IBM Cloud COS Bucket containing the source of the image, if necessary.
                              type: string
                            cosBucketRegion:
                              description: cosBucketRegion is the COS region the bucket is in.
                              type: string
                            cosInstance:
                              description: cosInstance is the name of the IBM Cloud COS Instance containing the source of the image, if necessary.
                              type: string
                            cosObject:
                              description: cosObject is the name of a IBM Cloud COS Object used as the source of the image, if necessary.
                              type: string
                            crn:
                              description: crn is the IBM Cloud CRN of the existing VPC Custom Image.
                              type: string
                            name:
                              description: name is the name of the desired VPC Custom Image.
                              maxLength: 63
                              minLength: 1
                              pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                              type: string
                            operatingSystem:
                              description: operatingSystem is the Custom Image's Operating System name.
                              type: string
                            resourceGroup:
                              description: resourceGroup is the Resource Group to create the Custom Image in.
                              properties:
                                id:
                                  description: id defines the IBM Cloud Resource ID.
                                  type: string
                                name:
                                  description: name defines the IBM Cloud Resource Name.
                                  type: string
                              required:
                                - id
                              type: object
                          type: object
                          x-kubernetes-validations:
                            - message: if any of cosInstance, cosBucket, or cosObject are specified, all must be specified
                              rule: (!has(self.cosInstance) && !has(self.cosBucket) && !has(self.cosObject)) || (has(self.cosInstance) && has(self.cosBucket) && has(self.cosObject))
                            - message: an existing image name or crn must be provided, or to create a new image the cos resources must be provided, with or without a name
                              rule: has(self.name) || has(self.crn) || (has(self.cosInstance) && has(self.cosBucket) && has(self.cosObject))
                        network:
                          description: network represents the VPC network to use for the cluster.
                          properties:
                            controlPlaneSubnets:
                              description: controlPlaneSubnets is a set of Subnet's which define the Control Plane subnets.
                              items:
                                description: Subnet describes a subnet.
                                properties:
                                  cidr:
                                    type: string
                                  id:
                                    maxLength: 64
                                    minLength: 1
                                    pattern: ^[-0-9a-z_]+$
                                    type: string
                                  name:
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                    type: string
                                  zone:
                                    type: string
                                type: object
                              type: array
                            loadBalancers:
                              description: loadBalancers is a set of VPC Load Balancer definitions to use for the cluster.
                              items:
                                description: VPCLoadBalancerSpec defines the desired state of an VPC load balancer.
                                properties:
                                  additionalListeners:
                                    description: AdditionalListeners sets the additional listeners for the control plane load balancer.
                                    items:
                                      description: |-
                                        AdditionalListenerSpec defines the desired state of an
                                        additional listener on an VPC load balancer.
                                      properties:
                                        defaultPoolName:
                                          description: defaultPoolName defines the name of a VPC Load Balancer Backend Pool to use for the VPC Load Balancer Listener.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                          type: string
                                        port:
                                          description: Port sets the port for the additional listener.
                                          format: int64
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                        protocol:
                                          description: |-
                                            protocol defines the protocol to use for the VPC Load Balancer Listener.
                                            Will default to TCP protocol if not specified.
                                          enum:
                                            - http
                                            - https
                                            - tcp
                                            - udp
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    type: array
                                    x-kubernetes-list-map-keys:
                                      - port
                                    x-kubernetes-list-type: map
                                  backendPools:
                                    description: backendPools defines the load balancer's backend pools.
                                    items:
                                      description: VPCLoadBalancerBackendPoolSpec defines the desired configuration of a VPC Load Balancer Backend Pool.
                                      properties:
                                        algorithm:
                                          description: algorithm defines the load balancing algorithm to use.
                                          enum:
                                            - least_connections
                                            - round_robin
                                            - weighted_round_robin
                                          type: string
                                        healthMonitor:
                                          description: healthMonitor defines the backend pool's health monitor.
                                          properties:
                                            delay:
                                              description: delay defines the seconds to wait between health checks.
                                              format: int64
                                              maximum: 60
                                              minimum: 2
                                              type: integer
                                            port:
                                              description: port defines the port to perform health monitoring on.
                                              format: int64
                                              maximum: 65535
                                              minimum: 1
                                              type: integer
                                            retries:
                                              description: retries defines the max retries for health check.
                                              format: int64
                                              maximum: 10
                                              minimum: 1
                                              type: integer
                                            timeout:
                                              description: timeout defines the seconds to wait for a health check response.
                                              format: int64
                                              maximum: 59
                                              minimum: 1
                                              type: integer
                                            type:
                                              description: type defines the protocol used for health checks.
                                              enum:
                                                - http
                                                - https
                                                - tcp
                                              type: string
                                            urlPath:
                                              description: urlPath defines the URL to use for health monitoring.
                                              pattern: ^\/(([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})+(\/([a-zA-Z0-9-._~!$&'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\?([a-zA-Z0-9-._~!$&'()*+,;=:@\/?]|%[a-fA-F0-9]{2})*)?$
                                              type: string
                                          required:
                                            - delay
                                            - retries
                                            - timeout
                                            - type
                                          type: object
                                        name:
                                          description: name defines the name of the Backend Pool.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                          type: string
                                        protocol:
                                          description: protocol defines the protocol to use for the Backend Pool.
                                          enum:
                                            - http
                                            - https
                                            - tcp
                                            - udp
                                          type: string
                                      required:
                                        - algorithm
                                        - healthMonitor
                                        - protocol
                                      type: object
                                    type: array
                                  id:
                                    description: id of the loadbalancer
                                    maxLength: 64
                                    minLength: 1
                                    pattern: ^[-0-9a-z_]+$
                                    type: string
                                  name:
                                    description: Name sets the name of the VPC load balancer.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                    type: string
                                  public:
                                    default: true
                                    description: public indicates that load balancer is public or private
                                    type: boolean
                                  securityGroups:
                                    description: |-
                                      securityGroups defines the Security Groups to attach to the load balancer.
                                      Security Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                                    items:
                                      description: VPCResource represents a VPC resource.
                                      properties:
                                        id:
                                          description: id of the resource.
                                          minLength: 1
                                          type: string
                                        name:
                                          description: name of the resource.
                                          minLength: 1
                                          type: string
                                      type: object
                                      x-kubernetes-validations:
                                        - message: an id or name must be provided
                                          rule: has(self.id) || has(self.name)
                                    type: array
                                  subnets:
                                    description: |-
                                      subnets defines the VPC Subnets to attach to the load balancer.
                                      Subnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).
                                    items:
                                      description: VPCResource represents a VPC resource.
                                      properties:
                                        id:
                                          description: id of the resource.
                                          minLength: 1
                                          type: string
                                        name:
                                          description: name of the resource.
                                          minLength: 1
                                          type: string
                                      type: object
                                      x-kubernetes-validations:
                                        - message: an id or name must be provided
                                          rule: has(self.id) || has(self.name)
                                    type: array
                                type: object
                              type: array
                            resourceGroup:
                              description: |-
                                resourceGroup is the Resource Group containing all of the newtork resources.
                                This can be different than the Resource Group containing the remaining cluster resources.
                              properties:
                                id:
                                  description: id defines the IBM Cloud Resource ID.
                                  type: string
                                name:
                                  description: name defines the IBM Cloud Resource Name.
                                  type: string
                              required:
                                - id
                              type: object
                            securityGroups:
                              description: securityGroups is a set of VPCSecurityGroup's which define the VPC Security Groups that manage traffic within and out of the VPC.
                              items:
                                description: VPCSecurityGroup defines a VPC Security Group that should exist or be created within the specified VPC, with the specified Security Group Rules.
                                properties:
                                  id:
                                    description: id of the Security Group.
                                    type: string
                                  name:
                                    description: name of the Security Group.
                                    type: string
                                  rules:
                                    description: rules are the Security Group Rules for the Security Group.
                                    items:
                                      description: VPCSecurityGroupRule defines a VPC Security Group Rule for a specified Security Group.
                                      properties:
                                        action:
                                          description: action defines whether to allow or deny traffic defined by the Security Group Rule.
                                          enum:
                                            - allow
                                            - deny
                                          type: string
                                        destination:
                                          description: |-
                                            destination is a VPCSecurityGroupRulePrototype which defines the destination of outbound traffic for the Security Group Rule.
                                            Only used when direction is VPCSecurityGroupRuleDirectionOutbound.
                                          properties:
                                            icmpCode:
                                              description: |-
                                                icmpCode is the ICMP code for the Rule.
                                                Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                              format: int64
                                              type: integer
                                            icmpType:
                                              description: |-
                                                icmpType is the ICMP type for the Rule.
                                                Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                              format: int64
                                              type: integer
                                            portRange:
                                              description: portRange is a range of ports allowed for the Rule's remote.
                                              properties:
                                                maximumPort:
                                                  description: maximumPort is the inclusive upper range of ports.
                                                  format: int64
                                                  maximum: 65535
                                                  minimum: 1
                                                  type: integer
                                                minimumPort:
                                                  description: minimumPort is the inclusive lower range of ports.
                                                  format: int64
                                                  maximum: 65535
                                                  minimum: 1
                                                  type: integer
                                              type: object
                                              x-kubernetes-validations:
                                                - message: maximum port must be greater than or equal to minimum port
                                                  rule: self.maximumPort >= self.minimumPort
                                            protocol:
                                              description: protocol defines the traffic protocol used for the Security Group Rule.
                                              enum:
                                                - all
                                                - icmp
                                                - tcp
                                                - udp
                                              type: string
                                            remotes:
                                              description: |-
                                                remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                                Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                                This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                              items:
                                                description: |-
                                                  VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                                  The type of remote defines the additional remote details where are used for defining the remote.
                                                properties:
                                                  address:
                                                    description: |2-
                                                       address is the address to use for the remote's destination/source.
                                                      Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                                    type: string
                                                  cidrSubnetName:
                                                    description: |-
                                                      cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                                      Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                                    type: string
                                                  remoteType:
                                                    description: remoteType defines the type of filter to define for the remote's destination/source.
                                                    enum:
                                                      - any
                                                      - cidr
                                                      - address
                                                      - sg
                                                    type: string
                                                  securityGroupName:
                                                    description: |-
                                                      securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                                      Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                                    type: string
                                                required:
                                                  - remoteType
                                                type: object
                                                x-kubernetes-validations:
                                                  - message: cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType
                                                    rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                                  - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                                    rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                                  - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType
                                                    rule: 'self.remoteType == ''address'' ? (has(self.address) && !has(self.cidrSubnetName) && !has(self.securityGroupName)) : true'
                                                  - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType
                                                    rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName) && !has(self.cidrSubnetName) && !has(self.address)) : true'
                                              type: array
                                          required:
                                            - protocol
                                            - remotes
                                          type: object
                                          x-kubernetes-validations:
                                            - message: icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol
                                              rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode) && !has(self.icmpType)) : true'
                                            - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol
                                              rule: 'self.protocol == ''all'' ? !has(self.portRange) : true'
                                            - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol
                                              rule: 'self.protocol == ''icmp'' ? !has(self.portRange) : true'
                                        direction:
                                          description: direction defines whether the traffic is inbound or outbound for the Security Group Rule.
                                          enum:
                                            - inbound
                                            - outbound
                                          type: string
                                        securityGroupID:
                                          description: securityGroupID is the ID of the Security Group for the Security Group Rule.
                                          type: string
                                        source:
                                          description: |-
                                            source is a VPCSecurityGroupRulePrototype which defines the source of inbound traffic for the Security Group Rule.
                                            Only used when direction is VPCSecurityGroupRuleDirectionInbound.
                                          properties:
                                            icmpCode:
                                              description: |-
                                                icmpCode is the ICMP code for the Rule.
                                                Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                              format: int64
                                              type: integer
                                            icmpType:
                                              description: |-
                                                icmpType is the ICMP type for the Rule.
                                                Only used when Protocol is VPCSecurityGroupRuleProtocolIcmp.
                                              format: int64
                                              type: integer
                                            portRange:
                                              description: portRange is a range of ports allowed for the Rule's remote.
                                              properties:
                                                maximumPort:
                                                  description: maximumPort is the inclusive upper range of ports.
                                                  format: int64
                                                  maximum: 65535
                                                  minimum: 1
                                                  type: integer
                                                minimumPort:
                                                  description: minimumPort is the inclusive lower range of ports.
                                                  format: int64
                                                  maximum: 65535
                                                  minimum: 1
                                                  type: integer
                                              type: object
                                              x-kubernetes-validations:
                                                - message: maximum port must be greater than or equal to minimum port
                                                  rule: self.maximumPort >= self.minimumPort
                                            protocol:
                                              description: protocol defines the traffic protocol used for the Security Group Rule.
                                              enum:
                                                - all
                                                - icmp
                                                - tcp
                                                - udp
                                              type: string
                                            remotes:
                                              description: |-
                                                remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.
                                                Specifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.
                                                This allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.
                                              items:
                                                description: |-
                                                  VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.
                                                  The type of remote defines the additional remote details where are used for defining the remote.
                                                properties:
                                                  address:
                                                    description: |2-
                                                       address is the address to use for the remote's destination/source.
                                                      Only used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.
                                                    type: string
                                                  cidrSubnetName:
                                                    description: |-
                                                      cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.
                                                      Only used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.
                                                    type: string
                                                  remoteType:
                                                    description: remoteType defines the type of filter to define for the remote's destination/source.
                                                    enum:
                                                      - any
                                                      - cidr
                                                      - address
                                                      - sg
                                                    type: string
                                                  securityGroupName:
                                                    description: |-
                                                      securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.
                                                      Only used when remoteType is VPCSecurityGroupRuleRemoteTypeSG
                                                    type: string
                                                required:
                                                  - remoteType
                                                type: object
                                                x-kubernetes-validations:
                                                  - message: cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType
                                                    rule: 'self.remoteType == ''any'' ? (!has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                                  - message: only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType
                                                    rule: 'self.remoteType == ''cidr'' ? (has(self.cidrSubnetName) && !has(self.address) && !has(self.securityGroupName)) : true'
                                                  - message: only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType
                                                    rule: 'self.remoteType == ''address'' ? (has(self.address) && !has(self.cidrSubnetName) && !has(self.securityGroupName)) : true'
                                                  - message: only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType
                                                    rule: 'self.remoteType == ''sg'' ? (has(self.securityGroupName) && !has(self.cidrSubnetName) && !has(self.address)) : true'
                                              type: array
                                          required:
                                            - protocol
                                            - remotes
                                          type: object
                                          x-kubernetes-validations:
                                            - message: icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol
                                              rule: 'self.protocol != ''icmp'' ? (!has(self.icmpCode) && !has(self.icmpType)) : true'
                                            - message: portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol
                                              rule: 'self.protocol == ''all'' ? !has(self.portRange) : true'
                                            - message: portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol
                                              rule: 'self.protocol == ''icmp'' ? !has(self.portRange) : true'
                                      required:
                                        - action
                                        - direction
                                      type: object
                                      x-kubernetes-validations:
                                        - message: both destination and source cannot be provided
                                          rule: (has(self.destination) && !has(self.source)) || (!has(self.destination) && has(self.source))
                                        - message: source must be set for VPCSecurityGroupRuleDirectionInbound direction
                                          rule: 'self.direction == ''inbound'' ? has(self.source) : true'
                                        - message: destination is not valid for VPCSecurityGroupRuleDirectionInbound direction
                                          rule: 'self.direction == ''inbound'' ? !has(self.destination) : true'
                                        - message: destination must be set for VPCSecurityGroupRuleDirectionOutbound direction
                                          rule: 'self.direction == ''outbound'' ? has(self.destination) : true'
                                        - message: source is not valid for VPCSecurityGroupRuleDirectionOutbound direction
                                          rule: 'self.direction == ''outbound'' ? !has(self.source) : true'
                                    type: array
                                  tags:
                                    description: tags are tags to add to the Security Group.
                                    items:
                                      type: string
                                    type: array
                                type: object
                                x-kubernetes-validations:
                                  - message: either an id or name must be specified
                                    rule: has(self.id) || has(self.name)
                              type: array
                            vpc:
                              description: vpc defines the IBM Cloud VPC for extended VPC Infrastructure support.
                              properties:
                                id:
                                  description: id of the resource.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name of the resource.
                                  minLength: 1
                                  type: string
                              type: object
                              x-kubernetes-validations:
                                - message: an id or name must be provided
                                  rule: has(self.id) || has(self.name)
                            workerSubnets:
                              description: workerSubnets is a set of Subnet's which define the Worker subnets.
                              items:
                                description: Subnet describes a subnet.
                                properties:
                                  cidr:
                                    type: string
                                  id:
                                    maxLength: 64
                                    minLength: 1
                                    pattern: ^[-0-9a-z_]+$
                                    type: string
                                  name:
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$
                                    type: string
                                  zone:
                                    type: string
                                type: object
                              type: array
                          type: object
                        region:
                          description: The IBM Cloud Region the cluster lives in.
                          type: string
                        resourceGroup:
                          description: The VPC resources should be created under the resource group.
                          type: string
                        vpc:
                          description: The Name of VPC.
                          type: string
                        zone:
                          description: The Name of availability zone.
                          type: string
                      required:
                        - region
                        - resourceGroup
                      type: object
                  required:
                    - spec
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: ibmvpcmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: IBMVPCMachine
    listKind: IBMVPCMachineList
    plural: ibmvpcmachines
    singular: ibmvpcmachine
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster infrastructure is ready for IBM VPC instances
          jsonPath: .status.ready
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMVPCMachine is the Schema for the ibmvpcmachines API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCMachineSpec defines the desired state of IBMVPCMachine.
              properties:
                bootVolume:
                  description: BootVolume contains machines's boot volume configurations like size, iops etc..
                  properties:
                    deleteVolumeOnInstanceDelete:
                      default: true
                      description: |-
                        DeleteVolumeOnInstanceDelete If set to true, when deleting the instance the volume will also be deleted.
                        Default is set as true
                      type: boolean
                    encryptionKeyCRN:
                      description: |-
                        EncryptionKey is the root key to use to wrap the data encryption key for the volume and this points to the CRN
                        and possible values are as follows.
                        The CRN of the [Key Protect Root
                        Key](https://cloud.ibm.com/docs/key-protect?topic=key-protect-getting-started-tutorial) or [Hyper Protect Crypto
                        Service Root Key](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started) for this resource.
                        If unspecified, the `encryption` type for the volume will be `provider_managed`.
                      type: string
                    iops:
                      description: |-
                        Iops is the maximum I/O operations per second (IOPS) to use for the volume. Applicable only to volumes using a profile
                        family of `custom`.
                      format: int64
                      type: integer
                    name:
                      description: |-
                        Name is the unique user-defined name for this volume.
                        Default will be autogenerated
                      type: string
                    profile:
                      default: general-purpose
                      description: |-
                        Profile is the volume profile for the bootdisk, refer https://cloud.ibm.com/docs/vpc?topic=vpc-block-storage-profiles
                        for more information.
                        Default to general-purpose
                      enum:
                        - general-purpose
                        - 5iops-tier
                        - 10iops-tier
                        - custom
                      type: string
                    sizeGiB:
                      description: |-
                        SizeGiB is the size of the virtual server's boot disk in GiB.
                        Default to the size of the image's `minimum_provisioned_size`.
                      format: int64
                      type: integer
                  type: object
                image:
                  description: |-
                    Image is the id of OS image which would be install on the instance.
                    Example: r134-ed3f775f-ad7e-4e37-ae62-7199b4988b00
                  type: string
                imageName:
                  description: ImageName is the name of OS image which would be install on the instance.
                  type: string
                name:
                  description: Name of the instance.
                  type: string
                primaryNetworkInterface:
                  description: PrimaryNetworkInterface is required to specify subnet.
                  properties:
                    subnet:
                      description: Subnet ID of the network interface.
                      type: string
                  type: object
                profile:
                  description: "Profile indicates the flavor of instance. Example: bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps"
                  type: string
                providerID:
                  description: ProviderID is the unique identifier as specified by the cloud provider.
                  type: string
                sshKeyNames:
                  description: SSHKeysNames is the SSH pub key names that will be used to access VM.
                  items:
                    type: string
                  type: array
                sshKeys:
                  description: SSHKeys is the SSH pub keys that will be used to access VM.
                  items:
                    type: string
                  type: array
                zone:
                  description: 'Zone is the place where the instance should be created. Example: us-south-3'
                  type: string
              required:
                - zone
              type: object
            status:
              description: IBMVPCMachineStatus defines the observed state of IBMVPCMachine.
              properties:
                addresses:
                  description: Addresses contains the GCP instance associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                instanceID:
                  type: string
                instanceState:
                  description: InstanceStatus is the status of the GCP instance for this machine.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - description: Cluster infrastructure is ready for IBM VPC instances
          jsonPath: .status.ready
          name: Ready
          type: string
      name: v1beta2
      schema:
        openAPIV3Schema:
          description: IBMVPCMachine is the Schema for the ibmvpcmachines API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCMachineSpec defines the desired state of IBMVPCMachine.
              properties:
                bootVolume:
                  description: BootVolume contains machines's boot volume configurations like size, iops etc..
                  properties:
                    deleteVolumeOnInstanceDelete:
                      default: true
                      description: |-
                        DeleteVolumeOnInstanceDelete If set to true, when deleting the instance the volume will also be deleted.
                        Default is set as true
                      type: boolean
                    encryptionKeyCRN:
                      description: |-
                        EncryptionKey is the root key to use to wrap the data encryption key for the volume and this points to the CRN
                        and possible values are as follows.
                        The CRN of the [Key Protect Root
                        Key](https://cloud.ibm.com/docs/key-protect?topic=key-protect-getting-started-tutorial) or [Hyper Protect Crypto
                        Service Root Key](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started) for this resource.
                        If unspecified, the `encryption` type for the volume will be `provider_managed`.
                      type: string
                    iops:
                      description: |-
                        Iops is the maximum I/O operations per second (IOPS) to use for the volume. Applicable only to volumes using a profile
                        family of `custom`.
                      format: int64
                      type: integer
                    name:
                      description: |-
                        Name is the unique user-defined name for this volume.
                        Default will be autogenerated
                      type: string
                    profile:
                      default: general-purpose
                      description: |-
                        Profile is the volume profile for the bootdisk, refer https://cloud.ibm.com/docs/vpc?topic=vpc-block-storage-profiles
                        for more information.
                        Default to general-purpose
                      enum:
                        - general-purpose
                        - 5iops-tier
                        - 10iops-tier
                        - custom
                      type: string
                    sizeGiB:
                      description: |-
                        SizeGiB is the size of the virtual server's boot disk in GiB.
                        Default to the size of the image's `minimum_provisioned_size`.
                      format: int64
                      type: integer
                  type: object
                catalogOffering:
                  description: |-
                    CatalogOffering is the Catalog Offering OS image which would be installed on the instance.
                    An OfferingCRN or VersionCRN is required, the PlanCRN is optional.
                  properties:
                    offeringCRN:
                      description: |-
                        OfferingCRN defines the IBM Cloud Catalog Offering CRN. Using the OfferingCRN expects that the latest version of the Offering will be used.
                        If a specific version should be used instead, rely on VersionCRN.
                      type: string
                    planCRN:
                      description: PlanCRN defines the IBM Cloud Catalog Offering Plan CRN to use for the Offering.
                      type: string
                    versionCRN:
                      description: VersionCRN defines the IBM Cloud Catalog Offering Version CRN. A specific version of the Catalog Offering will be used, as defined by this CRN.
                      type: string
                  type: object
                  x-kubernetes-validations:
                    - message: either offeringCRN or version CRN must be provided, not both
                      rule: (has(self.offeringCRN) && !has(self.versionCRN)) || (!has(self.offeringCRN) && has(self.versionCRN))
                image:
                  description: |-
                    Image is the OS image which would be install on the instance.
                    ID will take higher precedence over Name if both specified.
                  properties:
                    id:
                      description: ID of resource
                      minLength: 1
                      type: string
                    name:
                      description: Name of resource
                      minLength: 1
                      type: string
                  type: object
                loadBalancerPoolMembers:
                  description: LoadBalancerPoolMembers is the set of IBM Cloud VPC Load Balancer Backend Pools the machine should be added to as a member.
                  items:
                    description: VPCLoadBalancerBackendPoolMember represents a VPC Load Balancer Backend Pool Member.
                    properties:
                      loadBalancer:
                        description: LoadBalancer defines the Load Balancer the Pool Member is for.
                        properties:
                          id:
                            description: id of the resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of the resource.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-validations:
                          - message: an id or name must be provided
                            rule: has(self.id) || has(self.name)
                      pool:
                        description: Pool defines the Load Balancer Pool the Pool Member should be in.
                        properties:
                          id:
                            description: id of the resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of the resource.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-validations:
                          - message: an id or name must be provided
                            rule: has(self.id) || has(self.name)
                      port:
                        description: Port defines the Port the Load Balancer Pool Member listens for traffic.
                        format: int64
                        type: integer
                      weight:
                        description: Weight of the service member. Only applicable if the pool algorithm is "weighted_round_robin".
                        format: int64
                        type: integer
                    required:
                      - loadBalancer
                      - pool
                      - port
                    type: object
                  type: array
                name:
                  description: Name of the instance.
                  type: string
                placementTarget:
                  description: PlacementTarget is the placement restrictions to use for the virtual server instance. No restrictions are used when this field is not defined.
                  properties:
                    dedicatedHost:
                      description: DedicatedHost defines the Dedicated Host to place a VPC Machine (Instance) on.
                      properties:
                        id:
                          description: id of the resource.
                          minLength: 1
                          type: string
                        name:
                          description: name of the resource.
                          minLength: 1
                          type: string
                      type: object
                      x-kubernetes-validations:
                        - message: an id or name must be provided
                          rule: has(self.id) || has(self.name)
                    dedicatedHostGroup:
                      description: DedicatedHostGroup defines the Dedicated Host Group to use when placing a VPC Machine (Instance).
                      properties:
                        id:
                          description: id of the resource.
                          minLength: 1
                          type: string
                        name:
                          description: name of the resource.
                          minLength: 1
                          type: string
                      type: object
                      x-kubernetes-validations:
                        - message: an id or name must be provided
                          rule: has(self.id) || has(self.name)
                    placementGroup:
                      description: PlacementGroup defines the Placement Group to use when placing a VPC Machine (Instance).
                      properties:
                        id:
                          description: id of the resource.
                          minLength: 1
                          type: string
                        name:
                          description: name of the resource.
                          minLength: 1
                          type: string
                      type: object
                      x-kubernetes-validations:
                        - message: an id or name must be provided
                          rule: has(self.id) || has(self.name)
                  type: object
                  x-kubernetes-validations:
                    - message: only one of dedicatedHost, dedicatedHostGroup, or placementGroup must be defined for machine placement
                      rule: (has(self.dedicatedHost) && !has(self.dedicatedHostGroup) && !has(self.placementGroup)) || (!has(self.dedicatedHost) && has(self.dedicatedHostGroup) && !has(self.placementGroup)) || (!has(self.dedicatedHost) && !has(self.dedicatedHostGroup) && has(self.placementGroup))
                primaryNetworkInterface:
                  description: PrimaryNetworkInterface is required to specify subnet.
                  properties:
                    securityGroups:
                      description: SecurityGroups defines a set of IBM Cloud VPC Security Groups to attach to the network interface.
                      items:
                        description: VPCResource represents a VPC resource.
                        properties:
                          id:
                            description: id of the resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of the resource.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-validations:
                          - message: an id or name must be provided
                            rule: has(self.id) || has(self.name)
                      type: array
                    subnet:
                      description: Subnet ID of the network interface.
                      type: string
                  type: object
                profile:
                  description: "Profile indicates the flavor of instance. Example: bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps"
                  type: string
                providerID:
                  description: ProviderID is the unique identifier as specified by the cloud provider.
                  type: string
                sshKeys:
                  description: |-
                    SSHKeys is the SSH pub keys that will be used to access VM.
                    ID will take higher precedence over Name if both specified.
                  items:
                    description: |-
                      IBMVPCResourceReference is a reference to a specific VPC resource by ID or Name
                      Only one of ID or Name may be specified. Specifying more than one will result in
                      a validation error.
                    properties:
                      id:
                        description: ID of resource
                        minLength: 1
                        type: string
                      name:
                        description: Name of resource
                        minLength: 1
                        type: string
                    type: object
                  type: array
                zone:
                  description: 'Zone is the place where the instance should be created. Example: us-south-3'
                  type: string
              required:
                - image
                - zone
              type: object
            status:
              description: IBMVPCMachineStatus defines the observed state of IBMVPCMachine.
              properties:
                addresses:
                  description: Addresses contains the IBM Cloud instance associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions deefines current service state of the IBMVPCMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.
                  type: string
                instanceID:
                  description: InstanceID defines the IBM Cloud VPC Instance UUID.
                  type: string
                instanceState:
                  description: InstanceStatus is the status of the IBM Cloud instance for this machine.
                  type: string
                loadBalancerPoolMembers:
                  description: LoadBalancerPoolMembers is the status of IBM Cloud VPC Load Balancer Backend Pools the machine is a member.
                  items:
                    description: VPCLoadBalancerBackendPoolMember represents a VPC Load Balancer Backend Pool Member.
                    properties:
                      loadBalancer:
                        description: LoadBalancer defines the Load Balancer the Pool Member is for.
                        properties:
                          id:
                            description: id of the resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of the resource.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-validations:
                          - message: an id or name must be provided
                            rule: has(self.id) || has(self.name)
                      pool:
                        description: Pool defines the Load Balancer Pool the Pool Member should be in.
                        properties:
                          id:
                            description: id of the resource.
                            minLength: 1
                            type: string
                          name:
                            description: name of the resource.
                            minLength: 1
                            type: string
                        type: object
                        x-kubernetes-validations:
                          - message: an id or name must be provided
                            rule: has(self.id) || has(self.name)
                      port:
                        description: Port defines the Port the Load Balancer Pool Member listens for traffic.
                        format: int64
                        type: integer
                      weight:
                        description: Weight of the service member. Only applicable if the pool algorithm is "weighted_round_robin".
                        format: int64
                        type: integer
                    required:
                      - loadBalancer
                      - pool
                      - port
                    type: object
                  type: array
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: ibmvpcmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: IBMVPCMachineTemplate
    listKind: IBMVPCMachineTemplateList
    plural: ibmvpcmachinetemplates
    singular: ibmvpcmachinetemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: IBMVPCMachineTemplate is the Schema for the ibmvpcmachinetemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCMachineTemplateSpec defines the desired state of IBMVPCMachineTemplate.
              properties:
                template:
                  description: IBMVPCMachineTemplateResource describes the data needed to create am IBMVPCMachine from a template.
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior of the machine.
                      properties:
                        bootVolume:
                          description: BootVolume contains machines's boot volume configurations like size, iops etc..
                          properties:
                            deleteVolumeOnInstanceDelete:
                              default: true
                              description: |-
                                DeleteVolumeOnInstanceDelete If set to true, when deleting the instance the volume will also be deleted.
                                Default is set as true
                              type: boolean
                            encryptionKeyCRN:
                              description: |-
                                EncryptionKey is the root key to use to wrap the data encryption key for the volume and this points to the CRN
                                and possible values are as follows.
                                The CRN of the [Key Protect Root
                                Key](https://cloud.ibm.com/docs/key-protect?topic=key-protect-getting-started-tutorial) or [Hyper Protect Crypto
                                Service Root Key](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started) for this resource.
                                If unspecified, the `encryption` type for the volume will be `provider_managed`.
                              type: string
                            iops:
                              description: |-
                                Iops is the maximum I/O operations per second (IOPS) to use for the volume. Applicable only to volumes using a profile
                                family of `custom`.
                              format: int64
                              type: integer
                            name:
                              description: |-
                                Name is the unique user-defined name for this volume.
                                Default will be autogenerated
                              type: string
                            profile:
                              default: general-purpose
                              description: |-
                                Profile is the volume profile for the bootdisk, refer https://cloud.ibm.com/docs/vpc?topic=vpc-block-storage-profiles
                                for more information.
                                Default to general-purpose
                              enum:
                                - general-purpose
                                - 5iops-tier
                                - 10iops-tier
                                - custom
                              type: string
                            sizeGiB:
                              description: |-
                                SizeGiB is the size of the virtual server's boot disk in GiB.
                                Default to the size of the image's `minimum_provisioned_size`.
                              format: int64
                              type: integer
                          type: object
                        image:
                          description: |-
                            Image is the id of OS image which would be install on the instance.
                            Example: r134-ed3f775f-ad7e-4e37-ae62-7199b4988b00
                          type: string
                        imageName:
                          description: ImageName is the name of OS image which would be install on the instance.
                          type: string
                        name:
                          description: Name of the instance.
                          type: string
                        primaryNetworkInterface:
                          description: PrimaryNetworkInterface is required to specify subnet.
                          properties:
                            subnet:
                              description: Subnet ID of the network interface.
                              type: string
                          type: object
                        profile:
                          description: "Profile indicates the flavor of instance. Example: bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps"
                          type: string
                        providerID:
                          description: ProviderID is the unique identifier as specified by the cloud provider.
                          type: string
                        sshKeyNames:
                          description: SSHKeysNames is the SSH pub key names that will be used to access VM.
                          items:
                            type: string
                          type: array
                        sshKeys:
                          description: SSHKeys is the SSH pub keys that will be used to access VM.
                          items:
                            type: string
                          type: array
                        zone:
                          description: 'Zone is the place where the instance should be created. Example: us-south-3'
                          type: string
                      required:
                        - zone
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
            status:
              description: IBMVPCMachineTemplateStatus defines the observed state of IBMVPCMachineTemplate.
              type: object
          type: object
      served: true
      storage: false
    - name: v1beta2
      schema:
        openAPIV3Schema:
          description: IBMVPCMachineTemplate is the Schema for the ibmvpcmachinetemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IBMVPCMachineTemplateSpec defines the desired state of IBMVPCMachineTemplate.
              properties:
                template:
                  description: IBMVPCMachineTemplateResource describes the data needed to create am IBMVPCMachine from a template.
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior of the machine.
                      properties:
                        bootVolume:
                          description: BootVolume contains machines's boot volume configurations like size, iops etc..
                          properties:
                            deleteVolumeOnInstanceDelete:
                              default: true
                              description: |-
                                DeleteVolumeOnInstanceDelete If set to true, when deleting the instance the volume will also be deleted.
                                Default is set as true
                              type: boolean
                            encryptionKeyCRN:
                              description: |-
                                EncryptionKey is the root key to use to wrap the data encryption key for the volume and this points to the CRN
                                and possible values are as follows.
                                The CRN of the [Key Protect Root
                                Key](https://cloud.ibm.com/docs/key-protect?topic=key-protect-getting-started-tutorial) or [Hyper Protect Crypto
                                Service Root Key](https://cloud.ibm.com/docs/hs-crypto?topic=hs-crypto-get-started) for this resource.
                                If unspecified, the `encryption` type for the volume will be `provider_managed`.
                              type: string
                            iops:
                              description: |-
                                Iops is the maximum I/O operations per second (IOPS) to use for the volume. Applicable only to volumes using a profile
                                family of `custom`.
                              format: int64
                              type: integer
                            name:
                              description: |-
                                Name is the unique user-defined name for this volume.
                                Default will be autogenerated
                              type: string
                            profile:
                              default: general-purpose
                              description: |-
                                Profile is the volume profile for the bootdisk, refer https://cloud.ibm.com/docs/vpc?topic=vpc-block-storage-profiles
                                for more information.
                                Default to general-purpose
                              enum:
                                - general-purpose
                                - 5iops-tier
                                - 10iops-tier
                                - custom
                              type: string
                            sizeGiB:
                              description: |-
                                SizeGiB is the size of the virtual server's boot disk in GiB.
                                Default to the size of the image's `minimum_provisioned_size`.
                              format: int64
                              type: integer
                          type: object
                        catalogOffering:
                          description: |-
                            CatalogOffering is the Catalog Offering OS image which would be installed on the instance.
                            An OfferingCRN or VersionCRN is required, the PlanCRN is optional.
                          properties:
                            offeringCRN:
                              description: |-
                                OfferingCRN defines the IBM Cloud Catalog Offering CRN. Using the OfferingCRN expects that the latest version of the Offering will be used.
                                If a specific version should be used instead, rely on VersionCRN.
                              type: string
                            planCRN:
                              description: PlanCRN defines the IBM Cloud Catalog Offering Plan CRN to use for the Offering.
                              type: string
                            versionCRN:
                              description: VersionCRN defines the IBM Cloud Catalog Offering Version CRN. A specific version of the Catalog Offering will be used, as defined by this CRN.
                              type: string
                          type: object
                          x-kubernetes-validations:
                            - message: either offeringCRN or version CRN must be provided, not both
                              rule: (has(self.offeringCRN) && !has(self.versionCRN)) || (!has(self.offeringCRN) && has(self.versionCRN))
                        image:
                          description: |-
                            Image is the OS image which would be install on the instance.
                            ID will take higher precedence over Name if both specified.
                          properties:
                            id:
                              description: ID of resource
                              minLength: 1
                              type: string
                            name:
                              description: Name of resource
                              minLength: 1
                              type: string
                          type: object
                        loadBalancerPoolMembers:
                          description: LoadBalancerPoolMembers is the set of IBM Cloud VPC Load Balancer Backend Pools the machine should be added to as a member.
                          items:
                            description: VPCLoadBalancerBackendPoolMember represents a VPC Load Balancer Backend Pool Member.
                            properties:
                              loadBalancer:
                                description: LoadBalancer defines the Load Balancer the Pool Member is for.
                                properties:
                                  id:
                                    description: id of the resource.
                                    minLength: 1
                                    type: string
                                  name:
                                    description: name of the resource.
                                    minLength: 1
                                    type: string
                                type: object
                                x-kubernetes-validations:
                                  - message: an id or name must be provided
                                    rule: has(self.id) || has(self.name)
                              pool:
                                description: Pool defines the Load Balancer Pool the Pool Member should be in.
                                properties:
                                  id:
                                    description: id of the resource.
                                    minLength: 1
                                    type: string
                                  name:
                                    description: name of the resource.
                                    minLength: 1
                                    type: string
                                type: object
                                x-kubernetes-validations:
                                  - message: an id or name must be provided
                                    rule: has(self.id) || has(self.name)
                              port:
                                description: Port defines the Port the Load Balancer Pool Member listens for traffic.
                                format: int64
                                type: integer
                              weight:
                                description: Weight of the service member. Only applicable if the pool algorithm is "weighted_round_robin".
                                format: int64
                                type: integer
                            required:
                              - loadBalancer
                              - pool
                              - port
                            type: object
                          type: array
                        name:
                          description: Name of the instance.
                          type: string
                        placementTarget:
                          description: PlacementTarget is the placement restrictions to use for the virtual server instance. No restrictions are used when this field is not defined.
                          properties:
                            dedicatedHost:
                              description: DedicatedHost defines the Dedicated Host to place a VPC Machine (Instance) on.
                              properties:
                                id:
                                  description: id of the resource.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name of the resource.
                                  minLength: 1
                                  type: string
                              type: object
                              x-kubernetes-validations:
                                - message: an id or name must be provided
                                  rule: has(self.id) || has(self.name)
                            dedicatedHostGroup:
                              description: DedicatedHostGroup defines the Dedicated Host Group to use when placing a VPC Machine (Instance).
                              properties:
                                id:
                                  description: id of the resource.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name of the resource.
                                  minLength: 1
                                  type: string
                              type: object
                              x-kubernetes-validations:
                                - message: an id or name must be provided
                                  rule: has(self.id) || has(self.name)
                            placementGroup:
                              description: PlacementGroup defines the Placement Group to use when placing a VPC Machine (Instance).
                              properties:
                                id:
                                  description: id of the resource.
                                  minLength: 1
                                  type: string
                                name:
                                  description: name of the resource.
                                  minLength: 1
                                  type: string
                              type: object
                              x-kubernetes-validations:
                                - message: an id or name must be provided
                                  rule: has(self.id) || has(self.name)
                          type: object
                          x-kubernetes-validations:
                            - message: only one of dedicatedHost, dedicatedHostGroup, or placementGroup must be defined for machine placement
                              rule: (has(self.dedicatedHost) && !has(self.dedicatedHostGroup) && !has(self.placementGroup)) || (!has(self.dedicatedHost) && has(self.dedicatedHostGroup) && !has(self.placementGroup)) || (!has(self.dedicatedHost) && !has(self.dedicatedHostGroup) && has(self.placementGroup))
                        primaryNetworkInterface:
                          description: PrimaryNetworkInterface is required to specify subnet.
                          properties:
                            securityGroups:
                              description: SecurityGroups defines a set of IBM Cloud VPC Security Groups to attach to the network interface.
                              items:
                                description: VPCResource represents a VPC resource.
                                properties:
                                  id:
                                    description: id of the resource.
                                    minLength: 1
                                    type: string
                                  name:
                                    description: name of the resource.
                                    minLength: 1
                                    type: string
                                type: object
                                x-kubernetes-validations:
                                  - message: an id or name must be provided
                                    rule: has(self.id) || has(self.name)
                              type: array
                            subnet:
                              description: Subnet ID of the network interface.
                              type: string
                          type: object
                        profile:
                          description: "Profile indicates the flavor of instance. Example: bx2-8x32\tmeans 8 vCPUs\t32 GB RAM\t16 Gbps"
                          type: string
                        providerID:
                          description: ProviderID is the unique identifier as specified by the cloud provider.
                          type: string
                        sshKeys:
                          description: |-
                            SSHKeys is the SSH pub keys that will be used to access VM.
                            ID will take higher precedence over Name if both specified.
                          items:
                            description: |-
                              IBMVPCResourceReference is a reference to a specific VPC resource by ID or Name
                              Only one of ID or Name may be specified. Specifying more than one will result in
                              a validation error.
                            properties:
                              id:
                                description: ID of resource
                                minLength: 1
                                type: string
                              name:
                                description: Name of resource
                                minLength: 1
                                type: string
                            type: object
                          type: array
                        zone:
                          description: 'Zone is the place where the instance should be created. Example: us-south-3'
                          type: string
                      required:
                        - image
                        - zone
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
            status:
              description: IBMVPCMachineTemplateStatus defines the observed state of IBMVPCMachineTemplate.
              properties:
                capacity:
                  additionalProperties:
                    anyOf:
                      - type: integer
                      - type: string
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  description: |-
                    Capacity defines the resource capacity for this machine.
                    This value is used for autoscaling from zero operations as defined in:
                    https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: kubevirtclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: KubevirtCluster
    listKind: KubevirtClusterList
    plural: kubevirtclusters
    singular: kubevirtcluster
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtCluster is the Schema for the kubevirtclusters API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtClusterSpec defines the desired state of KubevirtCluster.
              properties:
                controlPlaneEndpoint:
                  description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                  properties:
                    host:
                      description: Host is the hostname on which the API server is serving.
                      type: string
                    port:
                      description: Port is the port on which the API server is serving.
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                controlPlaneServiceTemplate:
                  description: |-
                    ControlPlaneServiceTemplate can be used to modify service that fronts the control plane nodes to handle the
                    api-server traffic (port 6443). This field is optional, by default control plane nodes will use a service
                    of type ClusterIP, which will make workload cluster only accessible within the same cluster. Note, this does
                    not aim to expose the entire Service spec to users, but only provides capability to modify the service metadata
                    and the service type.
                  properties:
                    metadata:
                      description: |-
                        Service metadata allows to set labels, annotations and namespace for the service.
                        When infraClusterSecretRef is used, ControlPlaneService take the kubeconfig namespace by default if metadata.namespace is not specified.
                        This field is optional.
                      nullable: true
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    spec:
                      description: |-
                        Service specification allows to override some fields in the service spec.
                        Note, it does not aim cover all fields of the service spec.
                      properties:
                        type:
                          description: |-
                            Type determines how the Service is exposed. Defaults to ClusterIP. Valid
                            options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                          type: string
                      type: object
                  type: object
                infraClusterSecretRef:
                  description: InfraClusterSecretRef is a reference to a secret with a kubeconfig for external cluster used for infra.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                sshKeys:
                  description: SSHKeys is a reference to a local struct for SSH keys persistence.
                  properties:
                    configRef:
                      description: |-
                        ConfigRef is a reference to a resource containing the keys.
                        The reference is optional to allow users/operators to specify
                        Bootstrap.DataSecretName without the need of a controller.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    dataSecretName:
                      description: DataSecretName is the name of the secret that stores ssh keys.
                      type: string
                  type: object
              type: object
            status:
              description: KubevirtClusterStatus defines the observed state of KubevirtCluster.
              properties:
                conditions:
                  description: Conditions defines current service state of the KubevirtCluster.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureDomains:
                  additionalProperties:
                    description: |-
                      FailureDomainSpec is the Schema for Cluster API failure domains.
                      It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: attributes is a free form map of attributes an infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: |-
                    FailureDomains don't mean much in CAPD since it's all local, but we can see how the rest of cluster API
                    will use this if we populate it.
                  type: object
                ready:
                  default: false
                  description: Ready denotes that the infrastructure is ready.
                  type: boolean
              required:
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: kubevirtclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: KubevirtClusterTemplate
    listKind: KubevirtClusterTemplateList
    plural: kubevirtclustertemplates
    shortNames:
      - kct
    singular: kubevirtclustertemplate
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtClusterTemplate is the Schema for the kubevirtclustertemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtClusterTemplateSpec defines the desired state of KubevirtClusterTemplate.
              properties:
                template:
                  description: KubevirtClusterTemplateResource describes the data needed to create a KubevirtCluster from a template.
                  properties:
                    metadata:
                      description: |-
                        ObjectMeta is metadata that all persisted resources must have, which includes all objects
                        users must create. This is a copy of customizable fields from metav1.ObjectMeta.

                        ObjectMeta is embedded in `Machine.Spec`, `MachineDeployment.Template` and `MachineSet.Template`,
                        which are not top-level Kubernetes objects. Given that metav1.ObjectMeta has lots of special cases
                        and read-only fields which end up in the generated CRD validation, having it as a subset simplifies
                        the API and some issues that can impact user experience.

                        During the [upgrade to controller-tools@v2](https://github.com/kubernetes-sigs/cluster-api/pull/1054)
                        for v1alpha2, we noticed a failure would occur running Cluster API test suite against the new CRDs,
                        specifically `spec.metadata.creationTimestamp in body must be of type string: "null"`.
                        The investigation showed that `controller-tools@v2` behaves differently than its previous version
                        when handling types from [metav1](k8s.io/apimachinery/pkg/apis/meta/v1) package.

                        In more details, we found that embedded (non-top level) types that embedded `metav1.ObjectMeta`
                        had validation properties, including for `creationTimestamp` (metav1.Time).
                        The `metav1.Time` type specifies a custom json marshaller that, when IsZero() is true, returns `null`
                        which breaks validation because the field isn't marked as nullable.

                        In future versions, controller-tools@v2 might allow overriding the type and validation for embedded
                        types. When that happens, this hack should be revisited.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map stored with a resource that may be
                            set by external tools to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) objects. May match selectors of replication controllers
                            and services.
                            More info: http://kubernetes.io/docs/user-guide/labels
                          type: object
                      type: object
                    spec:
                      description: KubevirtClusterSpec defines the desired state of KubevirtCluster.
                      properties:
                        controlPlaneEndpoint:
                          description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                          properties:
                            host:
                              description: Host is the hostname on which the API server is serving.
                              type: string
                            port:
                              description: Port is the port on which the API server is serving.
                              type: integer
                          required:
                            - host
                            - port
                          type: object
                        controlPlaneServiceTemplate:
                          description: |-
                            ControlPlaneServiceTemplate can be used to modify service that fronts the control plane nodes to handle the
                            api-server traffic (port 6443). This field is optional, by default control plane nodes will use a service
                            of type ClusterIP, which will make workload cluster only accessible within the same cluster. Note, this does
                            not aim to expose the entire Service spec to users, but only provides capability to modify the service metadata
                            and the service type.
                          properties:
                            metadata:
                              description: |-
                                Service metadata allows to set labels, annotations and namespace for the service.
                                When infraClusterSecretRef is used, ControlPlaneService take the kubeconfig namespace by default if metadata.namespace is not specified.
                                This field is optional.
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description: |-
                                Service specification allows to override some fields in the service spec.
                                Note, it does not aim cover all fields of the service spec.
                              properties:
                                type:
                                  description: |-
                                    Type determines how the Service is exposed. Defaults to ClusterIP. Valid
                                    options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
                                    More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                                  type: string
                              type: object
                          type: object
                        infraClusterSecretRef:
                          description: InfraClusterSecretRef is a reference to a secret with a kubeconfig for external cluster used for infra.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        sshKeys:
                          description: SSHKeys is a reference to a local struct for SSH keys persistence.
                          properties:
                            configRef:
                              description: |-
                                ConfigRef is a reference to a resource containing the keys.
                                The reference is optional to allow users/operators to specify
                                Bootstrap.DataSecretName without the need of a controller.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: |-
                                    If referring to a piece of an object instead of an entire object, this string
                                    should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                    the event) or if no container name is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                    referencing a part of an object.
                                  type: string
                                kind:
                                  description: |-
                                    Kind of the referent.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                  type: string
                                resourceVersion:
                                  description: |-
                                    Specific resourceVersion to which this reference is made, if any.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                  type: string
                                uid:
                                  description: |-
                                    UID of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            dataSecretName:
                              description: DataSecretName is the name of the secret that stores ssh keys.
                              type: string
                          type: object
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
          x-kubernetes-validations:
            - message: KubevirtClusterTemplate is immutable
              rule: self == oldSelf
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: kubevirtmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: KubevirtMachine
    listKind: KubevirtMachineList
    plural: kubevirtmachines
    singular: kubevirtmachine
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Is machine ready
          jsonPath: .status.ready
          name: Ready
          type: boolean
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtMachine is the Schema for the kubevirtmachines API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtMachineSpec defines the desired state of KubevirtMachine.
              properties:
                infraClusterSecretRef:
                  description: |-
                    InfraClusterSecretRef is a reference to a secret with a kubeconfig for external cluster used for infra.
                    When nil, this defaults to the value present in the KubevirtCluster object's spec associated with this machine.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                providerID:
                  description: ProviderID TBD what to use for Kubevirt
                  type: string
                virtualMachineBootstrapCheck:
                  description: BootstrapCheckSpec defines how the CAPK controller is checking CAPI Sentinel file inside the VM.
                  properties:
                    checkStrategy:
                      default: ssh
                      description: |-
                        CheckStrategy describes how CAPK controller will validate a successful CAPI bootstrap.
                        Following specified method, CAPK will try to retrieve the state of the CAPI Sentinel file from the VM.
                        Possible values are: "none" or "ssh" (default is "ssh") and this value is validated by apiserver.
                      enum:
                        - none
                        - ssh
                      type: string
                  type: object
                virtualMachineTemplate:
                  description: VirtualMachineTemplateSpec defines the desired state of the kubevirt VM.
                  properties:
                    metadata:
                      nullable: true
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    spec:
                      description: VirtualMachineSpec contains the VirtualMachine specification.
                      properties:
                        dataVolumeTemplates:
                          description: |-
                            dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference.
                            DataVolumes in this list are dynamically created for the VirtualMachine and are tied to the VirtualMachine's life-cycle.
                          items:
                            nullable: true
                            properties:
                              apiVersion:
                                description: |-
                                  APIVersion defines the versioned schema of this representation of an object.
                                  Servers should convert recognized schemas to the latest internal value, and
                                  may reject unrecognized values.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                type: string
                              kind:
                                description: |-
                                  Kind is a string value representing the REST resource this object represents.
                                  Servers may infer this from the endpoint the client submits requests to.
                                  Cannot be updated.
                                  In CamelCase.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                type: string
                              metadata:
                                nullable: true
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              spec:
                                description: DataVolumeSpec contains the DataVolume specification.
                                properties:
                                  checkpoints:
                                    description: Checkpoints is a list of DataVolumeCheckpoints, representing stages in a multistage import.
                                    items:
                                      description: DataVolumeCheckpoint defines a stage in a warm migration.
                                      properties:
                                        current:
                                          description: Current is the identifier of the snapshot created for this checkpoint.
                                          type: string
                                        previous:
                                          description: Previous is the identifier of the snapshot from the previous checkpoint.
                                          type: string
                                      required:
                                        - current
                                        - previous
                                      type: object
                                    type: array
                                  contentType:
                                    description: 'DataVolumeContentType options: "kubevirt", "archive"'
                                    enum:
                                      - kubevirt
                                      - archive
                                    type: string
                                  finalCheckpoint:
                                    description: FinalCheckpoint indicates whether the current DataVolumeCheckpoint is the final checkpoint.
                                    type: boolean
                                  preallocation:
                                    description: Preallocation controls whether storage for DataVolumes should be allocated in advance.
                                    type: boolean
                                  priorityClassName:
                                    description: PriorityClassName for Importer, Cloner and Uploader pod
                                    type: string
                                  pvc:
                                    description: PVC is the PVC specification
                                    properties:
                                      accessModes:
                                        description: |-
                                          accessModes contains the desired access modes the volume should have.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      dataSource:
                                        description: |-
                                          dataSource field can be used to specify either:
                                          * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                          * An existing PVC (PersistentVolumeClaim)
                                          If the provisioner or an external controller can support the specified data source,
                                          it will create a new volume based on the contents of the specified data source.
                                          When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                          and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                          If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                        properties:
                                          apiGroup:
                                            description: |-
                                              APIGroup is the group for the resource being referenced.
                                              If APIGroup is not specified, the specified Kind must be in the core API group.
                                              For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource being referenced
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      dataSourceRef:
                                        description: |-
                                          dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                          volume is desired. This may be any object from a non-empty API group (non
                                          core object) or a PersistentVolumeClaim object.
                                          When this field is specified, volume binding will only succeed if the type of
                                          the specified object matches some installed volume populator or dynamic
                                          provisioner.
                                          This field will replace the functionality of the dataSource field and as such
                                          if both fields are non-empty, they must have the same value. For backwards
                                          compatibility, when namespace isn't specified in dataSourceRef,
                                          both fields (dataSource and dataSourceRef) will be set to the same
                                          value automatically if one of them is empty and the other is non-empty.
                                          When namespace is specified in dataSourceRef,
                                          dataSource isn't set to the same value and must be empty.
                                          There are three important differences between dataSource and dataSourceRef:
                                          * While dataSource only allows two specific types of objects, dataSourceRef
                                            allows any non-core object, as well as PersistentVolumeClaim objects.
                                          * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                            preserves all values, and generates an error if a disallowed value is
                                            specified.
                                          * While dataSource only allows local objects, dataSourceRef allows objects
                                            in any namespaces.
                                          (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                          (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                        properties:
                                          apiGroup:
                                            description: |-
                                              APIGroup is the group for the resource being referenced.
                                              If APIGroup is not specified, the specified Kind must be in the core API group.
                                              For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource being referenced
                                            type: string
                                          namespace:
                                            description: |-
                                              Namespace is the namespace of resource being referenced
                                              Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                              (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                      resources:
                                        description: |-
                                          resources represents the minimum resources the volume should have.
                                          If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                          that are lower than previous value but must still be higher than capacity recorded in the
                                          status field of the claim.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Limits describes the maximum amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Requests describes the minimum amount of compute resources required.
                                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                        type: object
                                      selector:
                                        description: selector is a label query over volumes to consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      storageClassName:
                                        description: |-
                                          storageClassName is the name of the StorageClass required by the claim.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                        type: string
                                      volumeAttributesClassName:
                                        description: |-
                                          volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                          If specified, the CSI driver will create or update the volume with the attributes defined
                                          in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                          it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                          will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                          If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                          will be set by the persistentvolume controller if it exists.
                                          If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                          set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                          exists.
                                          More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                          (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                        type: string
                                      volumeMode:
                                        description: |-
                                          volumeMode defines what type of volume is required by the claim.
                                          Value of Filesystem is implied when not included in claim spec.
                                        type: string
                                      volumeName:
                                        description: volumeName is the binding reference to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                  source:
                                    description: Source is the src of the data for the requested DataVolume
                                    properties:
                                      blank:
                                        description: DataVolumeBlankImage provides the parameters to create a new raw blank image for the PVC
                                        type: object
                                      gcs:
                                        description: DataVolumeSourceGCS provides the parameters to create a Data Volume from an GCS source
                                        properties:
                                          secretRef:
                                            description: SecretRef provides the secret reference needed to access the GCS source
                                            type: string
                                          url:
                                            description: URL is the url of the GCS source
                                            type: string
                                        required:
                                          - url
                                        type: object
                                      http:
                                        description: DataVolumeSourceHTTP can be either an http or https endpoint, with an optional basic auth user name and password, and an optional configmap containing additional CAs
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate
                                            type: string
                                          extraHeaders:
                                            description: ExtraHeaders is a list of strings containing extra headers to include with HTTP transfer requests
                                            items:
                                              type: string
                                            type: array
                                          secretExtraHeaders:
                                            description: SecretExtraHeaders is a list of Secret references, each containing an extra HTTP header that may include sensitive information
                                            items:
                                              type: string
                                            type: array
                                          secretRef:
                                            description: SecretRef A Secret reference, the secret should contain accessKeyId (user name) base64 encoded, and secretKey (password) also base64 encoded
                                            type: string
                                          url:
                                            description: URL is the URL of the http(s) endpoint
                                            type: string
                                        required:
                                          - url
                                        type: object
                                      imageio:
                                        description: DataVolumeSourceImageIO provides the parameters to create a Data Volume from an imageio source
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap provides a reference to the CA cert
                                            type: string
                                          diskId:
                                            description: DiskID provides id of a disk to be imported
                                            type: string
                                          secretRef:
                                            description: SecretRef provides the secret reference needed to access the ovirt-engine
                                            type: string
                                          url:
                                            description: URL is the URL of the ovirt-engine
                                            type: string
                                        required:
                                          - diskId
                                          - url
                                        type: object
                                      pvc:
                                        description: DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC
                                        properties:
                                          name:
                                            description: The name of the source PVC
                                            type: string
                                          namespace:
                                            description: The namespace of the source PVC
                                            type: string
                                        required:
                                          - name
                                          - namespace
                                        type: object
                                      registry:
                                        description: DataVolumeSourceRegistry provides the parameters to create a Data Volume from an registry source
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap provides a reference to the Registry certs
                                            type: string
                                          imageStream:
                                            description: ImageStream is the name of image stream for import
                                            type: string
                                          pullMethod:
                                            description: PullMethod can be either "pod" (default import), or "node" (node docker cache based import)
                                            type: string
                                          secretRef:
                                            description: SecretRef provides the secret reference needed to access the Registry source
                                            type: string
                                          url:
                                            description: 'URL is the url of the registry source (starting with the scheme: docker, oci-archive)'
                                            type: string
                                        type: object
                                      s3:
                                        description: DataVolumeSourceS3 provides the parameters to create a Data Volume from an S3 source
                                        properties:
                                          certConfigMap:
                                            description: CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate
                                            type: string
                                          secretRef:
                                            description: SecretRef provides the secret reference needed to access the S3 source
                                            type: string
                                          url:
                                            description: URL is the url of the S3 source
                                            type: string
                                        required:
                                          - url
                                        type: object
                                      snapshot:
                                        description: DataVolumeSourceSnapshot provides the parameters to create a Data Volume from an existing VolumeSnapshot
                                        properties:
                                          name:
                                            description: The name of the source VolumeSnapshot
                                            type: string
                                          namespace:
                                            description: The namespace of the source VolumeSnapshot
                                            type: string
                                        required:
                                          - name
                                          - namespace
                                        type: object
                                      upload:
                                        description: DataVolumeSourceUpload provides the parameters to create a Data Volume by uploading the source
                                        type: object
                                      vddk:
                                        description: DataVolumeSourceVDDK provides the parameters to create a Data Volume from a Vmware source
                                        properties:
                                          backingFile:
                                            description: BackingFile is the path to the virtual hard disk to migrate from vCenter/ESXi
                                            type: string
                                          initImageURL:
                                            description: InitImageURL is an optional URL to an image containing an extracted VDDK library, overrides v2v-vmware config map
                                            type: string
                                          secretRef:
                                            description: SecretRef provides a reference to a secret containing the username and password needed to access the vCenter or ESXi host
                                            type: string
                                          thumbprint:
                                            description: Thumbprint is the certificate thumbprint of the vCenter or ESXi host
                                            type: string
                                          url:
                                            description: URL is the URL of the vCenter or ESXi host with the VM to migrate
                                            type: string
                                          uuid:
                                            description: UUID is the UUID of the virtual machine that the backing file is attached to in vCenter/ESXi
                                            type: string
                                        type: object
                                    type: object
                                  sourceRef:
                                    description: SourceRef is an indirect reference to the source of data for the requested DataVolume
                                    properties:
                                      kind:
                                        description: The kind of the source reference, currently only "DataSource" is supported
                                        type: string
                                      name:
                                        description: The name of the source reference
                                        type: string
                                      namespace:
                                        description: The namespace of the source reference, defaults to the DataVolume namespace
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                  storage:
                                    description: Storage is the requested storage specification
                                    properties:
                                      accessModes:
                                        description: |-
                                          AccessModes contains the desired access modes the volume should have.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: |-
                                          This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.
                                          If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
                                        properties:
                                          apiGroup:
                                            description: |-
                                              APIGroup is the group for the resource being referenced.
                                              If APIGroup is not specified, the specified Kind must be in the core API group.
                                              For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource being referenced
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      dataSourceRef:
                                        description: |-
                                          Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner.
                                          This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty.
                                          There are two important differences between DataSource and DataSourceRef:
                                          * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects.
                                          * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified.
                                          (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                        properties:
                                          apiGroup:
                                            description: |-
                                              APIGroup is the group for the resource being referenced.
                                              If APIGroup is not specified, the specified Kind must be in the core API group.
                                              For any other third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource being referenced
                                            type: string
                                          namespace:
                                            description: |-
                                              Namespace is the namespace of resource being referenced
                                              Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                              (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                      resources:
                                        description: |-
                                          Resources represents the minimum resources the volume should have.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Limits describes the maximum amount of compute resources allowed.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: |-
                                              Requests describes the minimum amount of compute resources required.
                                              If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                              otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to consider for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      storageClassName:
                                        description: |-
                                          Name of the StorageClass required by the claim.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                        type: string
                                      volumeMode:
                                        description: |-
                                          volumeMode defines what type of volume is required by the claim.
                                          Value of Filesystem is implied when not included in claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                type: object
                              status:
                                description: |-
                                  DataVolumeTemplateDummyStatus is here simply for backwards compatibility with
                                  a previous API.
                                nullable: true
                                type: object
                            required:
                              - spec
                            type: object
                          type: array
                        instancetype:
                          description: InstancetypeMatcher references a instancetype that is used to fill fields in Template
                          properties:
                            inferFromVolume:
                              description: |-
                                InferFromVolume lists the name of a volume that should be used to infer or discover the instancetype
                                to be used through known annotations on the underlying resource. Once applied to the InstancetypeMatcher
                                this field is removed.
                              type: string
                            inferFromVolumeFailurePolicy:
                              description: |-
                                InferFromVolumeFailurePolicy controls what should happen on failure when inferring the instancetype.
                                Allowed values are: "RejectInferFromVolumeFailure" and "IgnoreInferFromVolumeFailure".
                                If not specified, "RejectInferFromVolumeFailure" is used by default.
                              type: string
                            kind:
                              description: |-
                                Kind specifies which instancetype resource is referenced.
                                Allowed values are: "VirtualMachineInstancetype" and "VirtualMachineClusterInstancetype".
                                If not specified, "VirtualMachineClusterInstancetype" is used by default.
                              type: string
                            name:
                              description: Name is the name of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype
                              type: string
                            revisionName:
                              description: |-
                                RevisionName specifies a ControllerRevision containing a specific copy of the
                                VirtualMachineInstancetype or VirtualMachineClusterInstancetype to be used. This is initially
                                captured the first time the instancetype is applied to the VirtualMachineInstance.
                              type: string
                          type: object
                        preference:
                          description: PreferenceMatcher references a set of preference that is used to fill fields in Template
                          properties:
                            inferFromVolume:
                              description: |-
                                InferFromVolume lists the name of a volume that should be used to infer or discover the preference
                                to be used through known annotations on the underlying resource. Once applied to the PreferenceMatcher
                                this field is removed.
                              type: string
                            inferFromVolumeFailurePolicy:
                              description: |-
                                InferFromVolumeFailurePolicy controls what should happen on failure when preference the instancetype.
                                Allowed values are: "RejectInferFromVolumeFailure" and "IgnoreInferFromVolumeFailure".
                                If not specified, "RejectInferFromVolumeFailure" is used by default.
                              type: string
                            kind:
                              description: |-
                                Kind specifies which preference resource is referenced.
                                Allowed values are: "VirtualMachinePreference" and "VirtualMachineClusterPreference".
                                If not specified, "VirtualMachineClusterPreference" is used by default.
                              type: string
                            name:
                              description: Name is the name of the VirtualMachinePreference or VirtualMachineClusterPreference
                              type: string
                            revisionName:
                              description: |-
                                RevisionName specifies a ControllerRevision containing a specific copy of the
                                VirtualMachinePreference or VirtualMachineClusterPreference to be used. This is
                                initially captured the first time the instancetype is applied to the VirtualMachineInstance.
                              type: string
                          type: object
                        runStrategy:
                          description: |-
                            Running state indicates the requested running state of the VirtualMachineInstance
                            mutually exclusive with Running
                          type: string
                        running:
                          description: |-
                            Running controls whether the associatied VirtualMachineInstance is created or not
                            Mutually exclusive with RunStrategy
                            Deprecated: VirtualMachineInstance field "Running" is now deprecated, please use RunStrategy instead.
                          type: boolean
                        template:
                          description: Template is the direct specification of VirtualMachineInstance
                          properties:
                            metadata:
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description: VirtualMachineInstance Spec contains the VirtualMachineInstance specification.
                              properties:
                                accessCredentials:
                                  description: Specifies a set of public keys to inject into the vm guest
                                  items:
                                    description: |-
                                      AccessCredential represents a credential source that can be used to
                                      authorize remote access to the vm guest
                                      Only one of its members may be specified.
                                    properties:
                                      sshPublicKey:
                                        description: |-
                                          SSHPublicKey represents the source and method of applying a ssh public
                                          key into a guest virtual machine.
                                        properties:
                                          propagationMethod:
                                            description: PropagationMethod represents how the public key is injected into the vm guest.
                                            properties:
                                              configDrive:
                                                description: |-
                                                  ConfigDrivePropagation means that the ssh public keys are injected
                                                  into the VM using metadata using the configDrive cloud-init provider
                                                type: object
                                              noCloud:
                                                description: |-
                                                  NoCloudPropagation means that the ssh public keys are injected
                                                  into the VM using metadata using the noCloud cloud-init provider
                                                type: object
                                              qemuGuestAgent:
                                                description: |-
                                                  QemuGuestAgentAccessCredentailPropagation means ssh public keys are
                                                  dynamically injected into the vm at runtime via the qemu guest agent.
                                                  This feature requires the qemu guest agent to be running within the guest.
                                                properties:
                                                  users:
                                                    description: |-
                                                      Users represents a list of guest users that should have the ssh public keys
                                                      added to their authorized_keys file.
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: set
                                                required:
                                                  - users
                                                type: object
                                            type: object
                                          source:
                                            description: Source represents where the public keys are pulled from
                                            properties:
                                              secret:
                                                description: Secret means that the access credential is pulled from a kubernetes secret
                                                properties:
                                                  secretName:
                                                    description: SecretName represents the name of the secret in the VMI's namespace
                                                    type: string
                                                required:
                                                  - secretName
                                                type: object
                                            type: object
                                        required:
                                          - propagationMethod
                                          - source
                                        type: object
                                      userPassword:
                                        description: |-
                                          UserPassword represents the source and method for applying a guest user's
                                          password
                                        properties:
                                          propagationMethod:
                                            description: propagationMethod represents how the user passwords are injected into the vm guest.
                                            properties:
                                              qemuGuestAgent:
                                                description: |-
                                                  QemuGuestAgentAccessCredentailPropagation means passwords are
                                                  dynamically injected into the vm at runtime via the qemu guest agent.
                                                  This feature requires the qemu guest agent to be running within the guest.
                                                type: object
                                            type: object
                                          source:
                                            description: Source represents where the user passwords are pulled from
                                            properties:
                                              secret:
                                                description: Secret means that the access credential is pulled from a kubernetes secret
                                                properties:
                                                  secretName:
                                                    description: SecretName represents the name of the secret in the VMI's namespace
                                                    type: string
                                                required:
                                                  - secretName
                                                type: object
                                            type: object
                                        required:
                                          - propagationMethod
                                          - source
                                        type: object
                                    type: object
                                  maxItems: 256
                                  type: array
                                  x-kubernetes-list-type: atomic
                                affinity:
                                  description: If affinity is specifies, obey all the affinity rules
                                  properties:
                                    nodeAffinity:
                                      description: Describes node affinity scheduling rules for the pod.
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            The scheduler will prefer to schedule pods to nodes that satisfy
                                            the affinity expressions specified by this field, but it may choose
                                            a node that violates one or more of the expressions. The node that is
                                            most preferred is the one with the greatest sum of weights, i.e.
                                            for each node that meets all of the scheduling requirements (resource
                                            request, requiredDuringScheduling affinity expressions, etc.),
                                            compute a sum by iterating through the elements of this field and adding
                                            "weight" to the sum if the node matches the corresponding matchExpressions; the
                                            node(s) with the highest sum are the most preferred.
                                          items:
                                            description: |-
                                              An empty preferred scheduling term matches all objects with implicit weight 0
                                              (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                            properties:
                                              preference:
                                                description: A node selector term, associated with the corresponding weight.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector requirements by node's labels.
                                                    items:
                                                      description: |-
                                                        A node selector requirement is a selector that contains values, a key, and an operator
                                                        that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            Represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            An array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. If the operator is Gt or Lt, the values
                                                            array must have a single element, which will be interpreted as an integer.
                                                            This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchFields:
                                                    description: A list of node selector requirements by node's fields.
                                                    items:
                                                      description: |-
                                                        A node selector requirement is a selector that contains values, a key, and an operator
                                                        that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            Represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            An array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. If the operator is Gt or Lt, the values
                                                            array must have a single element, which will be interpreted as an integer.
                                                            This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              weight:
                                                description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                              - preference
                                              - weight
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            If the affinity requirements specified by this field are not met at
                                            scheduling time, the pod will not be scheduled onto the node.
                                            If the affinity requirements specified by this field cease to be met
                                            at some point during pod execution (e.g. due to an update), the system
                                            may or may not try to eventually evict the pod from its node.
                                          properties:
                                            nodeSelectorTerms:
                                              description: Required. A list of node selector terms. The terms are ORed.
                                              items:
                                                description: |-
                                                  A null or empty node selector term matches no objects. The requirements of
                                                  them are ANDed.
                                                  The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                properties:
                                                  matchExpressions:
                                                    description: A list of node selector requirements by node's labels.
                                                    items:
                                                      description: |-
                                                        A node selector requirement is a selector that contains values, a key, and an operator
                                                        that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            Represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            An array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. If the operator is Gt or Lt, the values
                                                            array must have a single element, which will be interpreted as an integer.
                                                            This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchFields:
                                                    description: A list of node selector requirements by node's fields.
                                                    items:
                                                      description: |-
                                                        A node selector requirement is a selector that contains values, a key, and an operator
                                                        that relates the key and values.
                                                      properties:
                                                        key:
                                                          description: The label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            Represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            An array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. If the operator is Gt or Lt, the values
                                                            array must have a single element, which will be interpreted as an integer.
                                                            This array is replaced during a strategic merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          required:
                                            - nodeSelectorTerms
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    podAffinity:
                                      description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            The scheduler will prefer to schedule pods to nodes that satisfy
                                            the affinity expressions specified by this field, but it may choose
                                            a node that violates one or more of the expressions. The node that is
                                            most preferred is the one with the greatest sum of weights, i.e.
                                            for each node that meets all of the scheduling requirements (resource
                                            request, requiredDuringScheduling affinity expressions, etc.),
                                            compute a sum by iterating through the elements of this field and adding
                                            "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                            node(s) with the highest sum are the most preferred.
                                          items:
                                            description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity term, associated with the corresponding weight.
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      A label query over a set of resources, in this case pods.
                                                      If it's null, this PodAffinityTerm matches with no Pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  matchLabelKeys:
                                                    description: |-
                                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  mismatchLabelKeys:
                                                    description: |-
                                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  namespaceSelector:
                                                    description: |-
                                                      A label query over the set of namespaces that the term applies to.
                                                      The term is applied to the union of the namespaces selected by this field
                                                      and the ones listed in the namespaces field.
                                                      null selector and null or empty namespaces list means "this pod's namespace".
                                                      An empty selector ({}) matches all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: |-
                                                      namespaces specifies a static list of namespace names that the term applies to.
                                                      The term is applied to the union of the namespaces listed in this field
                                                      and the ones selected by namespaceSelector.
                                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  topologyKey:
                                                    description: |-
                                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                                      selected pods is running.
                                                      Empty topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              weight:
                                                description: |-
                                                  weight associated with matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                              - podAffinityTerm
                                              - weight
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            If the affinity requirements specified by this field are not met at
                                            scheduling time, the pod will not be scheduled onto the node.
                                            If the affinity requirements specified by this field cease to be met
                                            at some point during pod execution (e.g. due to a pod label update), the
                                            system may or may not try to eventually evict the pod from its node.
                                            When there are multiple elements, the lists of nodes corresponding to each
                                            podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                          items:
                                            description: |-
                                              Defines a set of pods (namely those matching the labelSelector
                                              relative to the given namespace(s)) that this pod should be
                                              co-located (affinity) or not co-located (anti-affinity) with,
                                              where co-located is defined as running on a node whose value of
                                              the label with key <topologyKey> matches that of any node on which
                                              a pod of the set of pods is running
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    podAntiAffinity:
                                      description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                      properties:
                                        preferredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            The scheduler will prefer to schedule pods to nodes that satisfy
                                            the anti-affinity expressions specified by this field, but it may choose
                                            a node that violates one or more of the expressions. The node that is
                                            most preferred is the one with the greatest sum of weights, i.e.
                                            for each node that meets all of the scheduling requirements (resource
                                            request, requiredDuringScheduling anti-affinity expressions, etc.),
                                            compute a sum by iterating through the elements of this field and adding
                                            "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                            node(s) with the highest sum are the most preferred.
                                          items:
                                            description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                            properties:
                                              podAffinityTerm:
                                                description: Required. A pod affinity term, associated with the corresponding weight.
                                                properties:
                                                  labelSelector:
                                                    description: |-
                                                      A label query over a set of resources, in this case pods.
                                                      If it's null, this PodAffinityTerm matches with no Pods.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  matchLabelKeys:
                                                    description: |-
                                                      MatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                      Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  mismatchLabelKeys:
                                                    description: |-
                                                      MismatchLabelKeys is a set of pod label keys to select which pods will
                                                      be taken into consideration. The keys are used to lookup values from the
                                                      incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                      to select the group of existing pods which pods will be taken into consideration
                                                      for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                      pod labels will be ignored. The default value is empty.
                                                      The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                      Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                      This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  namespaceSelector:
                                                    description: |-
                                                      A label query over the set of namespaces that the term applies to.
                                                      The term is applied to the union of the namespaces selected by this field
                                                      and the ones listed in the namespaces field.
                                                      null selector and null or empty namespaces list means "this pod's namespace".
                                                      An empty selector ({}) matches all namespaces.
                                                    properties:
                                                      matchExpressions:
                                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                        items:
                                                          description: |-
                                                            A label selector requirement is a selector that contains values, a key, and an operator that
                                                            relates the key and values.
                                                          properties:
                                                            key:
                                                              description: key is the label key that the selector applies to.
                                                              type: string
                                                            operator:
                                                              description: |-
                                                                operator represents a key's relationship to a set of values.
                                                                Valid operators are In, NotIn, Exists and DoesNotExist.
                                                              type: string
                                                            values:
                                                              description: |-
                                                                values is an array of string values. If the operator is In or NotIn,
                                                                the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                the values array must be empty. This array is replaced during a strategic
                                                                merge patch.
                                                              items:
                                                                type: string
                                                              type: array
                                                              x-kubernetes-list-type: atomic
                                                          required:
                                                            - key
                                                            - operator
                                                          type: object
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      matchLabels:
                                                        additionalProperties:
                                                          type: string
                                                        description: |-
                                                          matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                          map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                          operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                        type: object
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  namespaces:
                                                    description: |-
                                                      namespaces specifies a static list of namespace names that the term applies to.
                                                      The term is applied to the union of the namespaces listed in this field
                                                      and the ones selected by namespaceSelector.
                                                      null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                    items:
                                                      type: string
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  topologyKey:
                                                    description: |-
                                                      This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                      the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                      whose value of the label with key topologyKey matches that of any node on which any of the
                                                      selected pods is running.
                                                      Empty topologyKey is not allowed.
                                                    type: string
                                                required:
                                                  - topologyKey
                                                type: object
                                              weight:
                                                description: |-
                                                  weight associated with matching the corresponding podAffinityTerm,
                                                  in the range 1-100.
                                                format: int32
                                                type: integer
                                            required:
                                              - podAffinityTerm
                                              - weight
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        requiredDuringSchedulingIgnoredDuringExecution:
                                          description: |-
                                            If the anti-affinity requirements specified by this field are not met at
                                            scheduling time, the pod will not be scheduled onto the node.
                                            If the anti-affinity requirements specified by this field cease to be met
                                            at some point during pod execution (e.g. due to a pod label update), the
                                            system may or may not try to eventually evict the pod from its node.
                                            When there are multiple elements, the lists of nodes corresponding to each
                                            podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                          items:
                                            description: |-
                                              Defines a set of pods (namely those matching the labelSelector
                                              relative to the given namespace(s)) that this pod should be
                                              co-located (affinity) or not co-located (anti-affinity) with,
                                              where co-located is defined as running on a node whose value of
                                              the label with key <topologyKey> matches that of any node on which
                                              a pod of the set of pods is running
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  A label query over a set of resources, in this case pods.
                                                  If it's null, this PodAffinityTerm matches with no Pods.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                  Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              mismatchLabelKeys:
                                                description: |-
                                                  MismatchLabelKeys is a set of pod label keys to select which pods will
                                                  be taken into consideration. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                  to select the group of existing pods which pods will be taken into consideration
                                                  for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                  pod labels will be ignored. The default value is empty.
                                                  The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                  Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                  This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              namespaceSelector:
                                                description: |-
                                                  A label query over the set of namespaces that the term applies to.
                                                  The term is applied to the union of the namespaces selected by this field
                                                  and the ones listed in the namespaces field.
                                                  null selector and null or empty namespaces list means "this pod's namespace".
                                                  An empty selector ({}) matches all namespaces.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              namespaces:
                                                description: |-
                                                  namespaces specifies a static list of namespace names that the term applies to.
                                                  The term is applied to the union of the namespaces listed in this field
                                                  and the ones selected by namespaceSelector.
                                                  null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              topologyKey:
                                                description: |-
                                                  This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                  the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                  whose value of the label with key topologyKey matches that of any node on which any of the
                                                  selected pods is running.
                                                  Empty topologyKey is not allowed.
                                                type: string
                                            required:
                                              - topologyKey
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                  type: object
                                architecture:
                                  description: Specifies the architecture of the vm guest you are attempting to run. Defaults to the compiled architecture of the KubeVirt components
                                  type: string
                                dnsConfig:
                                  description: |-
                                    Specifies the DNS parameters of a pod.
                                    Parameters specified here will be merged to the generated DNS
                                    configuration based on DNSPolicy.
                                  properties:
                                    nameservers:
                                      description: |-
                                        A list of DNS name server IP addresses.
                                        This will be appended to the base nameservers generated from DNSPolicy.
                                        Duplicated nameservers will be removed.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    options:
                                      description: |-
                                        A list of DNS resolver options.
                                        This will be merged with the base options generated from DNSPolicy.
                                        Duplicated entries will be removed. Resolution options given in Options
                                        will override those that appear in the base DNSPolicy.
                                      items:
                                        description: PodDNSConfigOption defines DNS resolver options of a pod.
                                        properties:
                                          name:
                                            description: |-
                                              Name is this DNS resolver option's name.
                                              Required.
                                            type: string
                                          value:
                                            description: Value is this DNS resolver option's value.
                                            type: string
                                        type: object
                                      type: array
                                      x-kubernetes-list-type: atomic
                                    searches:
                                      description: |-
                                        A list of DNS search domains for host-name lookup.
                                        This will be appended to the base search paths generated from DNSPolicy.
                                        Duplicated search paths will be removed.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                dnsPolicy:
                                  description: |-
                                    Set DNS policy for the pod.
                                    Defaults to "ClusterFirst".
                                    Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
                                    DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                                    To have DNS options set along with hostNetwork, you have to specify DNS policy
                                    explicitly to 'ClusterFirstWithHostNet'.
                                  type: string
                                domain:
                                  description: Specification of the desired behavior of the VirtualMachineInstance on the host.
                                  properties:
                                    chassis:
                                      description: Chassis specifies the chassis info passed to the domain.
                                      properties:
                                        asset:
                                          type: string
                                        manufacturer:
                                          type: string
                                        serial:
                                          type: string
                                        sku:
                                          type: string
                                        version:
                                          type: string
                                      type: object
                                    clock:
                                      description: Clock sets the clock and timers of the vmi.
                                      properties:
                                        timer:
                                          description: Timer specifies whih timers are attached to the vmi.
                                          properties:
                                            hpet:
                                              description: HPET (High Precision Event Timer) - multiple timers with periodic interrupts.
                                              properties:
                                                present:
                                                  description: |-
                                                    Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                                tickPolicy:
                                                  description: |-
                                                    TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest.
                                                    One of "delay", "catchup", "merge", "discard".
                                                  type: string
                                              type: object
                                            hyperv:
                                              description: Hyperv (Hypervclock) - lets guests read the host’s wall clock time (paravirtualized). For windows guests.
                                              properties:
                                                present:
                                                  description: |-
                                                    Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            kvm:
                                              description: "KVM \t(KVM clock) - lets guests read the host’s wall clock time (paravirtualized). For linux guests."
                                              properties:
                                                present:
                                                  description: |-
                                                    Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            pit:
                                              description: PIT (Programmable Interval Timer) - a timer with periodic interrupts.
                                              properties:
                                                present:
                                                  description: |-
                                                    Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                                tickPolicy:
                                                  description: |-
                                                    TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest.
                                                    One of "delay", "catchup", "discard".
                                                  type: string
                                              type: object
                                            rtc:
                                              description: RTC (Real Time Clock) - a continuously running timer with periodic interrupts.
                                              properties:
                                                present:
                                                  description: |-
                                                    Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                    Defaults to true.
                                                  type: boolean
                                                tickPolicy:
                                                  description: |-
                                                    TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest.
                                                    One of "delay", "catchup".
                                                  type: string
                                                track:
                                                  description: Track the guest or the wall clock.
                                                  type: string
                                              type: object
                                          type: object
                                        timezone:
                                          description: |-
                                            Timezone sets the guest clock to the specified timezone.
                                            Zone name follows the TZ environment variable format (e.g. 'America/New_York').
                                          type: string
                                        utc:
                                          description: |-
                                            UTC sets the guest clock to UTC on each boot. If an offset is specified,
                                            guest changes to the clock will be kept during reboots and are not reset.
                                          properties:
                                            offsetSeconds:
                                              description: |-
                                                OffsetSeconds specifies an offset in seconds, relative to UTC. If set,
                                                guest changes to the clock will be kept during reboots and not reset.
                                              type: integer
                                          type: object
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    cpu:
                                      description: CPU allow specified the detailed CPU topology inside the vmi.
                                      properties:
                                        cores:
                                          description: |-
                                            Cores specifies the number of cores inside the vmi.
                                            Must be a value greater or equal 1.
                                          format: int32
                                          type: integer
                                        dedicatedCpuPlacement:
                                          description: |-
                                            DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node
                                            with enough dedicated pCPUs and pin the vCPUs to it.
                                          type: boolean
                                        features:
                                          description: Features specifies the CPU features list inside the VMI.
                                          items:
                                            description: CPUFeature allows specifying a CPU feature.
                                            properties:
                                              name:
                                                description: Name of the CPU feature
                                                type: string
                                              policy:
                                                description: |-
                                                  Policy is the CPU feature attribute which can have the following attributes:
                                                  force    - The virtual CPU will claim the feature is supported regardless of it being supported by host CPU.
                                                  require  - Guest creation will fail unless the feature is supported by the host CPU or the hypervisor is able to emulate it.
                                                  optional - The feature will be supported by virtual CPU if and only if it is supported by host CPU.
                                                  disable  - The feature will not be supported by virtual CPU.
                                                  forbid   - Guest creation will fail if the feature is supported by host CPU.
                                                  Defaults to require
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          type: array
                                        isolateEmulatorThread:
                                          description: |-
                                            IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place
                                            the emulator thread on it.
                                          type: boolean
                                        maxSockets:
                                          description: |-
                                            MaxSockets specifies the maximum amount of sockets that can
                                            be hotplugged
                                          format: int32
                                          type: integer
                                        model:
                                          description: |-
                                            Model specifies the CPU model inside the VMI.
                                            List of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
                                            It is possible to specify special cases like "host-passthrough" to get the same CPU as the node
                                            and "host-model" to get CPU closest to the node one.
                                            Defaults to host-model.
                                          type: string
                                        numa:
                                          description: NUMA allows specifying settings for the guest NUMA topology
                                          properties:
                                            guestMappingPassthrough:
                                              description: |-
                                                GuestMappingPassthrough will create an efficient guest topology based on host CPUs exclusively assigned to a pod.
                                                The created topology ensures that memory and CPUs on the virtual numa nodes never cross boundaries of host numa nodes.
                                              type: object
                                          type: object
                                        realtime:
                                          description: Realtime instructs the virt-launcher to tune the VMI for lower latency, optional for real time workloads
                                          properties:
                                            mask:
                                              description: |-
                                                Mask defines the vcpu mask expression that defines which vcpus are used for realtime. Format matches libvirt's expressions.
                                                Example: "0-3,^1","0,2,3","2-3"
                                              type: string
                                          type: object
                                        sockets:
                                          description: |-
                                            Sockets specifies the number of sockets inside the vmi.
                                            Must be a value greater or equal 1.
                                          format: int32
                                          type: integer
                                        threads:
                                          description: |-
                                            Threads specifies the number of threads inside the vmi.
                                            Must be a value greater or equal 1.
                                          format: int32
                                          type: integer
                                      type: object
                                    devices:
                                      description: Devices allows adding disks, network interfaces, and others
                                      properties:
                                        autoattachGraphicsDevice:
                                          description: |-
                                            Whether to attach the default graphics device or not.
                                            VNC will not be available if set to false. Defaults to true.
                                          type: boolean
                                        autoattachInputDevice:
                                          description: |-
                                            Whether to attach an Input Device.
                                            Defaults to false.
                                          type: boolean
                                        autoattachMemBalloon:
                                          description: |-
                                            Whether to attach the Memory balloon device with default period.
                                            Period can be adjusted in virt-config.
                                            Defaults to true.
                                          type: boolean
                                        autoattachPodInterface:
                                          description: Whether to attach a pod network interface. Defaults to true.
                                          type: boolean
                                        autoattachSerialConsole:
                                          description: |-
                                            Whether to attach the default virtio-serial console or not.
                                            Serial console access will not be available if set to false. Defaults to true.
                                          type: boolean
                                        autoattachVSOCK:
                                          description: |-
                                            Whether to attach the VSOCK CID to the VM or not.
                                            VSOCK access will be available if set to true. Defaults to false.
                                          type: boolean
                                        blockMultiQueue:
                                          description: |-
                                            Whether or not to enable virtio multi-queue for block devices.
                                            Defaults to false.
                                          type: boolean
                                        clientPassthrough:
                                          description: To configure and access client devices such as redirecting USB
                                          type: object
                                        disableHotplug:
                                          description: DisableHotplug disabled the ability to hotplug disks.
                                          type: boolean
                                        disks:
                                          description: Disks describes disks, cdroms and luns which are connected to the vmi.
                                          items:
                                            properties:
                                              blockSize:
                                                description: If specified, the virtual disk will be presented with the given block sizes.
                                                properties:
                                                  custom:
                                                    description: CustomBlockSize represents the desired logical and physical block size for a VM disk.
                                                    properties:
                                                      logical:
                                                        type: integer
                                                      physical:
                                                        type: integer
                                                    required:
                                                      - logical
                                                      - physical
                                                    type: object
                                                  matchVolume:
                                                    description: Represents if a feature is enabled or disabled.
                                                    properties:
                                                      enabled:
                                                        description: |-
                                                          Enabled determines if the feature should be enabled or disabled on the guest.
                                                          Defaults to true.
                                                        type: boolean
                                                    type: object
                                                type: object
                                              bootOrder:
                                                description: |-
                                                  BootOrder is an integer value > 0, used to determine ordering of boot devices.
                                                  Lower values take precedence.
                                                  Each disk or interface that has a boot order must have a unique value.
                                                  Disks without a boot order are not tried if a disk with a boot order exists.
                                                type: integer
                                              cache:
                                                description: |-
                                                  Cache specifies which kvm disk cache mode should be used.
                                                  Supported values are: CacheNone, CacheWriteThrough.
                                                type: string
                                              cdrom:
                                                description: Attach a volume as a cdrom to the vmi.
                                                properties:
                                                  bus:
                                                    description: |-
                                                      Bus indicates the type of disk device to emulate.
                                                      supported values: virtio, sata, scsi.
                                                    type: string
                                                  readonly:
                                                    description: |-
                                                      ReadOnly.
                                                      Defaults to true.
                                                    type: boolean
                                                  tray:
                                                    description: |-
                                                      Tray indicates if the tray of the device is open or closed.
                                                      Allowed values are "open" and "closed".
                                                      Defaults to closed.
                                                    type: string
                                                type: object
                                              dedicatedIOThread:
                                                description: |-
                                                  dedicatedIOThread indicates this disk should have an exclusive IO Thread.
                                                  Enabling this implies useIOThreads = true.
                                                  Defaults to false.
                                                type: boolean
                                              disk:
                                                description: Attach a volume as a disk to the vmi.
                                                properties:
                                                  bus:
                                                    description: |-
                                                      Bus indicates the type of disk device to emulate.
                                                      supported values: virtio, sata, scsi, usb.
                                                    type: string
                                                  pciAddress:
                                                    description: 'If specified, the virtual disk will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10'
                                                    type: string
                                                  readonly:
                                                    description: |-
                                                      ReadOnly.
                                                      Defaults to false.
                                                    type: boolean
                                                type: object
                                              errorPolicy:
                                                description: If specified, it can change the default error policy (stop) for the disk
                                                type: string
                                              io:
                                                description: |-
                                                  IO specifies which QEMU disk IO mode should be used.
                                                  Supported values are: native, default, threads.
                                                type: string
                                              lun:
                                                description: Attach a volume as a LUN to the vmi.
                                                properties:
                                                  bus:
                                                    description: |-
                                                      Bus indicates the type of disk device to emulate.
                                                      supported values: virtio, sata, scsi.
                                                    type: string
                                                  readonly:
                                                    description: |-
                                                      ReadOnly.
                                                      Defaults to false.
                                                    type: boolean
                                                  reservation:
                                                    description: Reservation indicates if the disk needs to support the persistent reservation for the SCSI disk
                                                    type: boolean
                                                type: object
                                              name:
                                                description: Name is the device name
                                                type: string
                                              serial:
                                                description: Serial provides the ability to specify a serial number for the disk device.
                                                type: string
                                              shareable:
                                                description: If specified the disk is made sharable and multiple write from different VMs are permitted
                                                type: boolean
                                              tag:
                                                description: If specified, disk address and its tag will be provided to the guest via config drive metadata
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          maxItems: 256
                                          type: array
                                        downwardMetrics:
                                          description: DownwardMetrics creates a virtio serials for exposing the downward metrics to the vmi.
                                          type: object
                                        filesystems:
                                          description: Filesystems describes filesystem which is connected to the vmi.
                                          items:
                                            properties:
                                              name:
                                                description: Name is the device name
                                                type: string
                                              virtiofs:
                                                description: Virtiofs is supported
                                                type: object
                                            required:
                                              - name
                                              - virtiofs
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        gpus:
                                          description: Whether to attach a GPU device to the vmi.
                                          items:
                                            properties:
                                              deviceName:
                                                type: string
                                              name:
                                                description: Name of the GPU device as exposed by a device plugin
                                                type: string
                                              tag:
                                                description: If specified, the virtual network interface address and its tag will be provided to the guest via config drive
                                                type: string
                                              virtualGPUOptions:
                                                properties:
                                                  display:
                                                    properties:
                                                      enabled:
                                                        description: |-
                                                          Enabled determines if a display addapter backed by a vGPU should be enabled or disabled on the guest.
                                                          Defaults to true.
                                                        type: boolean
                                                      ramFB:
                                                        description: |-
                                                          Enables a boot framebuffer, until the guest OS loads a real GPU driver
                                                          Defaults to true.
                                                        properties:
                                                          enabled:
                                                            description: |-
                                                              Enabled determines if the feature should be enabled or disabled on the guest.
                                                              Defaults to true.
                                                            type: boolean
                                                        type: object
                                                    type: object
                                                type: object
                                            required:
                                              - deviceName
                                              - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        hostDevices:
                                          description: Whether to attach a host device to the vmi.
                                          items:
                                            properties:
                                              deviceName:
                                                description: DeviceName is the resource name of the host device exposed by a device plugin
                                                type: string
                                              name:
                                                type: string
                                              tag:
                                                description: If specified, the virtual network interface address and its tag will be provided to the guest via config drive
                                                type: string
                                            required:
                                              - deviceName
                                              - name
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        inputs:
                                          description: Inputs describe input devices
                                          items:
                                            properties:
                                              bus:
                                                description: |-
                                                  Bus indicates the bus of input device to emulate.
                                                  Supported values: virtio, usb.
                                                type: string
                                              name:
                                                description: Name is the device name
                                                type: string
                                              type:
                                                description: |-
                                                  Type indicated the type of input device.
                                                  Supported values: tablet.
                                                type: string
                                            required:
                                              - name
                                              - type
                                            type: object
                                          type: array
                                        interfaces:
                                          description: Interfaces describe network interfaces which are added to the vmi.
                                          items:
                                            properties:
                                              acpiIndex:
                                                description: |-
                                                  If specified, the ACPI index is used to provide network interface device naming, that is stable across changes
                                                  in PCI addresses assigned to the device.
                                                  This value is required to be unique across all devices and be between 1 and (16*1024-1).
                                                type: integer
                                              binding:
                                                description: |-
                                                  Binding specifies the binding plugin that will be used to connect the interface to the guest.
                                                  It provides an alternative to InterfaceBindingMethod.
                                                  version: 1alphav1
                                                properties:
                                                  name:
                                                    description: |-
                                                      Name references to the binding name as denined in the kubevirt CR.
                                                      version: 1alphav1
                                                    type: string
                                                required:
                                                  - name
                                                type: object
                                              bootOrder:
                                                description: |-
                                                  BootOrder is an integer value > 0, used to determine ordering of boot devices.
                                                  Lower values take precedence.
                                                  Each interface or disk that has a boot order must have a unique value.
                                                  Interfaces without a boot order are not tried.
                                                type: integer
                                              bridge:
                                                description: InterfaceBridge connects to a given network via a linux bridge.
                                                type: object
                                              dhcpOptions:
                                                description: If specified the network interface will pass additional DHCP options to the VMI
                                                properties:
                                                  bootFileName:
                                                    description: If specified will pass option 67 to interface's DHCP server
                                                    type: string
                                                  ntpServers:
                                                    description: If specified will pass the configured NTP server to the VM via DHCP option 042.
                                                    items:
                                                      type: string
                                                    type: array
                                                  privateOptions:
                                                    description: 'If specified will pass extra DHCP options for private use, range: 224-254'
                                                    items:
                                                      description: DHCPExtraOptions defines Extra DHCP options for a VM.
                                                      properties:
                                                        option:
                                                          description: |-
                                                            Option is an Integer value from 224-254
                                                            Required.
                                                          type: integer
                                                        value:
                                                          description: |-
                                                            Value is a String value for the Option provided
                                                            Required.
                                                          type: string
                                                      required:
                                                        - option
                                                        - value
                                                      type: object
                                                    type: array
                                                  tftpServerName:
                                                    description: If specified will pass option 66 to interface's DHCP server
                                                    type: string
                                                type: object
                                              macAddress:
                                                description: 'Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.'
                                                type: string
                                              macvtap:
                                                description: |-
                                                  DeprecatedMacvtap is an alias to the deprecated Macvtap interface,
                                                  please refer to Kubevirt user guide for alternatives.
                                                  Deprecated: Removed in v1.3
                                                type: object
                                              masquerade:
                                                description: InterfaceMasquerade connects to a given network using netfilter rules to nat the traffic.
                                                type: object
                                              model:
                                                description: |-
                                                  Interface model.
                                                  One of: e1000, e1000e, igb, ne2k_pci, pcnet, rtl8139, virtio.
                                                  Defaults to virtio.
                                                type: string
                                              name:
                                                description: |-
                                                  Logical name of the interface as well as a reference to the associated networks.
                                                  Must match the Name of a Network.
                                                type: string
                                              passt:
                                                description: |-
                                                  DeprecatedPasst is an alias to the deprecated Passt interface,
                                                  please refer to Kubevirt user guide for alternatives.
                                                  Deprecated: Removed in v1.3
                                                type: object
                                              pciAddress:
                                                description: 'If specified, the virtual network interface will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10'
                                                type: string
                                              ports:
                                                description: List of ports to be forwarded to the virtual machine.
                                                items:
                                                  description: |-
                                                    Port represents a port to expose from the virtual machine.
                                                    Default protocol TCP.
                                                    The port field is mandatory
                                                  properties:
                                                    name:
                                                      description: |-
                                                        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                                        named port in a pod must have a unique name. Name for the port that can be
                                                        referred to by services.
                                                      type: string
                                                    port:
                                                      description: |-
                                                        Number of port to expose for the virtual machine.
                                                        This must be a valid port number, 0 < x < 65536.
                                                      format: int32
                                                      type: integer
                                                    protocol:
                                                      description: |-
                                                        Protocol for port. Must be UDP or TCP.
                                                        Defaults to "TCP".
                                                      type: string
                                                  required:
                                                    - port
                                                  type: object
                                                type: array
                                              slirp:
                                                description: |-
                                                  DeprecatedSlirp is an alias to the deprecated Slirp interface
                                                  Deprecated: Removed in v1.3
                                                type: object
                                              sriov:
                                                description: InterfaceSRIOV connects to a given network by passing-through an SR-IOV PCI device via vfio.
                                                type: object
                                              state:
                                                description: |-
                                                  State represents the requested operational state of the interface.
                                                  The (only) value supported is `absent`, expressing a request to remove the interface.
                                                type: string
                                              tag:
                                                description: If specified, the virtual network interface address and its tag will be provided to the guest via config drive
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          maxItems: 256
                                          type: array
                                        logSerialConsole:
                                          description: |-
                                            Whether to log the auto-attached default serial console or not.
                                            Serial console logs will be collect to a file and then streamed from a named `guest-console-log`.
                                            Not relevant if autoattachSerialConsole is disabled.
                                            Defaults to cluster wide setting on VirtualMachineOptions.
                                          type: boolean
                                        networkInterfaceMultiqueue:
                                          description: If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature for network devices. The number of queues created depends on additional factors of the VirtualMachineInstance, like the number of guest CPUs.
                                          type: boolean
                                        rng:
                                          description: Whether to have random number generator from host
                                          type: object
                                        sound:
                                          description: Whether to emulate a sound device.
                                          properties:
                                            model:
                                              description: |-
                                                We only support ich9 or ac97.
                                                If SoundDevice is not set: No sound card is emulated.
                                                If SoundDevice is set but Model is not: ich9
                                              type: string
                                            name:
                                              description: User's defined name for this sound device
                                              type: string
                                          required:
                                            - name
                                          type: object
                                        tpm:
                                          description: Whether to emulate a TPM device.
                                          properties:
                                            persistent:
                                              description: |-
                                                Persistent indicates the state of the TPM device should be kept accross reboots
                                                Defaults to false
                                              type: boolean
                                          type: object
                                        useVirtioTransitional:
                                          description: |-
                                            Fall back to legacy virtio 0.9 support if virtio bus is selected on devices.
                                            This is helpful for old machines like CentOS6 or RHEL6 which
                                            do not understand virtio_non_transitional (virtio 1.0).
                                          type: boolean
                                        watchdog:
                                          description: Watchdog describes a watchdog device which can be added to the vmi.
                                          properties:
                                            i6300esb:
                                              description: i6300esb watchdog device.
                                              properties:
                                                action:
                                                  description: |-
                                                    The action to take. Valid values are poweroff, reset, shutdown.
                                                    Defaults to reset.
                                                  type: string
                                              type: object
                                            name:
                                              description: Name of the watchdog.
                                              type: string
                                          required:
                                            - name
                                          type: object
                                      type: object
                                    features:
                                      description: Features like acpi, apic, hyperv, smm.
                                      properties:
                                        acpi:
                                          description: |-
                                            ACPI enables/disables ACPI inside the guest.
                                            Defaults to enabled.
                                          properties:
                                            enabled:
                                              description: |-
                                                Enabled determines if the feature should be enabled or disabled on the guest.
                                                Defaults to true.
                                              type: boolean
                                          type: object
                                        apic:
                                          description: Defaults to the machine type setting.
                                          properties:
                                            enabled:
                                              description: |-
                                                Enabled determines if the feature should be enabled or disabled on the guest.
                                                Defaults to true.
                                              type: boolean
                                            endOfInterrupt:
                                              description: |-
                                                EndOfInterrupt enables the end of interrupt notification in the guest.
                                                Defaults to false.
                                              type: boolean
                                          type: object
                                        hyperv:
                                          description: Defaults to the machine type setting.
                                          properties:
                                            evmcs:
                                              description: |-
                                                EVMCS Speeds up L2 vmexits, but disables other virtualization features. Requires vapic.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            frequencies:
                                              description: |-
                                                Frequencies improves the TSC clock source handling for Hyper-V on KVM.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            ipi:
                                              description: |-
                                                IPI improves performances in overcommited environments. Requires vpindex.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            reenlightenment:
                                              description: |-
                                                Reenlightenment enables the notifications on TSC frequency changes.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            relaxed:
                                              description: |-
                                                Relaxed instructs the guest OS to disable watchdog timeouts.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            reset:
                                              description: |-
                                                Reset enables Hyperv reboot/reset for the vmi. Requires synic.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            runtime:
                                              description: |-
                                                Runtime improves the time accounting to improve scheduling in the guest.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            spinlocks:
                                              description: Spinlocks allows to configure the spinlock retry attempts.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                                spinlocks:
                                                  description: |-
                                                    Retries indicates the number of retries.
                                                    Must be a value greater or equal 4096.
                                                    Defaults to 4096.
                                                  format: int32
                                                  type: integer
                                              type: object
                                            synic:
                                              description: |-
                                                SyNIC enables the Synthetic Interrupt Controller.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            synictimer:
                                              description: |-
                                                SyNICTimer enables Synthetic Interrupt Controller Timers, reducing CPU load.
                                                Defaults to the machine type setting.
                                              properties:
                                                direct:
                                                  description: Represents if a feature is enabled or disabled.
                                                  properties:
                                                    enabled:
                                                      description: |-
                                                        Enabled determines if the feature should be enabled or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                enabled:
                                                  type: boolean
                                              type: object
                                            tlbflush:
                                              description: |-
                                                TLBFlush improves performances in overcommited environments. Requires vpindex.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            vapic:
                                              description: |-
                                                VAPIC improves the paravirtualized handling of interrupts.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                            vendorid:
                                              description: |-
                                                VendorID allows setting the hypervisor vendor id.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                                vendorid:
                                                  description: |-
                                                    VendorID sets the hypervisor vendor id, visible to the vmi.
                                                    String up to twelve characters.
                                                  type: string
                                              type: object
                                            vpindex:
                                              description: |-
                                                VPIndex enables the Virtual Processor Index to help windows identifying virtual processors.
                                                Defaults to the machine type setting.
                                              properties:
                                                enabled:
                                                  description: |-
                                                    Enabled determines if the feature should be enabled or disabled on the guest.
                                                    Defaults to true.
                                                  type: boolean
                                              type: object
                                          type: object
                                        hypervPassthrough:
                                          description: |-
                                            This enables all supported hyperv flags automatically.
                                            Bear in mind that if this enabled hyperV features cannot
                                            be enabled explicitly. In addition, a Virtual Machine
                                            using it will be non-migratable.
                                          properties:
                                            enabled:
                                              type: boolean
                                          type: object
                                        kvm:
                                          description: Configure how KVM presence is exposed to the guest.
                                          properties:
                                            hidden:
                                              description: |-
                                                Hide the KVM hypervisor from standard MSR based discovery.
                                                Defaults to false
                                              type: boolean
                                          type: object
                                        pvspinlock:
                                          description: |-
                                            Notify the guest that the host supports paravirtual spinlocks.
                                            For older kernels this feature should be explicitly disabled.
                                          properties:
                                            enabled:
                                              description: |-
                                                Enabled determines if the feature should be enabled or disabled on the guest.
                                                Defaults to true.
                                              type: boolean
                                          type: object
                                        smm:
                                          description: |-
                                            SMM enables/disables System Management Mode.
                                            TSEG not yet implemented.
                                          properties:
                                            enabled:
                                              description: |-
                                                Enabled determines if the feature should be enabled or disabled on the guest.
                                                Defaults to true.
                                              type: boolean
                                          type: object
                                      type: object
                                    firmware:
                                      description: Firmware.
                                      properties:
                                        acpi:
                                          description: Information that can be set in the ACPI table
                                          properties:
                                            slicNameRef:
                                              description: |-
                                                SlicNameRef should match the volume name of a secret object. The data in the secret should
                                                be a binary blob that follows the ACPI SLIC standard, see:
                                                https://learn.microsoft.com/en-us/previous-versions/windows/hardware/design/dn653305(v=vs.85)
                                              type: string
                                          type: object
                                        bootloader:
                                          description: Settings to control the bootloader that is used.
                                          properties:
                                            bios:
                                              description: If set (default), BIOS will be used.
                                              properties:
                                                useSerial:
                                                  description: If set, the BIOS output will be transmitted over serial
                                                  type: boolean
                                              type: object
                                            efi:
                                              description: If set, EFI will be used instead of BIOS.
                                              properties:
                                                persistent:
                                                  description: |-
                                                    If set to true, Persistent will persist the EFI NVRAM across reboots.
                                                    Defaults to false
                                                  type: boolean
                                                secureBoot:
                                                  description: |-
                                                    If set, SecureBoot will be enabled and the OVMF roms will be swapped for
                                                    SecureBoot-enabled ones.
                                                    Requires SMM to be enabled.
                                                    Defaults to true
                                                  type: boolean
                                              type: object
                                          type: object
                                        kernelBoot:
                                          description: Settings to set the kernel for booting.
                                          properties:
                                            container:
                                              description: Container defines the container that containes kernel artifacts
                                              properties:
                                                image:
                                                  description: Image that contains initrd / kernel files.
                                                  type: string
                                                imagePullPolicy:
                                                  description: |-
                                                    Image pull policy.
                                                    One of Always, Never, IfNotPresent.
                                                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                                    Cannot be updated.
                                                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                                  type: string
                                                imagePullSecret:
                                                  description: ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.
                                                  type: string
                                                initrdPath:
                                                  description: the fully-qualified path to the ramdisk image in the host OS
                                                  type: string
                                                kernelPath:
                                                  description: The fully-qualified path to the kernel image in the host OS
                                                  type: string
                                              required:
                                                - image
                                              type: object
                                            kernelArgs:
                                              description: Arguments to be passed to the kernel at boot time
                                              type: string
                                          type: object
                                        serial:
                                          description: The system-serial-number in SMBIOS
                                          type: string
                                        uuid:
                                          description: |-
                                            UUID reported by the vmi bios.
                                            Defaults to a random generated uid.
                                          type: string
                                      type: object
                                    ioThreadsPolicy:
                                      description: |-
                                        Controls whether or not disks will share IOThreads.
                                        Omitting IOThreadsPolicy disables use of IOThreads.
                                        One of: shared, auto
                                      type: string
                                    launchSecurity:
                                      description: Launch Security setting of the vmi.
                                      properties:
                                        sev:
                                          description: AMD Secure Encrypted Virtualization (SEV).
                                          properties:
                                            attestation:
                                              description: If specified, run the attestation process for a vmi.
                                              type: object
                                            dhCert:
                                              description: Base64 encoded guest owner's Diffie-Hellman key.
                                              type: string
                                            policy:
                                              description: |-
                                                Guest policy flags as defined in AMD SEV API specification.
                                                Note: due to security reasons it is not allowed to enable guest debugging. Therefore NoDebug flag is not exposed to users and is always true.
                                              properties:
                                                encryptedState:
                                                  description: |-
                                                    SEV-ES is required.
                                                    Defaults to false.
                                                  type: boolean
                                              type: object
                                            session:
                                              description: Base64 encoded session blob.
                                              type: string
                                          type: object
                                      type: object
                                    machine:
                                      description: Machine type.
                                      properties:
                                        type:
                                          description: QEMU machine type is the actual chipset of the VirtualMachineInstance.
                                          type: string
                                      type: object
                                    memory:
                                      description: Memory allow specifying the VMI memory features.
                                      properties:
                                        guest:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Guest allows to specifying the amount of memory which is visible inside the Guest OS.
                                            The Guest must lie between Requests and Limits from the resources section.
                                            Defaults to the requested memory in the resources section if not specified.
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        hugepages:
                                          description: Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.
                                          properties:
                                            pageSize:
                                              description: PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
                                              type: string
                                          type: object
                                        maxGuest:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            MaxGuest allows to specify the maximum amount of memory which is visible inside the Guest OS.
                                            The delta between MaxGuest and Guest is the amount of memory that can be hot(un)plugged.
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                      type: object
                                    resources:
                                      description: Resources describes the Compute Resources required by this vmi.
                                      properties:
                                        limits:
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Limits describes the maximum amount of compute resources allowed.
                                            Valid resource keys are "memory" and "cpu".
                                          type: object
                                        overcommitGuestOverhead:
                                          description: |-
                                            Don't ask the scheduler to take the guest-management overhead into account. Instead
                                            put the overhead only into the container's memory limit. This can lead to crashes if
                                            all memory is in use on a node. Defaults to false.
                                          type: boolean
                                        requests:
                                          additionalProperties:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          description: |-
                                            Requests is a description of the initial vmi resources.
                                            Valid resource keys are "memory" and "cpu".
                                          type: object
                                      type: object
                                  required:
                                    - devices
                                  type: object
                                evictionStrategy:
                                  description: |-
                                    EvictionStrategy describes the strategy to follow when a node drain occurs.
                                    The possible options are:
                                    - "None": No action will be taken, according to the specified 'RunStrategy' the VirtualMachine will be restarted or shutdown.
                                    - "LiveMigrate": the VirtualMachineInstance will be migrated instead of being shutdown.
                                    - "LiveMigrateIfPossible": the same as "LiveMigrate" but only if the VirtualMachine is Live-Migratable, otherwise it will behave as "None".
                                    - "External": the VirtualMachineInstance will be protected by a PDB and `vmi.Status.EvacuationNodeName` will be set on eviction. This is mainly useful for cluster-api-provider-kubevirt (capk) which needs a way for VMI's to be blocked from eviction, yet signal capk that eviction has been called on the VMI so the capk controller can handle tearing the VMI down. Details can be found in the commit description https://github.com/kubevirt/kubevirt/commit/c1d77face705c8b126696bac9a3ee3825f27f1fa.
                                  type: string
                                hostname:
                                  description: |-
                                    Specifies the hostname of the vmi
                                    If not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is configured properly.
                                  type: string
                                livenessProbe:
                                  description: |-
                                    Periodic probe of VirtualMachineInstance liveness.
                                    VirtualmachineInstances will be stopped if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: |-
                                        One and only one of the following should be specified.
                                        Exec specifies the action to take, it will be executed on the guest through the qemu-guest-agent.
                                        If the guest agent is not available, this probe will fail.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    guestAgentPing:
                                      description: GuestAgentPing contacts the qemu-guest-agent for availability checks.
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP server.
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: |-
                                        TCPSocket specifies an action involving a TCP port.
                                        TCP hooks not yet supported
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                        - port
                                      type: object
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        For exec probes the timeout fails the probe but does not terminate the command running on the guest.
                                        This means a blocking command can result in an increasing load on the guest.
                                        A small buffer will be added to the resulting workload exec probe to compensate for delays
                                        caused by the qemu guest exec mechanism.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                networks:
                                  description: List of networks that can be attached to a vm's virtual interface.
                                  items:
                                    description: Network represents a network type and a resource that should be connected to the vm.
                                    properties:
                                      multus:
                                        description: Represents the multus cni network.
                                        properties:
                                          default:
                                            description: |-
                                              Select the default network and add it to the
                                              multus-cni.io/default-network annotation.
                                            type: boolean
                                          networkName:
                                            description: |-
                                              References to a NetworkAttachmentDefinition CRD object. Format:
                                              <networkName>, <namespace>/<networkName>. If namespace is not
                                              specified, VMI namespace is assumed.
                                            type: string
                                        required:
                                          - networkName
                                        type: object
                                      name:
                                        description: |-
                                          Network name.
                                          Must be a DNS_LABEL and unique within the vm.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      pod:
                                        description: Represents the stock pod network interface.
                                        properties:
                                          vmIPv6NetworkCIDR:
                                            description: |-
                                              IPv6 CIDR for the vm network.
                                              Defaults to fd10:0:2::/120 if not specified.
                                            type: string
                                          vmNetworkCIDR:
                                            description: |-
                                              CIDR for vm network.
                                              Default 10.0.2.0/24 if not specified.
                                            type: string
                                        type: object
                                    required:
                                      - name
                                    type: object
                                  maxItems: 256
                                  type: array
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    NodeSelector is a selector which must be true for the vmi to fit on a node.
                                    Selector which must match a node's labels for the vmi to be scheduled on that node.
                                    More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                  type: object
                                priorityClassName:
                                  description: |-
                                    If specified, indicates the pod's priority.
                                    If not specified, the pod priority will be default or zero if there is no
                                    default.
                                  type: string
                                readinessProbe:
                                  description: |-
                                    Periodic probe of VirtualMachineInstance service readiness.
                                    VirtualmachineInstances will be removed from service endpoints if the probe fails.
                                    Cannot be updated.
                                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                  properties:
                                    exec:
                                      description: |-
                                        One and only one of the following should be specified.
                                        Exec specifies the action to take, it will be executed on the guest through the qemu-guest-agent.
                                        If the guest agent is not available, this probe will fail.
                                      properties:
                                        command:
                                          description: |-
                                            Command is the command line to execute inside the container, the working directory for the
                                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                            a shell, you need to explicitly call out to that shell.
                                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      type: object
                                    failureThreshold:
                                      description: |-
                                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                        Defaults to 3. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    guestAgentPing:
                                      description: GuestAgentPing contacts the qemu-guest-agent for availability checks.
                                      type: object
                                    httpGet:
                                      description: HTTPGet specifies the http request to perform.
                                      properties:
                                        host:
                                          description: |-
                                            Host name to connect to, defaults to the pod IP. You probably want to set
                                            "Host" in httpHeaders instead.
                                          type: string
                                        httpHeaders:
                                          description: Custom headers to set in the request. HTTP allows repeated headers.
                                          items:
                                            description: HTTPHeader describes a custom header to be used in HTTP probes
                                            properties:
                                              name:
                                                description: |-
                                                  The header field name.
                                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                type: string
                                              value:
                                                description: The header field value
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        path:
                                          description: Path to access on the HTTP server.
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Name or number of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                        scheme:
                                          description: |-
                                            Scheme to use for connecting to the host.
                                            Defaults to HTTP.
                                          type: string
                                      required:
                                        - port
                                      type: object
                                    initialDelaySeconds:
                                      description: |-
                                        Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                    periodSeconds:
                                      description: |-
                                        How often (in seconds) to perform the probe.
                                        Default to 10 seconds. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    successThreshold:
                                      description: |-
                                        Minimum consecutive successes for the probe to be considered successful after having failed.
                                        Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                                      format: int32
                                      type: integer
                                    tcpSocket:
                                      description: |-
                                        TCPSocket specifies an action involving a TCP port.
                                        TCP hooks not yet supported
                                      properties:
                                        host:
                                          description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                          type: string
                                        port:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: |-
                                            Number or name of the port to access on the container.
                                            Number must be in the range 1 to 65535.
                                            Name must be an IANA_SVC_NAME.
                                          x-kubernetes-int-or-string: true
                                      required:
                                        - port
                                      type: object
                                    timeoutSeconds:
                                      description: |-
                                        Number of seconds after which the probe times out.
                                        For exec probes the timeout fails the probe but does not terminate the command running on the guest.
                                        This means a blocking command can result in an increasing load on the guest.
                                        A small buffer will be added to the resulting workload exec probe to compensate for delays
                                        caused by the qemu guest exec mechanism.
                                        Defaults to 1 second. Minimum value is 1.
                                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                      format: int32
                                      type: integer
                                  type: object
                                schedulerName:
                                  description: |-
                                    If specified, the VMI will be dispatched by specified scheduler.
                                    If not specified, the VMI will be dispatched by default scheduler.
                                  type: string
                                startStrategy:
                                  description: StartStrategy can be set to "Paused" if Virtual Machine should be started in paused state.
                                  type: string
                                subdomain:
                                  description: |-
                                    If specified, the fully qualified vmi hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                                    If not specified, the vmi will not have a domainname at all. The DNS entry will resolve to the vmi,
                                    no matter if the vmi itself can pick up a hostname.
                                  type: string
                                terminationGracePeriodSeconds:
                                  description: Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
                                  format: int64
                                  type: integer
                                tolerations:
                                  description: If toleration is specified, obey all the toleration rules.
                                  items:
                                    description: |-
                                      The pod this Toleration is attached to tolerates any taint that matches
                                      the triple <key,value,effect> using the matching operator <operator>.
                                    properties:
                                      effect:
                                        description: |-
                                          Effect indicates the taint effect to match. Empty means match all taint effects.
                                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                        type: string
                                      key:
                                        description: |-
                                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                        type: string
                                      operator:
                                        description: |-
                                          Operator represents a key's relationship to the value.
                                          Valid operators are Exists and Equal. Defaults to Equal.
                                          Exists is equivalent to wildcard for value, so that a pod can
                                          tolerate all taints of a particular category.
                                        type: string
                                      tolerationSeconds:
                                        description: |-
                                          TolerationSeconds represents the period of time the toleration (which must be
                                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                                          negative values will be treated as 0 (evict immediately) by the system.
                                        format: int64
                                        type: integer
                                      value:
                                        description: |-
                                          Value is the taint value the toleration matches to.
                                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                                        type: string
                                    type: object
                                  type: array
                                topologySpreadConstraints:
                                  description: |-
                                    TopologySpreadConstraints describes how a group of VMIs will be spread across a given topology
                                    domains. K8s scheduler will schedule VMI pods in a way which abides by the constraints.
                                  items:
                                    description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                                    properties:
                                      labelSelector:
                                        description: |-
                                          LabelSelector is used to find matching pods.
                                          Pods that match this label selector are counted to determine the number of pods
                                          in their corresponding topology domain.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: |-
                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: |-
                                                    operator represents a key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: |-
                                                    values is an array of string values. If the operator is In or NotIn,
                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                    the values array must be empty. This array is replaced during a strategic
                                                    merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                            x-kubernetes-list-type: atomic
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: |-
                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      matchLabelKeys:
                                        description: |-
                                          MatchLabelKeys is a set of pod label keys to select the pods over which
                                          spreading will be calculated. The keys are used to lookup values from the
                                          incoming pod labels, those key-value labels are ANDed with labelSelector
                                          to select the group of existing pods over which spreading will be calculated
                                          for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                          MatchLabelKeys cannot be set when LabelSelector isn't set.
                                          Keys that don't exist in the incoming pod labels will
                                          be ignored. A null or empty list means only match against labelSelector.

                                          This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      maxSkew:
                                        description: |-
                                          MaxSkew describes the degree to which pods may be unevenly distributed.
                                          When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                          between the number of matching pods in the target topology and the global minimum.
                                          The global minimum is the minimum number of matching pods in an eligible domain
                                          or zero if the number of eligible domains is less than MinDomains.
                                          For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                          labelSelector spread as 2/2/1:
                                          In this case, the global minimum is 1.
                                          | zone1 | zone2 | zone3 |
                                          |  P P  |  P P  |   P   |
                                          - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                          scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                          violate MaxSkew(1).
                                          - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                          When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                          to topologies that satisfy it.
                                          It's a required field. Default value is 1 and 0 is not allowed.
                                        format: int32
                                        type: integer
                                      minDomains:
                                        description: |-
                                          MinDomains indicates a minimum number of eligible domains.
                                          When the number of eligible domains with matching topology keys is less than minDomains,
                                          Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                          And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                          this value has no effect on scheduling.
                                          As a result, when the number of eligible domains is less than minDomains,
                                          scheduler won't schedule more than maxSkew Pods to those domains.
                                          If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                          Valid values are integers greater than 0.
                                          When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                          For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                          labelSelector spread as 2/2/2:
                                          | zone1 | zone2 | zone3 |
                                          |  P P  |  P P  |  P P  |
                                          The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                          In this situation, new pod with the same labelSelector cannot be scheduled,
                                          because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                          it will violate MaxSkew.
                                        format: int32
                                        type: integer
                                      nodeAffinityPolicy:
                                        description: |-
                                          NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                          when calculating pod topology spread skew. Options are:
                                          - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                          - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                          If this value is nil, the behavior is equivalent to the Honor policy.
                                          This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                        type: string
                                      nodeTaintsPolicy:
                                        description: |-
                                          NodeTaintsPolicy indicates how we will treat node taints when calculating
                                          pod topology spread skew. Options are:
                                          - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                          has a toleration, are included.
                                          - Ignore: node taints are ignored. All nodes are included.

                                          If this value is nil, the behavior is equivalent to the Ignore policy.
                                          This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                        type: string
                                      topologyKey:
                                        description: |-
                                          TopologyKey is the key of node labels. Nodes that have a label with this key
                                          and identical values are considered to be in the same topology.
                                          We consider each <key, value> as a "bucket", and try to put balanced number
                                          of pods into each bucket.
                                          We define a domain as a particular instance of a topology.
                                          Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                          nodeAffinityPolicy and nodeTaintsPolicy.
                                          e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                          And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                          It's a required field.
                                        type: string
                                      whenUnsatisfiable:
                                        description: |-
                                          WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                          the spread constraint.
                                          - DoNotSchedule (default) tells the scheduler not to schedule it.
                                          - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                            but giving higher precedence to topologies that would help reduce the
                                            skew.
                                          A constraint is considered "Unsatisfiable" for an incoming pod
                                          if and only if every possible node assignment for that pod would violate
                                          "MaxSkew" on some topology.
                                          For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                          labelSelector spread as 3/1/1:
                                          | zone1 | zone2 | zone3 |
                                          | P P P |   P   |   P   |
                                          If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                          to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                          MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                          won't make it *more* imbalanced.
                                          It's a required field.
                                        type: string
                                    required:
                                      - maxSkew
                                      - topologyKey
                                      - whenUnsatisfiable
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - topologyKey
                                    - whenUnsatisfiable
                                  x-kubernetes-list-type: map
                                volumes:
                                  description: List of volumes that can be mounted by disks belonging to the vmi.
                                  items:
                                    description: Volume represents a named volume in a vmi.
                                    properties:
                                      cloudInitConfigDrive:
                                        description: |-
                                          CloudInitConfigDrive represents a cloud-init Config Drive user-data source.
                                          The Config Drive data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest.
                                          More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html
                                        properties:
                                          networkData:
                                            description: NetworkData contains config drive inline cloud-init networkdata.
                                            type: string
                                          networkDataBase64:
                                            description: NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.
                                            type: string
                                          networkDataSecretRef:
                                            description: NetworkDataSecretRef references a k8s secret that contains config drive networkdata.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretRef:
                                            description: UserDataSecretRef references a k8s secret that contains config drive userdata.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          userData:
                                            description: UserData contains config drive inline cloud-init userdata.
                                            type: string
                                          userDataBase64:
                                            description: UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.
                                            type: string
                                        type: object
                                      cloudInitNoCloud:
                                        description: |-
                                          CloudInitNoCloud represents a cloud-init NoCloud user-data source.
                                          The NoCloud data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest.
                                          More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html
                                        properties:
                                          networkData:
                                            description: NetworkData contains NoCloud inline cloud-init networkdata.
                                            type: string
                                          networkDataBase64:
                                            description: NetworkDataBase64 contains NoCloud cloud-init networkdata as a base64 encoded string.
                                            type: string
                                          networkDataSecretRef:
                                            description: NetworkDataSecretRef references a k8s secret that contains NoCloud networkdata.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secretRef:
                                            description: UserDataSecretRef references a k8s secret that contains NoCloud userdata.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          userData:
                                            description: UserData contains NoCloud inline cloud-init userdata.
                                            type: string
                                          userDataBase64:
                                            description: UserDataBase64 contains NoCloud cloud-init userdata as a base64 encoded string.
                                            type: string
                                        type: object
                                      configMap:
                                        description: |-
                                          ConfigMapSource represents a reference to a ConfigMap in the same namespace.
                                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/
                                        properties:
                                          name:
                                            default: ""
                                            description: |-
                                              Name of the referent.
                                              This field is effectively required, but due to backwards compatibility is
                                              allowed to be empty. Instances of this type with an empty value here are
                                              almost certainly wrong.
                                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                            type: string
                                          optional:
                                            description: Specify whether the ConfigMap or it's keys must be defined
                                            type: boolean
                                          volumeLabel:
                                            description: |-
                                              The volume label of the resulting disk inside the VMI.
                                              Different bootstrapping mechanisms require different values.
                                              Typical values are "cidata" (cloud-init), "config-2" (cloud-init) or "OEMDRV" (kickstart).
                                            type: string
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      containerDisk:
                                        description: |-
                                          ContainerDisk references a docker image, embedding a qcow or raw disk.
                                          More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html
                                        properties:
                                          image:
                                            description: Image is the name of the image with the embedded disk.
                                            type: string
                                          imagePullPolicy:
                                            description: |-
                                              Image pull policy.
                                              One of Always, Never, IfNotPresent.
                                              Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                              Cannot be updated.
                                              More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                            type: string
                                          imagePullSecret:
                                            description: ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.
                                            type: string
                                          path:
                                            description: Path defines the path to disk file in the container
                                            type: string
                                        required:
                                          - image
                                        type: object
                                      dataVolume:
                                        description: |-
                                          DataVolume represents the dynamic creation a PVC for this volume as well as
                                          the process of populating that PVC with a disk image.
                                        properties:
                                          hotpluggable:
                                            description: Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.
                                            type: boolean
                                          name:
                                            description: |-
                                              Name of both the DataVolume and the PVC in the same namespace.
                                              After PVC population the DataVolume is garbage collected by default.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      downwardAPI:
                                        description: DownwardAPI represents downward API about the pod that should populate this volume
                                        properties:
                                          fields:
                                            description: Fields is a list of downward API volume file
                                            items:
                                              description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                              properties:
                                                fieldRef:
                                                  description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                                  properties:
                                                    apiVersion:
                                                      description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                      type: string
                                                    fieldPath:
                                                      description: Path of the field to select in the specified API version.
                                                      type: string
                                                  required:
                                                    - fieldPath
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                                mode:
                                                  description: |-
                                                    Optional: mode bits used to set permissions on this file, must be an octal value
                                                    between 0000 and 0777 or a decimal value between 0 and 511.
                                                    YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                    If not specified, the volume defaultMode will be used.
                                                    This might be in conflict with other options that affect the file
                                                    mode, like fsGroup, and the result can be other mode bits set.
                                                  format: int32
                                                  type: integer
                                                path:
                                                  description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                  type: string
                                                resourceFieldRef:
                                                  description: |-
                                                    Selects a resource of the container: only resources limits and requests
                                                    (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                  properties:
                                                    containerName:
                                                      description: 'Container name: required for volumes, optional for env vars'
                                                      type: string
                                                    divisor:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      description: Specifies the output format of the exposed resources, defaults to "1"
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    resource:
                                                      description: 'Required: resource to select'
                                                      type: string
                                                  required:
                                                    - resource
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              required:
                                                - path
                                              type: object
                                            type: array
                                          volumeLabel:
                                            description: |-
                                              The volume label of the resulting disk inside the VMI.
                                              Different bootstrapping mechanisms require different values.
                                              Typical values are "cidata" (cloud-init), "config-2" (cloud-init) or "OEMDRV" (kickstart).
                                            type: string
                                        type: object
                                      downwardMetrics:
                                        description: |-
                                          DownwardMetrics adds a very small disk to VMIs which contains a limited view of host and guest
                                          metrics. The disk content is compatible with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.
                                        type: object
                                      emptyDisk:
                                        description: |-
                                          EmptyDisk represents a temporary disk which shares the vmis lifecycle.
                                          More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html
                                        properties:
                                          capacity:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            description: Capacity of the sparse disk.
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                        required:
                                          - capacity
                                        type: object
                                      ephemeral:
                                        description: Ephemeral is a special volume source that "wraps" specified source and provides copy-on-write image on top of it.
                                        properties:
                                          persistentVolumeClaim:
                                            description: |-
                                              PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                              Directly attached to the vmi via qemu.
                                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                            properties:
                                              claimName:
                                                description: |-
                                                  claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                                type: string
                                              readOnly:
                                                description: |-
                                                  readOnly Will force the ReadOnly setting in VolumeMounts.
                                                  Default false.
                                                type: boolean
                                            required:
                                              - claimName
                                            type: object
                                        type: object
                                      hostDisk:
                                        description: HostDisk represents a disk created on the cluster level
                                        properties:
                                          capacity:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            description: Capacity of the sparse disk
                                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                            x-kubernetes-int-or-string: true
                                          path:
                                            description: The path to HostDisk image located on the cluster
                                            type: string
                                          shared:
                                            description: Shared indicate whether the path is shared between nodes
                                            type: boolean
                                          type:
                                            description: |-
                                              Contains information if disk.img exists or should be created
                                              allowed options are 'Disk' and 'DiskOrCreate'
                                            type: string
                                        required:
                                          - path
                                          - type
                                        type: object
                                      memoryDump:
                                        description: MemoryDump is attached to the virt launcher and is populated with a memory dump of the vmi
                                        properties:
                                          claimName:
                                            description: |-
                                              claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                            type: string
                                          hotpluggable:
                                            description: Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.
                                            type: boolean
                                          readOnly:
                                            description: |-
                                              readOnly Will force the ReadOnly setting in VolumeMounts.
                                              Default false.
                                            type: boolean
                                        required:
                                          - claimName
                                        type: object
                                      name:
                                        description: |-
                                          Volume's name.
                                          Must be a DNS_LABEL and unique within the vmi.
                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        type: string
                                      persistentVolumeClaim:
                                        description: |-
                                          PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                          Directly attached to the vmi via qemu.
                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                        properties:
                                          claimName:
                                            description: |-
                                              claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                              More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                            type: string
                                          hotpluggable:
                                            description: Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.
                                            type: boolean
                                          readOnly:
                                            description: |-
                                              readOnly Will force the ReadOnly setting in VolumeMounts.
                                              Default false.
                                            type: boolean
                                        required:
                                          - claimName
                                        type: object
                                      secret:
                                        description: |-
                                          SecretVolumeSource represents a reference to a secret data in the same namespace.
                                          More info: https://kubernetes.io/docs/concepts/configuration/secret/
                                        properties:
                                          optional:
                                            description: Specify whether the Secret or it's keys must be defined
                                            type: boolean
                                          secretName:
                                            description: |-
                                              Name of the secret in the pod's namespace to use.
                                              More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                            type: string
                                          volumeLabel:
                                            description: |-
                                              The volume label of the resulting disk inside the VMI.
                                              Different bootstrapping mechanisms require different values.
                                              Typical values are "cidata" (cloud-init), "config-2" (cloud-init) or "OEMDRV" (kickstart).
                                            type: string
                                        type: object
                                      serviceAccount:
                                        description: |-
                                          ServiceAccountVolumeSource represents a reference to a service account.
                                          There can only be one volume of this type!
                                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                                        properties:
                                          serviceAccountName:
                                            description: |-
                                              Name of the service account in the pod's namespace to use.
                                              More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                                            type: string
                                        type: object
                                      sysprep:
                                        description: Represents a Sysprep volume source.
                                        properties:
                                          configMap:
                                            description: ConfigMap references a ConfigMap that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                          secret:
                                            description: Secret references a k8s Secret that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.
                                            properties:
                                              name:
                                                default: ""
                                                description: |-
                                                  Name of the referent.
                                                  This field is effectively required, but due to backwards compatibility is
                                                  allowed to be empty. Instances of this type with an empty value here are
                                                  almost certainly wrong.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                            type: object
                                            x-kubernetes-map-type: atomic
                                        type: object
                                    required:
                                      - name
                                    type: object
                                  maxItems: 256
                                  type: array
                              required:
                                - domain
                              type: object
                          type: object
                        updateVolumesStrategy:
                          description: UpdateVolumesStrategy is the strategy to apply on volumes updates
                          type: string
                      required:
                        - template
                      type: object
                  type: object
              type: object
            status:
              description: KubevirtMachineStatus defines the observed state of KubevirtMachine.
              properties:
                addresses:
                  description: Addresses contains the associated addresses for the machine.
                  items:
                    description: MachineAddress contains information for the node's address.
                    properties:
                      address:
                        description: address is the machine address.
                        maxLength: 256
                        minLength: 1
                        type: string
                      type:
                        description: type is the machine address type, one of Hostname, ExternalIP, InternalIP, ExternalDNS or InternalDNS.
                        enum:
                          - Hostname
                          - ExternalIP
                          - InternalIP
                          - ExternalDNS
                          - InternalDNS
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the KubevirtMachine.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                loadBalancerConfigured:
                  description: |-
                    LoadBalancerConfigured denotes that the machine has been
                    added to the load balancer
                  type: boolean
                nodeupdated:
                  description: NodeUpdated denotes that the ProviderID is updated on Node of this KubevirtMachine
                  type: boolean
                ready:
                  default: false
                  description: Ready denotes that the machine is ready
                  type: boolean
              required:
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: kubevirtmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: KubevirtMachineTemplate
    listKind: KubevirtMachineTemplateList
    plural: kubevirtmachinetemplates
    singular: kubevirtmachinetemplate
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: KubevirtMachineTemplate is the Schema for the kubevirtmachinetemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: KubevirtMachineTemplateSpec defines the desired state of KubevirtMachineTemplate.
              properties:
                template:
                  description: KubevirtMachineTemplateResource describes the data needed to create a KubevirtMachine from a template.
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior of the machine.
                      properties:
                        infraClusterSecretRef:
                          description: |-
                            InfraClusterSecretRef is a reference to a secret with a kubeconfig for external cluster used for infra.
                            When nil, this defaults to the value present in the KubevirtCluster object's spec associated with this machine.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: |-
                                If referring to a piece of an object instead of an entire object, this string
                                should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                For example, if the object reference is to a container within a pod, this would take on a value like:
                                "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                the event) or if no container name is specified "spec.containers[2]" (container with
                                index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                referencing a part of an object.
                              type: string
                            kind:
                              description: |-
                                Kind of the referent.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                              type: string
                            name:
                              description: |-
                                Name of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            namespace:
                              description: |-
                                Namespace of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                              type: string
                            resourceVersion:
                              description: |-
                                Specific resourceVersion to which this reference is made, if any.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                              type: string
                            uid:
                              description: |-
                                UID of the referent.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        providerID:
                          description: ProviderID TBD what to use for Kubevirt
                          type: string
                        virtualMachineBootstrapCheck:
                          description: BootstrapCheckSpec defines how the CAPK controller is checking CAPI Sentinel file inside the VM.
                          properties:
                            checkStrategy:
                              default: ssh
                              description: |-
                                CheckStrategy describes how CAPK controller will validate a successful CAPI bootstrap.
                                Following specified method, CAPK will try to retrieve the state of the CAPI Sentinel file from the VM.
                                Possible values are: "none" or "ssh" (default is "ssh") and this value is validated by apiserver.
                              enum:
                                - none
                                - ssh
                              type: string
                          type: object
                        virtualMachineTemplate:
                          description: VirtualMachineTemplateSpec defines the desired state of the kubevirt VM.
                          properties:
                            metadata:
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description: VirtualMachineSpec contains the VirtualMachine specification.
                              properties:
                                dataVolumeTemplates:
                                  description: |-
                                    dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference.
                                    DataVolumes in this list are dynamically created for the VirtualMachine and are tied to the VirtualMachine's life-cycle.
                                  items:
                                    nullable: true
                                    properties:
                                      apiVersion:
                                        description: |-
                                          APIVersion defines the versioned schema of this representation of an object.
                                          Servers should convert recognized schemas to the latest internal value, and
                                          may reject unrecognized values.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
                                        type: string
                                      kind:
                                        description: |-
                                          Kind is a string value representing the REST resource this object represents.
                                          Servers may infer this from the endpoint the client submits requests to.
                                          Cannot be updated.
                                          In CamelCase.
                                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                        type: string
                                      metadata:
                                        nullable: true
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      spec:
                                        description: DataVolumeSpec contains the DataVolume specification.
                                        properties:
                                          checkpoints:
                                            description: Checkpoints is a list of DataVolumeCheckpoints, representing stages in a multistage import.
                                            items:
                                              description: DataVolumeCheckpoint defines a stage in a warm migration.
                                              properties:
                                                current:
                                                  description: Current is the identifier of the snapshot created for this checkpoint.
                                                  type: string
                                                previous:
                                                  description: Previous is the identifier of the snapshot from the previous checkpoint.
                                                  type: string
                                              required:
                                                - current
                                                - previous
                                              type: object
                                            type: array
                                          contentType:
                                            description: 'DataVolumeContentType options: "kubevirt", "archive"'
                                            enum:
                                              - kubevirt
                                              - archive
                                            type: string
                                          finalCheckpoint:
                                            description: FinalCheckpoint indicates whether the current DataVolumeCheckpoint is the final checkpoint.
                                            type: boolean
                                          preallocation:
                                            description: Preallocation controls whether storage for DataVolumes should be allocated in advance.
                                            type: boolean
                                          priorityClassName:
                                            description: PriorityClassName for Importer, Cloner and Uploader pod
                                            type: string
                                          pvc:
                                            description: PVC is the PVC specification
                                            properties:
                                              accessModes:
                                                description: |-
                                                  accessModes contains the desired access modes the volume should have.
                                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              dataSource:
                                                description: |-
                                                  dataSource field can be used to specify either:
                                                  * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                                                  * An existing PVC (PersistentVolumeClaim)
                                                  If the provisioner or an external controller can support the specified data source,
                                                  it will create a new volume based on the contents of the specified data source.
                                                  When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
                                                  and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
                                                  If the namespace is specified, then dataSourceRef will not be copied to dataSource.
                                                properties:
                                                  apiGroup:
                                                    description: |-
                                                      APIGroup is the group for the resource being referenced.
                                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                                      For any other third-party types, APIGroup is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name of resource being referenced
                                                    type: string
                                                required:
                                                  - kind
                                                  - name
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              dataSourceRef:
                                                description: |-
                                                  dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
                                                  volume is desired. This may be any object from a non-empty API group (non
                                                  core object) or a PersistentVolumeClaim object.
                                                  When this field is specified, volume binding will only succeed if the type of
                                                  the specified object matches some installed volume populator or dynamic
                                                  provisioner.
                                                  This field will replace the functionality of the dataSource field and as such
                                                  if both fields are non-empty, they must have the same value. For backwards
                                                  compatibility, when namespace isn't specified in dataSourceRef,
                                                  both fields (dataSource and dataSourceRef) will be set to the same
                                                  value automatically if one of them is empty and the other is non-empty.
                                                  When namespace is specified in dataSourceRef,
                                                  dataSource isn't set to the same value and must be empty.
                                                  There are three important differences between dataSource and dataSourceRef:
                                                  * While dataSource only allows two specific types of objects, dataSourceRef
                                                    allows any non-core object, as well as PersistentVolumeClaim objects.
                                                  * While dataSource ignores disallowed values (dropping them), dataSourceRef
                                                    preserves all values, and generates an error if a disallowed value is
                                                    specified.
                                                  * While dataSource only allows local objects, dataSourceRef allows objects
                                                    in any namespaces.
                                                  (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                                  (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                properties:
                                                  apiGroup:
                                                    description: |-
                                                      APIGroup is the group for the resource being referenced.
                                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                                      For any other third-party types, APIGroup is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name of resource being referenced
                                                    type: string
                                                  namespace:
                                                    description: |-
                                                      Namespace is the namespace of resource being referenced
                                                      Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                      (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                    type: string
                                                required:
                                                  - kind
                                                  - name
                                                type: object
                                              resources:
                                                description: |-
                                                  resources represents the minimum resources the volume should have.
                                                  If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
                                                  that are lower than previous value but must still be higher than capacity recorded in the
                                                  status field of the claim.
                                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                                properties:
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: |-
                                                      Limits describes the maximum amount of compute resources allowed.
                                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: |-
                                                      Requests describes the minimum amount of compute resources required.
                                                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                    type: object
                                                type: object
                                              selector:
                                                description: selector is a label query over volumes to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              storageClassName:
                                                description: |-
                                                  storageClassName is the name of the StorageClass required by the claim.
                                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                                type: string
                                              volumeAttributesClassName:
                                                description: |-
                                                  volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                                  If specified, the CSI driver will create or update the volume with the attributes defined
                                                  in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                                  it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                                  will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                                  If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                                  will be set by the persistentvolume controller if it exists.
                                                  If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                                  set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                                  exists.
                                                  More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
                                                  (Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).
                                                type: string
                                              volumeMode:
                                                description: |-
                                                  volumeMode defines what type of volume is required by the claim.
                                                  Value of Filesystem is implied when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: volumeName is the binding reference to the PersistentVolume backing this claim.
                                                type: string
                                            type: object
                                          source:
                                            description: Source is the src of the data for the requested DataVolume
                                            properties:
                                              blank:
                                                description: DataVolumeBlankImage provides the parameters to create a new raw blank image for the PVC
                                                type: object
                                              gcs:
                                                description: DataVolumeSourceGCS provides the parameters to create a Data Volume from an GCS source
                                                properties:
                                                  secretRef:
                                                    description: SecretRef provides the secret reference needed to access the GCS source
                                                    type: string
                                                  url:
                                                    description: URL is the url of the GCS source
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              http:
                                                description: DataVolumeSourceHTTP can be either an http or https endpoint, with an optional basic auth user name and password, and an optional configmap containing additional CAs
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate
                                                    type: string
                                                  extraHeaders:
                                                    description: ExtraHeaders is a list of strings containing extra headers to include with HTTP transfer requests
                                                    items:
                                                      type: string
                                                    type: array
                                                  secretExtraHeaders:
                                                    description: SecretExtraHeaders is a list of Secret references, each containing an extra HTTP header that may include sensitive information
                                                    items:
                                                      type: string
                                                    type: array
                                                  secretRef:
                                                    description: SecretRef A Secret reference, the secret should contain accessKeyId (user name) base64 encoded, and secretKey (password) also base64 encoded
                                                    type: string
                                                  url:
                                                    description: URL is the URL of the http(s) endpoint
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              imageio:
                                                description: DataVolumeSourceImageIO provides the parameters to create a Data Volume from an imageio source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap provides a reference to the CA cert
                                                    type: string
                                                  diskId:
                                                    description: DiskID provides id of a disk to be imported
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides the secret reference needed to access the ovirt-engine
                                                    type: string
                                                  url:
                                                    description: URL is the URL of the ovirt-engine
                                                    type: string
                                                required:
                                                  - diskId
                                                  - url
                                                type: object
                                              pvc:
                                                description: DataVolumeSourcePVC provides the parameters to create a Data Volume from an existing PVC
                                                properties:
                                                  name:
                                                    description: The name of the source PVC
                                                    type: string
                                                  namespace:
                                                    description: The namespace of the source PVC
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              registry:
                                                description: DataVolumeSourceRegistry provides the parameters to create a Data Volume from an registry source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap provides a reference to the Registry certs
                                                    type: string
                                                  imageStream:
                                                    description: ImageStream is the name of image stream for import
                                                    type: string
                                                  pullMethod:
                                                    description: PullMethod can be either "pod" (default import), or "node" (node docker cache based import)
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides the secret reference needed to access the Registry source
                                                    type: string
                                                  url:
                                                    description: 'URL is the url of the registry source (starting with the scheme: docker, oci-archive)'
                                                    type: string
                                                type: object
                                              s3:
                                                description: DataVolumeSourceS3 provides the parameters to create a Data Volume from an S3 source
                                                properties:
                                                  certConfigMap:
                                                    description: CertConfigMap is a configmap reference, containing a Certificate Authority(CA) public key, and a base64 encoded pem certificate
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides the secret reference needed to access the S3 source
                                                    type: string
                                                  url:
                                                    description: URL is the url of the S3 source
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              snapshot:
                                                description: DataVolumeSourceSnapshot provides the parameters to create a Data Volume from an existing VolumeSnapshot
                                                properties:
                                                  name:
                                                    description: The name of the source VolumeSnapshot
                                                    type: string
                                                  namespace:
                                                    description: The namespace of the source VolumeSnapshot
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              upload:
                                                description: DataVolumeSourceUpload provides the parameters to create a Data Volume by uploading the source
                                                type: object
                                              vddk:
                                                description: DataVolumeSourceVDDK provides the parameters to create a Data Volume from a Vmware source
                                                properties:
                                                  backingFile:
                                                    description: BackingFile is the path to the virtual hard disk to migrate from vCenter/ESXi
                                                    type: string
                                                  initImageURL:
                                                    description: InitImageURL is an optional URL to an image containing an extracted VDDK library, overrides v2v-vmware config map
                                                    type: string
                                                  secretRef:
                                                    description: SecretRef provides a reference to a secret containing the username and password needed to access the vCenter or ESXi host
                                                    type: string
                                                  thumbprint:
                                                    description: Thumbprint is the certificate thumbprint of the vCenter or ESXi host
                                                    type: string
                                                  url:
                                                    description: URL is the URL of the vCenter or ESXi host with the VM to migrate
                                                    type: string
                                                  uuid:
                                                    description: UUID is the UUID of the virtual machine that the backing file is attached to in vCenter/ESXi
                                                    type: string
                                                type: object
                                            type: object
                                          sourceRef:
                                            description: SourceRef is an indirect reference to the source of data for the requested DataVolume
                                            properties:
                                              kind:
                                                description: The kind of the source reference, currently only "DataSource" is supported
                                                type: string
                                              name:
                                                description: The name of the source reference
                                                type: string
                                              namespace:
                                                description: The namespace of the source reference, defaults to the DataVolume namespace
                                                type: string
                                            required:
                                              - kind
                                              - name
                                            type: object
                                          storage:
                                            description: Storage is the requested storage specification
                                            properties:
                                              accessModes:
                                                description: |-
                                                  AccessModes contains the desired access modes the volume should have.
                                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                                items:
                                                  type: string
                                                type: array
                                              dataSource:
                                                description: |-
                                                  This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.
                                                  If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.
                                                properties:
                                                  apiGroup:
                                                    description: |-
                                                      APIGroup is the group for the resource being referenced.
                                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                                      For any other third-party types, APIGroup is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name of resource being referenced
                                                    type: string
                                                required:
                                                  - kind
                                                  - name
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              dataSourceRef:
                                                description: |-
                                                  Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner.
                                                  This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty.
                                                  There are two important differences between DataSource and DataSourceRef:
                                                  * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects.
                                                  * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified.
                                                  (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
                                                properties:
                                                  apiGroup:
                                                    description: |-
                                                      APIGroup is the group for the resource being referenced.
                                                      If APIGroup is not specified, the specified Kind must be in the core API group.
                                                      For any other third-party types, APIGroup is required.
                                                    type: string
                                                  kind:
                                                    description: Kind is the type of resource being referenced
                                                    type: string
                                                  name:
                                                    description: Name is the name of resource being referenced
                                                    type: string
                                                  namespace:
                                                    description: |-
                                                      Namespace is the namespace of resource being referenced
                                                      Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                                      (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                                    type: string
                                                required:
                                                  - kind
                                                  - name
                                                type: object
                                              resources:
                                                description: |-
                                                  Resources represents the minimum resources the volume should have.
                                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
                                                properties:
                                                  limits:
                                                    additionalProperties:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: |-
                                                      Limits describes the maximum amount of compute resources allowed.
                                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                    type: object
                                                  requests:
                                                    additionalProperties:
                                                      anyOf:
                                                        - type: integer
                                                        - type: string
                                                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                      x-kubernetes-int-or-string: true
                                                    description: |-
                                                      Requests describes the minimum amount of compute resources required.
                                                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                                    type: object
                                                type: object
                                              selector:
                                                description: A label query over volumes to consider for binding.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              storageClassName:
                                                description: |-
                                                  Name of the StorageClass required by the claim.
                                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                                type: string
                                              volumeMode:
                                                description: |-
                                                  volumeMode defines what type of volume is required by the claim.
                                                  Value of Filesystem is implied when not included in claim spec.
                                                type: string
                                              volumeName:
                                                description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                                                type: string
                                            type: object
                                        type: object
                                      status:
                                        description: |-
                                          DataVolumeTemplateDummyStatus is here simply for backwards compatibility with
                                          a previous API.
                                        nullable: true
                                        type: object
                                    required:
                                      - spec
                                    type: object
                                  type: array
                                instancetype:
                                  description: InstancetypeMatcher references a instancetype that is used to fill fields in Template
                                  properties:
                                    inferFromVolume:
                                      description: |-
                                        InferFromVolume lists the name of a volume that should be used to infer or discover the instancetype
                                        to be used through known annotations on the underlying resource. Once applied to the InstancetypeMatcher
                                        this field is removed.
                                      type: string
                                    inferFromVolumeFailurePolicy:
                                      description: |-
                                        InferFromVolumeFailurePolicy controls what should happen on failure when inferring the instancetype.
                                        Allowed values are: "RejectInferFromVolumeFailure" and "IgnoreInferFromVolumeFailure".
                                        If not specified, "RejectInferFromVolumeFailure" is used by default.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind specifies which instancetype resource is referenced.
                                        Allowed values are: "VirtualMachineInstancetype" and "VirtualMachineClusterInstancetype".
                                        If not specified, "VirtualMachineClusterInstancetype" is used by default.
                                      type: string
                                    name:
                                      description: Name is the name of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype
                                      type: string
                                    revisionName:
                                      description: |-
                                        RevisionName specifies a ControllerRevision containing a specific copy of the
                                        VirtualMachineInstancetype or VirtualMachineClusterInstancetype to be used. This is initially
                                        captured the first time the instancetype is applied to the VirtualMachineInstance.
                                      type: string
                                  type: object
                                preference:
                                  description: PreferenceMatcher references a set of preference that is used to fill fields in Template
                                  properties:
                                    inferFromVolume:
                                      description: |-
                                        InferFromVolume lists the name of a volume that should be used to infer or discover the preference
                                        to be used through known annotations on the underlying resource. Once applied to the PreferenceMatcher
                                        this field is removed.
                                      type: string
                                    inferFromVolumeFailurePolicy:
                                      description: |-
                                        InferFromVolumeFailurePolicy controls what should happen on failure when preference the instancetype.
                                        Allowed values are: "RejectInferFromVolumeFailure" and "IgnoreInferFromVolumeFailure".
                                        If not specified, "RejectInferFromVolumeFailure" is used by default.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind specifies which preference resource is referenced.
                                        Allowed values are: "VirtualMachinePreference" and "VirtualMachineClusterPreference".
                                        If not specified, "VirtualMachineClusterPreference" is used by default.
                                      type: string
                                    name:
                                      description: Name is the name of the VirtualMachinePreference or VirtualMachineClusterPreference
                                      type: string
                                    revisionName:
                                      description: |-
                                        RevisionName specifies a ControllerRevision containing a specific copy of the
                                        VirtualMachinePreference or VirtualMachineClusterPreference to be used. This is
                                        initially captured the first time the instancetype is applied to the VirtualMachineInstance.
                                      type: string
                                  type: object
                                runStrategy:
                                  description: |-
                                    Running state indicates the requested running state of the VirtualMachineInstance
                                    mutually exclusive with Running
                                  type: string
                                running:
                                  description: |-
                                    Running controls whether the associatied VirtualMachineInstance is created or not
                                    Mutually exclusive with RunStrategy
                                    Deprecated: VirtualMachineInstance field "Running" is now deprecated, please use RunStrategy instead.
                                  type: boolean
                                template:
                                  description: Template is the direct specification of VirtualMachineInstance
                                  properties:
                                    metadata:
                                      nullable: true
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    spec:
                                      description: VirtualMachineInstance Spec contains the VirtualMachineInstance specification.
                                      properties:
                                        accessCredentials:
                                          description: Specifies a set of public keys to inject into the vm guest
                                          items:
                                            description: |-
                                              AccessCredential represents a credential source that can be used to
                                              authorize remote access to the vm guest
                                              Only one of its members may be specified.
                                            properties:
                                              sshPublicKey:
                                                description: |-
                                                  SSHPublicKey represents the source and method of applying a ssh public
                                                  key into a guest virtual machine.
                                                properties:
                                                  propagationMethod:
                                                    description: PropagationMethod represents how the public key is injected into the vm guest.
                                                    properties:
                                                      configDrive:
                                                        description: |-
                                                          ConfigDrivePropagation means that the ssh public keys are injected
                                                          into the VM using metadata using the configDrive cloud-init provider
                                                        type: object
                                                      noCloud:
                                                        description: |-
                                                          NoCloudPropagation means that the ssh public keys are injected
                                                          into the VM using metadata using the noCloud cloud-init provider
                                                        type: object
                                                      qemuGuestAgent:
                                                        description: |-
                                                          QemuGuestAgentAccessCredentailPropagation means ssh public keys are
                                                          dynamically injected into the vm at runtime via the qemu guest agent.
                                                          This feature requires the qemu guest agent to be running within the guest.
                                                        properties:
                                                          users:
                                                            description: |-
                                                              Users represents a list of guest users that should have the ssh public keys
                                                              added to their authorized_keys file.
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: set
                                                        required:
                                                          - users
                                                        type: object
                                                    type: object
                                                  source:
                                                    description: Source represents where the public keys are pulled from
                                                    properties:
                                                      secret:
                                                        description: Secret means that the access credential is pulled from a kubernetes secret
                                                        properties:
                                                          secretName:
                                                            description: SecretName represents the name of the secret in the VMI's namespace
                                                            type: string
                                                        required:
                                                          - secretName
                                                        type: object
                                                    type: object
                                                required:
                                                  - propagationMethod
                                                  - source
                                                type: object
                                              userPassword:
                                                description: |-
                                                  UserPassword represents the source and method for applying a guest user's
                                                  password
                                                properties:
                                                  propagationMethod:
                                                    description: propagationMethod represents how the user passwords are injected into the vm guest.
                                                    properties:
                                                      qemuGuestAgent:
                                                        description: |-
                                                          QemuGuestAgentAccessCredentailPropagation means passwords are
                                                          dynamically injected into the vm at runtime via the qemu guest agent.
                                                          This feature requires the qemu guest agent to be running within the guest.
                                                        type: object
                                                    type: object
                                                  source:
                                                    description: Source represents where the user passwords are pulled from
                                                    properties:
                                                      secret:
                                                        description: Secret means that the access credential is pulled from a kubernetes secret
                                                        properties:
                                                          secretName:
                                                            description: SecretName represents the name of the secret in the VMI's namespace
                                                            type: string
                                                        required:
                                                          - secretName
                                                        type: object
                                                    type: object
                                                required:
                                                  - propagationMethod
                                                  - source
                                                type: object
                                            type: object
                                          maxItems: 256
                                          type: array
                                          x-kubernetes-list-type: atomic
                                        affinity:
                                          description: If affinity is specifies, obey all the affinity rules
                                          properties:
                                            nodeAffinity:
                                              description: Describes node affinity scheduling rules for the pod.
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: |-
                                                    The scheduler will prefer to schedule pods to nodes that satisfy
                                                    the affinity expressions specified by this field, but it may choose
                                                    a node that violates one or more of the expressions. The node that is
                                                    most preferred is the one with the greatest sum of weights, i.e.
                                                    for each node that meets all of the scheduling requirements (resource
                                                    request, requiredDuringScheduling affinity expressions, etc.),
                                                    compute a sum by iterating through the elements of this field and adding
                                                    "weight" to the sum if the node matches the corresponding matchExpressions; the
                                                    node(s) with the highest sum are the most preferred.
                                                  items:
                                                    description: |-
                                                      An empty preferred scheduling term matches all objects with implicit weight 0
                                                      (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                                                    properties:
                                                      preference:
                                                        description: A node selector term, associated with the corresponding weight.
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of node selector requirements by node's labels.
                                                            items:
                                                              description: |-
                                                                A node selector requirement is a selector that contains values, a key, and an operator
                                                                that relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: The label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    Represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    An array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. If the operator is Gt or Lt, the values
                                                                    array must have a single element, which will be interpreted as an integer.
                                                                    This array is replaced during a strategic merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchFields:
                                                            description: A list of node selector requirements by node's fields.
                                                            items:
                                                              description: |-
                                                                A node selector requirement is a selector that contains values, a key, and an operator
                                                                that relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: The label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    Represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    An array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. If the operator is Gt or Lt, the values
                                                                    array must have a single element, which will be interpreted as an integer.
                                                                    This array is replaced during a strategic merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      weight:
                                                        description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                      - preference
                                                      - weight
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: |-
                                                    If the affinity requirements specified by this field are not met at
                                                    scheduling time, the pod will not be scheduled onto the node.
                                                    If the affinity requirements specified by this field cease to be met
                                                    at some point during pod execution (e.g. due to an update), the system
                                                    may or may not try to eventually evict the pod from its node.
                                                  properties:
                                                    nodeSelectorTerms:
                                                      description: Required. A list of node selector terms. The terms are ORed.
                                                      items:
                                                        description: |-
                                                          A null or empty node selector term matches no objects. The requirements of
                                                          them are ANDed.
                                                          The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                                                        properties:
                                                          matchExpressions:
                                                            description: A list of node selector requirements by node's labels.
                                                            items:
                                                              description: |-
                                                                A node selector requirement is a selector that contains values, a key, and an operator
                                                                that relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: The label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    Represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    An array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. If the operator is Gt or Lt, the values
                                                                    array must have a single element, which will be interpreted as an integer.
                                                                    This array is replaced during a strategic merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchFields:
                                                            description: A list of node selector requirements by node's fields.
                                                            items:
                                                              description: |-
                                                                A node selector requirement is a selector that contains values, a key, and an operator
                                                                that relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: The label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    Represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    An array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. If the operator is Gt or Lt, the values
                                                                    array must have a single element, which will be interpreted as an integer.
                                                                    This array is replaced during a strategic merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      type: array
                                                      x-kubernetes-list-type: atomic
                                                  required:
                                                    - nodeSelectorTerms
                                                  type: object
                                                  x-kubernetes-map-type: atomic
                                              type: object
                                            podAffinity:
                                              description: Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: |-
                                                    The scheduler will prefer to schedule pods to nodes that satisfy
                                                    the affinity expressions specified by this field, but it may choose
                                                    a node that violates one or more of the expressions. The node that is
                                                    most preferred is the one with the greatest sum of weights, i.e.
                                                    for each node that meets all of the scheduling requirements (resource
                                                    request, requiredDuringScheduling affinity expressions, etc.),
                                                    compute a sum by iterating through the elements of this field and adding
                                                    "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                    node(s) with the highest sum are the most preferred.
                                                  items:
                                                    description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod affinity term, associated with the corresponding weight.
                                                        properties:
                                                          labelSelector:
                                                            description: |-
                                                              A label query over a set of resources, in this case pods.
                                                              If it's null, this PodAffinityTerm matches with no Pods.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                items:
                                                                  description: |-
                                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                                    relates the key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key is the label key that the selector applies to.
                                                                      type: string
                                                                    operator:
                                                                      description: |-
                                                                        operator represents a key's relationship to a set of values.
                                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: |-
                                                                        values is an array of string values. If the operator is In or NotIn,
                                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                        the values array must be empty. This array is replaced during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                      x-kubernetes-list-type: atomic
                                                                  required:
                                                                    - key
                                                                    - operator
                                                                  type: object
                                                                type: array
                                                                x-kubernetes-list-type: atomic
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: |-
                                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                type: object
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                          matchLabelKeys:
                                                            description: |-
                                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                                              be taken into consideration. The keys are used to lookup values from the
                                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                              to select the group of existing pods which pods will be taken into consideration
                                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                              pod labels will be ignored. The default value is empty.
                                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          mismatchLabelKeys:
                                                            description: |-
                                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                                              be taken into consideration. The keys are used to lookup values from the
                                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                              to select the group of existing pods which pods will be taken into consideration
                                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                              pod labels will be ignored. The default value is empty.
                                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          namespaceSelector:
                                                            description: |-
                                                              A label query over the set of namespaces that the term applies to.
                                                              The term is applied to the union of the namespaces selected by this field
                                                              and the ones listed in the namespaces field.
                                                              null selector and null or empty namespaces list means "this pod's namespace".
                                                              An empty selector ({}) matches all namespaces.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                items:
                                                                  description: |-
                                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                                    relates the key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key is the label key that the selector applies to.
                                                                      type: string
                                                                    operator:
                                                                      description: |-
                                                                        operator represents a key's relationship to a set of values.
                                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: |-
                                                                        values is an array of string values. If the operator is In or NotIn,
                                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                        the values array must be empty. This array is replaced during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                      x-kubernetes-list-type: atomic
                                                                  required:
                                                                    - key
                                                                    - operator
                                                                  type: object
                                                                type: array
                                                                x-kubernetes-list-type: atomic
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: |-
                                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                type: object
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                          namespaces:
                                                            description: |-
                                                              namespaces specifies a static list of namespace names that the term applies to.
                                                              The term is applied to the union of the namespaces listed in this field
                                                              and the ones selected by namespaceSelector.
                                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          topologyKey:
                                                            description: |-
                                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                                              selected pods is running.
                                                              Empty topologyKey is not allowed.
                                                            type: string
                                                        required:
                                                          - topologyKey
                                                        type: object
                                                      weight:
                                                        description: |-
                                                          weight associated with matching the corresponding podAffinityTerm,
                                                          in the range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                      - podAffinityTerm
                                                      - weight
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: |-
                                                    If the affinity requirements specified by this field are not met at
                                                    scheduling time, the pod will not be scheduled onto the node.
                                                    If the affinity requirements specified by this field cease to be met
                                                    at some point during pod execution (e.g. due to a pod label update), the
                                                    system may or may not try to eventually evict the pod from its node.
                                                    When there are multiple elements, the lists of nodes corresponding to each
                                                    podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                  items:
                                                    description: |-
                                                      Defines a set of pods (namely those matching the labelSelector
                                                      relative to the given namespace(s)) that this pod should be
                                                      co-located (affinity) or not co-located (anti-affinity) with,
                                                      where co-located is defined as running on a node whose value of
                                                      the label with key <topologyKey> matches that of any node on which
                                                      a pod of the set of pods is running
                                                    properties:
                                                      labelSelector:
                                                        description: |-
                                                          A label query over a set of resources, in this case pods.
                                                          If it's null, this PodAffinityTerm matches with no Pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      matchLabelKeys:
                                                        description: |-
                                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                          Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      mismatchLabelKeys:
                                                        description: |-
                                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                          Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      namespaceSelector:
                                                        description: |-
                                                          A label query over the set of namespaces that the term applies to.
                                                          The term is applied to the union of the namespaces selected by this field
                                                          and the ones listed in the namespaces field.
                                                          null selector and null or empty namespaces list means "this pod's namespace".
                                                          An empty selector ({}) matches all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: |-
                                                          namespaces specifies a static list of namespace names that the term applies to.
                                                          The term is applied to the union of the namespaces listed in this field
                                                          and the ones selected by namespaceSelector.
                                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      topologyKey:
                                                        description: |-
                                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                                          selected pods is running.
                                                          Empty topologyKey is not allowed.
                                                        type: string
                                                    required:
                                                      - topologyKey
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            podAntiAffinity:
                                              description: Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
                                              properties:
                                                preferredDuringSchedulingIgnoredDuringExecution:
                                                  description: |-
                                                    The scheduler will prefer to schedule pods to nodes that satisfy
                                                    the anti-affinity expressions specified by this field, but it may choose
                                                    a node that violates one or more of the expressions. The node that is
                                                    most preferred is the one with the greatest sum of weights, i.e.
                                                    for each node that meets all of the scheduling requirements (resource
                                                    request, requiredDuringScheduling anti-affinity expressions, etc.),
                                                    compute a sum by iterating through the elements of this field and adding
                                                    "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                                                    node(s) with the highest sum are the most preferred.
                                                  items:
                                                    description: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                                                    properties:
                                                      podAffinityTerm:
                                                        description: Required. A pod affinity term, associated with the corresponding weight.
                                                        properties:
                                                          labelSelector:
                                                            description: |-
                                                              A label query over a set of resources, in this case pods.
                                                              If it's null, this PodAffinityTerm matches with no Pods.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                items:
                                                                  description: |-
                                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                                    relates the key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key is the label key that the selector applies to.
                                                                      type: string
                                                                    operator:
                                                                      description: |-
                                                                        operator represents a key's relationship to a set of values.
                                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: |-
                                                                        values is an array of string values. If the operator is In or NotIn,
                                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                        the values array must be empty. This array is replaced during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                      x-kubernetes-list-type: atomic
                                                                  required:
                                                                    - key
                                                                    - operator
                                                                  type: object
                                                                type: array
                                                                x-kubernetes-list-type: atomic
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: |-
                                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                type: object
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                          matchLabelKeys:
                                                            description: |-
                                                              MatchLabelKeys is a set of pod label keys to select which pods will
                                                              be taken into consideration. The keys are used to lookup values from the
                                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                              to select the group of existing pods which pods will be taken into consideration
                                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                              pod labels will be ignored. The default value is empty.
                                                              The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                              Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          mismatchLabelKeys:
                                                            description: |-
                                                              MismatchLabelKeys is a set of pod label keys to select which pods will
                                                              be taken into consideration. The keys are used to lookup values from the
                                                              incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                              to select the group of existing pods which pods will be taken into consideration
                                                              for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                              pod labels will be ignored. The default value is empty.
                                                              The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                              Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                              This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          namespaceSelector:
                                                            description: |-
                                                              A label query over the set of namespaces that the term applies to.
                                                              The term is applied to the union of the namespaces selected by this field
                                                              and the ones listed in the namespaces field.
                                                              null selector and null or empty namespaces list means "this pod's namespace".
                                                              An empty selector ({}) matches all namespaces.
                                                            properties:
                                                              matchExpressions:
                                                                description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                                items:
                                                                  description: |-
                                                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                                                    relates the key and values.
                                                                  properties:
                                                                    key:
                                                                      description: key is the label key that the selector applies to.
                                                                      type: string
                                                                    operator:
                                                                      description: |-
                                                                        operator represents a key's relationship to a set of values.
                                                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                      type: string
                                                                    values:
                                                                      description: |-
                                                                        values is an array of string values. If the operator is In or NotIn,
                                                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                        the values array must be empty. This array is replaced during a strategic
                                                                        merge patch.
                                                                      items:
                                                                        type: string
                                                                      type: array
                                                                      x-kubernetes-list-type: atomic
                                                                  required:
                                                                    - key
                                                                    - operator
                                                                  type: object
                                                                type: array
                                                                x-kubernetes-list-type: atomic
                                                              matchLabels:
                                                                additionalProperties:
                                                                  type: string
                                                                description: |-
                                                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                                type: object
                                                            type: object
                                                            x-kubernetes-map-type: atomic
                                                          namespaces:
                                                            description: |-
                                                              namespaces specifies a static list of namespace names that the term applies to.
                                                              The term is applied to the union of the namespaces listed in this field
                                                              and the ones selected by namespaceSelector.
                                                              null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                            items:
                                                              type: string
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          topologyKey:
                                                            description: |-
                                                              This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                              the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                              whose value of the label with key topologyKey matches that of any node on which any of the
                                                              selected pods is running.
                                                              Empty topologyKey is not allowed.
                                                            type: string
                                                        required:
                                                          - topologyKey
                                                        type: object
                                                      weight:
                                                        description: |-
                                                          weight associated with matching the corresponding podAffinityTerm,
                                                          in the range 1-100.
                                                        format: int32
                                                        type: integer
                                                    required:
                                                      - podAffinityTerm
                                                      - weight
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                requiredDuringSchedulingIgnoredDuringExecution:
                                                  description: |-
                                                    If the anti-affinity requirements specified by this field are not met at
                                                    scheduling time, the pod will not be scheduled onto the node.
                                                    If the anti-affinity requirements specified by this field cease to be met
                                                    at some point during pod execution (e.g. due to a pod label update), the
                                                    system may or may not try to eventually evict the pod from its node.
                                                    When there are multiple elements, the lists of nodes corresponding to each
                                                    podAffinityTerm are intersected, i.e. all terms must be satisfied.
                                                  items:
                                                    description: |-
                                                      Defines a set of pods (namely those matching the labelSelector
                                                      relative to the given namespace(s)) that this pod should be
                                                      co-located (affinity) or not co-located (anti-affinity) with,
                                                      where co-located is defined as running on a node whose value of
                                                      the label with key <topologyKey> matches that of any node on which
                                                      a pod of the set of pods is running
                                                    properties:
                                                      labelSelector:
                                                        description: |-
                                                          A label query over a set of resources, in this case pods.
                                                          If it's null, this PodAffinityTerm matches with no Pods.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      matchLabelKeys:
                                                        description: |-
                                                          MatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both matchLabelKeys and labelSelector.
                                                          Also, matchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      mismatchLabelKeys:
                                                        description: |-
                                                          MismatchLabelKeys is a set of pod label keys to select which pods will
                                                          be taken into consideration. The keys are used to lookup values from the
                                                          incoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`
                                                          to select the group of existing pods which pods will be taken into consideration
                                                          for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                                                          pod labels will be ignored. The default value is empty.
                                                          The same key is forbidden to exist in both mismatchLabelKeys and labelSelector.
                                                          Also, mismatchLabelKeys cannot be set when labelSelector isn't set.
                                                          This is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      namespaceSelector:
                                                        description: |-
                                                          A label query over the set of namespaces that the term applies to.
                                                          The term is applied to the union of the namespaces selected by this field
                                                          and the ones listed in the namespaces field.
                                                          null selector and null or empty namespaces list means "this pod's namespace".
                                                          An empty selector ({}) matches all namespaces.
                                                        properties:
                                                          matchExpressions:
                                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                            items:
                                                              description: |-
                                                                A label selector requirement is a selector that contains values, a key, and an operator that
                                                                relates the key and values.
                                                              properties:
                                                                key:
                                                                  description: key is the label key that the selector applies to.
                                                                  type: string
                                                                operator:
                                                                  description: |-
                                                                    operator represents a key's relationship to a set of values.
                                                                    Valid operators are In, NotIn, Exists and DoesNotExist.
                                                                  type: string
                                                                values:
                                                                  description: |-
                                                                    values is an array of string values. If the operator is In or NotIn,
                                                                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                                    the values array must be empty. This array is replaced during a strategic
                                                                    merge patch.
                                                                  items:
                                                                    type: string
                                                                  type: array
                                                                  x-kubernetes-list-type: atomic
                                                              required:
                                                                - key
                                                                - operator
                                                              type: object
                                                            type: array
                                                            x-kubernetes-list-type: atomic
                                                          matchLabels:
                                                            additionalProperties:
                                                              type: string
                                                            description: |-
                                                              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                              map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                              operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                            type: object
                                                        type: object
                                                        x-kubernetes-map-type: atomic
                                                      namespaces:
                                                        description: |-
                                                          namespaces specifies a static list of namespace names that the term applies to.
                                                          The term is applied to the union of the namespaces listed in this field
                                                          and the ones selected by namespaceSelector.
                                                          null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                                                        items:
                                                          type: string
                                                        type: array
                                                        x-kubernetes-list-type: atomic
                                                      topologyKey:
                                                        description: |-
                                                          This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                                                          the labelSelector in the specified namespaces, where co-located is defined as running on a node
                                                          whose value of the label with key topologyKey matches that of any node on which any of the
                                                          selected pods is running.
                                                          Empty topologyKey is not allowed.
                                                        type: string
                                                    required:
                                                      - topologyKey
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                          type: object
                                        architecture:
                                          description: Specifies the architecture of the vm guest you are attempting to run. Defaults to the compiled architecture of the KubeVirt components
                                          type: string
                                        dnsConfig:
                                          description: |-
                                            Specifies the DNS parameters of a pod.
                                            Parameters specified here will be merged to the generated DNS
                                            configuration based on DNSPolicy.
                                          properties:
                                            nameservers:
                                              description: |-
                                                A list of DNS name server IP addresses.
                                                This will be appended to the base nameservers generated from DNSPolicy.
                                                Duplicated nameservers will be removed.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            options:
                                              description: |-
                                                A list of DNS resolver options.
                                                This will be merged with the base options generated from DNSPolicy.
                                                Duplicated entries will be removed. Resolution options given in Options
                                                will override those that appear in the base DNSPolicy.
                                              items:
                                                description: PodDNSConfigOption defines DNS resolver options of a pod.
                                                properties:
                                                  name:
                                                    description: |-
                                                      Name is this DNS resolver option's name.
                                                      Required.
                                                    type: string
                                                  value:
                                                    description: Value is this DNS resolver option's value.
                                                    type: string
                                                type: object
                                              type: array
                                              x-kubernetes-list-type: atomic
                                            searches:
                                              description: |-
                                                A list of DNS search domains for host-name lookup.
                                                This will be appended to the base search paths generated from DNSPolicy.
                                                Duplicated search paths will be removed.
                                              items:
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: atomic
                                          type: object
                                        dnsPolicy:
                                          description: |-
                                            Set DNS policy for the pod.
                                            Defaults to "ClusterFirst".
                                            Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
                                            DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
                                            To have DNS options set along with hostNetwork, you have to specify DNS policy
                                            explicitly to 'ClusterFirstWithHostNet'.
                                          type: string
                                        domain:
                                          description: Specification of the desired behavior of the VirtualMachineInstance on the host.
                                          properties:
                                            chassis:
                                              description: Chassis specifies the chassis info passed to the domain.
                                              properties:
                                                asset:
                                                  type: string
                                                manufacturer:
                                                  type: string
                                                serial:
                                                  type: string
                                                sku:
                                                  type: string
                                                version:
                                                  type: string
                                              type: object
                                            clock:
                                              description: Clock sets the clock and timers of the vmi.
                                              properties:
                                                timer:
                                                  description: Timer specifies whih timers are attached to the vmi.
                                                  properties:
                                                    hpet:
                                                      description: HPET (High Precision Event Timer) - multiple timers with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: |-
                                                            Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: |-
                                                            TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest.
                                                            One of "delay", "catchup", "merge", "discard".
                                                          type: string
                                                      type: object
                                                    hyperv:
                                                      description: Hyperv (Hypervclock) - lets guests read the host’s wall clock time (paravirtualized). For windows guests.
                                                      properties:
                                                        present:
                                                          description: |-
                                                            Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    kvm:
                                                      description: "KVM \t(KVM clock) - lets guests read the host’s wall clock time (paravirtualized). For linux guests."
                                                      properties:
                                                        present:
                                                          description: |-
                                                            Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    pit:
                                                      description: PIT (Programmable Interval Timer) - a timer with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: |-
                                                            Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: |-
                                                            TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest.
                                                            One of "delay", "catchup", "discard".
                                                          type: string
                                                      type: object
                                                    rtc:
                                                      description: RTC (Real Time Clock) - a continuously running timer with periodic interrupts.
                                                      properties:
                                                        present:
                                                          description: |-
                                                            Enabled set to false makes sure that the machine type or a preset can't add the timer.
                                                            Defaults to true.
                                                          type: boolean
                                                        tickPolicy:
                                                          description: |-
                                                            TickPolicy determines what happens when QEMU misses a deadline for injecting a tick to the guest.
                                                            One of "delay", "catchup".
                                                          type: string
                                                        track:
                                                          description: Track the guest or the wall clock.
                                                          type: string
                                                      type: object
                                                  type: object
                                                timezone:
                                                  description: |-
                                                    Timezone sets the guest clock to the specified timezone.
                                                    Zone name follows the TZ environment variable format (e.g. 'America/New_York').
                                                  type: string
                                                utc:
                                                  description: |-
                                                    UTC sets the guest clock to UTC on each boot. If an offset is specified,
                                                    guest changes to the clock will be kept during reboots and are not reset.
                                                  properties:
                                                    offsetSeconds:
                                                      description: |-
                                                        OffsetSeconds specifies an offset in seconds, relative to UTC. If set,
                                                        guest changes to the clock will be kept during reboots and not reset.
                                                      type: integer
                                                  type: object
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            cpu:
                                              description: CPU allow specified the detailed CPU topology inside the vmi.
                                              properties:
                                                cores:
                                                  description: |-
                                                    Cores specifies the number of cores inside the vmi.
                                                    Must be a value greater or equal 1.
                                                  format: int32
                                                  type: integer
                                                dedicatedCpuPlacement:
                                                  description: |-
                                                    DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node
                                                    with enough dedicated pCPUs and pin the vCPUs to it.
                                                  type: boolean
                                                features:
                                                  description: Features specifies the CPU features list inside the VMI.
                                                  items:
                                                    description: CPUFeature allows specifying a CPU feature.
                                                    properties:
                                                      name:
                                                        description: Name of the CPU feature
                                                        type: string
                                                      policy:
                                                        description: |-
                                                          Policy is the CPU feature attribute which can have the following attributes:
                                                          force    - The virtual CPU will claim the feature is supported regardless of it being supported by host CPU.
                                                          require  - Guest creation will fail unless the feature is supported by the host CPU or the hypervisor is able to emulate it.
                                                          optional - The feature will be supported by virtual CPU if and only if it is supported by host CPU.
                                                          disable  - The feature will not be supported by virtual CPU.
                                                          forbid   - Guest creation will fail if the feature is supported by host CPU.
                                                          Defaults to require
                                                        type: string
                                                    required:
                                                      - name
                                                    type: object
                                                  type: array
                                                isolateEmulatorThread:
                                                  description: |-
                                                    IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place
                                                    the emulator thread on it.
                                                  type: boolean
                                                maxSockets:
                                                  description: |-
                                                    MaxSockets specifies the maximum amount of sockets that can
                                                    be hotplugged
                                                  format: int32
                                                  type: integer
                                                model:
                                                  description: |-
                                                    Model specifies the CPU model inside the VMI.
                                                    List of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.
                                                    It is possible to specify special cases like "host-passthrough" to get the same CPU as the node
                                                    and "host-model" to get CPU closest to the node one.
                                                    Defaults to host-model.
                                                  type: string
                                                numa:
                                                  description: NUMA allows specifying settings for the guest NUMA topology
                                                  properties:
                                                    guestMappingPassthrough:
                                                      description: |-
                                                        GuestMappingPassthrough will create an efficient guest topology based on host CPUs exclusively assigned to a pod.
                                                        The created topology ensures that memory and CPUs on the virtual numa nodes never cross boundaries of host numa nodes.
                                                      type: object
                                                  type: object
                                                realtime:
                                                  description: Realtime instructs the virt-launcher to tune the VMI for lower latency, optional for real time workloads
                                                  properties:
                                                    mask:
                                                      description: |-
                                                        Mask defines the vcpu mask expression that defines which vcpus are used for realtime. Format matches libvirt's expressions.
                                                        Example: "0-3,^1","0,2,3","2-3"
                                                      type: string
                                                  type: object
                                                sockets:
                                                  description: |-
                                                    Sockets specifies the number of sockets inside the vmi.
                                                    Must be a value greater or equal 1.
                                                  format: int32
                                                  type: integer
                                                threads:
                                                  description: |-
                                                    Threads specifies the number of threads inside the vmi.
                                                    Must be a value greater or equal 1.
                                                  format: int32
                                                  type: integer
                                              type: object
                                            devices:
                                              description: Devices allows adding disks, network interfaces, and others
                                              properties:
                                                autoattachGraphicsDevice:
                                                  description: |-
                                                    Whether to attach the default graphics device or not.
                                                    VNC will not be available if set to false. Defaults to true.
                                                  type: boolean
                                                autoattachInputDevice:
                                                  description: |-
                                                    Whether to attach an Input Device.
                                                    Defaults to false.
                                                  type: boolean
                                                autoattachMemBalloon:
                                                  description: |-
                                                    Whether to attach the Memory balloon device with default period.
                                                    Period can be adjusted in virt-config.
                                                    Defaults to true.
                                                  type: boolean
                                                autoattachPodInterface:
                                                  description: Whether to attach a pod network interface. Defaults to true.
                                                  type: boolean
                                                autoattachSerialConsole:
                                                  description: |-
                                                    Whether to attach the default virtio-serial console or not.
                                                    Serial console access will not be available if set to false. Defaults to true.
                                                  type: boolean
                                                autoattachVSOCK:
                                                  description: |-
                                                    Whether to attach the VSOCK CID to the VM or not.
                                                    VSOCK access will be available if set to true. Defaults to false.
                                                  type: boolean
                                                blockMultiQueue:
                                                  description: |-
                                                    Whether or not to enable virtio multi-queue for block devices.
                                                    Defaults to false.
                                                  type: boolean
                                                clientPassthrough:
                                                  description: To configure and access client devices such as redirecting USB
                                                  type: object
                                                disableHotplug:
                                                  description: DisableHotplug disabled the ability to hotplug disks.
                                                  type: boolean
                                                disks:
                                                  description: Disks describes disks, cdroms and luns which are connected to the vmi.
                                                  items:
                                                    properties:
                                                      blockSize:
                                                        description: If specified, the virtual disk will be presented with the given block sizes.
                                                        properties:
                                                          custom:
                                                            description: CustomBlockSize represents the desired logical and physical block size for a VM disk.
                                                            properties:
                                                              logical:
                                                                type: integer
                                                              physical:
                                                                type: integer
                                                            required:
                                                              - logical
                                                              - physical
                                                            type: object
                                                          matchVolume:
                                                            description: Represents if a feature is enabled or disabled.
                                                            properties:
                                                              enabled:
                                                                description: |-
                                                                  Enabled determines if the feature should be enabled or disabled on the guest.
                                                                  Defaults to true.
                                                                type: boolean
                                                            type: object
                                                        type: object
                                                      bootOrder:
                                                        description: |-
                                                          BootOrder is an integer value > 0, used to determine ordering of boot devices.
                                                          Lower values take precedence.
                                                          Each disk or interface that has a boot order must have a unique value.
                                                          Disks without a boot order are not tried if a disk with a boot order exists.
                                                        type: integer
                                                      cache:
                                                        description: |-
                                                          Cache specifies which kvm disk cache mode should be used.
                                                          Supported values are: CacheNone, CacheWriteThrough.
                                                        type: string
                                                      cdrom:
                                                        description: Attach a volume as a cdrom to the vmi.
                                                        properties:
                                                          bus:
                                                            description: |-
                                                              Bus indicates the type of disk device to emulate.
                                                              supported values: virtio, sata, scsi.
                                                            type: string
                                                          readonly:
                                                            description: |-
                                                              ReadOnly.
                                                              Defaults to true.
                                                            type: boolean
                                                          tray:
                                                            description: |-
                                                              Tray indicates if the tray of the device is open or closed.
                                                              Allowed values are "open" and "closed".
                                                              Defaults to closed.
                                                            type: string
                                                        type: object
                                                      dedicatedIOThread:
                                                        description: |-
                                                          dedicatedIOThread indicates this disk should have an exclusive IO Thread.
                                                          Enabling this implies useIOThreads = true.
                                                          Defaults to false.
                                                        type: boolean
                                                      disk:
                                                        description: Attach a volume as a disk to the vmi.
                                                        properties:
                                                          bus:
                                                            description: |-
                                                              Bus indicates the type of disk device to emulate.
                                                              supported values: virtio, sata, scsi, usb.
                                                            type: string
                                                          pciAddress:
                                                            description: 'If specified, the virtual disk will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10'
                                                            type: string
                                                          readonly:
                                                            description: |-
                                                              ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                        type: object
                                                      errorPolicy:
                                                        description: If specified, it can change the default error policy (stop) for the disk
                                                        type: string
                                                      io:
                                                        description: |-
                                                          IO specifies which QEMU disk IO mode should be used.
                                                          Supported values are: native, default, threads.
                                                        type: string
                                                      lun:
                                                        description: Attach a volume as a LUN to the vmi.
                                                        properties:
                                                          bus:
                                                            description: |-
                                                              Bus indicates the type of disk device to emulate.
                                                              supported values: virtio, sata, scsi.
                                                            type: string
                                                          readonly:
                                                            description: |-
                                                              ReadOnly.
                                                              Defaults to false.
                                                            type: boolean
                                                          reservation:
                                                            description: Reservation indicates if the disk needs to support the persistent reservation for the SCSI disk
                                                            type: boolean
                                                        type: object
                                                      name:
                                                        description: Name is the device name
                                                        type: string
                                                      serial:
                                                        description: Serial provides the ability to specify a serial number for the disk device.
                                                        type: string
                                                      shareable:
                                                        description: If specified the disk is made sharable and multiple write from different VMs are permitted
                                                        type: boolean
                                                      tag:
                                                        description: If specified, disk address and its tag will be provided to the guest via config drive metadata
                                                        type: string
                                                    required:
                                                      - name
                                                    type: object
                                                  maxItems: 256
                                                  type: array
                                                downwardMetrics:
                                                  description: DownwardMetrics creates a virtio serials for exposing the downward metrics to the vmi.
                                                  type: object
                                                filesystems:
                                                  description: Filesystems describes filesystem which is connected to the vmi.
                                                  items:
                                                    properties:
                                                      name:
                                                        description: Name is the device name
                                                        type: string
                                                      virtiofs:
                                                        description: Virtiofs is supported
                                                        type: object
                                                    required:
                                                      - name
                                                      - virtiofs
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                gpus:
                                                  description: Whether to attach a GPU device to the vmi.
                                                  items:
                                                    properties:
                                                      deviceName:
                                                        type: string
                                                      name:
                                                        description: Name of the GPU device as exposed by a device plugin
                                                        type: string
                                                      tag:
                                                        description: If specified, the virtual network interface address and its tag will be provided to the guest via config drive
                                                        type: string
                                                      virtualGPUOptions:
                                                        properties:
                                                          display:
                                                            properties:
                                                              enabled:
                                                                description: |-
                                                                  Enabled determines if a display addapter backed by a vGPU should be enabled or disabled on the guest.
                                                                  Defaults to true.
                                                                type: boolean
                                                              ramFB:
                                                                description: |-
                                                                  Enables a boot framebuffer, until the guest OS loads a real GPU driver
                                                                  Defaults to true.
                                                                properties:
                                                                  enabled:
                                                                    description: |-
                                                                      Enabled determines if the feature should be enabled or disabled on the guest.
                                                                      Defaults to true.
                                                                    type: boolean
                                                                type: object
                                                            type: object
                                                        type: object
                                                    required:
                                                      - deviceName
                                                      - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                hostDevices:
                                                  description: Whether to attach a host device to the vmi.
                                                  items:
                                                    properties:
                                                      deviceName:
                                                        description: DeviceName is the resource name of the host device exposed by a device plugin
                                                        type: string
                                                      name:
                                                        type: string
                                                      tag:
                                                        description: If specified, the virtual network interface address and its tag will be provided to the guest via config drive
                                                        type: string
                                                    required:
                                                      - deviceName
                                                      - name
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                inputs:
                                                  description: Inputs describe input devices
                                                  items:
                                                    properties:
                                                      bus:
                                                        description: |-
                                                          Bus indicates the bus of input device to emulate.
                                                          Supported values: virtio, usb.
                                                        type: string
                                                      name:
                                                        description: Name is the device name
                                                        type: string
                                                      type:
                                                        description: |-
                                                          Type indicated the type of input device.
                                                          Supported values: tablet.
                                                        type: string
                                                    required:
                                                      - name
                                                      - type
                                                    type: object
                                                  type: array
                                                interfaces:
                                                  description: Interfaces describe network interfaces which are added to the vmi.
                                                  items:
                                                    properties:
                                                      acpiIndex:
                                                        description: |-
                                                          If specified, the ACPI index is used to provide network interface device naming, that is stable across changes
                                                          in PCI addresses assigned to the device.
                                                          This value is required to be unique across all devices and be between 1 and (16*1024-1).
                                                        type: integer
                                                      binding:
                                                        description: |-
                                                          Binding specifies the binding plugin that will be used to connect the interface to the guest.
                                                          It provides an alternative to InterfaceBindingMethod.
                                                          version: 1alphav1
                                                        properties:
                                                          name:
                                                            description: |-
                                                              Name references to the binding name as denined in the kubevirt CR.
                                                              version: 1alphav1
                                                            type: string
                                                        required:
                                                          - name
                                                        type: object
                                                      bootOrder:
                                                        description: |-
                                                          BootOrder is an integer value > 0, used to determine ordering of boot devices.
                                                          Lower values take precedence.
                                                          Each interface or disk that has a boot order must have a unique value.
                                                          Interfaces without a boot order are not tried.
                                                        type: integer
                                                      bridge:
                                                        description: InterfaceBridge connects to a given network via a linux bridge.
                                                        type: object
                                                      dhcpOptions:
                                                        description: If specified the network interface will pass additional DHCP options to the VMI
                                                        properties:
                                                          bootFileName:
                                                            description: If specified will pass option 67 to interface's DHCP server
                                                            type: string
                                                          ntpServers:
                                                            description: If specified will pass the configured NTP server to the VM via DHCP option 042.
                                                            items:
                                                              type: string
                                                            type: array
                                                          privateOptions:
                                                            description: 'If specified will pass extra DHCP options for private use, range: 224-254'
                                                            items:
                                                              description: DHCPExtraOptions defines Extra DHCP options for a VM.
                                                              properties:
                                                                option:
                                                                  description: |-
                                                                    Option is an Integer value from 224-254
                                                                    Required.
                                                                  type: integer
                                                                value:
                                                                  description: |-
                                                                    Value is a String value for the Option provided
                                                                    Required.
                                                                  type: string
                                                              required:
                                                                - option
                                                                - value
                                                              type: object
                                                            type: array
                                                          tftpServerName:
                                                            description: If specified will pass option 66 to interface's DHCP server
                                                            type: string
                                                        type: object
                                                      macAddress:
                                                        description: 'Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.'
                                                        type: string
                                                      macvtap:
                                                        description: |-
                                                          DeprecatedMacvtap is an alias to the deprecated Macvtap interface,
                                                          please refer to Kubevirt user guide for alternatives.
                                                          Deprecated: Removed in v1.3
                                                        type: object
                                                      masquerade:
                                                        description: InterfaceMasquerade connects to a given network using netfilter rules to nat the traffic.
                                                        type: object
                                                      model:
                                                        description: |-
                                                          Interface model.
                                                          One of: e1000, e1000e, igb, ne2k_pci, pcnet, rtl8139, virtio.
                                                          Defaults to virtio.
                                                        type: string
                                                      name:
                                                        description: |-
                                                          Logical name of the interface as well as a reference to the associated networks.
                                                          Must match the Name of a Network.
                                                        type: string
                                                      passt:
                                                        description: |-
                                                          DeprecatedPasst is an alias to the deprecated Passt interface,
                                                          please refer to Kubevirt user guide for alternatives.
                                                          Deprecated: Removed in v1.3
                                                        type: object
                                                      pciAddress:
                                                        description: 'If specified, the virtual network interface will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10'
                                                        type: string
                                                      ports:
                                                        description: List of ports to be forwarded to the virtual machine.
                                                        items:
                                                          description: |-
                                                            Port represents a port to expose from the virtual machine.
                                                            Default protocol TCP.
                                                            The port field is mandatory
                                                          properties:
                                                            name:
                                                              description: |-
                                                                If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                                                                named port in a pod must have a unique name. Name for the port that can be
                                                                referred to by services.
                                                              type: string
                                                            port:
                                                              description: |-
                                                                Number of port to expose for the virtual machine.
                                                                This must be a valid port number, 0 < x < 65536.
                                                              format: int32
                                                              type: integer
                                                            protocol:
                                                              description: |-
                                                                Protocol for port. Must be UDP or TCP.
                                                                Defaults to "TCP".
                                                              type: string
                                                          required:
                                                            - port
                                                          type: object
                                                        type: array
                                                      slirp:
                                                        description: |-
                                                          DeprecatedSlirp is an alias to the deprecated Slirp interface
                                                          Deprecated: Removed in v1.3
                                                        type: object
                                                      sriov:
                                                        description: InterfaceSRIOV connects to a given network by passing-through an SR-IOV PCI device via vfio.
                                                        type: object
                                                      state:
                                                        description: |-
                                                          State represents the requested operational state of the interface.
                                                          The (only) value supported is `absent`, expressing a request to remove the interface.
                                                        type: string
                                                      tag:
                                                        description: If specified, the virtual network interface address and its tag will be provided to the guest via config drive
                                                        type: string
                                                    required:
                                                      - name
                                                    type: object
                                                  maxItems: 256
                                                  type: array
                                                logSerialConsole:
                                                  description: |-
                                                    Whether to log the auto-attached default serial console or not.
                                                    Serial console logs will be collect to a file and then streamed from a named `guest-console-log`.
                                                    Not relevant if autoattachSerialConsole is disabled.
                                                    Defaults to cluster wide setting on VirtualMachineOptions.
                                                  type: boolean
                                                networkInterfaceMultiqueue:
                                                  description: If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature for network devices. The number of queues created depends on additional factors of the VirtualMachineInstance, like the number of guest CPUs.
                                                  type: boolean
                                                rng:
                                                  description: Whether to have random number generator from host
                                                  type: object
                                                sound:
                                                  description: Whether to emulate a sound device.
                                                  properties:
                                                    model:
                                                      description: |-
                                                        We only support ich9 or ac97.
                                                        If SoundDevice is not set: No sound card is emulated.
                                                        If SoundDevice is set but Model is not: ich9
                                                      type: string
                                                    name:
                                                      description: User's defined name for this sound device
                                                      type: string
                                                  required:
                                                    - name
                                                  type: object
                                                tpm:
                                                  description: Whether to emulate a TPM device.
                                                  properties:
                                                    persistent:
                                                      description: |-
                                                        Persistent indicates the state of the TPM device should be kept accross reboots
                                                        Defaults to false
                                                      type: boolean
                                                  type: object
                                                useVirtioTransitional:
                                                  description: |-
                                                    Fall back to legacy virtio 0.9 support if virtio bus is selected on devices.
                                                    This is helpful for old machines like CentOS6 or RHEL6 which
                                                    do not understand virtio_non_transitional (virtio 1.0).
                                                  type: boolean
                                                watchdog:
                                                  description: Watchdog describes a watchdog device which can be added to the vmi.
                                                  properties:
                                                    i6300esb:
                                                      description: i6300esb watchdog device.
                                                      properties:
                                                        action:
                                                          description: |-
                                                            The action to take. Valid values are poweroff, reset, shutdown.
                                                            Defaults to reset.
                                                          type: string
                                                      type: object
                                                    name:
                                                      description: Name of the watchdog.
                                                      type: string
                                                  required:
                                                    - name
                                                  type: object
                                              type: object
                                            features:
                                              description: Features like acpi, apic, hyperv, smm.
                                              properties:
                                                acpi:
                                                  description: |-
                                                    ACPI enables/disables ACPI inside the guest.
                                                    Defaults to enabled.
                                                  properties:
                                                    enabled:
                                                      description: |-
                                                        Enabled determines if the feature should be enabled or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                apic:
                                                  description: Defaults to the machine type setting.
                                                  properties:
                                                    enabled:
                                                      description: |-
                                                        Enabled determines if the feature should be enabled or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                    endOfInterrupt:
                                                      description: |-
                                                        EndOfInterrupt enables the end of interrupt notification in the guest.
                                                        Defaults to false.
                                                      type: boolean
                                                  type: object
                                                hyperv:
                                                  description: Defaults to the machine type setting.
                                                  properties:
                                                    evmcs:
                                                      description: |-
                                                        EVMCS Speeds up L2 vmexits, but disables other virtualization features. Requires vapic.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    frequencies:
                                                      description: |-
                                                        Frequencies improves the TSC clock source handling for Hyper-V on KVM.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    ipi:
                                                      description: |-
                                                        IPI improves performances in overcommited environments. Requires vpindex.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    reenlightenment:
                                                      description: |-
                                                        Reenlightenment enables the notifications on TSC frequency changes.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    relaxed:
                                                      description: |-
                                                        Relaxed instructs the guest OS to disable watchdog timeouts.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    reset:
                                                      description: |-
                                                        Reset enables Hyperv reboot/reset for the vmi. Requires synic.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    runtime:
                                                      description: |-
                                                        Runtime improves the time accounting to improve scheduling in the guest.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    spinlocks:
                                                      description: Spinlocks allows to configure the spinlock retry attempts.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                        spinlocks:
                                                          description: |-
                                                            Retries indicates the number of retries.
                                                            Must be a value greater or equal 4096.
                                                            Defaults to 4096.
                                                          format: int32
                                                          type: integer
                                                      type: object
                                                    synic:
                                                      description: |-
                                                        SyNIC enables the Synthetic Interrupt Controller.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    synictimer:
                                                      description: |-
                                                        SyNICTimer enables Synthetic Interrupt Controller Timers, reducing CPU load.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        direct:
                                                          description: Represents if a feature is enabled or disabled.
                                                          properties:
                                                            enabled:
                                                              description: |-
                                                                Enabled determines if the feature should be enabled or disabled on the guest.
                                                                Defaults to true.
                                                              type: boolean
                                                          type: object
                                                        enabled:
                                                          type: boolean
                                                      type: object
                                                    tlbflush:
                                                      description: |-
                                                        TLBFlush improves performances in overcommited environments. Requires vpindex.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    vapic:
                                                      description: |-
                                                        VAPIC improves the paravirtualized handling of interrupts.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                    vendorid:
                                                      description: |-
                                                        VendorID allows setting the hypervisor vendor id.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                        vendorid:
                                                          description: |-
                                                            VendorID sets the hypervisor vendor id, visible to the vmi.
                                                            String up to twelve characters.
                                                          type: string
                                                      type: object
                                                    vpindex:
                                                      description: |-
                                                        VPIndex enables the Virtual Processor Index to help windows identifying virtual processors.
                                                        Defaults to the machine type setting.
                                                      properties:
                                                        enabled:
                                                          description: |-
                                                            Enabled determines if the feature should be enabled or disabled on the guest.
                                                            Defaults to true.
                                                          type: boolean
                                                      type: object
                                                  type: object
                                                hypervPassthrough:
                                                  description: |-
                                                    This enables all supported hyperv flags automatically.
                                                    Bear in mind that if this enabled hyperV features cannot
                                                    be enabled explicitly. In addition, a Virtual Machine
                                                    using it will be non-migratable.
                                                  properties:
                                                    enabled:
                                                      type: boolean
                                                  type: object
                                                kvm:
                                                  description: Configure how KVM presence is exposed to the guest.
                                                  properties:
                                                    hidden:
                                                      description: |-
                                                        Hide the KVM hypervisor from standard MSR based discovery.
                                                        Defaults to false
                                                      type: boolean
                                                  type: object
                                                pvspinlock:
                                                  description: |-
                                                    Notify the guest that the host supports paravirtual spinlocks.
                                                    For older kernels this feature should be explicitly disabled.
                                                  properties:
                                                    enabled:
                                                      description: |-
                                                        Enabled determines if the feature should be enabled or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                                smm:
                                                  description: |-
                                                    SMM enables/disables System Management Mode.
                                                    TSEG not yet implemented.
                                                  properties:
                                                    enabled:
                                                      description: |-
                                                        Enabled determines if the feature should be enabled or disabled on the guest.
                                                        Defaults to true.
                                                      type: boolean
                                                  type: object
                                              type: object
                                            firmware:
                                              description: Firmware.
                                              properties:
                                                acpi:
                                                  description: Information that can be set in the ACPI table
                                                  properties:
                                                    slicNameRef:
                                                      description: |-
                                                        SlicNameRef should match the volume name of a secret object. The data in the secret should
                                                        be a binary blob that follows the ACPI SLIC standard, see:
                                                        https://learn.microsoft.com/en-us/previous-versions/windows/hardware/design/dn653305(v=vs.85)
                                                      type: string
                                                  type: object
                                                bootloader:
                                                  description: Settings to control the bootloader that is used.
                                                  properties:
                                                    bios:
                                                      description: If set (default), BIOS will be used.
                                                      properties:
                                                        useSerial:
                                                          description: If set, the BIOS output will be transmitted over serial
                                                          type: boolean
                                                      type: object
                                                    efi:
                                                      description: If set, EFI will be used instead of BIOS.
                                                      properties:
                                                        persistent:
                                                          description: |-
                                                            If set to true, Persistent will persist the EFI NVRAM across reboots.
                                                            Defaults to false
                                                          type: boolean
                                                        secureBoot:
                                                          description: |-
                                                            If set, SecureBoot will be enabled and the OVMF roms will be swapped for
                                                            SecureBoot-enabled ones.
                                                            Requires SMM to be enabled.
                                                            Defaults to true
                                                          type: boolean
                                                      type: object
                                                  type: object
                                                kernelBoot:
                                                  description: Settings to set the kernel for booting.
                                                  properties:
                                                    container:
                                                      description: Container defines the container that containes kernel artifacts
                                                      properties:
                                                        image:
                                                          description: Image that contains initrd / kernel files.
                                                          type: string
                                                        imagePullPolicy:
                                                          description: |-
                                                            Image pull policy.
                                                            One of Always, Never, IfNotPresent.
                                                            Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                                            Cannot be updated.
                                                            More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                                          type: string
                                                        imagePullSecret:
                                                          description: ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.
                                                          type: string
                                                        initrdPath:
                                                          description: the fully-qualified path to the ramdisk image in the host OS
                                                          type: string
                                                        kernelPath:
                                                          description: The fully-qualified path to the kernel image in the host OS
                                                          type: string
                                                      required:
                                                        - image
                                                      type: object
                                                    kernelArgs:
                                                      description: Arguments to be passed to the kernel at boot time
                                                      type: string
                                                  type: object
                                                serial:
                                                  description: The system-serial-number in SMBIOS
                                                  type: string
                                                uuid:
                                                  description: |-
                                                    UUID reported by the vmi bios.
                                                    Defaults to a random generated uid.
                                                  type: string
                                              type: object
                                            ioThreadsPolicy:
                                              description: |-
                                                Controls whether or not disks will share IOThreads.
                                                Omitting IOThreadsPolicy disables use of IOThreads.
                                                One of: shared, auto
                                              type: string
                                            launchSecurity:
                                              description: Launch Security setting of the vmi.
                                              properties:
                                                sev:
                                                  description: AMD Secure Encrypted Virtualization (SEV).
                                                  properties:
                                                    attestation:
                                                      description: If specified, run the attestation process for a vmi.
                                                      type: object
                                                    dhCert:
                                                      description: Base64 encoded guest owner's Diffie-Hellman key.
                                                      type: string
                                                    policy:
                                                      description: |-
                                                        Guest policy flags as defined in AMD SEV API specification.
                                                        Note: due to security reasons it is not allowed to enable guest debugging. Therefore NoDebug flag is not exposed to users and is always true.
                                                      properties:
                                                        encryptedState:
                                                          description: |-
                                                            SEV-ES is required.
                                                            Defaults to false.
                                                          type: boolean
                                                      type: object
                                                    session:
                                                      description: Base64 encoded session blob.
                                                      type: string
                                                  type: object
                                              type: object
                                            machine:
                                              description: Machine type.
                                              properties:
                                                type:
                                                  description: QEMU machine type is the actual chipset of the VirtualMachineInstance.
                                                  type: string
                                              type: object
                                            memory:
                                              description: Memory allow specifying the VMI memory features.
                                              properties:
                                                guest:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: |-
                                                    Guest allows to specifying the amount of memory which is visible inside the Guest OS.
                                                    The Guest must lie between Requests and Limits from the resources section.
                                                    Defaults to the requested memory in the resources section if not specified.
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                                hugepages:
                                                  description: Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.
                                                  properties:
                                                    pageSize:
                                                      description: PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.
                                                      type: string
                                                  type: object
                                                maxGuest:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: |-
                                                    MaxGuest allows to specify the maximum amount of memory which is visible inside the Guest OS.
                                                    The delta between MaxGuest and Guest is the amount of memory that can be hot(un)plugged.
                                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                  x-kubernetes-int-or-string: true
                                              type: object
                                            resources:
                                              description: Resources describes the Compute Resources required by this vmi.
                                              properties:
                                                limits:
                                                  additionalProperties:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: |-
                                                    Limits describes the maximum amount of compute resources allowed.
                                                    Valid resource keys are "memory" and "cpu".
                                                  type: object
                                                overcommitGuestOverhead:
                                                  description: |-
                                                    Don't ask the scheduler to take the guest-management overhead into account. Instead
                                                    put the overhead only into the container's memory limit. This can lead to crashes if
                                                    all memory is in use on a node. Defaults to false.
                                                  type: boolean
                                                requests:
                                                  additionalProperties:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  description: |-
                                                    Requests is a description of the initial vmi resources.
                                                    Valid resource keys are "memory" and "cpu".
                                                  type: object
                                              type: object
                                          required:
                                            - devices
                                          type: object
                                        evictionStrategy:
                                          description: |-
                                            EvictionStrategy describes the strategy to follow when a node drain occurs.
                                            The possible options are:
                                            - "None": No action will be taken, according to the specified 'RunStrategy' the VirtualMachine will be restarted or shutdown.
                                            - "LiveMigrate": the VirtualMachineInstance will be migrated instead of being shutdown.
                                            - "LiveMigrateIfPossible": the same as "LiveMigrate" but only if the VirtualMachine is Live-Migratable, otherwise it will behave as "None".
                                            - "External": the VirtualMachineInstance will be protected by a PDB and `vmi.Status.EvacuationNodeName` will be set on eviction. This is mainly useful for cluster-api-provider-kubevirt (capk) which needs a way for VMI's to be blocked from eviction, yet signal capk that eviction has been called on the VMI so the capk controller can handle tearing the VMI down. Details can be found in the commit description https://github.com/kubevirt/kubevirt/commit/c1d77face705c8b126696bac9a3ee3825f27f1fa.
                                          type: string
                                        hostname:
                                          description: |-
                                            Specifies the hostname of the vmi
                                            If not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is configured properly.
                                          type: string
                                        livenessProbe:
                                          description: |-
                                            Periodic probe of VirtualMachineInstance liveness.
                                            VirtualmachineInstances will be stopped if the probe fails.
                                            Cannot be updated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          properties:
                                            exec:
                                              description: |-
                                                One and only one of the following should be specified.
                                                Exec specifies the action to take, it will be executed on the guest through the qemu-guest-agent.
                                                If the guest agent is not available, this probe will fail.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            failureThreshold:
                                              description: |-
                                                Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                                Defaults to 3. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            guestAgentPing:
                                              description: GuestAgentPing contacts the qemu-guest-agent for availability checks.
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                                - port
                                              type: object
                                            initialDelaySeconds:
                                              description: |-
                                                Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                              format: int32
                                              type: integer
                                            periodSeconds:
                                              description: |-
                                                How often (in seconds) to perform the probe.
                                                Default to 10 seconds. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            successThreshold:
                                              description: |-
                                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                                Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            tcpSocket:
                                              description: |-
                                                TCPSocket specifies an action involving a TCP port.
                                                TCP hooks not yet supported
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                                - port
                                              type: object
                                            timeoutSeconds:
                                              description: |-
                                                Number of seconds after which the probe times out.
                                                For exec probes the timeout fails the probe but does not terminate the command running on the guest.
                                                This means a blocking command can result in an increasing load on the guest.
                                                A small buffer will be added to the resulting workload exec probe to compensate for delays
                                                caused by the qemu guest exec mechanism.
                                                Defaults to 1 second. Minimum value is 1.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                              format: int32
                                              type: integer
                                          type: object
                                        networks:
                                          description: List of networks that can be attached to a vm's virtual interface.
                                          items:
                                            description: Network represents a network type and a resource that should be connected to the vm.
                                            properties:
                                              multus:
                                                description: Represents the multus cni network.
                                                properties:
                                                  default:
                                                    description: |-
                                                      Select the default network and add it to the
                                                      multus-cni.io/default-network annotation.
                                                    type: boolean
                                                  networkName:
                                                    description: |-
                                                      References to a NetworkAttachmentDefinition CRD object. Format:
                                                      <networkName>, <namespace>/<networkName>. If namespace is not
                                                      specified, VMI namespace is assumed.
                                                    type: string
                                                required:
                                                  - networkName
                                                type: object
                                              name:
                                                description: |-
                                                  Network name.
                                                  Must be a DNS_LABEL and unique within the vm.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              pod:
                                                description: Represents the stock pod network interface.
                                                properties:
                                                  vmIPv6NetworkCIDR:
                                                    description: |-
                                                      IPv6 CIDR for the vm network.
                                                      Defaults to fd10:0:2::/120 if not specified.
                                                    type: string
                                                  vmNetworkCIDR:
                                                    description: |-
                                                      CIDR for vm network.
                                                      Default 10.0.2.0/24 if not specified.
                                                    type: string
                                                type: object
                                            required:
                                              - name
                                            type: object
                                          maxItems: 256
                                          type: array
                                        nodeSelector:
                                          additionalProperties:
                                            type: string
                                          description: |-
                                            NodeSelector is a selector which must be true for the vmi to fit on a node.
                                            Selector which must match a node's labels for the vmi to be scheduled on that node.
                                            More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                                          type: object
                                        priorityClassName:
                                          description: |-
                                            If specified, indicates the pod's priority.
                                            If not specified, the pod priority will be default or zero if there is no
                                            default.
                                          type: string
                                        readinessProbe:
                                          description: |-
                                            Periodic probe of VirtualMachineInstance service readiness.
                                            VirtualmachineInstances will be removed from service endpoints if the probe fails.
                                            Cannot be updated.
                                            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                          properties:
                                            exec:
                                              description: |-
                                                One and only one of the following should be specified.
                                                Exec specifies the action to take, it will be executed on the guest through the qemu-guest-agent.
                                                If the guest agent is not available, this probe will fail.
                                              properties:
                                                command:
                                                  description: |-
                                                    Command is the command line to execute inside the container, the working directory for the
                                                    command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                                    not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                                    a shell, you need to explicitly call out to that shell.
                                                    Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                                  items:
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                              type: object
                                            failureThreshold:
                                              description: |-
                                                Minimum consecutive failures for the probe to be considered failed after having succeeded.
                                                Defaults to 3. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            guestAgentPing:
                                              description: GuestAgentPing contacts the qemu-guest-agent for availability checks.
                                              type: object
                                            httpGet:
                                              description: HTTPGet specifies the http request to perform.
                                              properties:
                                                host:
                                                  description: |-
                                                    Host name to connect to, defaults to the pod IP. You probably want to set
                                                    "Host" in httpHeaders instead.
                                                  type: string
                                                httpHeaders:
                                                  description: Custom headers to set in the request. HTTP allows repeated headers.
                                                  items:
                                                    description: HTTPHeader describes a custom header to be used in HTTP probes
                                                    properties:
                                                      name:
                                                        description: |-
                                                          The header field name.
                                                          This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                                        type: string
                                                      value:
                                                        description: The header field value
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                  x-kubernetes-list-type: atomic
                                                path:
                                                  description: Path to access on the HTTP server.
                                                  type: string
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: |-
                                                    Name or number of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                                scheme:
                                                  description: |-
                                                    Scheme to use for connecting to the host.
                                                    Defaults to HTTP.
                                                  type: string
                                              required:
                                                - port
                                              type: object
                                            initialDelaySeconds:
                                              description: |-
                                                Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                              format: int32
                                              type: integer
                                            periodSeconds:
                                              description: |-
                                                How often (in seconds) to perform the probe.
                                                Default to 10 seconds. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            successThreshold:
                                              description: |-
                                                Minimum consecutive successes for the probe to be considered successful after having failed.
                                                Defaults to 1. Must be 1 for liveness. Minimum value is 1.
                                              format: int32
                                              type: integer
                                            tcpSocket:
                                              description: |-
                                                TCPSocket specifies an action involving a TCP port.
                                                TCP hooks not yet supported
                                              properties:
                                                host:
                                                  description: 'Optional: Host name to connect to, defaults to the pod IP.'
                                                  type: string
                                                port:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  description: |-
                                                    Number or name of the port to access on the container.
                                                    Number must be in the range 1 to 65535.
                                                    Name must be an IANA_SVC_NAME.
                                                  x-kubernetes-int-or-string: true
                                              required:
                                                - port
                                              type: object
                                            timeoutSeconds:
                                              description: |-
                                                Number of seconds after which the probe times out.
                                                For exec probes the timeout fails the probe but does not terminate the command running on the guest.
                                                This means a blocking command can result in an increasing load on the guest.
                                                A small buffer will be added to the resulting workload exec probe to compensate for delays
                                                caused by the qemu guest exec mechanism.
                                                Defaults to 1 second. Minimum value is 1.
                                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                                              format: int32
                                              type: integer
                                          type: object
                                        schedulerName:
                                          description: |-
                                            If specified, the VMI will be dispatched by specified scheduler.
                                            If not specified, the VMI will be dispatched by default scheduler.
                                          type: string
                                        startStrategy:
                                          description: StartStrategy can be set to "Paused" if Virtual Machine should be started in paused state.
                                          type: string
                                        subdomain:
                                          description: |-
                                            If specified, the fully qualified vmi hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
                                            If not specified, the vmi will not have a domainname at all. The DNS entry will resolve to the vmi,
                                            no matter if the vmi itself can pick up a hostname.
                                          type: string
                                        terminationGracePeriodSeconds:
                                          description: Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.
                                          format: int64
                                          type: integer
                                        tolerations:
                                          description: If toleration is specified, obey all the toleration rules.
                                          items:
                                            description: |-
                                              The pod this Toleration is attached to tolerates any taint that matches
                                              the triple <key,value,effect> using the matching operator <operator>.
                                            properties:
                                              effect:
                                                description: |-
                                                  Effect indicates the taint effect to match. Empty means match all taint effects.
                                                  When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                                type: string
                                              key:
                                                description: |-
                                                  Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                                  If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                                type: string
                                              operator:
                                                description: |-
                                                  Operator represents a key's relationship to the value.
                                                  Valid operators are Exists and Equal. Defaults to Equal.
                                                  Exists is equivalent to wildcard for value, so that a pod can
                                                  tolerate all taints of a particular category.
                                                type: string
                                              tolerationSeconds:
                                                description: |-
                                                  TolerationSeconds represents the period of time the toleration (which must be
                                                  of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                                  it is not set, which means tolerate the taint forever (do not evict). Zero and
                                                  negative values will be treated as 0 (evict immediately) by the system.
                                                format: int64
                                                type: integer
                                              value:
                                                description: |-
                                                  Value is the taint value the toleration matches to.
                                                  If the operator is Exists, the value should be empty, otherwise just a regular string.
                                                type: string
                                            type: object
                                          type: array
                                        topologySpreadConstraints:
                                          description: |-
                                            TopologySpreadConstraints describes how a group of VMIs will be spread across a given topology
                                            domains. K8s scheduler will schedule VMI pods in a way which abides by the constraints.
                                          items:
                                            description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
                                            properties:
                                              labelSelector:
                                                description: |-
                                                  LabelSelector is used to find matching pods.
                                                  Pods that match this label selector are counted to determine the number of pods
                                                  in their corresponding topology domain.
                                                properties:
                                                  matchExpressions:
                                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                                    items:
                                                      description: |-
                                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                                        relates the key and values.
                                                      properties:
                                                        key:
                                                          description: key is the label key that the selector applies to.
                                                          type: string
                                                        operator:
                                                          description: |-
                                                            operator represents a key's relationship to a set of values.
                                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                                          type: string
                                                        values:
                                                          description: |-
                                                            values is an array of string values. If the operator is In or NotIn,
                                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                                            the values array must be empty. This array is replaced during a strategic
                                                            merge patch.
                                                          items:
                                                            type: string
                                                          type: array
                                                          x-kubernetes-list-type: atomic
                                                      required:
                                                        - key
                                                        - operator
                                                      type: object
                                                    type: array
                                                    x-kubernetes-list-type: atomic
                                                  matchLabels:
                                                    additionalProperties:
                                                      type: string
                                                    description: |-
                                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                                    type: object
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              matchLabelKeys:
                                                description: |-
                                                  MatchLabelKeys is a set of pod label keys to select the pods over which
                                                  spreading will be calculated. The keys are used to lookup values from the
                                                  incoming pod labels, those key-value labels are ANDed with labelSelector
                                                  to select the group of existing pods over which spreading will be calculated
                                                  for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                                                  MatchLabelKeys cannot be set when LabelSelector isn't set.
                                                  Keys that don't exist in the incoming pod labels will
                                                  be ignored. A null or empty list means only match against labelSelector.

                                                  This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                                                items:
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: atomic
                                              maxSkew:
                                                description: |-
                                                  MaxSkew describes the degree to which pods may be unevenly distributed.
                                                  When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                                                  between the number of matching pods in the target topology and the global minimum.
                                                  The global minimum is the minimum number of matching pods in an eligible domain
                                                  or zero if the number of eligible domains is less than MinDomains.
                                                  For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                                  labelSelector spread as 2/2/1:
                                                  In this case, the global minimum is 1.
                                                  | zone1 | zone2 | zone3 |
                                                  |  P P  |  P P  |   P   |
                                                  - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                                                  scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                                                  violate MaxSkew(1).
                                                  - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                                                  When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                                                  to topologies that satisfy it.
                                                  It's a required field. Default value is 1 and 0 is not allowed.
                                                format: int32
                                                type: integer
                                              minDomains:
                                                description: |-
                                                  MinDomains indicates a minimum number of eligible domains.
                                                  When the number of eligible domains with matching topology keys is less than minDomains,
                                                  Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                                                  And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                                                  this value has no effect on scheduling.
                                                  As a result, when the number of eligible domains is less than minDomains,
                                                  scheduler won't schedule more than maxSkew Pods to those domains.
                                                  If value is nil, the constraint behaves as if MinDomains is equal to 1.
                                                  Valid values are integers greater than 0.
                                                  When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                                                  For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                                                  labelSelector spread as 2/2/2:
                                                  | zone1 | zone2 | zone3 |
                                                  |  P P  |  P P  |  P P  |
                                                  The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                                                  In this situation, new pod with the same labelSelector cannot be scheduled,
                                                  because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                                                  it will violate MaxSkew.
                                                format: int32
                                                type: integer
                                              nodeAffinityPolicy:
                                                description: |-
                                                  NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                                                  when calculating pod topology spread skew. Options are:
                                                  - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                                                  - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                                                  If this value is nil, the behavior is equivalent to the Honor policy.
                                                  This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                                type: string
                                              nodeTaintsPolicy:
                                                description: |-
                                                  NodeTaintsPolicy indicates how we will treat node taints when calculating
                                                  pod topology spread skew. Options are:
                                                  - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                                                  has a toleration, are included.
                                                  - Ignore: node taints are ignored. All nodes are included.

                                                  If this value is nil, the behavior is equivalent to the Ignore policy.
                                                  This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                                                type: string
                                              topologyKey:
                                                description: |-
                                                  TopologyKey is the key of node labels. Nodes that have a label with this key
                                                  and identical values are considered to be in the same topology.
                                                  We consider each <key, value> as a "bucket", and try to put balanced number
                                                  of pods into each bucket.
                                                  We define a domain as a particular instance of a topology.
                                                  Also, we define an eligible domain as a domain whose nodes meet the requirements of
                                                  nodeAffinityPolicy and nodeTaintsPolicy.
                                                  e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                                                  And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                                                  It's a required field.
                                                type: string
                                              whenUnsatisfiable:
                                                description: |-
                                                  WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                                                  the spread constraint.
                                                  - DoNotSchedule (default) tells the scheduler not to schedule it.
                                                  - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                                                    but giving higher precedence to topologies that would help reduce the
                                                    skew.
                                                  A constraint is considered "Unsatisfiable" for an incoming pod
                                                  if and only if every possible node assignment for that pod would violate
                                                  "MaxSkew" on some topology.
                                                  For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                                                  labelSelector spread as 3/1/1:
                                                  | zone1 | zone2 | zone3 |
                                                  | P P P |   P   |   P   |
                                                  If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                                                  to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                                                  MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                                                  won't make it *more* imbalanced.
                                                  It's a required field.
                                                type: string
                                            required:
                                              - maxSkew
                                              - topologyKey
                                              - whenUnsatisfiable
                                            type: object
                                          type: array
                                          x-kubernetes-list-map-keys:
                                            - topologyKey
                                            - whenUnsatisfiable
                                          x-kubernetes-list-type: map
                                        volumes:
                                          description: List of volumes that can be mounted by disks belonging to the vmi.
                                          items:
                                            description: Volume represents a named volume in a vmi.
                                            properties:
                                              cloudInitConfigDrive:
                                                description: |-
                                                  CloudInitConfigDrive represents a cloud-init Config Drive user-data source.
                                                  The Config Drive data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest.
                                                  More info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html
                                                properties:
                                                  networkData:
                                                    description: NetworkData contains config drive inline cloud-init networkdata.
                                                    type: string
                                                  networkDataBase64:
                                                    description: NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.
                                                    type: string
                                                  networkDataSecretRef:
                                                    description: NetworkDataSecretRef references a k8s secret that contains config drive networkdata.
                                                    properties:
                                                      name:
                                                        default: ""
                                                        description: |-
                                                          Name of the referent.
                                                          This field is effectively required, but due to backwards compatibility is
                                                          allowed to be empty. Instances of this type with an empty value here are
                                                          almost certainly wrong.
                                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  secretRef:
                                                    description: UserDataSecretRef references a k8s secret that contains config drive userdata.
                                                    properties:
                                                      name:
                                                        default: ""
                                                        description: |-
                                                          Name of the referent.
                                                          This field is effectively required, but due to backwards compatibility is
                                                          allowed to be empty. Instances of this type with an empty value here are
                                                          almost certainly wrong.
                                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  userData:
                                                    description: UserData contains config drive inline cloud-init userdata.
                                                    type: string
                                                  userDataBase64:
                                                    description: UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.
                                                    type: string
                                                type: object
                                              cloudInitNoCloud:
                                                description: |-
                                                  CloudInitNoCloud represents a cloud-init NoCloud user-data source.
                                                  The NoCloud data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest.
                                                  More info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html
                                                properties:
                                                  networkData:
                                                    description: NetworkData contains NoCloud inline cloud-init networkdata.
                                                    type: string
                                                  networkDataBase64:
                                                    description: NetworkDataBase64 contains NoCloud cloud-init networkdata as a base64 encoded string.
                                                    type: string
                                                  networkDataSecretRef:
                                                    description: NetworkDataSecretRef references a k8s secret that contains NoCloud networkdata.
                                                    properties:
                                                      name:
                                                        default: ""
                                                        description: |-
                                                          Name of the referent.
                                                          This field is effectively required, but due to backwards compatibility is
                                                          allowed to be empty. Instances of this type with an empty value here are
                                                          almost certainly wrong.
                                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  secretRef:
                                                    description: UserDataSecretRef references a k8s secret that contains NoCloud userdata.
                                                    properties:
                                                      name:
                                                        default: ""
                                                        description: |-
                                                          Name of the referent.
                                                          This field is effectively required, but due to backwards compatibility is
                                                          allowed to be empty. Instances of this type with an empty value here are
                                                          almost certainly wrong.
                                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  userData:
                                                    description: UserData contains NoCloud inline cloud-init userdata.
                                                    type: string
                                                  userDataBase64:
                                                    description: UserDataBase64 contains NoCloud cloud-init userdata as a base64 encoded string.
                                                    type: string
                                                type: object
                                              configMap:
                                                description: |-
                                                  ConfigMapSource represents a reference to a ConfigMap in the same namespace.
                                                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/
                                                properties:
                                                  name:
                                                    default: ""
                                                    description: |-
                                                      Name of the referent.
                                                      This field is effectively required, but due to backwards compatibility is
                                                      allowed to be empty. Instances of this type with an empty value here are
                                                      almost certainly wrong.
                                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                    type: string
                                                  optional:
                                                    description: Specify whether the ConfigMap or it's keys must be defined
                                                    type: boolean
                                                  volumeLabel:
                                                    description: |-
                                                      The volume label of the resulting disk inside the VMI.
                                                      Different bootstrapping mechanisms require different values.
                                                      Typical values are "cidata" (cloud-init), "config-2" (cloud-init) or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                                x-kubernetes-map-type: atomic
                                              containerDisk:
                                                description: |-
                                                  ContainerDisk references a docker image, embedding a qcow or raw disk.
                                                  More info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html
                                                properties:
                                                  image:
                                                    description: Image is the name of the image with the embedded disk.
                                                    type: string
                                                  imagePullPolicy:
                                                    description: |-
                                                      Image pull policy.
                                                      One of Always, Never, IfNotPresent.
                                                      Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                                                      Cannot be updated.
                                                      More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                                                    type: string
                                                  imagePullSecret:
                                                    description: ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.
                                                    type: string
                                                  path:
                                                    description: Path defines the path to disk file in the container
                                                    type: string
                                                required:
                                                  - image
                                                type: object
                                              dataVolume:
                                                description: |-
                                                  DataVolume represents the dynamic creation a PVC for this volume as well as
                                                  the process of populating that PVC with a disk image.
                                                properties:
                                                  hotpluggable:
                                                    description: Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.
                                                    type: boolean
                                                  name:
                                                    description: |-
                                                      Name of both the DataVolume and the PVC in the same namespace.
                                                      After PVC population the DataVolume is garbage collected by default.
                                                    type: string
                                                required:
                                                  - name
                                                type: object
                                              downwardAPI:
                                                description: DownwardAPI represents downward API about the pod that should populate this volume
                                                properties:
                                                  fields:
                                                    description: Fields is a list of downward API volume file
                                                    items:
                                                      description: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                                      properties:
                                                        fieldRef:
                                                          description: 'Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.'
                                                          properties:
                                                            apiVersion:
                                                              description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                                              type: string
                                                            fieldPath:
                                                              description: Path of the field to select in the specified API version.
                                                              type: string
                                                          required:
                                                            - fieldPath
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                        mode:
                                                          description: |-
                                                            Optional: mode bits used to set permissions on this file, must be an octal value
                                                            between 0000 and 0777 or a decimal value between 0 and 511.
                                                            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                                            If not specified, the volume defaultMode will be used.
                                                            This might be in conflict with other options that affect the file
                                                            mode, like fsGroup, and the result can be other mode bits set.
                                                          format: int32
                                                          type: integer
                                                        path:
                                                          description: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                                          type: string
                                                        resourceFieldRef:
                                                          description: |-
                                                            Selects a resource of the container: only resources limits and requests
                                                            (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
                                                          properties:
                                                            containerName:
                                                              description: 'Container name: required for volumes, optional for env vars'
                                                              type: string
                                                            divisor:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              description: Specifies the output format of the exposed resources, defaults to "1"
                                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                              x-kubernetes-int-or-string: true
                                                            resource:
                                                              description: 'Required: resource to select'
                                                              type: string
                                                          required:
                                                            - resource
                                                          type: object
                                                          x-kubernetes-map-type: atomic
                                                      required:
                                                        - path
                                                      type: object
                                                    type: array
                                                  volumeLabel:
                                                    description: |-
                                                      The volume label of the resulting disk inside the VMI.
                                                      Different bootstrapping mechanisms require different values.
                                                      Typical values are "cidata" (cloud-init), "config-2" (cloud-init) or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              downwardMetrics:
                                                description: |-
                                                  DownwardMetrics adds a very small disk to VMIs which contains a limited view of host and guest
                                                  metrics. The disk content is compatible with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.
                                                type: object
                                              emptyDisk:
                                                description: |-
                                                  EmptyDisk represents a temporary disk which shares the vmis lifecycle.
                                                  More info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html
                                                properties:
                                                  capacity:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: Capacity of the sparse disk.
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                required:
                                                  - capacity
                                                type: object
                                              ephemeral:
                                                description: Ephemeral is a special volume source that "wraps" specified source and provides copy-on-write image on top of it.
                                                properties:
                                                  persistentVolumeClaim:
                                                    description: |-
                                                      PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                                      Directly attached to the vmi via qemu.
                                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                                    properties:
                                                      claimName:
                                                        description: |-
                                                          claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                                        type: string
                                                      readOnly:
                                                        description: |-
                                                          readOnly Will force the ReadOnly setting in VolumeMounts.
                                                          Default false.
                                                        type: boolean
                                                    required:
                                                      - claimName
                                                    type: object
                                                type: object
                                              hostDisk:
                                                description: HostDisk represents a disk created on the cluster level
                                                properties:
                                                  capacity:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: Capacity of the sparse disk
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  path:
                                                    description: The path to HostDisk image located on the cluster
                                                    type: string
                                                  shared:
                                                    description: Shared indicate whether the path is shared between nodes
                                                    type: boolean
                                                  type:
                                                    description: |-
                                                      Contains information if disk.img exists or should be created
                                                      allowed options are 'Disk' and 'DiskOrCreate'
                                                    type: string
                                                required:
                                                  - path
                                                  - type
                                                type: object
                                              memoryDump:
                                                description: MemoryDump is attached to the virt launcher and is populated with a memory dump of the vmi
                                                properties:
                                                  claimName:
                                                    description: |-
                                                      claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                                    type: string
                                                  hotpluggable:
                                                    description: Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.
                                                    type: boolean
                                                  readOnly:
                                                    description: |-
                                                      readOnly Will force the ReadOnly setting in VolumeMounts.
                                                      Default false.
                                                    type: boolean
                                                required:
                                                  - claimName
                                                type: object
                                              name:
                                                description: |-
                                                  Volume's name.
                                                  Must be a DNS_LABEL and unique within the vmi.
                                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                type: string
                                              persistentVolumeClaim:
                                                description: |-
                                                  PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.
                                                  Directly attached to the vmi via qemu.
                                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                                properties:
                                                  claimName:
                                                    description: |-
                                                      claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                                                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                                                    type: string
                                                  hotpluggable:
                                                    description: Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.
                                                    type: boolean
                                                  readOnly:
                                                    description: |-
                                                      readOnly Will force the ReadOnly setting in VolumeMounts.
                                                      Default false.
                                                    type: boolean
                                                required:
                                                  - claimName
                                                type: object
                                              secret:
                                                description: |-
                                                  SecretVolumeSource represents a reference to a secret data in the same namespace.
                                                  More info: https://kubernetes.io/docs/concepts/configuration/secret/
                                                properties:
                                                  optional:
                                                    description: Specify whether the Secret or it's keys must be defined
                                                    type: boolean
                                                  secretName:
                                                    description: |-
                                                      Name of the secret in the pod's namespace to use.
                                                      More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                                                    type: string
                                                  volumeLabel:
                                                    description: |-
                                                      The volume label of the resulting disk inside the VMI.
                                                      Different bootstrapping mechanisms require different values.
                                                      Typical values are "cidata" (cloud-init), "config-2" (cloud-init) or "OEMDRV" (kickstart).
                                                    type: string
                                                type: object
                                              serviceAccount:
                                                description: |-
                                                  ServiceAccountVolumeSource represents a reference to a service account.
                                                  There can only be one volume of this type!
                                                  More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                                                properties:
                                                  serviceAccountName:
                                                    description: |-
                                                      Name of the service account in the pod's namespace to use.
                                                      More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
                                                    type: string
                                                type: object
                                              sysprep:
                                                description: Represents a Sysprep volume source.
                                                properties:
                                                  configMap:
                                                    description: ConfigMap references a ConfigMap that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.
                                                    properties:
                                                      name:
                                                        default: ""
                                                        description: |-
                                                          Name of the referent.
                                                          This field is effectively required, but due to backwards compatibility is
                                                          allowed to be empty. Instances of this type with an empty value here are
                                                          almost certainly wrong.
                                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                  secret:
                                                    description: Secret references a k8s Secret that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.
                                                    properties:
                                                      name:
                                                        default: ""
                                                        description: |-
                                                          Name of the referent.
                                                          This field is effectively required, but due to backwards compatibility is
                                                          allowed to be empty. Instances of this type with an empty value here are
                                                          almost certainly wrong.
                                                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                                        type: string
                                                    type: object
                                                    x-kubernetes-map-type: atomic
                                                type: object
                                            required:
                                              - name
                                            type: object
                                          maxItems: 256
                                          type: array
                                      required:
                                        - domain
                                      type: object
                                  type: object
                                updateVolumesStrategy:
                                  description: UpdateVolumesStrategy is the strategy to apply on volumes updates
                                  type: string
                              required:
                                - template
                              type: object
                          type: object
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: openstackclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: OpenStackCluster
    listKind: OpenStackClusterList
    plural: openstackclusters
    shortNames:
      - osc
    singular: openstackcluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this OpenStackCluster belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Cluster infrastructure is ready for OpenStack instances
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: Network the cluster is using
          jsonPath: .status.network.id
          name: Network
          type: string
        - description: API Endpoint
          jsonPath: .spec.controlPlaneEndpoint.host
          name: Endpoint
          priority: 1
          type: string
        - description: Bastion address for breakglass access
          jsonPath: .status.bastion.floatingIP
          name: Bastion IP
          type: string
        - description: Time duration since creation of OpenStackCluster
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: OpenStackCluster is the Schema for the openstackclusters API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OpenStackClusterSpec defines the desired state of OpenStackCluster.
              properties:
                apiServerFixedIP:
                  description: |-
                    APIServerFixedIP is the fixed IP which will be associated with the API server.
                    In the case where the API server has a floating IP but not a managed load balancer,
                    this field is not used.
                    If a managed load balancer is used and this field is not specified, a fixed IP will
                    be dynamically allocated for the load balancer.
                    If a managed load balancer is not used AND the API server floating IP is disabled,
                    this field MUST be specified and should correspond to a pre-allocated port that
                    holds the fixed IP to be used as a VIP.
                  type: string
                apiServerFloatingIP:
                  description: |-
                    APIServerFloatingIP is the floatingIP which will be associated with the API server.
                    The floatingIP will be created if it does not already exist.
                    If not specified, a new floatingIP is allocated.
                    This field is not used if DisableAPIServerFloatingIP is set to true.
                  type: string
                apiServerLoadBalancer:
                  description: |-
                    APIServerLoadBalancer configures the optional LoadBalancer for the APIServer.
                    If not specified, no load balancer will be created for the API server.
                  properties:
                    additionalPorts:
                      description: AdditionalPorts adds additional tcp ports to the load balancer.
                      items:
                        type: integer
                      type: array
                      x-kubernetes-list-type: set
                    allowedCIDRs:
                      description: AllowedCIDRs restrict access to all API-Server listeners to the given address CIDRs.
                      items:
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    availabilityZone:
                      description: AvailabilityZone is the failure domain that will be used to create the APIServerLoadBalancer Spec.
                      type: string
                    enabled:
                      default: true
                      description: |-
                        Enabled defines whether a load balancer should be created. This value
                        defaults to true if an APIServerLoadBalancer is given.

                        There is no reason to set this to false. To disable creation of the
                        API server loadbalancer, omit the APIServerLoadBalancer field in the
                        cluster spec instead.
                      type: boolean
                    flavor:
                      description: Flavor is the flavor name that will be used to create the APIServerLoadBalancer Spec.
                      type: string
                    network:
                      description: Network defines which network should the load balancer be allocated on.
                      maxProperties: 1
                      minProperties: 1
                      properties:
                        filter:
                          description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                          minProperties: 1
                          properties:
                            description:
                              type: string
                            name:
                              type: string
                            notTags:
                              description: |-
                                NotTags is a list of tags to filter by. If specified, resources which
                                contain all of the given tags will be excluded from the result.
                              items:
                                description: |-
                                  NeutronTag represents a tag on a Neutron resource.
                                  It may not be empty and may not contain commas.
                                minLength: 1
                                pattern: ^[^,]+$
                                type: string
                              type: array
                              x-kubernetes-list-type: set
                            notTagsAny:
                              description: |-
                                NotTagsAny is a list of tags to filter by. If specified, resources
                                which contain any of the given tags will be excluded from the result.
                              items:
                                description: |-
                                  NeutronTag represents a tag on a Neutron resource.
                                  It may not be empty and may not contain commas.
                                minLength: 1
                                pattern: ^[^,]+$
                                type: string
                              type: array
                              x-kubernetes-list-type: set
                            projectID:
                              type: string
                            tags:
                              description: |-
                                Tags is a list of tags to filter by. If specified, the resource must
                                have all of the tags specified to be included in the result.
                              items:
                                description: |-
                                  NeutronTag represents a tag on a Neutron resource.
                                  It may not be empty and may not contain commas.
                                minLength: 1
                                pattern: ^[^,]+$
                                type: string
                              type: array
                              x-kubernetes-list-type: set
                            tagsAny:
                              description: |-
                                TagsAny is a list of tags to filter by. If specified, the resource
                                must have at least one of the tags specified to be included in the
                                result.
                              items:
                                description: |-
                                  NeutronTag represents a tag on a Neutron resource.
                                  It may not be empty and may not contain commas.
                                minLength: 1
                                pattern: ^[^,]+$
                                type: string
                              type: array
                              x-kubernetes-list-type: set
                          type: object
                        id:
                          description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                          format: uuid
                          type: string
                      type: object
                    provider:
                      description: |-
                        Provider specifies name of a specific Octavia provider to use for the
                        API load balancer. The Octavia default will be used if it is not
                        specified.
                      type: string
                    subnets:
                      description: |-
                        Subnets define which subnets should the load balancer be allocated on.
                        It is expected that subnets are located on the network specified in this resource.
                        Only the first element is taken into account.
                        kubebuilder:validation:MaxLength:=2
                      items:
                        description: SubnetParam specifies an OpenStack subnet to use. It may be specified by either ID or filter, but not both.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          filter:
                            description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                            minProperties: 1
                            properties:
                              cidr:
                                type: string
                              description:
                                type: string
                              gatewayIP:
                                type: string
                              ipVersion:
                                type: integer
                              ipv6AddressMode:
                                type: string
                              ipv6RAMode:
                                type: string
                              name:
                                type: string
                              notTags:
                                description: |-
                                  NotTags is a list of tags to filter by. If specified, resources which
                                  contain all of the given tags will be excluded from the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              notTagsAny:
                                description: |-
                                  NotTagsAny is a list of tags to filter by. If specified, resources
                                  which contain any of the given tags will be excluded from the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              projectID:
                                type: string
                              tags:
                                description: |-
                                  Tags is a list of tags to filter by. If specified, the resource must
                                  have all of the tags specified to be included in the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              tagsAny:
                                description: |-
                                  TagsAny is a list of tags to filter by. If specified, the resource
                                  must have at least one of the tags specified to be included in the
                                  result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          id:
                            description: ID is the uuid of the subnet. It will not be validated.
                            format: uuid
                            type: string
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                  required:
                    - enabled
                  type: object
                apiServerPort:
                  description: |-
                    APIServerPort is the port on which the listener on the APIServer
                    will be created. If specified, it must be an integer between 0 and 65535.
                  maximum: 65535
                  minimum: 0
                  type: integer
                bastion:
                  description: |-
                    Bastion is the OpenStack instance to login the nodes

                    As a rolling update is not ideal during a bastion host session, we
                    prevent changes to a running bastion configuration. To make changes, it's required
                    to first set `enabled: false` which will remove the bastion and then changes can be made.
                  properties:
                    availabilityZone:
                      description: AvailabilityZone is the failure domain that will be used to create the Bastion Spec.
                      type: string
                    enabled:
                      default: true
                      description: |-
                        Enabled means that bastion is enabled. The bastion is enabled by
                        default if this field is not specified. Set this field to false to disable the
                        bastion.

                        It is not currently possible to remove the bastion from the cluster
                        spec without first disabling it by setting this field to false and
                        waiting until the bastion has been deleted.
                      type: boolean
                    floatingIP:
                      description: |-
                        FloatingIP which will be associated to the bastion machine. It's the IP address, not UUID.
                        The floating IP should already exist and should not be associated with a port. If FIP of this address does not
                        exist, CAPO will try to create it, but by default only OpenStack administrators have privileges to do so.
                      format: ipv4
                      type: string
                    spec:
                      description: Spec for the bastion itself
                      properties:
                        additionalBlockDevices:
                          description: AdditionalBlockDevices is a list of specifications for additional block devices to attach to the server instance
                          items:
                            description: AdditionalBlockDevice is a block device to attach to the server.
                            properties:
                              name:
                                description: |-
                                  Name of the block device in the context of a machine.
                                  If the block device is a volume, the Cinder volume will be named
                                  as a combination of the machine name and this name.
                                  Also, this name will be used for tagging the block device.
                                  Information about the block device tag can be obtained from the OpenStack
                                  metadata API or the config drive.
                                  Name cannot be 'root', which is reserved for the root volume.
                                type: string
                              sizeGiB:
                                description: SizeGiB is the size of the block device in gibibytes (GiB).
                                minimum: 1
                                type: integer
                              storage:
                                description: |-
                                  Storage specifies the storage type of the block device and
                                  additional storage options.
                                properties:
                                  type:
                                    description: |-
                                      Type is the type of block device to create.
                                      This can be either "Volume" or "Local".
                                    type: string
                                  volume:
                                    description: Volume contains additional storage options for a volume block device.
                                    properties:
                                      availabilityZone:
                                        description: |-
                                          AvailabilityZone is the volume availability zone to create the volume
                                          in. If not specified, the volume will be created without an explicit
                                          availability zone.
                                        properties:
                                          from:
                                            default: Name
                                            description: |-
                                              From specifies where we will obtain the availability zone for the
                                              volume. The options are "Name" and "Machine". If "Name" is specified
                                              then the Name field must also be specified. If "Machine" is specified
                                              the volume will use the value of FailureDomain, if any, from the
                                              associated Machine.
                                            enum:
                                              - Name
                                              - Machine
                                            type: string
                                          name:
                                            description: |-
                                              Name is the name of a volume availability zone to use. It is required
                                              if From is "Name". The volume availability zone name may not contain
                                              spaces.
                                            minLength: 1
                                            pattern: ^[^ ]+$
                                            type: string
                                        type: object
                                        x-kubernetes-validations:
                                          - message: name is required when from is 'Name' or default
                                            rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                                      type:
                                        description: |-
                                          Type is the Cinder volume type of the volume.
                                          If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                                          will be used.
                                        type: string
                                    type: object
                                required:
                                  - type
                                type: object
                            required:
                              - name
                              - sizeGiB
                              - storage
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        configDrive:
                          description: Config Drive support
                          type: boolean
                        flavor:
                          description: The flavor reference for the flavor for your server instance.
                          minLength: 1
                          type: string
                        flavorID:
                          description: |-
                            FlavorID allows flavors to be specified by ID.  This field takes precedence
                            over Flavor.
                          minLength: 1
                          type: string
                        floatingIPPoolRef:
                          description: |-
                            floatingIPPoolRef is a reference to a IPPool that will be assigned
                            to an IPAddressClaim. Once the IPAddressClaim is fulfilled, the FloatingIP
                            will be assigned to the OpenStackMachine.
                          properties:
                            apiGroup:
                              description: |-
                                APIGroup is the group for the resource being referenced.
                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                          x-kubernetes-map-type: atomic
                        identityRef:
                          description: |-
                            IdentityRef is a reference to a secret holding OpenStack credentials
                            to be used when reconciling this machine. If not specified, the
                            credentials specified in the cluster will be used.
                          properties:
                            cloudName:
                              description: CloudName specifies the name of the entry in the clouds.yaml file to use.
                              type: string
                            name:
                              description: |-
                                Name is the name of a secret in the same namespace as the resource being provisioned.
                                The secret must contain a key named `clouds.yaml` which contains an OpenStack clouds.yaml file.
                                The secret may optionally contain a key named `cacert` containing a PEM-encoded CA certificate.
                              type: string
                            region:
                              description: |-
                                Region specifies an OpenStack region to use. If specified, it overrides
                                any value in clouds.yaml. If specified for an OpenStackMachine, its
                                value will be included in providerID.
                              type: string
                          required:
                            - cloudName
                            - name
                          type: object
                          x-kubernetes-validations:
                            - message: region is immutable
                              rule: (!has(self.region) && !has(oldSelf.region)) || self.region == oldSelf.region
                        image:
                          description: |-
                            The image to use for your server instance.
                            If the rootVolume is specified, this will be used when creating the root volume.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            filter:
                              description: |-
                                Filter describes a query for an image. If specified, the combination
                                of name and tags must return a single matching image or an error will
                                be raised.
                              minProperties: 1
                              properties:
                                name:
                                  description: The name of the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                                  type: string
                                tags:
                                  description: The tags associated with the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                              type: object
                            id:
                              description: ID is the uuid of the image. ID will not be validated before use.
                              format: uuid
                              type: string
                            imageRef:
                              description: |-
                                ImageRef is a reference to an ORC Image in the same namespace as the
                                referring object.
                              properties:
                                name:
                                  description: Name is the name of the referenced resource
                                  type: string
                              required:
                                - name
                              type: object
                          type: object
                        ports:
                          description: |-
                            Ports to be attached to the server instance. They are created if a port with the given name does not already exist.
                            If not specified a default port will be added for the default cluster network.
                          items:
                            properties:
                              adminStateUp:
                                description: AdminStateUp specifies whether the port should be created in the up (true) or down (false) state. The default is up.
                                type: boolean
                              allowedAddressPairs:
                                description: |-
                                  AllowedAddressPairs is a list of address pairs which Neutron will
                                  allow the port to send traffic from in addition to the port's
                                  addresses. If not specified, the MAC Address will be the MAC Address
                                  of the port. Depending on the configuration of Neutron, it may be
                                  supported to specify a CIDR instead of a specific IP address.
                                items:
                                  properties:
                                    ipAddress:
                                      description: |-
                                        IPAddress is the IP address of the allowed address pair. Depending on
                                        the configuration of Neutron, it may be supported to specify a CIDR
                                        instead of a specific IP address.
                                      type: string
                                    macAddress:
                                      description: |-
                                        MACAddress is the MAC address of the allowed address pair. If not
                                        specified, the MAC address will be the MAC address of the port.
                                      type: string
                                  required:
                                    - ipAddress
                                  type: object
                                type: array
                              description:
                                description: Description is a human-readable description for the port.
                                type: string
                              disablePortSecurity:
                                description: |-
                                  DisablePortSecurity enables or disables the port security when set.
                                  When not set, it takes the value of the corresponding field at the network level.
                                type: boolean
                              fixedIPs:
                                description: FixedIPs is a list of pairs of subnet and/or IP address to assign to the port. If specified, these must be subnets of the port's network.
                                items:
                                  properties:
                                    ipAddress:
                                      description: |-
                                        IPAddress is a specific IP address to assign to the port. If Subnet
                                        is also specified, IPAddress must be a valid IP address in the
                                        subnet. If Subnet is not specified, IPAddress must be a valid IP
                                        address in any subnet of the port's network.
                                      type: string
                                    subnet:
                                      description: |-
                                        Subnet is an openstack subnet query that will return the id of a subnet to create
                                        the fixed IP of a port in. This query must not return more than one subnet.
                                      maxProperties: 1
                                      minProperties: 1
                                      properties:
                                        filter:
                                          description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                                          minProperties: 1
                                          properties:
                                            cidr:
                                              type: string
                                            description:
                                              type: string
                                            gatewayIP:
                                              type: string
                                            ipVersion:
                                              type: integer
                                            ipv6AddressMode:
                                              type: string
                                            ipv6RAMode:
                                              type: string
                                            name:
                                              type: string
                                            notTags:
                                              description: |-
                                                NotTags is a list of tags to filter by. If specified, resources which
                                                contain all of the given tags will be excluded from the result.
                                              items:
                                                description: |-
                                                  NeutronTag represents a tag on a Neutron resource.
                                                  It may not be empty and may not contain commas.
                                                minLength: 1
                                                pattern: ^[^,]+$
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: set
                                            notTagsAny:
                                              description: |-
                                                NotTagsAny is a list of tags to filter by. If specified, resources
                                                which contain any of the given tags will be excluded from the result.
                                              items:
                                                description: |-
                                                  NeutronTag represents a tag on a Neutron resource.
                                                  It may not be empty and may not contain commas.
                                                minLength: 1
                                                pattern: ^[^,]+$
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: set
                                            projectID:
                                              type: string
                                            tags:
                                              description: |-
                                                Tags is a list of tags to filter by. If specified, the resource must
                                                have all of the tags specified to be included in the result.
                                              items:
                                                description: |-
                                                  NeutronTag represents a tag on a Neutron resource.
                                                  It may not be empty and may not contain commas.
                                                minLength: 1
                                                pattern: ^[^,]+$
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: set
                                            tagsAny:
                                              description: |-
                                                TagsAny is a list of tags to filter by. If specified, the resource
                                                must have at least one of the tags specified to be included in the
                                                result.
                                              items:
                                                description: |-
                                                  NeutronTag represents a tag on a Neutron resource.
                                                  It may not be empty and may not contain commas.
                                                minLength: 1
                                                pattern: ^[^,]+$
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: set
                                          type: object
                                        id:
                                          description: ID is the uuid of the subnet. It will not be validated.
                                          format: uuid
                                          type: string
                                      type: object
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              hostID:
                                description: HostID specifies the ID of the host where the port resides.
                                type: string
                              macAddress:
                                description: MACAddress specifies the MAC address of the port. If not specified, the MAC address will be generated.
                                type: string
                              nameSuffix:
                                description: NameSuffix will be appended to the name of the port if specified. If unspecified, instead the 0-based index of the port in the list is used.
                                type: string
                              network:
                                description: |-
                                  Network is a query for an openstack network that the port will be created or discovered on.
                                  This will fail if the query returns more than one network.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  filter:
                                    description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                                    minProperties: 1
                                    properties:
                                      description:
                                        type: string
                                      name:
                                        type: string
                                      notTags:
                                        description: |-
                                          NotTags is a list of tags to filter by. If specified, resources which
                                          contain all of the given tags will be excluded from the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      notTagsAny:
                                        description: |-
                                          NotTagsAny is a list of tags to filter by. If specified, resources
                                          which contain any of the given tags will be excluded from the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      projectID:
                                        type: string
                                      tags:
                                        description: |-
                                          Tags is a list of tags to filter by. If specified, the resource must
                                          have all of the tags specified to be included in the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      tagsAny:
                                        description: |-
                                          TagsAny is a list of tags to filter by. If specified, the resource
                                          must have at least one of the tags specified to be included in the
                                          result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                    type: object
                                  id:
                                    description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                    format: uuid
                                    type: string
                                type: object
                              profile:
                                description: |-
                                  Profile is a set of key-value pairs that are used for binding
                                  details. We intentionally don't expose this as a map[string]string
                                  because we only want to enable the users to set the values of the
                                  keys that are known to work in OpenStack Networking API.  See
                                  https://docs.openstack.org/api-ref/network/v2/index.html?expanded=create-port-detail#create-port
                                  To set profiles, your tenant needs permissions rule:create_port, and
                                  rule:create_port:binding:profile
                                properties:
                                  ovsHWOffload:
                                    description: |-
                                      OVSHWOffload enables or disables the OVS hardware offload feature.
                                      This flag is not required on OpenStack clouds since Yoga as Nova will set it automatically when the port is attached.
                                      See: https://bugs.launchpad.net/nova/+bug/2020813
                                    type: boolean
                                  trustedVF:
                                    description: TrustedVF enables or disables the “trusted mode” for the VF.
                                    type: boolean
                                type: object
                              propagateUplinkStatus:
                                description: PropageteUplinkStatus enables or disables the propagate uplink status on the port.
                                type: boolean
                              securityGroups:
                                description: SecurityGroups is a list of the names, uuids, filters or any combination these of the security groups to assign to the instance.
                                items:
                                  description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                                  maxProperties: 1
                                  minProperties: 1
                                  properties:
                                    filter:
                                      description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                                      minProperties: 1
                                      properties:
                                        description:
                                          type: string
                                        name:
                                          type: string
                                        notTags:
                                          description: |-
                                            NotTags is a list of tags to filter by. If specified, resources which
                                            contain all of the given tags will be excluded from the result.
                                          items:
                                            description: |-
                                              NeutronTag represents a tag on a Neutron resource.
                                              It may not be empty and may not contain commas.
                                            minLength: 1
                                            pattern: ^[^,]+$
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                        notTagsAny:
                                          description: |-
                                            NotTagsAny is a list of tags to filter by. If specified, resources
                                            which contain any of the given tags will be excluded from the result.
                                          items:
                                            description: |-
                                              NeutronTag represents a tag on a Neutron resource.
                                              It may not be empty and may not contain commas.
                                            minLength: 1
                                            pattern: ^[^,]+$
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                        projectID:
                                          type: string
                                        tags:
                                          description: |-
                                            Tags is a list of tags to filter by. If specified, the resource must
                                            have all of the tags specified to be included in the result.
                                          items:
                                            description: |-
                                              NeutronTag represents a tag on a Neutron resource.
                                              It may not be empty and may not contain commas.
                                            minLength: 1
                                            pattern: ^[^,]+$
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                        tagsAny:
                                          description: |-
                                            TagsAny is a list of tags to filter by. If specified, the resource
                                            must have at least one of the tags specified to be included in the
                                            result.
                                          items:
                                            description: |-
                                              NeutronTag represents a tag on a Neutron resource.
                                              It may not be empty and may not contain commas.
                                            minLength: 1
                                            pattern: ^[^,]+$
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                      type: object
                                    id:
                                      description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                      format: uuid
                                      type: string
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              tags:
                                description: |-
                                  Tags applied to the port (and corresponding trunk, if a trunk is configured.)
                                  These tags are applied in addition to the instance's tags, which will also be applied to the port.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              trunk:
                                description: |-
                                  Trunk specifies whether trunking is enabled at the port level. If not
                                  provided the value is inherited from the machine, or false for a
                                  bastion host.
                                type: boolean
                              valueSpecs:
                                description: |-
                                  Value specs are extra parameters to include in the API request with OpenStack.
                                  This is an extension point for the API, so what they do and if they are supported,
                                  depends on the specific OpenStack implementation.
                                items:
                                  description: ValueSpec represents a single value_spec key-value pair.
                                  properties:
                                    key:
                                      description: Key is the key in the key-value pair.
                                      type: string
                                    name:
                                      description: |-
                                        Name is the name of the key-value pair.
                                        This is just for identifying the pair and will not be sent to the OpenStack API.
                                      type: string
                                    value:
                                      description: Value is the value in the key-value pair.
                                      type: string
                                  required:
                                    - key
                                    - name
                                    - value
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              vnicType:
                                description: |-
                                  VNICType specifies the type of vNIC which this port should be
                                  attached to. This is used to determine which mechanism driver(s) to
                                  be used to bind the port. The valid values are normal, macvtap,
                                  direct, baremetal, direct-physical, virtio-forwarder, smart-nic and
                                  remote-managed, although these values will not be validated in this
                                  API to ensure compatibility with future neutron changes or custom
                                  implementations. What type of vNIC is actually available depends on
                                  deployments. If not specified, the Neutron default value is used.
                                type: string
                            type: object
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified by the cloud provider.
                          type: string
                        rootVolume:
                          description: The volume metadata to boot from
                          properties:
                            availabilityZone:
                              description: |-
                                AvailabilityZone is the volume availability zone to create the volume
                                in. If not specified, the volume will be created without an explicit
                                availability zone.
                              properties:
                                from:
                                  default: Name
                                  description: |-
                                    From specifies where we will obtain the availability zone for the
                                    volume. The options are "Name" and "Machine". If "Name" is specified
                                    then the Name field must also be specified. If "Machine" is specified
                                    the volume will use the value of FailureDomain, if any, from the
                                    associated Machine.
                                  enum:
                                    - Name
                                    - Machine
                                  type: string
                                name:
                                  description: |-
                                    Name is the name of a volume availability zone to use. It is required
                                    if From is "Name". The volume availability zone name may not contain
                                    spaces.
                                  minLength: 1
                                  pattern: ^[^ ]+$
                                  type: string
                              type: object
                              x-kubernetes-validations:
                                - message: name is required when from is 'Name' or default
                                  rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                            sizeGiB:
                              description: SizeGiB is the size of the block device in gibibytes (GiB).
                              minimum: 1
                              type: integer
                            type:
                              description: |-
                                Type is the Cinder volume type of the volume.
                                If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                                will be used.
                              type: string
                          required:
                            - sizeGiB
                          type: object
                        schedulerHintAdditionalProperties:
                          description: |-
                            SchedulerHintAdditionalProperties are arbitrary key/value pairs that provide additional hints
                            to the OpenStack scheduler. These hints can influence how instances are placed on the infrastructure,
                            such as specifying certain host aggregates or availability zones.
                          items:
                            description: |-
                              SchedulerHintAdditionalProperty represents a single additional property for a scheduler hint.
                              It includes a Name to identify the property and a Value that can be of various types.
                            properties:
                              name:
                                description: |-
                                  Name is the name of the scheduler hint property.
                                  It is a unique identifier for the property.
                                minLength: 1
                                type: string
                              value:
                                description: |-
                                  Value is the value of the scheduler hint property, which can be of various types
                                  (e.g., bool, string, int). The type is indicated by the Value.Type field.
                                properties:
                                  bool:
                                    description: |-
                                      Bool is the boolean value of the scheduler hint, used when Type is "Bool".
                                      This field is required if type is 'Bool', and must not be set otherwise.
                                    type: boolean
                                  number:
                                    description: |-
                                      Number is the integer value of the scheduler hint, used when Type is "Number".
                                      This field is required if type is 'Number', and must not be set otherwise.
                                    type: integer
                                  string:
                                    description: |-
                                      String is the string value of the scheduler hint, used when Type is "String".
                                      This field is required if type is 'String', and must not be set otherwise.
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                  type:
                                    description: |-
                                      Type represents the type of the value.
                                      Valid values are Bool, String, and Number.
                                    enum:
                                      - Bool
                                      - String
                                      - Number
                                    type: string
                                required:
                                  - type
                                type: object
                                x-kubernetes-validations:
                                  - message: bool is required when type is Bool, and forbidden otherwise
                                    rule: 'has(self.type) && self.type == ''Bool'' ? has(self.bool) : !has(self.bool)'
                                  - message: number is required when type is Number, and forbidden otherwise
                                    rule: 'has(self.type) && self.type == ''Number'' ? has(self.number) : !has(self.number)'
                                  - message: string is required when type is String, and forbidden otherwise
                                    rule: 'has(self.type) && self.type == ''String'' ? has(self.string) : !has(self.string)'
                            required:
                              - name
                              - value
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        securityGroups:
                          description: The names of the security groups to assign to the instance
                          items:
                            description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              filter:
                                description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                                minProperties: 1
                                properties:
                                  description:
                                    type: string
                                  name:
                                    type: string
                                  notTags:
                                    description: |-
                                      NotTags is a list of tags to filter by. If specified, resources which
                                      contain all of the given tags will be excluded from the result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                  notTagsAny:
                                    description: |-
                                      NotTagsAny is a list of tags to filter by. If specified, resources
                                      which contain any of the given tags will be excluded from the result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                  projectID:
                                    type: string
                                  tags:
                                    description: |-
                                      Tags is a list of tags to filter by. If specified, the resource must
                                      have all of the tags specified to be included in the result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                  tagsAny:
                                    description: |-
                                      TagsAny is a list of tags to filter by. If specified, the resource
                                      must have at least one of the tags specified to be included in the
                                      result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                type: object
                              id:
                                description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                format: uuid
                                type: string
                            type: object
                          type: array
                        serverGroup:
                          description: The server group to assign the machine to.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            filter:
                              description: Filter specifies a query to select an OpenStack server group. If provided, it cannot be empty.
                              minProperties: 1
                              properties:
                                name:
                                  description: Name is the name of a server group to look for.
                                  type: string
                              type: object
                            id:
                              description: ID is the ID of the server group to use.
                              format: uuid
                              type: string
                          type: object
                        serverMetadata:
                          description: Metadata mapping. Allows you to create a map of key value pairs to add to the server instance.
                          items:
                            properties:
                              key:
                                description: Key is the server metadata key
                                maxLength: 255
                                type: string
                              value:
                                description: Value is the server metadata value
                                maxLength: 255
                                type: string
                            required:
                              - key
                              - value
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - key
                          x-kubernetes-list-type: map
                        sshKeyName:
                          description: The ssh key to inject in the instance
                          type: string
                        tags:
                          description: |-
                            Tags which will be added to the machine and all dependent resources
                            which support them. These are in addition to Tags defined on the
                            cluster.
                            Requires Nova api 2.52 minimum!
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        trunk:
                          description: Whether the server instance is created on a trunk port or not.
                          type: boolean
                      required:
                        - image
                      type: object
                      x-kubernetes-validations:
                        - message: at least one of flavor or flavorID must be set
                          rule: (has(self.flavor) || has(self.flavorID))
                  type: object
                  x-kubernetes-validations:
                    - message: spec is required if bastion is enabled
                      rule: '!self.enabled || has(self.spec)'
                controlPlaneAvailabilityZones:
                  description: |-
                    ControlPlaneAvailabilityZones is the set of availability zones which
                    control plane machines may be deployed to.
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                controlPlaneEndpoint:
                  description: |-
                    ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                    It is normally populated automatically by the OpenStackCluster
                    controller during cluster provisioning. If it is set on creation the
                    control plane endpoint will use the values set here in preference to
                    values set elsewhere.
                    ControlPlaneEndpoint cannot be modified after ControlPlaneEndpoint.Host has been set.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 512
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                controlPlaneOmitAvailabilityZone:
                  description: |-
                    ControlPlaneOmitAvailabilityZone causes availability zone to be
                    omitted when creating control plane nodes, allowing the Nova
                    scheduler to make a decision on which availability zone to use based
                    on other scheduling constraints
                  type: boolean
                disableAPIServerFloatingIP:
                  description: |-
                    DisableAPIServerFloatingIP determines whether or not to attempt to attach a floating
                    IP to the API server. This allows for the creation of clusters when attaching a floating
                    IP to the API server (and hence, in many cases, exposing the API server to the internet)
                    is not possible or desirable, e.g. if using a shared VLAN for communication between
                    management and workload clusters or when the management cluster is inside the
                    project network.
                    This option requires that the API server use a VIP on the cluster network so that the
                    underlying machines can change without changing ControlPlaneEndpoint.Host.
                    When using a managed load balancer, this VIP will be managed automatically.
                    If not using a managed load balancer, cluster configuration will fail without additional
                    configuration to manage the VIP on the control plane machines, which falls outside of
                    the scope of this controller.
                  type: boolean
                disableExternalNetwork:
                  description: |-
                    DisableExternalNetwork specifies whether or not to attempt to connect the cluster
                    to an external network. This allows for the creation of clusters when connecting
                    to an external network is not possible or desirable, e.g. if using a provider network.
                  type: boolean
                disablePortSecurity:
                  description: |-
                    DisablePortSecurity disables the port security of the network created for the
                    Kubernetes cluster, which also disables SecurityGroups
                  type: boolean
                externalNetwork:
                  description: |-
                    ExternalNetwork is the OpenStack Network to be used to get public internet to the VMs.
                    This option is ignored if DisableExternalNetwork is set to true.

                    If ExternalNetwork is defined it must refer to exactly one external network.

                    If ExternalNetwork is not defined or is empty the controller will use any
                    existing external network as long as there is only one. It is an
                    error if ExternalNetwork is not defined and there are multiple
                    external networks unless DisableExternalNetwork is also set.

                    If ExternalNetwork is not defined and there are no external networks
                    the controller will proceed as though DisableExternalNetwork was set.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    filter:
                      description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                      minProperties: 1
                      properties:
                        description:
                          type: string
                        name:
                          type: string
                        notTags:
                          description: |-
                            NotTags is a list of tags to filter by. If specified, resources which
                            contain all of the given tags will be excluded from the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        notTagsAny:
                          description: |-
                            NotTagsAny is a list of tags to filter by. If specified, resources
                            which contain any of the given tags will be excluded from the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        projectID:
                          type: string
                        tags:
                          description: |-
                            Tags is a list of tags to filter by. If specified, the resource must
                            have all of the tags specified to be included in the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        tagsAny:
                          description: |-
                            TagsAny is a list of tags to filter by. If specified, the resource
                            must have at least one of the tags specified to be included in the
                            result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    id:
                      description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                      format: uuid
                      type: string
                  type: object
                externalRouterIPs:
                  description: |-
                    ExternalRouterIPs is an array of externalIPs on the respective subnets.
                    This is necessary if the router needs a fixed ip in a specific subnet.
                  items:
                    properties:
                      fixedIP:
                        description: The FixedIP in the corresponding subnet
                        type: string
                      subnet:
                        description: The subnet in which the FixedIP is used for the Gateway of this router
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          filter:
                            description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                            minProperties: 1
                            properties:
                              cidr:
                                type: string
                              description:
                                type: string
                              gatewayIP:
                                type: string
                              ipVersion:
                                type: integer
                              ipv6AddressMode:
                                type: string
                              ipv6RAMode:
                                type: string
                              name:
                                type: string
                              notTags:
                                description: |-
                                  NotTags is a list of tags to filter by. If specified, resources which
                                  contain all of the given tags will be excluded from the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              notTagsAny:
                                description: |-
                                  NotTagsAny is a list of tags to filter by. If specified, resources
                                  which contain any of the given tags will be excluded from the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              projectID:
                                type: string
                              tags:
                                description: |-
                                  Tags is a list of tags to filter by. If specified, the resource must
                                  have all of the tags specified to be included in the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              tagsAny:
                                description: |-
                                  TagsAny is a list of tags to filter by. If specified, the resource
                                  must have at least one of the tags specified to be included in the
                                  result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          id:
                            description: ID is the uuid of the subnet. It will not be validated.
                            format: uuid
                            type: string
                        type: object
                    required:
                      - subnet
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
                identityRef:
                  description: |-
                    IdentityRef is a reference to a secret holding OpenStack credentials
                    to be used when reconciling this cluster. It is also to reconcile
                    machines unless overridden in the machine spec.
                  properties:
                    cloudName:
                      description: CloudName specifies the name of the entry in the clouds.yaml file to use.
                      type: string
                    name:
                      description: |-
                        Name is the name of a secret in the same namespace as the resource being provisioned.
                        The secret must contain a key named `clouds.yaml` which contains an OpenStack clouds.yaml file.
                        The secret may optionally contain a key named `cacert` containing a PEM-encoded CA certificate.
                      type: string
                    region:
                      description: |-
                        Region specifies an OpenStack region to use. If specified, it overrides
                        any value in clouds.yaml. If specified for an OpenStackMachine, its
                        value will be included in providerID.
                      type: string
                  required:
                    - cloudName
                    - name
                  type: object
                  x-kubernetes-validations:
                    - message: region is immutable
                      rule: (!has(self.region) && !has(oldSelf.region)) || self.region == oldSelf.region
                managedSecurityGroups:
                  description: |-
                    ManagedSecurityGroups determines whether OpenStack security groups for the cluster
                    will be managed by the OpenStack provider or whether pre-existing security groups will
                    be specified as part of the configuration.
                    By default, the managed security groups have rules that allow the Kubelet, etcd, and the
                    Kubernetes API server to function correctly.
                    It's possible to add additional rules to the managed security groups.
                    When defined to an empty struct, the managed security groups will be created with the default rules.
                  properties:
                    allNodesSecurityGroupRules:
                      description: allNodesSecurityGroupRules defines the rules that should be applied to all nodes.
                      items:
                        description: |-
                          SecurityGroupRuleSpec represent the basic information of the associated OpenStack
                          Security Group Role.
                          For now this is only used for the allNodesSecurityGroupRules but when we add
                          other security groups, we'll need to add a validation because
                          Remote* fields are mutually exclusive.
                        properties:
                          description:
                            description: description of the security group rule.
                            type: string
                          direction:
                            description: |-
                              direction in which the security group rule is applied. The only values
                              allowed are "ingress" or "egress". For a compute instance, an ingress
                              security group rule is applied to incoming (ingress) traffic for that
                              instance. An egress rule is applied to traffic leaving the instance.
                            type: string
                          etherType:
                            description: |-
                              etherType must be IPv4 or IPv6, and addresses represented in CIDR must match the
                              ingress or egress rules.
                            type: string
                          name:
                            description: |-
                              name of the security group rule.
                              It's used to identify the rule so it can be patched and will not be sent to the OpenStack API.
                            type: string
                          portRangeMax:
                            description: |-
                              portRangeMax is a number in the range that is matched by the security group
                              rule. The portRangeMin attribute constrains the portRangeMax attribute.
                            type: integer
                          portRangeMin:
                            description: |-
                              portRangeMin is a number in the range that is matched by the security group
                              rule. If the protocol is TCP or UDP, this value must be less than or equal
                              to the value of the portRangeMax attribute.
                            type: integer
                          protocol:
                            description: protocol is the protocol that is matched by the security group rule.
                            type: string
                          remoteGroupID:
                            description: |-
                              remoteGroupID is the remote group ID to be associated with this security group rule.
                              You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                            type: string
                          remoteIPPrefix:
                            description: |-
                              remoteIPPrefix is the remote IP prefix to be associated with this security group rule.
                              You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                            type: string
                          remoteManagedGroups:
                            description: |-
                              remoteManagedGroups is the remote managed groups to be associated with this security group rule.
                              You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                            items:
                              enum:
                                - bastion
                                - controlplane
                                - worker
                              type: string
                            type: array
                        required:
                          - direction
                          - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    allowAllInClusterTraffic:
                      default: false
                      description: AllowAllInClusterTraffic allows all ingress and egress traffic between cluster nodes when set to true.
                      type: boolean
                    controlPlaneNodesSecurityGroupRules:
                      description: controlPlaneNodesSecurityGroupRules defines the rules that should be applied to control plane nodes.
                      items:
                        description: |-
                          SecurityGroupRuleSpec represent the basic information of the associated OpenStack
                          Security Group Role.
                          For now this is only used for the allNodesSecurityGroupRules but when we add
                          other security groups, we'll need to add a validation because
                          Remote* fields are mutually exclusive.
                        properties:
                          description:
                            description: description of the security group rule.
                            type: string
                          direction:
                            description: |-
                              direction in which the security group rule is applied. The only values
                              allowed are "ingress" or "egress". For a compute instance, an ingress
                              security group rule is applied to incoming (ingress) traffic for that
                              instance. An egress rule is applied to traffic leaving the instance.
                            type: string
                          etherType:
                            description: |-
                              etherType must be IPv4 or IPv6, and addresses represented in CIDR must match the
                              ingress or egress rules.
                            type: string
                          name:
                            description: |-
                              name of the security group rule.
                              It's used to identify the rule so it can be patched and will not be sent to the OpenStack API.
                            type: string
                          portRangeMax:
                            description: |-
                              portRangeMax is a number in the range that is matched by the security group
                              rule. The portRangeMin attribute constrains the portRangeMax attribute.
                            type: integer
                          portRangeMin:
                            description: |-
                              portRangeMin is a number in the range that is matched by the security group
                              rule. If the protocol is TCP or UDP, this value must be less than or equal
                              to the value of the portRangeMax attribute.
                            type: integer
                          protocol:
                            description: protocol is the protocol that is matched by the security group rule.
                            type: string
                          remoteGroupID:
                            description: |-
                              remoteGroupID is the remote group ID to be associated with this security group rule.
                              You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                            type: string
                          remoteIPPrefix:
                            description: |-
                              remoteIPPrefix is the remote IP prefix to be associated with this security group rule.
                              You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                            type: string
                          remoteManagedGroups:
                            description: |-
                              remoteManagedGroups is the remote managed groups to be associated with this security group rule.
                              You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                            items:
                              enum:
                                - bastion
                                - controlplane
                                - worker
                              type: string
                            type: array
                        required:
                          - direction
                          - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                    workerNodesSecurityGroupRules:
                      description: workerNodesSecurityGroupRules defines the rules that should be applied to worker nodes.
                      items:
                        description: |-
                          SecurityGroupRuleSpec represent the basic information of the associated OpenStack
                          Security Group Role.
                          For now this is only used for the allNodesSecurityGroupRules but when we add
                          other security groups, we'll need to add a validation because
                          Remote* fields are mutually exclusive.
                        properties:
                          description:
                            description: description of the security group rule.
                            type: string
                          direction:
                            description: |-
                              direction in which the security group rule is applied. The only values
                              allowed are "ingress" or "egress". For a compute instance, an ingress
                              security group rule is applied to incoming (ingress) traffic for that
                              instance. An egress rule is applied to traffic leaving the instance.
                            type: string
                          etherType:
                            description: |-
                              etherType must be IPv4 or IPv6, and addresses represented in CIDR must match the
                              ingress or egress rules.
                            type: string
                          name:
                            description: |-
                              name of the security group rule.
                              It's used to identify the rule so it can be patched and will not be sent to the OpenStack API.
                            type: string
                          portRangeMax:
                            description: |-
                              portRangeMax is a number in the range that is matched by the security group
                              rule. The portRangeMin attribute constrains the portRangeMax attribute.
                            type: integer
                          portRangeMin:
                            description: |-
                              portRangeMin is a number in the range that is matched by the security group
                              rule. If the protocol is TCP or UDP, this value must be less than or equal
                              to the value of the portRangeMax attribute.
                            type: integer
                          protocol:
                            description: protocol is the protocol that is matched by the security group rule.
                            type: string
                          remoteGroupID:
                            description: |-
                              remoteGroupID is the remote group ID to be associated with this security group rule.
                              You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                            type: string
                          remoteIPPrefix:
                            description: |-
                              remoteIPPrefix is the remote IP prefix to be associated with this security group rule.
                              You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                            type: string
                          remoteManagedGroups:
                            description: |-
                              remoteManagedGroups is the remote managed groups to be associated with this security group rule.
                              You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                            items:
                              enum:
                                - bastion
                                - controlplane
                                - worker
                              type: string
                            type: array
                        required:
                          - direction
                          - name
                        type: object
                      type: array
                      x-kubernetes-list-map-keys:
                        - name
                      x-kubernetes-list-type: map
                  required:
                    - allowAllInClusterTraffic
                  type: object
                managedSubnets:
                  description: |-
                    ManagedSubnets describe OpenStack Subnets to be created. Cluster actuator will create a network,
                    subnets with the defined CIDR, and a router connected to these subnets. Currently only one IPv4
                    subnet is supported. If you leave this empty, no network will be created.
                  items:
                    properties:
                      allocationPools:
                        description: |-
                          AllocationPools is an array of AllocationPool objects that will be applied to OpenStack Subnet being created.
                          If set, OpenStack will only allocate these IPs for Machines. It will still be possible to create ports from
                          outside of these ranges manually.
                        items:
                          properties:
                            end:
                              description: End represents the end of the AlloctionPool, that is the highest IP of the pool.
                              type: string
                            start:
                              description: Start represents the start of the AllocationPool, that is the lowest IP of the pool.
                              type: string
                          required:
                            - end
                            - start
                          type: object
                        type: array
                      cidr:
                        description: |-
                          CIDR is representing the IP address range used to create the subnet, e.g. 10.0.0.0/24.
                          This field is required when defining a subnet.
                        type: string
                      dnsNameservers:
                        description: |-
                          DNSNameservers holds a list of DNS server addresses that will be provided when creating
                          the subnet. These addresses need to have the same IP version as CIDR.
                        items:
                          type: string
                        type: array
                    required:
                      - cidr
                    type: object
                  maxItems: 1
                  type: array
                  x-kubernetes-list-type: atomic
                network:
                  description: |-
                    Network specifies an existing network to use if no ManagedSubnets
                    are specified.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    filter:
                      description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                      minProperties: 1
                      properties:
                        description:
                          type: string
                        name:
                          type: string
                        notTags:
                          description: |-
                            NotTags is a list of tags to filter by. If specified, resources which
                            contain all of the given tags will be excluded from the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        notTagsAny:
                          description: |-
                            NotTagsAny is a list of tags to filter by. If specified, resources
                            which contain any of the given tags will be excluded from the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        projectID:
                          type: string
                        tags:
                          description: |-
                            Tags is a list of tags to filter by. If specified, the resource must
                            have all of the tags specified to be included in the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        tagsAny:
                          description: |-
                            TagsAny is a list of tags to filter by. If specified, the resource
                            must have at least one of the tags specified to be included in the
                            result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    id:
                      description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                      format: uuid
                      type: string
                  type: object
                networkMTU:
                  description: |-
                    NetworkMTU sets the maximum transmission unit (MTU) value to address fragmentation for the private network ID.
                    This value will be used only if the Cluster actuator creates the network.
                    If left empty, the network will have the default MTU defined in Openstack network service.
                    To use this field, the Openstack installation requires the net-mtu neutron API extension.
                  type: integer
                router:
                  description: |-
                    Router specifies an existing router to be used if ManagedSubnets are
                    specified. If specified, no new router will be created.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    filter:
                      description: Filter specifies a filter to select an OpenStack router. If provided, cannot be empty.
                      minProperties: 1
                      properties:
                        description:
                          type: string
                        name:
                          type: string
                        notTags:
                          description: |-
                            NotTags is a list of tags to filter by. If specified, resources which
                            contain all of the given tags will be excluded from the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        notTagsAny:
                          description: |-
                            NotTagsAny is a list of tags to filter by. If specified, resources
                            which contain any of the given tags will be excluded from the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        projectID:
                          type: string
                        tags:
                          description: |-
                            Tags is a list of tags to filter by. If specified, the resource must
                            have all of the tags specified to be included in the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        tagsAny:
                          description: |-
                            TagsAny is a list of tags to filter by. If specified, the resource
                            must have at least one of the tags specified to be included in the
                            result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    id:
                      description: ID is the ID of the router to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                      format: uuid
                      type: string
                  type: object
                subnets:
                  description: |-
                    Subnets specifies existing subnets to use if not ManagedSubnets are
                    specified. All subnets must be in the network specified by Network.
                    There can be zero, one, or two subnets. If no subnets are specified,
                    all subnets in Network will be used. If 2 subnets are specified, one
                    must be IPv4 and the other IPv6.
                  items:
                    description: SubnetParam specifies an OpenStack subnet to use. It may be specified by either ID or filter, but not both.
                    maxProperties: 1
                    minProperties: 1
                    properties:
                      filter:
                        description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                        minProperties: 1
                        properties:
                          cidr:
                            type: string
                          description:
                            type: string
                          gatewayIP:
                            type: string
                          ipVersion:
                            type: integer
                          ipv6AddressMode:
                            type: string
                          ipv6RAMode:
                            type: string
                          name:
                            type: string
                          notTags:
                            description: |-
                              NotTags is a list of tags to filter by. If specified, resources which
                              contain all of the given tags will be excluded from the result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          notTagsAny:
                            description: |-
                              NotTagsAny is a list of tags to filter by. If specified, resources
                              which contain any of the given tags will be excluded from the result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          projectID:
                            type: string
                          tags:
                            description: |-
                              Tags is a list of tags to filter by. If specified, the resource must
                              have all of the tags specified to be included in the result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          tagsAny:
                            description: |-
                              TagsAny is a list of tags to filter by. If specified, the resource
                              must have at least one of the tags specified to be included in the
                              result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                        type: object
                      id:
                        description: ID is the uuid of the subnet. It will not be validated.
                        format: uuid
                        type: string
                    type: object
                  maxItems: 2
                  type: array
                  x-kubernetes-list-type: atomic
                tags:
                  description: Tags to set on all resources in cluster which support tags
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
              required:
                - identityRef
              type: object
              x-kubernetes-validations:
                - message: bastion floating IP cannot be set when disableExternalNetwork is true
                  rule: 'has(self.disableExternalNetwork) && self.disableExternalNetwork ? !has(self.bastion) || !has(self.bastion.floatingIP) : true'
                - message: disableAPIServerFloatingIP cannot be false when disableExternalNetwork is true
                  rule: 'has(self.disableExternalNetwork) && self.disableExternalNetwork ? has(self.disableAPIServerFloatingIP) && self.disableAPIServerFloatingIP : true'
            status:
              description: OpenStackClusterStatus defines the observed state of OpenStackCluster.
              properties:
                apiServerLoadBalancer:
                  description: APIServerLoadBalancer describes the api server load balancer if one exists
                  properties:
                    allowedCIDRs:
                      items:
                        type: string
                      type: array
                    id:
                      type: string
                    internalIP:
                      type: string
                    ip:
                      type: string
                    loadBalancerNetwork:
                      description: |-
                        LoadBalancerNetwork contains information about network and/or subnets which the
                        loadbalancer is allocated on.
                        If subnets are specified within the LoadBalancerNetwork currently only the first
                        subnet in the list is taken into account.
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        subnets:
                          description: Subnets is a list of subnets associated with the default cluster network. Machines which use the default cluster network will get an address from all of these subnets.
                          items:
                            description: Subnet represents basic information about the associated OpenStack Neutron Subnet.
                            properties:
                              cidr:
                                type: string
                              id:
                                type: string
                              name:
                                type: string
                              tags:
                                items:
                                  type: string
                                type: array
                            required:
                              - cidr
                              - id
                              - name
                            type: object
                          type: array
                        tags:
                          items:
                            type: string
                          type: array
                      required:
                        - id
                        - name
                      type: object
                    name:
                      type: string
                    tags:
                      items:
                        type: string
                      type: array
                  required:
                    - id
                    - internalIP
                    - ip
                    - name
                  type: object
                bastion:
                  description: Bastion contains the information about the deployed bastion host
                  properties:
                    floatingIP:
                      type: string
                    id:
                      type: string
                    ip:
                      type: string
                    name:
                      type: string
                    resolved:
                      description: |-
                        Resolved contains parts of the bastion's machine spec with all
                        external references fully resolved.
                      properties:
                        flavorID:
                          description: FlavorID is the ID of the flavor to use.
                          type: string
                        imageID:
                          description: ImageID is the ID of the image to use for the machine and is calculated based on ImageFilter.
                          type: string
                        ports:
                          description: Ports is the fully resolved list of ports to create for the machine.
                          items:
                            description: ResolvedPortSpec is a PortOpts with all contained references fully resolved.
                            properties:
                              adminStateUp:
                                description: AdminStateUp specifies whether the port should be created in the up (true) or down (false) state. The default is up.
                                type: boolean
                              allowedAddressPairs:
                                description: |-
                                  AllowedAddressPairs is a list of address pairs which Neutron will
                                  allow the port to send traffic from in addition to the port's
                                  addresses. If not specified, the MAC Address will be the MAC Address
                                  of the port. Depending on the configuration of Neutron, it may be
                                  supported to specify a CIDR instead of a specific IP address.
                                items:
                                  properties:
                                    ipAddress:
                                      description: |-
                                        IPAddress is the IP address of the allowed address pair. Depending on
                                        the configuration of Neutron, it may be supported to specify a CIDR
                                        instead of a specific IP address.
                                      type: string
                                    macAddress:
                                      description: |-
                                        MACAddress is the MAC address of the allowed address pair. If not
                                        specified, the MAC address will be the MAC address of the port.
                                      type: string
                                  required:
                                    - ipAddress
                                  type: object
                                type: array
                              description:
                                description: Description is a human-readable description for the port.
                                type: string
                              disablePortSecurity:
                                description: |-
                                  DisablePortSecurity enables or disables the port security when set.
                                  When not set, it takes the value of the corresponding field at the network level.
                                type: boolean
                              fixedIPs:
                                description: FixedIPs is a list of pairs of subnet and/or IP address to assign to the port. If specified, these must be subnets of the port's network.
                                items:
                                  description: ResolvedFixedIP is a FixedIP with the Subnet resolved to an ID.
                                  properties:
                                    ipAddress:
                                      description: |-
                                        IPAddress is a specific IP address to assign to the port. If SubnetID
                                        is also specified, IPAddress must be a valid IP address in the
                                        subnet. If Subnet is not specified, IPAddress must be a valid IP
                                        address in any subnet of the port's network.
                                      type: string
                                    subnet:
                                      description: SubnetID is the id of a subnet to create the fixed IP of a port in.
                                      type: string
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              hostID:
                                description: HostID specifies the ID of the host where the port resides.
                                type: string
                              macAddress:
                                description: MACAddress specifies the MAC address of the port. If not specified, the MAC address will be generated.
                                type: string
                              name:
                                description: Name is the name of the port.
                                type: string
                              networkID:
                                description: NetworkID is the ID of the network the port will be created in.
                                type: string
                              profile:
                                description: |-
                                  Profile is a set of key-value pairs that are used for binding
                                  details. We intentionally don't expose this as a map[string]string
                                  because we only want to enable the users to set the values of the
                                  keys that are known to work in OpenStack Networking API.  See
                                  https://docs.openstack.org/api-ref/network/v2/index.html?expanded=create-port-detail#create-port
                                  To set profiles, your tenant needs permissions rule:create_port, and
                                  rule:create_port:binding:profile
                                properties:
                                  ovsHWOffload:
                                    description: |-
                                      OVSHWOffload enables or disables the OVS hardware offload feature.
                                      This flag is not required on OpenStack clouds since Yoga as Nova will set it automatically when the port is attached.
                                      See: https://bugs.launchpad.net/nova/+bug/2020813
                                    type: boolean
                                  trustedVF:
                                    description: TrustedVF enables or disables the “trusted mode” for the VF.
                                    type: boolean
                                type: object
                              propagateUplinkStatus:
                                description: PropageteUplinkStatus enables or disables the propagate uplink status on the port.
                                type: boolean
                              securityGroups:
                                description: SecurityGroups is a list of security group IDs to assign to the port.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                              tags:
                                description: Tags applied to the port (and corresponding trunk, if a trunk is configured.)
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              trunk:
                                description: Trunk specifies whether trunking is enabled at the port level.
                                type: boolean
                              valueSpecs:
                                description: |-
                                  Value specs are extra parameters to include in the API request with OpenStack.
                                  This is an extension point for the API, so what they do and if they are supported,
                                  depends on the specific OpenStack implementation.
                                items:
                                  description: ValueSpec represents a single value_spec key-value pair.
                                  properties:
                                    key:
                                      description: Key is the key in the key-value pair.
                                      type: string
                                    name:
                                      description: |-
                                        Name is the name of the key-value pair.
                                        This is just for identifying the pair and will not be sent to the OpenStack API.
                                      type: string
                                    value:
                                      description: Value is the value in the key-value pair.
                                      type: string
                                  required:
                                    - key
                                    - name
                                    - value
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              vnicType:
                                description: |-
                                  VNICType specifies the type of vNIC which this port should be
                                  attached to. This is used to determine which mechanism driver(s) to
                                  be used to bind the port. The valid values are normal, macvtap,
                                  direct, baremetal, direct-physical, virtio-forwarder, smart-nic and
                                  remote-managed, although these values will not be validated in this
                                  API to ensure compatibility with future neutron changes or custom
                                  implementations. What type of vNIC is actually available depends on
                                  deployments. If not specified, the Neutron default value is used.
                                type: string
                            required:
                              - description
                              - name
                              - networkID
                            type: object
                          type: array
                        serverGroupID:
                          description: ServerGroupID is the ID of the server group the machine should be added to and is calculated based on ServerGroupFilter.
                          type: string
                      type: object
                    resources:
                      description: Resources contains references to OpenStack resources created for the bastion.
                      properties:
                        ports:
                          description: Ports is the status of the ports created for the machine.
                          items:
                            properties:
                              id:
                                description: ID is the unique identifier of the port.
                                type: string
                            required:
                              - id
                            type: object
                          type: array
                      type: object
                    sshKeyName:
                      type: string
                    state:
                      description: InstanceState describes the state of an OpenStack instance.
                      type: string
                  type: object
                bastionSecurityGroup:
                  description: |-
                    BastionSecurityGroup contains the information about the OpenStack
                    Security Group that needs to be applied to worker nodes.
                  properties:
                    id:
                      description: id of the security group
                      type: string
                    name:
                      description: name of the security group
                      type: string
                  required:
                    - id
                    - name
                  type: object
                controlPlaneSecurityGroup:
                  description: |-
                    ControlPlaneSecurityGroup contains the information about the
                    OpenStack Security Group that needs to be applied to control plane
                    nodes.
                  properties:
                    id:
                      description: id of the security group
                      type: string
                    name:
                      description: name of the security group
                      type: string
                  required:
                    - id
                    - name
                  type: object
                externalNetwork:
                  description: ExternalNetwork contains information about the external network used for default ingress and egress traffic.
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    tags:
                      items:
                        type: string
                      type: array
                  required:
                    - id
                    - name
                  type: object
                failureDomains:
                  additionalProperties:
                    description: |-
                      FailureDomainSpec is the Schema for Cluster API failure domains.
                      It allows controllers to understand how many failure domains a cluster can optionally span across.
                    properties:
                      attributes:
                        additionalProperties:
                          type: string
                        description: attributes is a free form map of attributes an infrastructure provider might use or require.
                        type: object
                      controlPlane:
                        description: controlPlane determines if this failure domain is suitable for use by control plane machines.
                        type: boolean
                    type: object
                  description: FailureDomains represent OpenStack availability zones
                  type: object
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the OpenStackCluster and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the OpenStackCluster's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of
                    OpenStackClusters can be added as events to the OpenStackCluster object
                    and/or logged in the controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the OpenStackCluster and will contain a succinct value suitable
                    for machine interpretation.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the OpenStackCluster's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of
                    OpenStackClusters can be added as events to the OpenStackCluster object
                    and/or logged in the controller's output.
                  type: string
                network:
                  description: Network contains information about the created OpenStack Network.
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    subnets:
                      description: Subnets is a list of subnets associated with the default cluster network. Machines which use the default cluster network will get an address from all of these subnets.
                      items:
                        description: Subnet represents basic information about the associated OpenStack Neutron Subnet.
                        properties:
                          cidr:
                            type: string
                          id:
                            type: string
                          name:
                            type: string
                          tags:
                            items:
                              type: string
                            type: array
                        required:
                          - cidr
                          - id
                          - name
                        type: object
                      type: array
                    tags:
                      items:
                        type: string
                      type: array
                  required:
                    - id
                    - name
                  type: object
                ready:
                  default: false
                  description: Ready is true when the cluster infrastructure is ready.
                  type: boolean
                router:
                  description: Router describes the default cluster router
                  properties:
                    id:
                      type: string
                    ips:
                      items:
                        type: string
                      type: array
                    name:
                      type: string
                    tags:
                      items:
                        type: string
                      type: array
                  required:
                    - id
                    - name
                  type: object
                workerSecurityGroup:
                  description: |-
                    WorkerSecurityGroup contains the information about the OpenStack
                    Security Group that needs to be applied to worker nodes.
                  properties:
                    id:
                      description: id of the security group
                      type: string
                    name:
                      description: name of the security group
                      type: string
                  required:
                    - id
                    - name
                  type: object
              required:
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: openstackclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: OpenStackClusterTemplate
    listKind: OpenStackClusterTemplateList
    plural: openstackclustertemplates
    shortNames:
      - osct
    singular: openstackclustertemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: OpenStackClusterTemplate is the Schema for the openstackclustertemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OpenStackClusterTemplateSpec defines the desired state of OpenStackClusterTemplate.
              properties:
                template:
                  description: OpenStackClusterTemplateResource describes the data needed to create a OpenStackCluster from a template.
                  properties:
                    spec:
                      description: OpenStackClusterSpec defines the desired state of OpenStackCluster.
                      properties:
                        apiServerFixedIP:
                          description: |-
                            APIServerFixedIP is the fixed IP which will be associated with the API server.
                            In the case where the API server has a floating IP but not a managed load balancer,
                            this field is not used.
                            If a managed load balancer is used and this field is not specified, a fixed IP will
                            be dynamically allocated for the load balancer.
                            If a managed load balancer is not used AND the API server floating IP is disabled,
                            this field MUST be specified and should correspond to a pre-allocated port that
                            holds the fixed IP to be used as a VIP.
                          type: string
                        apiServerFloatingIP:
                          description: |-
                            APIServerFloatingIP is the floatingIP which will be associated with the API server.
                            The floatingIP will be created if it does not already exist.
                            If not specified, a new floatingIP is allocated.
                            This field is not used if DisableAPIServerFloatingIP is set to true.
                          type: string
                        apiServerLoadBalancer:
                          description: |-
                            APIServerLoadBalancer configures the optional LoadBalancer for the APIServer.
                            If not specified, no load balancer will be created for the API server.
                          properties:
                            additionalPorts:
                              description: AdditionalPorts adds additional tcp ports to the load balancer.
                              items:
                                type: integer
                              type: array
                              x-kubernetes-list-type: set
                            allowedCIDRs:
                              description: AllowedCIDRs restrict access to all API-Server listeners to the given address CIDRs.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: set
                            availabilityZone:
                              description: AvailabilityZone is the failure domain that will be used to create the APIServerLoadBalancer Spec.
                              type: string
                            enabled:
                              default: true
                              description: |-
                                Enabled defines whether a load balancer should be created. This value
                                defaults to true if an APIServerLoadBalancer is given.

                                There is no reason to set this to false. To disable creation of the
                                API server loadbalancer, omit the APIServerLoadBalancer field in the
                                cluster spec instead.
                              type: boolean
                            flavor:
                              description: Flavor is the flavor name that will be used to create the APIServerLoadBalancer Spec.
                              type: string
                            network:
                              description: Network defines which network should the load balancer be allocated on.
                              maxProperties: 1
                              minProperties: 1
                              properties:
                                filter:
                                  description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                                  minProperties: 1
                                  properties:
                                    description:
                                      type: string
                                    name:
                                      type: string
                                    notTags:
                                      description: |-
                                        NotTags is a list of tags to filter by. If specified, resources which
                                        contain all of the given tags will be excluded from the result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    notTagsAny:
                                      description: |-
                                        NotTagsAny is a list of tags to filter by. If specified, resources
                                        which contain any of the given tags will be excluded from the result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    projectID:
                                      type: string
                                    tags:
                                      description: |-
                                        Tags is a list of tags to filter by. If specified, the resource must
                                        have all of the tags specified to be included in the result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    tagsAny:
                                      description: |-
                                        TagsAny is a list of tags to filter by. If specified, the resource
                                        must have at least one of the tags specified to be included in the
                                        result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                id:
                                  description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                  format: uuid
                                  type: string
                              type: object
                            provider:
                              description: |-
                                Provider specifies name of a specific Octavia provider to use for the
                                API load balancer. The Octavia default will be used if it is not
                                specified.
                              type: string
                            subnets:
                              description: |-
                                Subnets define which subnets should the load balancer be allocated on.
                                It is expected that subnets are located on the network specified in this resource.
                                Only the first element is taken into account.
                                kubebuilder:validation:MaxLength:=2
                              items:
                                description: SubnetParam specifies an OpenStack subnet to use. It may be specified by either ID or filter, but not both.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  filter:
                                    description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                                    minProperties: 1
                                    properties:
                                      cidr:
                                        type: string
                                      description:
                                        type: string
                                      gatewayIP:
                                        type: string
                                      ipVersion:
                                        type: integer
                                      ipv6AddressMode:
                                        type: string
                                      ipv6RAMode:
                                        type: string
                                      name:
                                        type: string
                                      notTags:
                                        description: |-
                                          NotTags is a list of tags to filter by. If specified, resources which
                                          contain all of the given tags will be excluded from the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      notTagsAny:
                                        description: |-
                                          NotTagsAny is a list of tags to filter by. If specified, resources
                                          which contain any of the given tags will be excluded from the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      projectID:
                                        type: string
                                      tags:
                                        description: |-
                                          Tags is a list of tags to filter by. If specified, the resource must
                                          have all of the tags specified to be included in the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      tagsAny:
                                        description: |-
                                          TagsAny is a list of tags to filter by. If specified, the resource
                                          must have at least one of the tags specified to be included in the
                                          result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                    type: object
                                  id:
                                    description: ID is the uuid of the subnet. It will not be validated.
                                    format: uuid
                                    type: string
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                          required:
                            - enabled
                          type: object
                        apiServerPort:
                          description: |-
                            APIServerPort is the port on which the listener on the APIServer
                            will be created. If specified, it must be an integer between 0 and 65535.
                          maximum: 65535
                          minimum: 0
                          type: integer
                        bastion:
                          description: |-
                            Bastion is the OpenStack instance to login the nodes

                            As a rolling update is not ideal during a bastion host session, we
                            prevent changes to a running bastion configuration. To make changes, it's required
                            to first set `enabled: false` which will remove the bastion and then changes can be made.
                          properties:
                            availabilityZone:
                              description: AvailabilityZone is the failure domain that will be used to create the Bastion Spec.
                              type: string
                            enabled:
                              default: true
                              description: |-
                                Enabled means that bastion is enabled. The bastion is enabled by
                                default if this field is not specified. Set this field to false to disable the
                                bastion.

                                It is not currently possible to remove the bastion from the cluster
                                spec without first disabling it by setting this field to false and
                                waiting until the bastion has been deleted.
                              type: boolean
                            floatingIP:
                              description: |-
                                FloatingIP which will be associated to the bastion machine. It's the IP address, not UUID.
                                The floating IP should already exist and should not be associated with a port. If FIP of this address does not
                                exist, CAPO will try to create it, but by default only OpenStack administrators have privileges to do so.
                              format: ipv4
                              type: string
                            spec:
                              description: Spec for the bastion itself
                              properties:
                                additionalBlockDevices:
                                  description: AdditionalBlockDevices is a list of specifications for additional block devices to attach to the server instance
                                  items:
                                    description: AdditionalBlockDevice is a block device to attach to the server.
                                    properties:
                                      name:
                                        description: |-
                                          Name of the block device in the context of a machine.
                                          If the block device is a volume, the Cinder volume will be named
                                          as a combination of the machine name and this name.
                                          Also, this name will be used for tagging the block device.
                                          Information about the block device tag can be obtained from the OpenStack
                                          metadata API or the config drive.
                                          Name cannot be 'root', which is reserved for the root volume.
                                        type: string
                                      sizeGiB:
                                        description: SizeGiB is the size of the block device in gibibytes (GiB).
                                        minimum: 1
                                        type: integer
                                      storage:
                                        description: |-
                                          Storage specifies the storage type of the block device and
                                          additional storage options.
                                        properties:
                                          type:
                                            description: |-
                                              Type is the type of block device to create.
                                              This can be either "Volume" or "Local".
                                            type: string
                                          volume:
                                            description: Volume contains additional storage options for a volume block device.
                                            properties:
                                              availabilityZone:
                                                description: |-
                                                  AvailabilityZone is the volume availability zone to create the volume
                                                  in. If not specified, the volume will be created without an explicit
                                                  availability zone.
                                                properties:
                                                  from:
                                                    default: Name
                                                    description: |-
                                                      From specifies where we will obtain the availability zone for the
                                                      volume. The options are "Name" and "Machine". If "Name" is specified
                                                      then the Name field must also be specified. If "Machine" is specified
                                                      the volume will use the value of FailureDomain, if any, from the
                                                      associated Machine.
                                                    enum:
                                                      - Name
                                                      - Machine
                                                    type: string
                                                  name:
                                                    description: |-
                                                      Name is the name of a volume availability zone to use. It is required
                                                      if From is "Name". The volume availability zone name may not contain
                                                      spaces.
                                                    minLength: 1
                                                    pattern: ^[^ ]+$
                                                    type: string
                                                type: object
                                                x-kubernetes-validations:
                                                  - message: name is required when from is 'Name' or default
                                                    rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                                              type:
                                                description: |-
                                                  Type is the Cinder volume type of the volume.
                                                  If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                                                  will be used.
                                                type: string
                                            type: object
                                        required:
                                          - type
                                        type: object
                                    required:
                                      - name
                                      - sizeGiB
                                      - storage
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                configDrive:
                                  description: Config Drive support
                                  type: boolean
                                flavor:
                                  description: The flavor reference for the flavor for your server instance.
                                  minLength: 1
                                  type: string
                                flavorID:
                                  description: |-
                                    FlavorID allows flavors to be specified by ID.  This field takes precedence
                                    over Flavor.
                                  minLength: 1
                                  type: string
                                floatingIPPoolRef:
                                  description: |-
                                    floatingIPPoolRef is a reference to a IPPool that will be assigned
                                    to an IPAddressClaim. Once the IPAddressClaim is fulfilled, the FloatingIP
                                    will be assigned to the OpenStackMachine.
                                  properties:
                                    apiGroup:
                                      description: |-
                                        APIGroup is the group for the resource being referenced.
                                        If APIGroup is not specified, the specified Kind must be in the core API group.
                                        For any other third-party types, APIGroup is required.
                                      type: string
                                    kind:
                                      description: Kind is the type of resource being referenced
                                      type: string
                                    name:
                                      description: Name is the name of resource being referenced
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                identityRef:
                                  description: |-
                                    IdentityRef is a reference to a secret holding OpenStack credentials
                                    to be used when reconciling this machine. If not specified, the
                                    credentials specified in the cluster will be used.
                                  properties:
                                    cloudName:
                                      description: CloudName specifies the name of the entry in the clouds.yaml file to use.
                                      type: string
                                    name:
                                      description: |-
                                        Name is the name of a secret in the same namespace as the resource being provisioned.
                                        The secret must contain a key named `clouds.yaml` which contains an OpenStack clouds.yaml file.
                                        The secret may optionally contain a key named `cacert` containing a PEM-encoded CA certificate.
                                      type: string
                                    region:
                                      description: |-
                                        Region specifies an OpenStack region to use. If specified, it overrides
                                        any value in clouds.yaml. If specified for an OpenStackMachine, its
                                        value will be included in providerID.
                                      type: string
                                  required:
                                    - cloudName
                                    - name
                                  type: object
                                  x-kubernetes-validations:
                                    - message: region is immutable
                                      rule: (!has(self.region) && !has(oldSelf.region)) || self.region == oldSelf.region
                                image:
                                  description: |-
                                    The image to use for your server instance.
                                    If the rootVolume is specified, this will be used when creating the root volume.
                                  maxProperties: 1
                                  minProperties: 1
                                  properties:
                                    filter:
                                      description: |-
                                        Filter describes a query for an image. If specified, the combination
                                        of name and tags must return a single matching image or an error will
                                        be raised.
                                      minProperties: 1
                                      properties:
                                        name:
                                          description: The name of the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                                          type: string
                                        tags:
                                          description: The tags associated with the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                      type: object
                                    id:
                                      description: ID is the uuid of the image. ID will not be validated before use.
                                      format: uuid
                                      type: string
                                    imageRef:
                                      description: |-
                                        ImageRef is a reference to an ORC Image in the same namespace as the
                                        referring object.
                                      properties:
                                        name:
                                          description: Name is the name of the referenced resource
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  type: object
                                ports:
                                  description: |-
                                    Ports to be attached to the server instance. They are created if a port with the given name does not already exist.
                                    If not specified a default port will be added for the default cluster network.
                                  items:
                                    properties:
                                      adminStateUp:
                                        description: AdminStateUp specifies whether the port should be created in the up (true) or down (false) state. The default is up.
                                        type: boolean
                                      allowedAddressPairs:
                                        description: |-
                                          AllowedAddressPairs is a list of address pairs which Neutron will
                                          allow the port to send traffic from in addition to the port's
                                          addresses. If not specified, the MAC Address will be the MAC Address
                                          of the port. Depending on the configuration of Neutron, it may be
                                          supported to specify a CIDR instead of a specific IP address.
                                        items:
                                          properties:
                                            ipAddress:
                                              description: |-
                                                IPAddress is the IP address of the allowed address pair. Depending on
                                                the configuration of Neutron, it may be supported to specify a CIDR
                                                instead of a specific IP address.
                                              type: string
                                            macAddress:
                                              description: |-
                                                MACAddress is the MAC address of the allowed address pair. If not
                                                specified, the MAC address will be the MAC address of the port.
                                              type: string
                                          required:
                                            - ipAddress
                                          type: object
                                        type: array
                                      description:
                                        description: Description is a human-readable description for the port.
                                        type: string
                                      disablePortSecurity:
                                        description: |-
                                          DisablePortSecurity enables or disables the port security when set.
                                          When not set, it takes the value of the corresponding field at the network level.
                                        type: boolean
                                      fixedIPs:
                                        description: FixedIPs is a list of pairs of subnet and/or IP address to assign to the port. If specified, these must be subnets of the port's network.
                                        items:
                                          properties:
                                            ipAddress:
                                              description: |-
                                                IPAddress is a specific IP address to assign to the port. If Subnet
                                                is also specified, IPAddress must be a valid IP address in the
                                                subnet. If Subnet is not specified, IPAddress must be a valid IP
                                                address in any subnet of the port's network.
                                              type: string
                                            subnet:
                                              description: |-
                                                Subnet is an openstack subnet query that will return the id of a subnet to create
                                                the fixed IP of a port in. This query must not return more than one subnet.
                                              maxProperties: 1
                                              minProperties: 1
                                              properties:
                                                filter:
                                                  description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                                                  minProperties: 1
                                                  properties:
                                                    cidr:
                                                      type: string
                                                    description:
                                                      type: string
                                                    gatewayIP:
                                                      type: string
                                                    ipVersion:
                                                      type: integer
                                                    ipv6AddressMode:
                                                      type: string
                                                    ipv6RAMode:
                                                      type: string
                                                    name:
                                                      type: string
                                                    notTags:
                                                      description: |-
                                                        NotTags is a list of tags to filter by. If specified, resources which
                                                        contain all of the given tags will be excluded from the result.
                                                      items:
                                                        description: |-
                                                          NeutronTag represents a tag on a Neutron resource.
                                                          It may not be empty and may not contain commas.
                                                        minLength: 1
                                                        pattern: ^[^,]+$
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: set
                                                    notTagsAny:
                                                      description: |-
                                                        NotTagsAny is a list of tags to filter by. If specified, resources
                                                        which contain any of the given tags will be excluded from the result.
                                                      items:
                                                        description: |-
                                                          NeutronTag represents a tag on a Neutron resource.
                                                          It may not be empty and may not contain commas.
                                                        minLength: 1
                                                        pattern: ^[^,]+$
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: set
                                                    projectID:
                                                      type: string
                                                    tags:
                                                      description: |-
                                                        Tags is a list of tags to filter by. If specified, the resource must
                                                        have all of the tags specified to be included in the result.
                                                      items:
                                                        description: |-
                                                          NeutronTag represents a tag on a Neutron resource.
                                                          It may not be empty and may not contain commas.
                                                        minLength: 1
                                                        pattern: ^[^,]+$
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: set
                                                    tagsAny:
                                                      description: |-
                                                        TagsAny is a list of tags to filter by. If specified, the resource
                                                        must have at least one of the tags specified to be included in the
                                                        result.
                                                      items:
                                                        description: |-
                                                          NeutronTag represents a tag on a Neutron resource.
                                                          It may not be empty and may not contain commas.
                                                        minLength: 1
                                                        pattern: ^[^,]+$
                                                        type: string
                                                      type: array
                                                      x-kubernetes-list-type: set
                                                  type: object
                                                id:
                                                  description: ID is the uuid of the subnet. It will not be validated.
                                                  format: uuid
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      hostID:
                                        description: HostID specifies the ID of the host where the port resides.
                                        type: string
                                      macAddress:
                                        description: MACAddress specifies the MAC address of the port. If not specified, the MAC address will be generated.
                                        type: string
                                      nameSuffix:
                                        description: NameSuffix will be appended to the name of the port if specified. If unspecified, instead the 0-based index of the port in the list is used.
                                        type: string
                                      network:
                                        description: |-
                                          Network is a query for an openstack network that the port will be created or discovered on.
                                          This will fail if the query returns more than one network.
                                        maxProperties: 1
                                        minProperties: 1
                                        properties:
                                          filter:
                                            description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                                            minProperties: 1
                                            properties:
                                              description:
                                                type: string
                                              name:
                                                type: string
                                              notTags:
                                                description: |-
                                                  NotTags is a list of tags to filter by. If specified, resources which
                                                  contain all of the given tags will be excluded from the result.
                                                items:
                                                  description: |-
                                                    NeutronTag represents a tag on a Neutron resource.
                                                    It may not be empty and may not contain commas.
                                                  minLength: 1
                                                  pattern: ^[^,]+$
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: set
                                              notTagsAny:
                                                description: |-
                                                  NotTagsAny is a list of tags to filter by. If specified, resources
                                                  which contain any of the given tags will be excluded from the result.
                                                items:
                                                  description: |-
                                                    NeutronTag represents a tag on a Neutron resource.
                                                    It may not be empty and may not contain commas.
                                                  minLength: 1
                                                  pattern: ^[^,]+$
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: set
                                              projectID:
                                                type: string
                                              tags:
                                                description: |-
                                                  Tags is a list of tags to filter by. If specified, the resource must
                                                  have all of the tags specified to be included in the result.
                                                items:
                                                  description: |-
                                                    NeutronTag represents a tag on a Neutron resource.
                                                    It may not be empty and may not contain commas.
                                                  minLength: 1
                                                  pattern: ^[^,]+$
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: set
                                              tagsAny:
                                                description: |-
                                                  TagsAny is a list of tags to filter by. If specified, the resource
                                                  must have at least one of the tags specified to be included in the
                                                  result.
                                                items:
                                                  description: |-
                                                    NeutronTag represents a tag on a Neutron resource.
                                                    It may not be empty and may not contain commas.
                                                  minLength: 1
                                                  pattern: ^[^,]+$
                                                  type: string
                                                type: array
                                                x-kubernetes-list-type: set
                                            type: object
                                          id:
                                            description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                            format: uuid
                                            type: string
                                        type: object
                                      profile:
                                        description: |-
                                          Profile is a set of key-value pairs that are used for binding
                                          details. We intentionally don't expose this as a map[string]string
                                          because we only want to enable the users to set the values of the
                                          keys that are known to work in OpenStack Networking API.  See
                                          https://docs.openstack.org/api-ref/network/v2/index.html?expanded=create-port-detail#create-port
                                          To set profiles, your tenant needs permissions rule:create_port, and
                                          rule:create_port:binding:profile
                                        properties:
                                          ovsHWOffload:
                                            description: |-
                                              OVSHWOffload enables or disables the OVS hardware offload feature.
                                              This flag is not required on OpenStack clouds since Yoga as Nova will set it automatically when the port is attached.
                                              See: https://bugs.launchpad.net/nova/+bug/2020813
                                            type: boolean
                                          trustedVF:
                                            description: TrustedVF enables or disables the “trusted mode” for the VF.
                                            type: boolean
                                        type: object
                                      propagateUplinkStatus:
                                        description: PropageteUplinkStatus enables or disables the propagate uplink status on the port.
                                        type: boolean
                                      securityGroups:
                                        description: SecurityGroups is a list of the names, uuids, filters or any combination these of the security groups to assign to the instance.
                                        items:
                                          description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                                          maxProperties: 1
                                          minProperties: 1
                                          properties:
                                            filter:
                                              description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                                              minProperties: 1
                                              properties:
                                                description:
                                                  type: string
                                                name:
                                                  type: string
                                                notTags:
                                                  description: |-
                                                    NotTags is a list of tags to filter by. If specified, resources which
                                                    contain all of the given tags will be excluded from the result.
                                                  items:
                                                    description: |-
                                                      NeutronTag represents a tag on a Neutron resource.
                                                      It may not be empty and may not contain commas.
                                                    minLength: 1
                                                    pattern: ^[^,]+$
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: set
                                                notTagsAny:
                                                  description: |-
                                                    NotTagsAny is a list of tags to filter by. If specified, resources
                                                    which contain any of the given tags will be excluded from the result.
                                                  items:
                                                    description: |-
                                                      NeutronTag represents a tag on a Neutron resource.
                                                      It may not be empty and may not contain commas.
                                                    minLength: 1
                                                    pattern: ^[^,]+$
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: set
                                                projectID:
                                                  type: string
                                                tags:
                                                  description: |-
                                                    Tags is a list of tags to filter by. If specified, the resource must
                                                    have all of the tags specified to be included in the result.
                                                  items:
                                                    description: |-
                                                      NeutronTag represents a tag on a Neutron resource.
                                                      It may not be empty and may not contain commas.
                                                    minLength: 1
                                                    pattern: ^[^,]+$
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: set
                                                tagsAny:
                                                  description: |-
                                                    TagsAny is a list of tags to filter by. If specified, the resource
                                                    must have at least one of the tags specified to be included in the
                                                    result.
                                                  items:
                                                    description: |-
                                                      NeutronTag represents a tag on a Neutron resource.
                                                      It may not be empty and may not contain commas.
                                                    minLength: 1
                                                    pattern: ^[^,]+$
                                                    type: string
                                                  type: array
                                                  x-kubernetes-list-type: set
                                              type: object
                                            id:
                                              description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                              format: uuid
                                              type: string
                                          type: object
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      tags:
                                        description: |-
                                          Tags applied to the port (and corresponding trunk, if a trunk is configured.)
                                          These tags are applied in addition to the instance's tags, which will also be applied to the port.
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      trunk:
                                        description: |-
                                          Trunk specifies whether trunking is enabled at the port level. If not
                                          provided the value is inherited from the machine, or false for a
                                          bastion host.
                                        type: boolean
                                      valueSpecs:
                                        description: |-
                                          Value specs are extra parameters to include in the API request with OpenStack.
                                          This is an extension point for the API, so what they do and if they are supported,
                                          depends on the specific OpenStack implementation.
                                        items:
                                          description: ValueSpec represents a single value_spec key-value pair.
                                          properties:
                                            key:
                                              description: Key is the key in the key-value pair.
                                              type: string
                                            name:
                                              description: |-
                                                Name is the name of the key-value pair.
                                                This is just for identifying the pair and will not be sent to the OpenStack API.
                                              type: string
                                            value:
                                              description: Value is the value in the key-value pair.
                                              type: string
                                          required:
                                            - key
                                            - name
                                            - value
                                          type: object
                                        type: array
                                        x-kubernetes-list-map-keys:
                                          - name
                                        x-kubernetes-list-type: map
                                      vnicType:
                                        description: |-
                                          VNICType specifies the type of vNIC which this port should be
                                          attached to. This is used to determine which mechanism driver(s) to
                                          be used to bind the port. The valid values are normal, macvtap,
                                          direct, baremetal, direct-physical, virtio-forwarder, smart-nic and
                                          remote-managed, although these values will not be validated in this
                                          API to ensure compatibility with future neutron changes or custom
                                          implementations. What type of vNIC is actually available depends on
                                          deployments. If not specified, the Neutron default value is used.
                                        type: string
                                    type: object
                                  type: array
                                providerID:
                                  description: ProviderID is the unique identifier as specified by the cloud provider.
                                  type: string
                                rootVolume:
                                  description: The volume metadata to boot from
                                  properties:
                                    availabilityZone:
                                      description: |-
                                        AvailabilityZone is the volume availability zone to create the volume
                                        in. If not specified, the volume will be created without an explicit
                                        availability zone.
                                      properties:
                                        from:
                                          default: Name
                                          description: |-
                                            From specifies where we will obtain the availability zone for the
                                            volume. The options are "Name" and "Machine". If "Name" is specified
                                            then the Name field must also be specified. If "Machine" is specified
                                            the volume will use the value of FailureDomain, if any, from the
                                            associated Machine.
                                          enum:
                                            - Name
                                            - Machine
                                          type: string
                                        name:
                                          description: |-
                                            Name is the name of a volume availability zone to use. It is required
                                            if From is "Name". The volume availability zone name may not contain
                                            spaces.
                                          minLength: 1
                                          pattern: ^[^ ]+$
                                          type: string
                                      type: object
                                      x-kubernetes-validations:
                                        - message: name is required when from is 'Name' or default
                                          rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                                    sizeGiB:
                                      description: SizeGiB is the size of the block device in gibibytes (GiB).
                                      minimum: 1
                                      type: integer
                                    type:
                                      description: |-
                                        Type is the Cinder volume type of the volume.
                                        If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                                        will be used.
                                      type: string
                                  required:
                                    - sizeGiB
                                  type: object
                                schedulerHintAdditionalProperties:
                                  description: |-
                                    SchedulerHintAdditionalProperties are arbitrary key/value pairs that provide additional hints
                                    to the OpenStack scheduler. These hints can influence how instances are placed on the infrastructure,
                                    such as specifying certain host aggregates or availability zones.
                                  items:
                                    description: |-
                                      SchedulerHintAdditionalProperty represents a single additional property for a scheduler hint.
                                      It includes a Name to identify the property and a Value that can be of various types.
                                    properties:
                                      name:
                                        description: |-
                                          Name is the name of the scheduler hint property.
                                          It is a unique identifier for the property.
                                        minLength: 1
                                        type: string
                                      value:
                                        description: |-
                                          Value is the value of the scheduler hint property, which can be of various types
                                          (e.g., bool, string, int). The type is indicated by the Value.Type field.
                                        properties:
                                          bool:
                                            description: |-
                                              Bool is the boolean value of the scheduler hint, used when Type is "Bool".
                                              This field is required if type is 'Bool', and must not be set otherwise.
                                            type: boolean
                                          number:
                                            description: |-
                                              Number is the integer value of the scheduler hint, used when Type is "Number".
                                              This field is required if type is 'Number', and must not be set otherwise.
                                            type: integer
                                          string:
                                            description: |-
                                              String is the string value of the scheduler hint, used when Type is "String".
                                              This field is required if type is 'String', and must not be set otherwise.
                                            maxLength: 255
                                            minLength: 1
                                            type: string
                                          type:
                                            description: |-
                                              Type represents the type of the value.
                                              Valid values are Bool, String, and Number.
                                            enum:
                                              - Bool
                                              - String
                                              - Number
                                            type: string
                                        required:
                                          - type
                                        type: object
                                        x-kubernetes-validations:
                                          - message: bool is required when type is Bool, and forbidden otherwise
                                            rule: 'has(self.type) && self.type == ''Bool'' ? has(self.bool) : !has(self.bool)'
                                          - message: number is required when type is Number, and forbidden otherwise
                                            rule: 'has(self.type) && self.type == ''Number'' ? has(self.number) : !has(self.number)'
                                          - message: string is required when type is String, and forbidden otherwise
                                            rule: 'has(self.type) && self.type == ''String'' ? has(self.string) : !has(self.string)'
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - name
                                  x-kubernetes-list-type: map
                                securityGroups:
                                  description: The names of the security groups to assign to the instance
                                  items:
                                    description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                                    maxProperties: 1
                                    minProperties: 1
                                    properties:
                                      filter:
                                        description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                                        minProperties: 1
                                        properties:
                                          description:
                                            type: string
                                          name:
                                            type: string
                                          notTags:
                                            description: |-
                                              NotTags is a list of tags to filter by. If specified, resources which
                                              contain all of the given tags will be excluded from the result.
                                            items:
                                              description: |-
                                                NeutronTag represents a tag on a Neutron resource.
                                                It may not be empty and may not contain commas.
                                              minLength: 1
                                              pattern: ^[^,]+$
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: set
                                          notTagsAny:
                                            description: |-
                                              NotTagsAny is a list of tags to filter by. If specified, resources
                                              which contain any of the given tags will be excluded from the result.
                                            items:
                                              description: |-
                                                NeutronTag represents a tag on a Neutron resource.
                                                It may not be empty and may not contain commas.
                                              minLength: 1
                                              pattern: ^[^,]+$
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: set
                                          projectID:
                                            type: string
                                          tags:
                                            description: |-
                                              Tags is a list of tags to filter by. If specified, the resource must
                                              have all of the tags specified to be included in the result.
                                            items:
                                              description: |-
                                                NeutronTag represents a tag on a Neutron resource.
                                                It may not be empty and may not contain commas.
                                              minLength: 1
                                              pattern: ^[^,]+$
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: set
                                          tagsAny:
                                            description: |-
                                              TagsAny is a list of tags to filter by. If specified, the resource
                                              must have at least one of the tags specified to be included in the
                                              result.
                                            items:
                                              description: |-
                                                NeutronTag represents a tag on a Neutron resource.
                                                It may not be empty and may not contain commas.
                                              minLength: 1
                                              pattern: ^[^,]+$
                                              type: string
                                            type: array
                                            x-kubernetes-list-type: set
                                        type: object
                                      id:
                                        description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                        format: uuid
                                        type: string
                                    type: object
                                  type: array
                                serverGroup:
                                  description: The server group to assign the machine to.
                                  maxProperties: 1
                                  minProperties: 1
                                  properties:
                                    filter:
                                      description: Filter specifies a query to select an OpenStack server group. If provided, it cannot be empty.
                                      minProperties: 1
                                      properties:
                                        name:
                                          description: Name is the name of a server group to look for.
                                          type: string
                                      type: object
                                    id:
                                      description: ID is the ID of the server group to use.
                                      format: uuid
                                      type: string
                                  type: object
                                serverMetadata:
                                  description: Metadata mapping. Allows you to create a map of key value pairs to add to the server instance.
                                  items:
                                    properties:
                                      key:
                                        description: Key is the server metadata key
                                        maxLength: 255
                                        type: string
                                      value:
                                        description: Value is the server metadata value
                                        maxLength: 255
                                        type: string
                                    required:
                                      - key
                                      - value
                                    type: object
                                  type: array
                                  x-kubernetes-list-map-keys:
                                    - key
                                  x-kubernetes-list-type: map
                                sshKeyName:
                                  description: The ssh key to inject in the instance
                                  type: string
                                tags:
                                  description: |-
                                    Tags which will be added to the machine and all dependent resources
                                    which support them. These are in addition to Tags defined on the
                                    cluster.
                                    Requires Nova api 2.52 minimum!
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                trunk:
                                  description: Whether the server instance is created on a trunk port or not.
                                  type: boolean
                              required:
                                - image
                              type: object
                              x-kubernetes-validations:
                                - message: at least one of flavor or flavorID must be set
                                  rule: (has(self.flavor) || has(self.flavorID))
                          type: object
                          x-kubernetes-validations:
                            - message: spec is required if bastion is enabled
                              rule: '!self.enabled || has(self.spec)'
                        controlPlaneAvailabilityZones:
                          description: |-
                            ControlPlaneAvailabilityZones is the set of availability zones which
                            control plane machines may be deployed to.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        controlPlaneEndpoint:
                          description: |-
                            ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                            It is normally populated automatically by the OpenStackCluster
                            controller during cluster provisioning. If it is set on creation the
                            control plane endpoint will use the values set here in preference to
                            values set elsewhere.
                            ControlPlaneEndpoint cannot be modified after ControlPlaneEndpoint.Host has been set.
                          properties:
                            host:
                              description: host is the hostname on which the API server is serving.
                              maxLength: 512
                              type: string
                            port:
                              description: port is the port on which the API server is serving.
                              format: int32
                              type: integer
                          required:
                            - host
                            - port
                          type: object
                        controlPlaneOmitAvailabilityZone:
                          description: |-
                            ControlPlaneOmitAvailabilityZone causes availability zone to be
                            omitted when creating control plane nodes, allowing the Nova
                            scheduler to make a decision on which availability zone to use based
                            on other scheduling constraints
                          type: boolean
                        disableAPIServerFloatingIP:
                          description: |-
                            DisableAPIServerFloatingIP determines whether or not to attempt to attach a floating
                            IP to the API server. This allows for the creation of clusters when attaching a floating
                            IP to the API server (and hence, in many cases, exposing the API server to the internet)
                            is not possible or desirable, e.g. if using a shared VLAN for communication between
                            management and workload clusters or when the management cluster is inside the
                            project network.
                            This option requires that the API server use a VIP on the cluster network so that the
                            underlying machines can change without changing ControlPlaneEndpoint.Host.
                            When using a managed load balancer, this VIP will be managed automatically.
                            If not using a managed load balancer, cluster configuration will fail without additional
                            configuration to manage the VIP on the control plane machines, which falls outside of
                            the scope of this controller.
                          type: boolean
                        disableExternalNetwork:
                          description: |-
                            DisableExternalNetwork specifies whether or not to attempt to connect the cluster
                            to an external network. This allows for the creation of clusters when connecting
                            to an external network is not possible or desirable, e.g. if using a provider network.
                          type: boolean
                        disablePortSecurity:
                          description: |-
                            DisablePortSecurity disables the port security of the network created for the
                            Kubernetes cluster, which also disables SecurityGroups
                          type: boolean
                        externalNetwork:
                          description: |-
                            ExternalNetwork is the OpenStack Network to be used to get public internet to the VMs.
                            This option is ignored if DisableExternalNetwork is set to true.

                            If ExternalNetwork is defined it must refer to exactly one external network.

                            If ExternalNetwork is not defined or is empty the controller will use any
                            existing external network as long as there is only one. It is an
                            error if ExternalNetwork is not defined and there are multiple
                            external networks unless DisableExternalNetwork is also set.

                            If ExternalNetwork is not defined and there are no external networks
                            the controller will proceed as though DisableExternalNetwork was set.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            filter:
                              description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                              minProperties: 1
                              properties:
                                description:
                                  type: string
                                name:
                                  type: string
                                notTags:
                                  description: |-
                                    NotTags is a list of tags to filter by. If specified, resources which
                                    contain all of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                notTagsAny:
                                  description: |-
                                    NotTagsAny is a list of tags to filter by. If specified, resources
                                    which contain any of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                projectID:
                                  type: string
                                tags:
                                  description: |-
                                    Tags is a list of tags to filter by. If specified, the resource must
                                    have all of the tags specified to be included in the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                tagsAny:
                                  description: |-
                                    TagsAny is a list of tags to filter by. If specified, the resource
                                    must have at least one of the tags specified to be included in the
                                    result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                              type: object
                            id:
                              description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                              format: uuid
                              type: string
                          type: object
                        externalRouterIPs:
                          description: |-
                            ExternalRouterIPs is an array of externalIPs on the respective subnets.
                            This is necessary if the router needs a fixed ip in a specific subnet.
                          items:
                            properties:
                              fixedIP:
                                description: The FixedIP in the corresponding subnet
                                type: string
                              subnet:
                                description: The subnet in which the FixedIP is used for the Gateway of this router
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  filter:
                                    description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                                    minProperties: 1
                                    properties:
                                      cidr:
                                        type: string
                                      description:
                                        type: string
                                      gatewayIP:
                                        type: string
                                      ipVersion:
                                        type: integer
                                      ipv6AddressMode:
                                        type: string
                                      ipv6RAMode:
                                        type: string
                                      name:
                                        type: string
                                      notTags:
                                        description: |-
                                          NotTags is a list of tags to filter by. If specified, resources which
                                          contain all of the given tags will be excluded from the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      notTagsAny:
                                        description: |-
                                          NotTagsAny is a list of tags to filter by. If specified, resources
                                          which contain any of the given tags will be excluded from the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      projectID:
                                        type: string
                                      tags:
                                        description: |-
                                          Tags is a list of tags to filter by. If specified, the resource must
                                          have all of the tags specified to be included in the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      tagsAny:
                                        description: |-
                                          TagsAny is a list of tags to filter by. If specified, the resource
                                          must have at least one of the tags specified to be included in the
                                          result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                    type: object
                                  id:
                                    description: ID is the uuid of the subnet. It will not be validated.
                                    format: uuid
                                    type: string
                                type: object
                            required:
                              - subnet
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        identityRef:
                          description: |-
                            IdentityRef is a reference to a secret holding OpenStack credentials
                            to be used when reconciling this cluster. It is also to reconcile
                            machines unless overridden in the machine spec.
                          properties:
                            cloudName:
                              description: CloudName specifies the name of the entry in the clouds.yaml file to use.
                              type: string
                            name:
                              description: |-
                                Name is the name of a secret in the same namespace as the resource being provisioned.
                                The secret must contain a key named `clouds.yaml` which contains an OpenStack clouds.yaml file.
                                The secret may optionally contain a key named `cacert` containing a PEM-encoded CA certificate.
                              type: string
                            region:
                              description: |-
                                Region specifies an OpenStack region to use. If specified, it overrides
                                any value in clouds.yaml. If specified for an OpenStackMachine, its
                                value will be included in providerID.
                              type: string
                          required:
                            - cloudName
                            - name
                          type: object
                          x-kubernetes-validations:
                            - message: region is immutable
                              rule: (!has(self.region) && !has(oldSelf.region)) || self.region == oldSelf.region
                        managedSecurityGroups:
                          description: |-
                            ManagedSecurityGroups determines whether OpenStack security groups for the cluster
                            will be managed by the OpenStack provider or whether pre-existing security groups will
                            be specified as part of the configuration.
                            By default, the managed security groups have rules that allow the Kubelet, etcd, and the
                            Kubernetes API server to function correctly.
                            It's possible to add additional rules to the managed security groups.
                            When defined to an empty struct, the managed security groups will be created with the default rules.
                          properties:
                            allNodesSecurityGroupRules:
                              description: allNodesSecurityGroupRules defines the rules that should be applied to all nodes.
                              items:
                                description: |-
                                  SecurityGroupRuleSpec represent the basic information of the associated OpenStack
                                  Security Group Role.
                                  For now this is only used for the allNodesSecurityGroupRules but when we add
                                  other security groups, we'll need to add a validation because
                                  Remote* fields are mutually exclusive.
                                properties:
                                  description:
                                    description: description of the security group rule.
                                    type: string
                                  direction:
                                    description: |-
                                      direction in which the security group rule is applied. The only values
                                      allowed are "ingress" or "egress". For a compute instance, an ingress
                                      security group rule is applied to incoming (ingress) traffic for that
                                      instance. An egress rule is applied to traffic leaving the instance.
                                    type: string
                                  etherType:
                                    description: |-
                                      etherType must be IPv4 or IPv6, and addresses represented in CIDR must match the
                                      ingress or egress rules.
                                    type: string
                                  name:
                                    description: |-
                                      name of the security group rule.
                                      It's used to identify the rule so it can be patched and will not be sent to the OpenStack API.
                                    type: string
                                  portRangeMax:
                                    description: |-
                                      portRangeMax is a number in the range that is matched by the security group
                                      rule. The portRangeMin attribute constrains the portRangeMax attribute.
                                    type: integer
                                  portRangeMin:
                                    description: |-
                                      portRangeMin is a number in the range that is matched by the security group
                                      rule. If the protocol is TCP or UDP, this value must be less than or equal
                                      to the value of the portRangeMax attribute.
                                    type: integer
                                  protocol:
                                    description: protocol is the protocol that is matched by the security group rule.
                                    type: string
                                  remoteGroupID:
                                    description: |-
                                      remoteGroupID is the remote group ID to be associated with this security group rule.
                                      You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                                    type: string
                                  remoteIPPrefix:
                                    description: |-
                                      remoteIPPrefix is the remote IP prefix to be associated with this security group rule.
                                      You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                                    type: string
                                  remoteManagedGroups:
                                    description: |-
                                      remoteManagedGroups is the remote managed groups to be associated with this security group rule.
                                      You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                                    items:
                                      enum:
                                        - bastion
                                        - controlplane
                                        - worker
                                      type: string
                                    type: array
                                required:
                                  - direction
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            allowAllInClusterTraffic:
                              default: false
                              description: AllowAllInClusterTraffic allows all ingress and egress traffic between cluster nodes when set to true.
                              type: boolean
                            controlPlaneNodesSecurityGroupRules:
                              description: controlPlaneNodesSecurityGroupRules defines the rules that should be applied to control plane nodes.
                              items:
                                description: |-
                                  SecurityGroupRuleSpec represent the basic information of the associated OpenStack
                                  Security Group Role.
                                  For now this is only used for the allNodesSecurityGroupRules but when we add
                                  other security groups, we'll need to add a validation because
                                  Remote* fields are mutually exclusive.
                                properties:
                                  description:
                                    description: description of the security group rule.
                                    type: string
                                  direction:
                                    description: |-
                                      direction in which the security group rule is applied. The only values
                                      allowed are "ingress" or "egress". For a compute instance, an ingress
                                      security group rule is applied to incoming (ingress) traffic for that
                                      instance. An egress rule is applied to traffic leaving the instance.
                                    type: string
                                  etherType:
                                    description: |-
                                      etherType must be IPv4 or IPv6, and addresses represented in CIDR must match the
                                      ingress or egress rules.
                                    type: string
                                  name:
                                    description: |-
                                      name of the security group rule.
                                      It's used to identify the rule so it can be patched and will not be sent to the OpenStack API.
                                    type: string
                                  portRangeMax:
                                    description: |-
                                      portRangeMax is a number in the range that is matched by the security group
                                      rule. The portRangeMin attribute constrains the portRangeMax attribute.
                                    type: integer
                                  portRangeMin:
                                    description: |-
                                      portRangeMin is a number in the range that is matched by the security group
                                      rule. If the protocol is TCP or UDP, this value must be less than or equal
                                      to the value of the portRangeMax attribute.
                                    type: integer
                                  protocol:
                                    description: protocol is the protocol that is matched by the security group rule.
                                    type: string
                                  remoteGroupID:
                                    description: |-
                                      remoteGroupID is the remote group ID to be associated with this security group rule.
                                      You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                                    type: string
                                  remoteIPPrefix:
                                    description: |-
                                      remoteIPPrefix is the remote IP prefix to be associated with this security group rule.
                                      You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                                    type: string
                                  remoteManagedGroups:
                                    description: |-
                                      remoteManagedGroups is the remote managed groups to be associated with this security group rule.
                                      You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                                    items:
                                      enum:
                                        - bastion
                                        - controlplane
                                        - worker
                                      type: string
                                    type: array
                                required:
                                  - direction
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                            workerNodesSecurityGroupRules:
                              description: workerNodesSecurityGroupRules defines the rules that should be applied to worker nodes.
                              items:
                                description: |-
                                  SecurityGroupRuleSpec represent the basic information of the associated OpenStack
                                  Security Group Role.
                                  For now this is only used for the allNodesSecurityGroupRules but when we add
                                  other security groups, we'll need to add a validation because
                                  Remote* fields are mutually exclusive.
                                properties:
                                  description:
                                    description: description of the security group rule.
                                    type: string
                                  direction:
                                    description: |-
                                      direction in which the security group rule is applied. The only values
                                      allowed are "ingress" or "egress". For a compute instance, an ingress
                                      security group rule is applied to incoming (ingress) traffic for that
                                      instance. An egress rule is applied to traffic leaving the instance.
                                    type: string
                                  etherType:
                                    description: |-
                                      etherType must be IPv4 or IPv6, and addresses represented in CIDR must match the
                                      ingress or egress rules.
                                    type: string
                                  name:
                                    description: |-
                                      name of the security group rule.
                                      It's used to identify the rule so it can be patched and will not be sent to the OpenStack API.
                                    type: string
                                  portRangeMax:
                                    description: |-
                                      portRangeMax is a number in the range that is matched by the security group
                                      rule. The portRangeMin attribute constrains the portRangeMax attribute.
                                    type: integer
                                  portRangeMin:
                                    description: |-
                                      portRangeMin is a number in the range that is matched by the security group
                                      rule. If the protocol is TCP or UDP, this value must be less than or equal
                                      to the value of the portRangeMax attribute.
                                    type: integer
                                  protocol:
                                    description: protocol is the protocol that is matched by the security group rule.
                                    type: string
                                  remoteGroupID:
                                    description: |-
                                      remoteGroupID is the remote group ID to be associated with this security group rule.
                                      You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                                    type: string
                                  remoteIPPrefix:
                                    description: |-
                                      remoteIPPrefix is the remote IP prefix to be associated with this security group rule.
                                      You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                                    type: string
                                  remoteManagedGroups:
                                    description: |-
                                      remoteManagedGroups is the remote managed groups to be associated with this security group rule.
                                      You can specify either remoteGroupID or remoteIPPrefix or remoteManagedGroups.
                                    items:
                                      enum:
                                        - bastion
                                        - controlplane
                                        - worker
                                      type: string
                                    type: array
                                required:
                                  - direction
                                  - name
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - name
                              x-kubernetes-list-type: map
                          required:
                            - allowAllInClusterTraffic
                          type: object
                        managedSubnets:
                          description: |-
                            ManagedSubnets describe OpenStack Subnets to be created. Cluster actuator will create a network,
                            subnets with the defined CIDR, and a router connected to these subnets. Currently only one IPv4
                            subnet is supported. If you leave this empty, no network will be created.
                          items:
                            properties:
                              allocationPools:
                                description: |-
                                  AllocationPools is an array of AllocationPool objects that will be applied to OpenStack Subnet being created.
                                  If set, OpenStack will only allocate these IPs for Machines. It will still be possible to create ports from
                                  outside of these ranges manually.
                                items:
                                  properties:
                                    end:
                                      description: End represents the end of the AlloctionPool, that is the highest IP of the pool.
                                      type: string
                                    start:
                                      description: Start represents the start of the AllocationPool, that is the lowest IP of the pool.
                                      type: string
                                  required:
                                    - end
                                    - start
                                  type: object
                                type: array
                              cidr:
                                description: |-
                                  CIDR is representing the IP address range used to create the subnet, e.g. 10.0.0.0/24.
                                  This field is required when defining a subnet.
                                type: string
                              dnsNameservers:
                                description: |-
                                  DNSNameservers holds a list of DNS server addresses that will be provided when creating
                                  the subnet. These addresses need to have the same IP version as CIDR.
                                items:
                                  type: string
                                type: array
                            required:
                              - cidr
                            type: object
                          maxItems: 1
                          type: array
                          x-kubernetes-list-type: atomic
                        network:
                          description: |-
                            Network specifies an existing network to use if no ManagedSubnets
                            are specified.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            filter:
                              description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                              minProperties: 1
                              properties:
                                description:
                                  type: string
                                name:
                                  type: string
                                notTags:
                                  description: |-
                                    NotTags is a list of tags to filter by. If specified, resources which
                                    contain all of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                notTagsAny:
                                  description: |-
                                    NotTagsAny is a list of tags to filter by. If specified, resources
                                    which contain any of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                projectID:
                                  type: string
                                tags:
                                  description: |-
                                    Tags is a list of tags to filter by. If specified, the resource must
                                    have all of the tags specified to be included in the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                tagsAny:
                                  description: |-
                                    TagsAny is a list of tags to filter by. If specified, the resource
                                    must have at least one of the tags specified to be included in the
                                    result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                              type: object
                            id:
                              description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                              format: uuid
                              type: string
                          type: object
                        networkMTU:
                          description: |-
                            NetworkMTU sets the maximum transmission unit (MTU) value to address fragmentation for the private network ID.
                            This value will be used only if the Cluster actuator creates the network.
                            If left empty, the network will have the default MTU defined in Openstack network service.
                            To use this field, the Openstack installation requires the net-mtu neutron API extension.
                          type: integer
                        router:
                          description: |-
                            Router specifies an existing router to be used if ManagedSubnets are
                            specified. If specified, no new router will be created.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            filter:
                              description: Filter specifies a filter to select an OpenStack router. If provided, cannot be empty.
                              minProperties: 1
                              properties:
                                description:
                                  type: string
                                name:
                                  type: string
                                notTags:
                                  description: |-
                                    NotTags is a list of tags to filter by. If specified, resources which
                                    contain all of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                notTagsAny:
                                  description: |-
                                    NotTagsAny is a list of tags to filter by. If specified, resources
                                    which contain any of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                projectID:
                                  type: string
                                tags:
                                  description: |-
                                    Tags is a list of tags to filter by. If specified, the resource must
                                    have all of the tags specified to be included in the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                tagsAny:
                                  description: |-
                                    TagsAny is a list of tags to filter by. If specified, the resource
                                    must have at least one of the tags specified to be included in the
                                    result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                              type: object
                            id:
                              description: ID is the ID of the router to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                              format: uuid
                              type: string
                          type: object
                        subnets:
                          description: |-
                            Subnets specifies existing subnets to use if not ManagedSubnets are
                            specified. All subnets must be in the network specified by Network.
                            There can be zero, one, or two subnets. If no subnets are specified,
                            all subnets in Network will be used. If 2 subnets are specified, one
                            must be IPv4 and the other IPv6.
                          items:
                            description: SubnetParam specifies an OpenStack subnet to use. It may be specified by either ID or filter, but not both.
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              filter:
                                description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                                minProperties: 1
                                properties:
                                  cidr:
                                    type: string
                                  description:
                                    type: string
                                  gatewayIP:
                                    type: string
                                  ipVersion:
                                    type: integer
                                  ipv6AddressMode:
                                    type: string
                                  ipv6RAMode:
                                    type: string
                                  name:
                                    type: string
                                  notTags:
                                    description: |-
                                      NotTags is a list of tags to filter by. If specified, resources which
                                      contain all of the given tags will be excluded from the result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                  notTagsAny:
                                    description: |-
                                      NotTagsAny is a list of tags to filter by. If specified, resources
                                      which contain any of the given tags will be excluded from the result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                  projectID:
                                    type: string
                                  tags:
                                    description: |-
                                      Tags is a list of tags to filter by. If specified, the resource must
                                      have all of the tags specified to be included in the result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                  tagsAny:
                                    description: |-
                                      TagsAny is a list of tags to filter by. If specified, the resource
                                      must have at least one of the tags specified to be included in the
                                      result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                type: object
                              id:
                                description: ID is the uuid of the subnet. It will not be validated.
                                format: uuid
                                type: string
                            type: object
                          maxItems: 2
                          type: array
                          x-kubernetes-list-type: atomic
                        tags:
                          description: Tags to set on all resources in cluster which support tags
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      required:
                        - identityRef
                      type: object
                      x-kubernetes-validations:
                        - message: bastion floating IP cannot be set when disableExternalNetwork is true
                          rule: 'has(self.disableExternalNetwork) && self.disableExternalNetwork ? !has(self.bastion) || !has(self.bastion.floatingIP) : true'
                        - message: disableAPIServerFloatingIP cannot be false when disableExternalNetwork is true
                          rule: 'has(self.disableExternalNetwork) && self.disableExternalNetwork ? has(self.disableAPIServerFloatingIP) && self.disableAPIServerFloatingIP : true'
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: openstackfloatingippools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: OpenStackFloatingIPPool
    listKind: OpenStackFloatingIPPoolList
    plural: openstackfloatingippools
    singular: openstackfloatingippool
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: OpenStackFloatingIPPool is the Schema for the openstackfloatingippools API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OpenStackFloatingIPPoolSpec defines the desired state of OpenStackFloatingIPPool.
              properties:
                floatingIPNetwork:
                  description: FloatingIPNetwork is the external network to use for floating ips, if there's only one external network it will be used by default
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    filter:
                      description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                      minProperties: 1
                      properties:
                        description:
                          type: string
                        name:
                          type: string
                        notTags:
                          description: |-
                            NotTags is a list of tags to filter by. If specified, resources which
                            contain all of the given tags will be excluded from the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        notTagsAny:
                          description: |-
                            NotTagsAny is a list of tags to filter by. If specified, resources
                            which contain any of the given tags will be excluded from the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        projectID:
                          type: string
                        tags:
                          description: |-
                            Tags is a list of tags to filter by. If specified, the resource must
                            have all of the tags specified to be included in the result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        tagsAny:
                          description: |-
                            TagsAny is a list of tags to filter by. If specified, the resource
                            must have at least one of the tags specified to be included in the
                            result.
                          items:
                            description: |-
                              NeutronTag represents a tag on a Neutron resource.
                              It may not be empty and may not contain commas.
                            minLength: 1
                            pattern: ^[^,]+$
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    id:
                      description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                      format: uuid
                      type: string
                  type: object
                identityRef:
                  description: IdentityRef is a reference to a identity to be used when reconciling this pool.
                  properties:
                    cloudName:
                      description: CloudName specifies the name of the entry in the clouds.yaml file to use.
                      type: string
                    name:
                      description: |-
                        Name is the name of a secret in the same namespace as the resource being provisioned.
                        The secret must contain a key named `clouds.yaml` which contains an OpenStack clouds.yaml file.
                        The secret may optionally contain a key named `cacert` containing a PEM-encoded CA certificate.
                      type: string
                    region:
                      description: |-
                        Region specifies an OpenStack region to use. If specified, it overrides
                        any value in clouds.yaml. If specified for an OpenStackMachine, its
                        value will be included in providerID.
                      type: string
                  required:
                    - cloudName
                    - name
                  type: object
                  x-kubernetes-validations:
                    - message: region is immutable
                      rule: (!has(self.region) && !has(oldSelf.region)) || self.region == oldSelf.region
                maxIPs:
                  description: |-
                    MaxIPs is the maximum number of floating ips that can be allocated from this pool, if nil there is no limit.
                    If set, the pool will stop allocating floating ips when it reaches this number of ClaimedIPs.
                  type: integer
                preAllocatedFloatingIPs:
                  description: |-
                    PreAllocatedFloatingIPs is a list of floating IPs precreated in OpenStack that should be used by this pool.
                    These are used before allocating new ones and are not deleted from OpenStack when the pool is deleted.
                  items:
                    type: string
                  type: array
                reclaimPolicy:
                  description: The stratergy to use for reclaiming floating ips when they are released from a machine
                  enum:
                    - Retain
                    - Delete
                  type: string
              required:
                - identityRef
                - reclaimPolicy
              type: object
            status:
              description: OpenStackFloatingIPPoolStatus defines the observed state of OpenStackFloatingIPPool.
              properties:
                availableIPs:
                  default: []
                  items:
                    type: string
                  type: array
                claimedIPs:
                  default: []
                  items:
                    type: string
                  type: array
                conditions:
                  description: Conditions provide observations of the operational state of a Cluster API resource.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failedIPs:
                  description: FailedIPs contains a list of floating ips that failed to be allocated
                  items:
                    type: string
                  type: array
                floatingIPNetwork:
                  description: floatingIPNetwork contains information about the network used for floating ips
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    tags:
                      items:
                        type: string
                      type: array
                  required:
                    - id
                    - name
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: openstackmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: OpenStackMachine
    listKind: OpenStackMachineList
    plural: openstackmachines
    shortNames:
      - osm
    singular: openstackmachine
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster to which this OpenStackMachine belongs
          jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
          name: Cluster
          type: string
        - description: Machine ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: OpenStack instance ID
          jsonPath: .spec.providerID
          name: ProviderID
          type: string
        - description: Machine object which owns with this OpenStackMachine
          jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
          name: Machine
          type: string
        - description: Time duration since creation of OpenStackMachine
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: OpenStackMachine is the Schema for the openstackmachines API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OpenStackMachineSpec defines the desired state of OpenStackMachine.
              properties:
                additionalBlockDevices:
                  description: AdditionalBlockDevices is a list of specifications for additional block devices to attach to the server instance
                  items:
                    description: AdditionalBlockDevice is a block device to attach to the server.
                    properties:
                      name:
                        description: |-
                          Name of the block device in the context of a machine.
                          If the block device is a volume, the Cinder volume will be named
                          as a combination of the machine name and this name.
                          Also, this name will be used for tagging the block device.
                          Information about the block device tag can be obtained from the OpenStack
                          metadata API or the config drive.
                          Name cannot be 'root', which is reserved for the root volume.
                        type: string
                      sizeGiB:
                        description: SizeGiB is the size of the block device in gibibytes (GiB).
                        minimum: 1
                        type: integer
                      storage:
                        description: |-
                          Storage specifies the storage type of the block device and
                          additional storage options.
                        properties:
                          type:
                            description: |-
                              Type is the type of block device to create.
                              This can be either "Volume" or "Local".
                            type: string
                          volume:
                            description: Volume contains additional storage options for a volume block device.
                            properties:
                              availabilityZone:
                                description: |-
                                  AvailabilityZone is the volume availability zone to create the volume
                                  in. If not specified, the volume will be created without an explicit
                                  availability zone.
                                properties:
                                  from:
                                    default: Name
                                    description: |-
                                      From specifies where we will obtain the availability zone for the
                                      volume. The options are "Name" and "Machine". If "Name" is specified
                                      then the Name field must also be specified. If "Machine" is specified
                                      the volume will use the value of FailureDomain, if any, from the
                                      associated Machine.
                                    enum:
                                      - Name
                                      - Machine
                                    type: string
                                  name:
                                    description: |-
                                      Name is the name of a volume availability zone to use. It is required
                                      if From is "Name". The volume availability zone name may not contain
                                      spaces.
                                    minLength: 1
                                    pattern: ^[^ ]+$
                                    type: string
                                type: object
                                x-kubernetes-validations:
                                  - message: name is required when from is 'Name' or default
                                    rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                              type:
                                description: |-
                                  Type is the Cinder volume type of the volume.
                                  If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                                  will be used.
                                type: string
                            type: object
                        required:
                          - type
                        type: object
                    required:
                      - name
                      - sizeGiB
                      - storage
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
                configDrive:
                  description: Config Drive support
                  type: boolean
                flavor:
                  description: The flavor reference for the flavor for your server instance.
                  minLength: 1
                  type: string
                flavorID:
                  description: |-
                    FlavorID allows flavors to be specified by ID.  This field takes precedence
                    over Flavor.
                  minLength: 1
                  type: string
                floatingIPPoolRef:
                  description: |-
                    floatingIPPoolRef is a reference to a IPPool that will be assigned
                    to an IPAddressClaim. Once the IPAddressClaim is fulfilled, the FloatingIP
                    will be assigned to the OpenStackMachine.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup is the group for the resource being referenced.
                        If APIGroup is not specified, the specified Kind must be in the core API group.
                        For any other third-party types, APIGroup is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                  x-kubernetes-map-type: atomic
                identityRef:
                  description: |-
                    IdentityRef is a reference to a secret holding OpenStack credentials
                    to be used when reconciling this machine. If not specified, the
                    credentials specified in the cluster will be used.
                  properties:
                    cloudName:
                      description: CloudName specifies the name of the entry in the clouds.yaml file to use.
                      type: string
                    name:
                      description: |-
                        Name is the name of a secret in the same namespace as the resource being provisioned.
                        The secret must contain a key named `clouds.yaml` which contains an OpenStack clouds.yaml file.
                        The secret may optionally contain a key named `cacert` containing a PEM-encoded CA certificate.
                      type: string
                    region:
                      description: |-
                        Region specifies an OpenStack region to use. If specified, it overrides
                        any value in clouds.yaml. If specified for an OpenStackMachine, its
                        value will be included in providerID.
                      type: string
                  required:
                    - cloudName
                    - name
                  type: object
                  x-kubernetes-validations:
                    - message: region is immutable
                      rule: (!has(self.region) && !has(oldSelf.region)) || self.region == oldSelf.region
                image:
                  description: |-
                    The image to use for your server instance.
                    If the rootVolume is specified, this will be used when creating the root volume.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    filter:
                      description: |-
                        Filter describes a query for an image. If specified, the combination
                        of name and tags must return a single matching image or an error will
                        be raised.
                      minProperties: 1
                      properties:
                        name:
                          description: The name of the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                          type: string
                        tags:
                          description: The tags associated with the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    id:
                      description: ID is the uuid of the image. ID will not be validated before use.
                      format: uuid
                      type: string
                    imageRef:
                      description: |-
                        ImageRef is a reference to an ORC Image in the same namespace as the
                        referring object.
                      properties:
                        name:
                          description: Name is the name of the referenced resource
                          type: string
                      required:
                        - name
                      type: object
                  type: object
                ports:
                  description: |-
                    Ports to be attached to the server instance. They are created if a port with the given name does not already exist.
                    If not specified a default port will be added for the default cluster network.
                  items:
                    properties:
                      adminStateUp:
                        description: AdminStateUp specifies whether the port should be created in the up (true) or down (false) state. The default is up.
                        type: boolean
                      allowedAddressPairs:
                        description: |-
                          AllowedAddressPairs is a list of address pairs which Neutron will
                          allow the port to send traffic from in addition to the port's
                          addresses. If not specified, the MAC Address will be the MAC Address
                          of the port. Depending on the configuration of Neutron, it may be
                          supported to specify a CIDR instead of a specific IP address.
                        items:
                          properties:
                            ipAddress:
                              description: |-
                                IPAddress is the IP address of the allowed address pair. Depending on
                                the configuration of Neutron, it may be supported to specify a CIDR
                                instead of a specific IP address.
                              type: string
                            macAddress:
                              description: |-
                                MACAddress is the MAC address of the allowed address pair. If not
                                specified, the MAC address will be the MAC address of the port.
                              type: string
                          required:
                            - ipAddress
                          type: object
                        type: array
                      description:
                        description: Description is a human-readable description for the port.
                        type: string
                      disablePortSecurity:
                        description: |-
                          DisablePortSecurity enables or disables the port security when set.
                          When not set, it takes the value of the corresponding field at the network level.
                        type: boolean
                      fixedIPs:
                        description: FixedIPs is a list of pairs of subnet and/or IP address to assign to the port. If specified, these must be subnets of the port's network.
                        items:
                          properties:
                            ipAddress:
                              description: |-
                                IPAddress is a specific IP address to assign to the port. If Subnet
                                is also specified, IPAddress must be a valid IP address in the
                                subnet. If Subnet is not specified, IPAddress must be a valid IP
                                address in any subnet of the port's network.
                              type: string
                            subnet:
                              description: |-
                                Subnet is an openstack subnet query that will return the id of a subnet to create
                                the fixed IP of a port in. This query must not return more than one subnet.
                              maxProperties: 1
                              minProperties: 1
                              properties:
                                filter:
                                  description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                                  minProperties: 1
                                  properties:
                                    cidr:
                                      type: string
                                    description:
                                      type: string
                                    gatewayIP:
                                      type: string
                                    ipVersion:
                                      type: integer
                                    ipv6AddressMode:
                                      type: string
                                    ipv6RAMode:
                                      type: string
                                    name:
                                      type: string
                                    notTags:
                                      description: |-
                                        NotTags is a list of tags to filter by. If specified, resources which
                                        contain all of the given tags will be excluded from the result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    notTagsAny:
                                      description: |-
                                        NotTagsAny is a list of tags to filter by. If specified, resources
                                        which contain any of the given tags will be excluded from the result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    projectID:
                                      type: string
                                    tags:
                                      description: |-
                                        Tags is a list of tags to filter by. If specified, the resource must
                                        have all of the tags specified to be included in the result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    tagsAny:
                                      description: |-
                                        TagsAny is a list of tags to filter by. If specified, the resource
                                        must have at least one of the tags specified to be included in the
                                        result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                id:
                                  description: ID is the uuid of the subnet. It will not be validated.
                                  format: uuid
                                  type: string
                              type: object
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      hostID:
                        description: HostID specifies the ID of the host where the port resides.
                        type: string
                      macAddress:
                        description: MACAddress specifies the MAC address of the port. If not specified, the MAC address will be generated.
                        type: string
                      nameSuffix:
                        description: NameSuffix will be appended to the name of the port if specified. If unspecified, instead the 0-based index of the port in the list is used.
                        type: string
                      network:
                        description: |-
                          Network is a query for an openstack network that the port will be created or discovered on.
                          This will fail if the query returns more than one network.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          filter:
                            description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                            minProperties: 1
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                              notTags:
                                description: |-
                                  NotTags is a list of tags to filter by. If specified, resources which
                                  contain all of the given tags will be excluded from the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              notTagsAny:
                                description: |-
                                  NotTagsAny is a list of tags to filter by. If specified, resources
                                  which contain any of the given tags will be excluded from the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              projectID:
                                type: string
                              tags:
                                description: |-
                                  Tags is a list of tags to filter by. If specified, the resource must
                                  have all of the tags specified to be included in the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              tagsAny:
                                description: |-
                                  TagsAny is a list of tags to filter by. If specified, the resource
                                  must have at least one of the tags specified to be included in the
                                  result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          id:
                            description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                            format: uuid
                            type: string
                        type: object
                      profile:
                        description: |-
                          Profile is a set of key-value pairs that are used for binding
                          details. We intentionally don't expose this as a map[string]string
                          because we only want to enable the users to set the values of the
                          keys that are known to work in OpenStack Networking API.  See
                          https://docs.openstack.org/api-ref/network/v2/index.html?expanded=create-port-detail#create-port
                          To set profiles, your tenant needs permissions rule:create_port, and
                          rule:create_port:binding:profile
                        properties:
                          ovsHWOffload:
                            description: |-
                              OVSHWOffload enables or disables the OVS hardware offload feature.
                              This flag is not required on OpenStack clouds since Yoga as Nova will set it automatically when the port is attached.
                              See: https://bugs.launchpad.net/nova/+bug/2020813
                            type: boolean
                          trustedVF:
                            description: TrustedVF enables or disables the “trusted mode” for the VF.
                            type: boolean
                        type: object
                      propagateUplinkStatus:
                        description: PropageteUplinkStatus enables or disables the propagate uplink status on the port.
                        type: boolean
                      securityGroups:
                        description: SecurityGroups is a list of the names, uuids, filters or any combination these of the security groups to assign to the instance.
                        items:
                          description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            filter:
                              description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                              minProperties: 1
                              properties:
                                description:
                                  type: string
                                name:
                                  type: string
                                notTags:
                                  description: |-
                                    NotTags is a list of tags to filter by. If specified, resources which
                                    contain all of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                notTagsAny:
                                  description: |-
                                    NotTagsAny is a list of tags to filter by. If specified, resources
                                    which contain any of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                projectID:
                                  type: string
                                tags:
                                  description: |-
                                    Tags is a list of tags to filter by. If specified, the resource must
                                    have all of the tags specified to be included in the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                tagsAny:
                                  description: |-
                                    TagsAny is a list of tags to filter by. If specified, the resource
                                    must have at least one of the tags specified to be included in the
                                    result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                              type: object
                            id:
                              description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                              format: uuid
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      tags:
                        description: |-
                          Tags applied to the port (and corresponding trunk, if a trunk is configured.)
                          These tags are applied in addition to the instance's tags, which will also be applied to the port.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      trunk:
                        description: |-
                          Trunk specifies whether trunking is enabled at the port level. If not
                          provided the value is inherited from the machine, or false for a
                          bastion host.
                        type: boolean
                      valueSpecs:
                        description: |-
                          Value specs are extra parameters to include in the API request with OpenStack.
                          This is an extension point for the API, so what they do and if they are supported,
                          depends on the specific OpenStack implementation.
                        items:
                          description: ValueSpec represents a single value_spec key-value pair.
                          properties:
                            key:
                              description: Key is the key in the key-value pair.
                              type: string
                            name:
                              description: |-
                                Name is the name of the key-value pair.
                                This is just for identifying the pair and will not be sent to the OpenStack API.
                              type: string
                            value:
                              description: Value is the value in the key-value pair.
                              type: string
                          required:
                            - key
                            - name
                            - value
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                          - name
                        x-kubernetes-list-type: map
                      vnicType:
                        description: |-
                          VNICType specifies the type of vNIC which this port should be
                          attached to. This is used to determine which mechanism driver(s) to
                          be used to bind the port. The valid values are normal, macvtap,
                          direct, baremetal, direct-physical, virtio-forwarder, smart-nic and
                          remote-managed, although these values will not be validated in this
                          API to ensure compatibility with future neutron changes or custom
                          implementations. What type of vNIC is actually available depends on
                          deployments. If not specified, the Neutron default value is used.
                        type: string
                    type: object
                  type: array
                providerID:
                  description: ProviderID is the unique identifier as specified by the cloud provider.
                  type: string
                rootVolume:
                  description: The volume metadata to boot from
                  properties:
                    availabilityZone:
                      description: |-
                        AvailabilityZone is the volume availability zone to create the volume
                        in. If not specified, the volume will be created without an explicit
                        availability zone.
                      properties:
                        from:
                          default: Name
                          description: |-
                            From specifies where we will obtain the availability zone for the
                            volume. The options are "Name" and "Machine". If "Name" is specified
                            then the Name field must also be specified. If "Machine" is specified
                            the volume will use the value of FailureDomain, if any, from the
                            associated Machine.
                          enum:
                            - Name
                            - Machine
                          type: string
                        name:
                          description: |-
                            Name is the name of a volume availability zone to use. It is required
                            if From is "Name". The volume availability zone name may not contain
                            spaces.
                          minLength: 1
                          pattern: ^[^ ]+$
                          type: string
                      type: object
                      x-kubernetes-validations:
                        - message: name is required when from is 'Name' or default
                          rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                    sizeGiB:
                      description: SizeGiB is the size of the block device in gibibytes (GiB).
                      minimum: 1
                      type: integer
                    type:
                      description: |-
                        Type is the Cinder volume type of the volume.
                        If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                        will be used.
                      type: string
                  required:
                    - sizeGiB
                  type: object
                schedulerHintAdditionalProperties:
                  description: |-
                    SchedulerHintAdditionalProperties are arbitrary key/value pairs that provide additional hints
                    to the OpenStack scheduler. These hints can influence how instances are placed on the infrastructure,
                    such as specifying certain host aggregates or availability zones.
                  items:
                    description: |-
                      SchedulerHintAdditionalProperty represents a single additional property for a scheduler hint.
                      It includes a Name to identify the property and a Value that can be of various types.
                    properties:
                      name:
                        description: |-
                          Name is the name of the scheduler hint property.
                          It is a unique identifier for the property.
                        minLength: 1
                        type: string
                      value:
                        description: |-
                          Value is the value of the scheduler hint property, which can be of various types
                          (e.g., bool, string, int). The type is indicated by the Value.Type field.
                        properties:
                          bool:
                            description: |-
                              Bool is the boolean value of the scheduler hint, used when Type is "Bool".
                              This field is required if type is 'Bool', and must not be set otherwise.
                            type: boolean
                          number:
                            description: |-
                              Number is the integer value of the scheduler hint, used when Type is "Number".
                              This field is required if type is 'Number', and must not be set otherwise.
                            type: integer
                          string:
                            description: |-
                              String is the string value of the scheduler hint, used when Type is "String".
                              This field is required if type is 'String', and must not be set otherwise.
                            maxLength: 255
                            minLength: 1
                            type: string
                          type:
                            description: |-
                              Type represents the type of the value.
                              Valid values are Bool, String, and Number.
                            enum:
                              - Bool
                              - String
                              - Number
                            type: string
                        required:
                          - type
                        type: object
                        x-kubernetes-validations:
                          - message: bool is required when type is Bool, and forbidden otherwise
                            rule: 'has(self.type) && self.type == ''Bool'' ? has(self.bool) : !has(self.bool)'
                          - message: number is required when type is Number, and forbidden otherwise
                            rule: 'has(self.type) && self.type == ''Number'' ? has(self.number) : !has(self.number)'
                          - message: string is required when type is String, and forbidden otherwise
                            rule: 'has(self.type) && self.type == ''String'' ? has(self.string) : !has(self.string)'
                    required:
                      - name
                      - value
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
                securityGroups:
                  description: The names of the security groups to assign to the instance
                  items:
                    description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                    maxProperties: 1
                    minProperties: 1
                    properties:
                      filter:
                        description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                        minProperties: 1
                        properties:
                          description:
                            type: string
                          name:
                            type: string
                          notTags:
                            description: |-
                              NotTags is a list of tags to filter by. If specified, resources which
                              contain all of the given tags will be excluded from the result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          notTagsAny:
                            description: |-
                              NotTagsAny is a list of tags to filter by. If specified, resources
                              which contain any of the given tags will be excluded from the result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          projectID:
                            type: string
                          tags:
                            description: |-
                              Tags is a list of tags to filter by. If specified, the resource must
                              have all of the tags specified to be included in the result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          tagsAny:
                            description: |-
                              TagsAny is a list of tags to filter by. If specified, the resource
                              must have at least one of the tags specified to be included in the
                              result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                        type: object
                      id:
                        description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                        format: uuid
                        type: string
                    type: object
                  type: array
                serverGroup:
                  description: The server group to assign the machine to.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    filter:
                      description: Filter specifies a query to select an OpenStack server group. If provided, it cannot be empty.
                      minProperties: 1
                      properties:
                        name:
                          description: Name is the name of a server group to look for.
                          type: string
                      type: object
                    id:
                      description: ID is the ID of the server group to use.
                      format: uuid
                      type: string
                  type: object
                serverMetadata:
                  description: Metadata mapping. Allows you to create a map of key value pairs to add to the server instance.
                  items:
                    properties:
                      key:
                        description: Key is the server metadata key
                        maxLength: 255
                        type: string
                      value:
                        description: Value is the server metadata value
                        maxLength: 255
                        type: string
                    required:
                      - key
                      - value
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - key
                  x-kubernetes-list-type: map
                sshKeyName:
                  description: The ssh key to inject in the instance
                  type: string
                tags:
                  description: |-
                    Tags which will be added to the machine and all dependent resources
                    which support them. These are in addition to Tags defined on the
                    cluster.
                    Requires Nova api 2.52 minimum!
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                trunk:
                  description: Whether the server instance is created on a trunk port or not.
                  type: boolean
              required:
                - image
              type: object
              x-kubernetes-validations:
                - message: at least one of flavor or flavorID must be set
                  rule: (has(self.flavor) || has(self.flavorID))
            status:
              description: OpenStackMachineStatus defines the observed state of OpenStackMachine.
              properties:
                addresses:
                  description: Addresses contains the OpenStack instance associated addresses.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions provide observations of the operational state of a Cluster API resource.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.

                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.

                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: DeprecatedCAPIMachineStatusError defines errors states for Machine objects.
                  type: string
                instanceID:
                  description: InstanceID is the OpenStack instance ID for this machine.
                  type: string
                instanceState:
                  description: |-
                    InstanceState is the state of the OpenStack instance for this machine.
                    This field is not set anymore by the OpenStackMachine controller.
                    Instead, it's set by the OpenStackServer controller.
                  type: string
                ready:
                  description: Ready is true when the provider resource is ready.
                  type: boolean
                resolved:
                  description: |-
                    Resolved contains parts of the machine spec with all external
                    references fully resolved.
                  properties:
                    flavorID:
                      description: FlavorID is the ID of the flavor to use.
                      type: string
                    imageID:
                      description: ImageID is the ID of the image to use for the machine and is calculated based on ImageFilter.
                      type: string
                    ports:
                      description: Ports is the fully resolved list of ports to create for the machine.
                      items:
                        description: ResolvedPortSpec is a PortOpts with all contained references fully resolved.
                        properties:
                          adminStateUp:
                            description: AdminStateUp specifies whether the port should be created in the up (true) or down (false) state. The default is up.
                            type: boolean
                          allowedAddressPairs:
                            description: |-
                              AllowedAddressPairs is a list of address pairs which Neutron will
                              allow the port to send traffic from in addition to the port's
                              addresses. If not specified, the MAC Address will be the MAC Address
                              of the port. Depending on the configuration of Neutron, it may be
                              supported to specify a CIDR instead of a specific IP address.
                            items:
                              properties:
                                ipAddress:
                                  description: |-
                                    IPAddress is the IP address of the allowed address pair. Depending on
                                    the configuration of Neutron, it may be supported to specify a CIDR
                                    instead of a specific IP address.
                                  type: string
                                macAddress:
                                  description: |-
                                    MACAddress is the MAC address of the allowed address pair. If not
                                    specified, the MAC address will be the MAC address of the port.
                                  type: string
                              required:
                                - ipAddress
                              type: object
                            type: array
                          description:
                            description: Description is a human-readable description for the port.
                            type: string
                          disablePortSecurity:
                            description: |-
                              DisablePortSecurity enables or disables the port security when set.
                              When not set, it takes the value of the corresponding field at the network level.
                            type: boolean
                          fixedIPs:
                            description: FixedIPs is a list of pairs of subnet and/or IP address to assign to the port. If specified, these must be subnets of the port's network.
                            items:
                              description: ResolvedFixedIP is a FixedIP with the Subnet resolved to an ID.
                              properties:
                                ipAddress:
                                  description: |-
                                    IPAddress is a specific IP address to assign to the port. If SubnetID
                                    is also specified, IPAddress must be a valid IP address in the
                                    subnet. If Subnet is not specified, IPAddress must be a valid IP
                                    address in any subnet of the port's network.
                                  type: string
                                subnet:
                                  description: SubnetID is the id of a subnet to create the fixed IP of a port in.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          hostID:
                            description: HostID specifies the ID of the host where the port resides.
                            type: string
                          macAddress:
                            description: MACAddress specifies the MAC address of the port. If not specified, the MAC address will be generated.
                            type: string
                          name:
                            description: Name is the name of the port.
                            type: string
                          networkID:
                            description: NetworkID is the ID of the network the port will be created in.
                            type: string
                          profile:
                            description: |-
                              Profile is a set of key-value pairs that are used for binding
                              details. We intentionally don't expose this as a map[string]string
                              because we only want to enable the users to set the values of the
                              keys that are known to work in OpenStack Networking API.  See
                              https://docs.openstack.org/api-ref/network/v2/index.html?expanded=create-port-detail#create-port
                              To set profiles, your tenant needs permissions rule:create_port, and
                              rule:create_port:binding:profile
                            properties:
                              ovsHWOffload:
                                description: |-
                                  OVSHWOffload enables or disables the OVS hardware offload feature.
                                  This flag is not required on OpenStack clouds since Yoga as Nova will set it automatically when the port is attached.
                                  See: https://bugs.launchpad.net/nova/+bug/2020813
                                type: boolean
                              trustedVF:
                                description: TrustedVF enables or disables the “trusted mode” for the VF.
                                type: boolean
                            type: object
                          propagateUplinkStatus:
                            description: PropageteUplinkStatus enables or disables the propagate uplink status on the port.
                            type: boolean
                          securityGroups:
                            description: SecurityGroups is a list of security group IDs to assign to the port.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          tags:
                            description: Tags applied to the port (and corresponding trunk, if a trunk is configured.)
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          trunk:
                            description: Trunk specifies whether trunking is enabled at the port level.
                            type: boolean
                          valueSpecs:
                            description: |-
                              Value specs are extra parameters to include in the API request with OpenStack.
                              This is an extension point for the API, so what they do and if they are supported,
                              depends on the specific OpenStack implementation.
                            items:
                              description: ValueSpec represents a single value_spec key-value pair.
                              properties:
                                key:
                                  description: Key is the key in the key-value pair.
                                  type: string
                                name:
                                  description: |-
                                    Name is the name of the key-value pair.
                                    This is just for identifying the pair and will not be sent to the OpenStack API.
                                  type: string
                                value:
                                  description: Value is the value in the key-value pair.
                                  type: string
                              required:
                                - key
                                - name
                                - value
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                          vnicType:
                            description: |-
                              VNICType specifies the type of vNIC which this port should be
                              attached to. This is used to determine which mechanism driver(s) to
                              be used to bind the port. The valid values are normal, macvtap,
                              direct, baremetal, direct-physical, virtio-forwarder, smart-nic and
                              remote-managed, although these values will not be validated in this
                              API to ensure compatibility with future neutron changes or custom
                              implementations. What type of vNIC is actually available depends on
                              deployments. If not specified, the Neutron default value is used.
                            type: string
                        required:
                          - description
                          - name
                          - networkID
                        type: object
                      type: array
                    serverGroupID:
                      description: ServerGroupID is the ID of the server group the machine should be added to and is calculated based on ServerGroupFilter.
                      type: string
                  type: object
                resources:
                  description: Resources contains references to OpenStack resources created for the machine.
                  properties:
                    ports:
                      description: Ports is the status of the ports created for the machine.
                      items:
                        properties:
                          id:
                            description: ID is the unique identifier of the port.
                            type: string
                        required:
                          - id
                        type: object
                      type: array
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: openstackmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: OpenStackMachineTemplate
    listKind: OpenStackMachineTemplateList
    plural: openstackmachinetemplates
    shortNames:
      - osmt
    singular: openstackmachinetemplate
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: OpenStackMachineTemplate is the Schema for the openstackmachinetemplates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OpenStackMachineTemplateSpec defines the desired state of OpenStackMachineTemplate.
              properties:
                template:
                  description: OpenStackMachineTemplateResource describes the data needed to create a OpenStackMachine from a template.
                  properties:
                    spec:
                      description: Spec is the specification of the desired behavior of the machine.
                      properties:
                        additionalBlockDevices:
                          description: AdditionalBlockDevices is a list of specifications for additional block devices to attach to the server instance
                          items:
                            description: AdditionalBlockDevice is a block device to attach to the server.
                            properties:
                              name:
                                description: |-
                                  Name of the block device in the context of a machine.
                                  If the block device is a volume, the Cinder volume will be named
                                  as a combination of the machine name and this name.
                                  Also, this name will be used for tagging the block device.
                                  Information about the block device tag can be obtained from the OpenStack
                                  metadata API or the config drive.
                                  Name cannot be 'root', which is reserved for the root volume.
                                type: string
                              sizeGiB:
                                description: SizeGiB is the size of the block device in gibibytes (GiB).
                                minimum: 1
                                type: integer
                              storage:
                                description: |-
                                  Storage specifies the storage type of the block device and
                                  additional storage options.
                                properties:
                                  type:
                                    description: |-
                                      Type is the type of block device to create.
                                      This can be either "Volume" or "Local".
                                    type: string
                                  volume:
                                    description: Volume contains additional storage options for a volume block device.
                                    properties:
                                      availabilityZone:
                                        description: |-
                                          AvailabilityZone is the volume availability zone to create the volume
                                          in. If not specified, the volume will be created without an explicit
                                          availability zone.
                                        properties:
                                          from:
                                            default: Name
                                            description: |-
                                              From specifies where we will obtain the availability zone for the
                                              volume. The options are "Name" and "Machine". If "Name" is specified
                                              then the Name field must also be specified. If "Machine" is specified
                                              the volume will use the value of FailureDomain, if any, from the
                                              associated Machine.
                                            enum:
                                              - Name
                                              - Machine
                                            type: string
                                          name:
                                            description: |-
                                              Name is the name of a volume availability zone to use. It is required
                                              if From is "Name". The volume availability zone name may not contain
                                              spaces.
                                            minLength: 1
                                            pattern: ^[^ ]+$
                                            type: string
                                        type: object
                                        x-kubernetes-validations:
                                          - message: name is required when from is 'Name' or default
                                            rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                                      type:
                                        description: |-
                                          Type is the Cinder volume type of the volume.
                                          If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                                          will be used.
                                        type: string
                                    type: object
                                required:
                                  - type
                                type: object
                            required:
                              - name
                              - sizeGiB
                              - storage
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        configDrive:
                          description: Config Drive support
                          type: boolean
                        flavor:
                          description: The flavor reference for the flavor for your server instance.
                          minLength: 1
                          type: string
                        flavorID:
                          description: |-
                            FlavorID allows flavors to be specified by ID.  This field takes precedence
                            over Flavor.
                          minLength: 1
                          type: string
                        floatingIPPoolRef:
                          description: |-
                            floatingIPPoolRef is a reference to a IPPool that will be assigned
                            to an IPAddressClaim. Once the IPAddressClaim is fulfilled, the FloatingIP
                            will be assigned to the OpenStackMachine.
                          properties:
                            apiGroup:
                              description: |-
                                APIGroup is the group for the resource being referenced.
                                If APIGroup is not specified, the specified Kind must be in the core API group.
                                For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                            - kind
                            - name
                          type: object
                          x-kubernetes-map-type: atomic
                        identityRef:
                          description: |-
                            IdentityRef is a reference to a secret holding OpenStack credentials
                            to be used when reconciling this machine. If not specified, the
                            credentials specified in the cluster will be used.
                          properties:
                            cloudName:
                              description: CloudName specifies the name of the entry in the clouds.yaml file to use.
                              type: string
                            name:
                              description: |-
                                Name is the name of a secret in the same namespace as the resource being provisioned.
                                The secret must contain a key named `clouds.yaml` which contains an OpenStack clouds.yaml file.
                                The secret may optionally contain a key named `cacert` containing a PEM-encoded CA certificate.
                              type: string
                            region:
                              description: |-
                                Region specifies an OpenStack region to use. If specified, it overrides
                                any value in clouds.yaml. If specified for an OpenStackMachine, its
                                value will be included in providerID.
                              type: string
                          required:
                            - cloudName
                            - name
                          type: object
                          x-kubernetes-validations:
                            - message: region is immutable
                              rule: (!has(self.region) && !has(oldSelf.region)) || self.region == oldSelf.region
                        image:
                          description: |-
                            The image to use for your server instance.
                            If the rootVolume is specified, this will be used when creating the root volume.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            filter:
                              description: |-
                                Filter describes a query for an image. If specified, the combination
                                of name and tags must return a single matching image or an error will
                                be raised.
                              minProperties: 1
                              properties:
                                name:
                                  description: The name of the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                                  type: string
                                tags:
                                  description: The tags associated with the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                              type: object
                            id:
                              description: ID is the uuid of the image. ID will not be validated before use.
                              format: uuid
                              type: string
                            imageRef:
                              description: |-
                                ImageRef is a reference to an ORC Image in the same namespace as the
                                referring object.
                              properties:
                                name:
                                  description: Name is the name of the referenced resource
                                  type: string
                              required:
                                - name
                              type: object
                          type: object
                        ports:
                          description: |-
                            Ports to be attached to the server instance. They are created if a port with the given name does not already exist.
                            If not specified a default port will be added for the default cluster network.
                          items:
                            properties:
                              adminStateUp:
                                description: AdminStateUp specifies whether the port should be created in the up (true) or down (false) state. The default is up.
                                type: boolean
                              allowedAddressPairs:
                                description: |-
                                  AllowedAddressPairs is a list of address pairs which Neutron will
                                  allow the port to send traffic from in addition to the port's
                                  addresses. If not specified, the MAC Address will be the MAC Address
                                  of the port. Depending on the configuration of Neutron, it may be
                                  supported to specify a CIDR instead of a specific IP address.
                                items:
                                  properties:
                                    ipAddress:
                                      description: |-
                                        IPAddress is the IP address of the allowed address pair. Depending on
                                        the configuration of Neutron, it may be supported to specify a CIDR
                                        instead of a specific IP address.
                                      type: string
                                    macAddress:
                                      description: |-
                                        MACAddress is the MAC address of the allowed address pair. If not
                                        specified, the MAC address will be the MAC address of the port.
                                      type: string
                                  required:
                                    - ipAddress
                                  type: object
                                type: array
                              description:
                                description: Description is a human-readable description for the port.
                                type: string
                              disablePortSecurity:
                                description: |-
                                  DisablePortSecurity enables or disables the port security when set.
                                  When not set, it takes the value of the corresponding field at the network level.
                                type: boolean
                              fixedIPs:
                                description: FixedIPs is a list of pairs of subnet and/or IP address to assign to the port. If specified, these must be subnets of the port's network.
                                items:
                                  properties:
                                    ipAddress:
                                      description: |-
                                        IPAddress is a specific IP address to assign to the port. If Subnet
                                        is also specified, IPAddress must be a valid IP address in the
                                        subnet. If Subnet is not specified, IPAddress must be a valid IP
                                        address in any subnet of the port's network.
                                      type: string
                                    subnet:
                                      description: |-
                                        Subnet is an openstack subnet query that will return the id of a subnet to create
                                        the fixed IP of a port in. This query must not return more than one subnet.
                                      maxProperties: 1
                                      minProperties: 1
                                      properties:
                                        filter:
                                          description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                                          minProperties: 1
                                          properties:
                                            cidr:
                                              type: string
                                            description:
                                              type: string
                                            gatewayIP:
                                              type: string
                                            ipVersion:
                                              type: integer
                                            ipv6AddressMode:
                                              type: string
                                            ipv6RAMode:
                                              type: string
                                            name:
                                              type: string
                                            notTags:
                                              description: |-
                                                NotTags is a list of tags to filter by. If specified, resources which
                                                contain all of the given tags will be excluded from the result.
                                              items:
                                                description: |-
                                                  NeutronTag represents a tag on a Neutron resource.
                                                  It may not be empty and may not contain commas.
                                                minLength: 1
                                                pattern: ^[^,]+$
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: set
                                            notTagsAny:
                                              description: |-
                                                NotTagsAny is a list of tags to filter by. If specified, resources
                                                which contain any of the given tags will be excluded from the result.
                                              items:
                                                description: |-
                                                  NeutronTag represents a tag on a Neutron resource.
                                                  It may not be empty and may not contain commas.
                                                minLength: 1
                                                pattern: ^[^,]+$
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: set
                                            projectID:
                                              type: string
                                            tags:
                                              description: |-
                                                Tags is a list of tags to filter by. If specified, the resource must
                                                have all of the tags specified to be included in the result.
                                              items:
                                                description: |-
                                                  NeutronTag represents a tag on a Neutron resource.
                                                  It may not be empty and may not contain commas.
                                                minLength: 1
                                                pattern: ^[^,]+$
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: set
                                            tagsAny:
                                              description: |-
                                                TagsAny is a list of tags to filter by. If specified, the resource
                                                must have at least one of the tags specified to be included in the
                                                result.
                                              items:
                                                description: |-
                                                  NeutronTag represents a tag on a Neutron resource.
                                                  It may not be empty and may not contain commas.
                                                minLength: 1
                                                pattern: ^[^,]+$
                                                type: string
                                              type: array
                                              x-kubernetes-list-type: set
                                          type: object
                                        id:
                                          description: ID is the uuid of the subnet. It will not be validated.
                                          format: uuid
                                          type: string
                                      type: object
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              hostID:
                                description: HostID specifies the ID of the host where the port resides.
                                type: string
                              macAddress:
                                description: MACAddress specifies the MAC address of the port. If not specified, the MAC address will be generated.
                                type: string
                              nameSuffix:
                                description: NameSuffix will be appended to the name of the port if specified. If unspecified, instead the 0-based index of the port in the list is used.
                                type: string
                              network:
                                description: |-
                                  Network is a query for an openstack network that the port will be created or discovered on.
                                  This will fail if the query returns more than one network.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  filter:
                                    description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                                    minProperties: 1
                                    properties:
                                      description:
                                        type: string
                                      name:
                                        type: string
                                      notTags:
                                        description: |-
                                          NotTags is a list of tags to filter by. If specified, resources which
                                          contain all of the given tags will be excluded from the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      notTagsAny:
                                        description: |-
                                          NotTagsAny is a list of tags to filter by. If specified, resources
                                          which contain any of the given tags will be excluded from the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      projectID:
                                        type: string
                                      tags:
                                        description: |-
                                          Tags is a list of tags to filter by. If specified, the resource must
                                          have all of the tags specified to be included in the result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                      tagsAny:
                                        description: |-
                                          TagsAny is a list of tags to filter by. If specified, the resource
                                          must have at least one of the tags specified to be included in the
                                          result.
                                        items:
                                          description: |-
                                            NeutronTag represents a tag on a Neutron resource.
                                            It may not be empty and may not contain commas.
                                          minLength: 1
                                          pattern: ^[^,]+$
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: set
                                    type: object
                                  id:
                                    description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                    format: uuid
                                    type: string
                                type: object
                              profile:
                                description: |-
                                  Profile is a set of key-value pairs that are used for binding
                                  details. We intentionally don't expose this as a map[string]string
                                  because we only want to enable the users to set the values of the
                                  keys that are known to work in OpenStack Networking API.  See
                                  https://docs.openstack.org/api-ref/network/v2/index.html?expanded=create-port-detail#create-port
                                  To set profiles, your tenant needs permissions rule:create_port, and
                                  rule:create_port:binding:profile
                                properties:
                                  ovsHWOffload:
                                    description: |-
                                      OVSHWOffload enables or disables the OVS hardware offload feature.
                                      This flag is not required on OpenStack clouds since Yoga as Nova will set it automatically when the port is attached.
                                      See: https://bugs.launchpad.net/nova/+bug/2020813
                                    type: boolean
                                  trustedVF:
                                    description: TrustedVF enables or disables the “trusted mode” for the VF.
                                    type: boolean
                                type: object
                              propagateUplinkStatus:
                                description: PropageteUplinkStatus enables or disables the propagate uplink status on the port.
                                type: boolean
                              securityGroups:
                                description: SecurityGroups is a list of the names, uuids, filters or any combination these of the security groups to assign to the instance.
                                items:
                                  description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                                  maxProperties: 1
                                  minProperties: 1
                                  properties:
                                    filter:
                                      description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                                      minProperties: 1
                                      properties:
                                        description:
                                          type: string
                                        name:
                                          type: string
                                        notTags:
                                          description: |-
                                            NotTags is a list of tags to filter by. If specified, resources which
                                            contain all of the given tags will be excluded from the result.
                                          items:
                                            description: |-
                                              NeutronTag represents a tag on a Neutron resource.
                                              It may not be empty and may not contain commas.
                                            minLength: 1
                                            pattern: ^[^,]+$
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                        notTagsAny:
                                          description: |-
                                            NotTagsAny is a list of tags to filter by. If specified, resources
                                            which contain any of the given tags will be excluded from the result.
                                          items:
                                            description: |-
                                              NeutronTag represents a tag on a Neutron resource.
                                              It may not be empty and may not contain commas.
                                            minLength: 1
                                            pattern: ^[^,]+$
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                        projectID:
                                          type: string
                                        tags:
                                          description: |-
                                            Tags is a list of tags to filter by. If specified, the resource must
                                            have all of the tags specified to be included in the result.
                                          items:
                                            description: |-
                                              NeutronTag represents a tag on a Neutron resource.
                                              It may not be empty and may not contain commas.
                                            minLength: 1
                                            pattern: ^[^,]+$
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                        tagsAny:
                                          description: |-
                                            TagsAny is a list of tags to filter by. If specified, the resource
                                            must have at least one of the tags specified to be included in the
                                            result.
                                          items:
                                            description: |-
                                              NeutronTag represents a tag on a Neutron resource.
                                              It may not be empty and may not contain commas.
                                            minLength: 1
                                            pattern: ^[^,]+$
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: set
                                      type: object
                                    id:
                                      description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                      format: uuid
                                      type: string
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              tags:
                                description: |-
                                  Tags applied to the port (and corresponding trunk, if a trunk is configured.)
                                  These tags are applied in addition to the instance's tags, which will also be applied to the port.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              trunk:
                                description: |-
                                  Trunk specifies whether trunking is enabled at the port level. If not
                                  provided the value is inherited from the machine, or false for a
                                  bastion host.
                                type: boolean
                              valueSpecs:
                                description: |-
                                  Value specs are extra parameters to include in the API request with OpenStack.
                                  This is an extension point for the API, so what they do and if they are supported,
                                  depends on the specific OpenStack implementation.
                                items:
                                  description: ValueSpec represents a single value_spec key-value pair.
                                  properties:
                                    key:
                                      description: Key is the key in the key-value pair.
                                      type: string
                                    name:
                                      description: |-
                                        Name is the name of the key-value pair.
                                        This is just for identifying the pair and will not be sent to the OpenStack API.
                                      type: string
                                    value:
                                      description: Value is the value in the key-value pair.
                                      type: string
                                  required:
                                    - key
                                    - name
                                    - value
                                  type: object
                                type: array
                                x-kubernetes-list-map-keys:
                                  - name
                                x-kubernetes-list-type: map
                              vnicType:
                                description: |-
                                  VNICType specifies the type of vNIC which this port should be
                                  attached to. This is used to determine which mechanism driver(s) to
                                  be used to bind the port. The valid values are normal, macvtap,
                                  direct, baremetal, direct-physical, virtio-forwarder, smart-nic and
                                  remote-managed, although these values will not be validated in this
                                  API to ensure compatibility with future neutron changes or custom
                                  implementations. What type of vNIC is actually available depends on
                                  deployments. If not specified, the Neutron default value is used.
                                type: string
                            type: object
                          type: array
                        providerID:
                          description: ProviderID is the unique identifier as specified by the cloud provider.
                          type: string
                        rootVolume:
                          description: The volume metadata to boot from
                          properties:
                            availabilityZone:
                              description: |-
                                AvailabilityZone is the volume availability zone to create the volume
                                in. If not specified, the volume will be created without an explicit
                                availability zone.
                              properties:
                                from:
                                  default: Name
                                  description: |-
                                    From specifies where we will obtain the availability zone for the
                                    volume. The options are "Name" and "Machine". If "Name" is specified
                                    then the Name field must also be specified. If "Machine" is specified
                                    the volume will use the value of FailureDomain, if any, from the
                                    associated Machine.
                                  enum:
                                    - Name
                                    - Machine
                                  type: string
                                name:
                                  description: |-
                                    Name is the name of a volume availability zone to use. It is required
                                    if From is "Name". The volume availability zone name may not contain
                                    spaces.
                                  minLength: 1
                                  pattern: ^[^ ]+$
                                  type: string
                              type: object
                              x-kubernetes-validations:
                                - message: name is required when from is 'Name' or default
                                  rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                            sizeGiB:
                              description: SizeGiB is the size of the block device in gibibytes (GiB).
                              minimum: 1
                              type: integer
                            type:
                              description: |-
                                Type is the Cinder volume type of the volume.
                                If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                                will be used.
                              type: string
                          required:
                            - sizeGiB
                          type: object
                        schedulerHintAdditionalProperties:
                          description: |-
                            SchedulerHintAdditionalProperties are arbitrary key/value pairs that provide additional hints
                            to the OpenStack scheduler. These hints can influence how instances are placed on the infrastructure,
                            such as specifying certain host aggregates or availability zones.
                          items:
                            description: |-
                              SchedulerHintAdditionalProperty represents a single additional property for a scheduler hint.
                              It includes a Name to identify the property and a Value that can be of various types.
                            properties:
                              name:
                                description: |-
                                  Name is the name of the scheduler hint property.
                                  It is a unique identifier for the property.
                                minLength: 1
                                type: string
                              value:
                                description: |-
                                  Value is the value of the scheduler hint property, which can be of various types
                                  (e.g., bool, string, int). The type is indicated by the Value.Type field.
                                properties:
                                  bool:
                                    description: |-
                                      Bool is the boolean value of the scheduler hint, used when Type is "Bool".
                                      This field is required if type is 'Bool', and must not be set otherwise.
                                    type: boolean
                                  number:
                                    description: |-
                                      Number is the integer value of the scheduler hint, used when Type is "Number".
                                      This field is required if type is 'Number', and must not be set otherwise.
                                    type: integer
                                  string:
                                    description: |-
                                      String is the string value of the scheduler hint, used when Type is "String".
                                      This field is required if type is 'String', and must not be set otherwise.
                                    maxLength: 255
                                    minLength: 1
                                    type: string
                                  type:
                                    description: |-
                                      Type represents the type of the value.
                                      Valid values are Bool, String, and Number.
                                    enum:
                                      - Bool
                                      - String
                                      - Number
                                    type: string
                                required:
                                  - type
                                type: object
                                x-kubernetes-validations:
                                  - message: bool is required when type is Bool, and forbidden otherwise
                                    rule: 'has(self.type) && self.type == ''Bool'' ? has(self.bool) : !has(self.bool)'
                                  - message: number is required when type is Number, and forbidden otherwise
                                    rule: 'has(self.type) && self.type == ''Number'' ? has(self.number) : !has(self.number)'
                                  - message: string is required when type is String, and forbidden otherwise
                                    rule: 'has(self.type) && self.type == ''String'' ? has(self.string) : !has(self.string)'
                            required:
                              - name
                              - value
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        securityGroups:
                          description: The names of the security groups to assign to the instance
                          items:
                            description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              filter:
                                description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                                minProperties: 1
                                properties:
                                  description:
                                    type: string
                                  name:
                                    type: string
                                  notTags:
                                    description: |-
                                      NotTags is a list of tags to filter by. If specified, resources which
                                      contain all of the given tags will be excluded from the result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                  notTagsAny:
                                    description: |-
                                      NotTagsAny is a list of tags to filter by. If specified, resources
                                      which contain any of the given tags will be excluded from the result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                  projectID:
                                    type: string
                                  tags:
                                    description: |-
                                      Tags is a list of tags to filter by. If specified, the resource must
                                      have all of the tags specified to be included in the result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                  tagsAny:
                                    description: |-
                                      TagsAny is a list of tags to filter by. If specified, the resource
                                      must have at least one of the tags specified to be included in the
                                      result.
                                    items:
                                      description: |-
                                        NeutronTag represents a tag on a Neutron resource.
                                        It may not be empty and may not contain commas.
                                      minLength: 1
                                      pattern: ^[^,]+$
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: set
                                type: object
                              id:
                                description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                                format: uuid
                                type: string
                            type: object
                          type: array
                        serverGroup:
                          description: The server group to assign the machine to.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            filter:
                              description: Filter specifies a query to select an OpenStack server group. If provided, it cannot be empty.
                              minProperties: 1
                              properties:
                                name:
                                  description: Name is the name of a server group to look for.
                                  type: string
                              type: object
                            id:
                              description: ID is the ID of the server group to use.
                              format: uuid
                              type: string
                          type: object
                        serverMetadata:
                          description: Metadata mapping. Allows you to create a map of key value pairs to add to the server instance.
                          items:
                            properties:
                              key:
                                description: Key is the server metadata key
                                maxLength: 255
                                type: string
                              value:
                                description: Value is the server metadata value
                                maxLength: 255
                                type: string
                            required:
                              - key
                              - value
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - key
                          x-kubernetes-list-type: map
                        sshKeyName:
                          description: The ssh key to inject in the instance
                          type: string
                        tags:
                          description: |-
                            Tags which will be added to the machine and all dependent resources
                            which support them. These are in addition to Tags defined on the
                            cluster.
                            Requires Nova api 2.52 minimum!
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        trunk:
                          description: Whether the server instance is created on a trunk port or not.
                          type: boolean
                      required:
                        - image
                      type: object
                      x-kubernetes-validations:
                        - message: at least one of flavor or flavorID must be set
                          rule: (has(self.flavor) || has(self.flavorID))
                  required:
                    - spec
                  type: object
              required:
                - template
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: openstackservers.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
      - cluster-api
    kind: OpenStackServer
    listKind: OpenStackServerList
    plural: openstackservers
    shortNames:
      - oss
    singular: openstackserver
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: OpenStack instance state
          jsonPath: .status.instanceState
          name: InstanceState
          type: string
        - description: OpenStack instance ready status
          jsonPath: .status.ready
          name: Ready
          type: string
        - description: OpenStack instance ID
          jsonPath: .status.instanceID
          name: InstanceID
          type: string
        - description: Time duration since creation of OpenStack instance
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: OpenStackServer is the Schema for the openstackservers API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: OpenStackServerSpec defines the desired state of OpenStackServer.
              properties:
                additionalBlockDevices:
                  description: AdditionalBlockDevices is a list of specifications for additional block devices to attach to the server instance.
                  items:
                    description: AdditionalBlockDevice is a block device to attach to the server.
                    properties:
                      name:
                        description: |-
                          Name of the block device in the context of a machine.
                          If the block device is a volume, the Cinder volume will be named
                          as a combination of the machine name and this name.
                          Also, this name will be used for tagging the block device.
                          Information about the block device tag can be obtained from the OpenStack
                          metadata API or the config drive.
                          Name cannot be 'root', which is reserved for the root volume.
                        type: string
                      sizeGiB:
                        description: SizeGiB is the size of the block device in gibibytes (GiB).
                        minimum: 1
                        type: integer
                      storage:
                        description: |-
                          Storage specifies the storage type of the block device and
                          additional storage options.
                        properties:
                          type:
                            description: |-
                              Type is the type of block device to create.
                              This can be either "Volume" or "Local".
                            type: string
                          volume:
                            description: Volume contains additional storage options for a volume block device.
                            properties:
                              availabilityZone:
                                description: |-
                                  AvailabilityZone is the volume availability zone to create the volume
                                  in. If not specified, the volume will be created without an explicit
                                  availability zone.
                                properties:
                                  from:
                                    default: Name
                                    description: |-
                                      From specifies where we will obtain the availability zone for the
                                      volume. The options are "Name" and "Machine". If "Name" is specified
                                      then the Name field must also be specified. If "Machine" is specified
                                      the volume will use the value of FailureDomain, if any, from the
                                      associated Machine.
                                    enum:
                                      - Name
                                      - Machine
                                    type: string
                                  name:
                                    description: |-
                                      Name is the name of a volume availability zone to use. It is required
                                      if From is "Name". The volume availability zone name may not contain
                                      spaces.
                                    minLength: 1
                                    pattern: ^[^ ]+$
                                    type: string
                                type: object
                                x-kubernetes-validations:
                                  - message: name is required when from is 'Name' or default
                                    rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                              type:
                                description: |-
                                  Type is the Cinder volume type of the volume.
                                  If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                                  will be used.
                                type: string
                            type: object
                        required:
                          - type
                        type: object
                    required:
                      - name
                      - sizeGiB
                      - storage
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
                availabilityZone:
                  description: AvailabilityZone is the availability zone in which to create the server instance.
                  type: string
                configDrive:
                  description: ConfigDrive is a flag to enable config drive for the server instance.
                  type: boolean
                flavor:
                  description: The flavor reference for the flavor for the server instance.
                  minLength: 1
                  type: string
                flavorID:
                  description: |-
                    FlavorID allows flavors to be specified by ID.  This field takes precedence
                    over Flavor.
                  minLength: 1
                  type: string
                floatingIPPoolRef:
                  description: FloatingIPPoolRef is a reference to a FloatingIPPool to allocate a floating IP from.
                  properties:
                    apiGroup:
                      description: |-
                        APIGroup is the group for the resource being referenced.
                        If APIGroup is not specified, the specified Kind must be in the core API group.
                        For any other third-party types, APIGroup is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                  x-kubernetes-map-type: atomic
                identityRef:
                  description: IdentityRef is a reference to a secret holding OpenStack credentials.
                  properties:
                    cloudName:
                      description: CloudName specifies the name of the entry in the clouds.yaml file to use.
                      type: string
                    name:
                      description: |-
                        Name is the name of a secret in the same namespace as the resource being provisioned.
                        The secret must contain a key named `clouds.yaml` which contains an OpenStack clouds.yaml file.
                        The secret may optionally contain a key named `cacert` containing a PEM-encoded CA certificate.
                      type: string
                    region:
                      description: |-
                        Region specifies an OpenStack region to use. If specified, it overrides
                        any value in clouds.yaml. If specified for an OpenStackMachine, its
                        value will be included in providerID.
                      type: string
                  required:
                    - cloudName
                    - name
                  type: object
                  x-kubernetes-validations:
                    - message: region is immutable
                      rule: (!has(self.region) && !has(oldSelf.region)) || self.region == oldSelf.region
                image:
                  description: The image to use for the server instance.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    filter:
                      description: |-
                        Filter describes a query for an image. If specified, the combination
                        of name and tags must return a single matching image or an error will
                        be raised.
                      minProperties: 1
                      properties:
                        name:
                          description: The name of the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                          type: string
                        tags:
                          description: The tags associated with the desired image. If specified, the combination of name and tags must return a single matching image or an error will be raised.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                      type: object
                    id:
                      description: ID is the uuid of the image. ID will not be validated before use.
                      format: uuid
                      type: string
                    imageRef:
                      description: |-
                        ImageRef is a reference to an ORC Image in the same namespace as the
                        referring object.
                      properties:
                        name:
                          description: Name is the name of the referenced resource
                          type: string
                      required:
                        - name
                      type: object
                  type: object
                ports:
                  description: Ports to be attached to the server instance.
                  items:
                    properties:
                      adminStateUp:
                        description: AdminStateUp specifies whether the port should be created in the up (true) or down (false) state. The default is up.
                        type: boolean
                      allowedAddressPairs:
                        description: |-
                          AllowedAddressPairs is a list of address pairs which Neutron will
                          allow the port to send traffic from in addition to the port's
                          addresses. If not specified, the MAC Address will be the MAC Address
                          of the port. Depending on the configuration of Neutron, it may be
                          supported to specify a CIDR instead of a specific IP address.
                        items:
                          properties:
                            ipAddress:
                              description: |-
                                IPAddress is the IP address of the allowed address pair. Depending on
                                the configuration of Neutron, it may be supported to specify a CIDR
                                instead of a specific IP address.
                              type: string
                            macAddress:
                              description: |-
                                MACAddress is the MAC address of the allowed address pair. If not
                                specified, the MAC address will be the MAC address of the port.
                              type: string
                          required:
                            - ipAddress
                          type: object
                        type: array
                      description:
                        description: Description is a human-readable description for the port.
                        type: string
                      disablePortSecurity:
                        description: |-
                          DisablePortSecurity enables or disables the port security when set.
                          When not set, it takes the value of the corresponding field at the network level.
                        type: boolean
                      fixedIPs:
                        description: FixedIPs is a list of pairs of subnet and/or IP address to assign to the port. If specified, these must be subnets of the port's network.
                        items:
                          properties:
                            ipAddress:
                              description: |-
                                IPAddress is a specific IP address to assign to the port. If Subnet
                                is also specified, IPAddress must be a valid IP address in the
                                subnet. If Subnet is not specified, IPAddress must be a valid IP
                                address in any subnet of the port's network.
                              type: string
                            subnet:
                              description: |-
                                Subnet is an openstack subnet query that will return the id of a subnet to create
                                the fixed IP of a port in. This query must not return more than one subnet.
                              maxProperties: 1
                              minProperties: 1
                              properties:
                                filter:
                                  description: Filter specifies a filter to select the subnet. It must match exactly one subnet.
                                  minProperties: 1
                                  properties:
                                    cidr:
                                      type: string
                                    description:
                                      type: string
                                    gatewayIP:
                                      type: string
                                    ipVersion:
                                      type: integer
                                    ipv6AddressMode:
                                      type: string
                                    ipv6RAMode:
                                      type: string
                                    name:
                                      type: string
                                    notTags:
                                      description: |-
                                        NotTags is a list of tags to filter by. If specified, resources which
                                        contain all of the given tags will be excluded from the result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    notTagsAny:
                                      description: |-
                                        NotTagsAny is a list of tags to filter by. If specified, resources
                                        which contain any of the given tags will be excluded from the result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    projectID:
                                      type: string
                                    tags:
                                      description: |-
                                        Tags is a list of tags to filter by. If specified, the resource must
                                        have all of the tags specified to be included in the result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                    tagsAny:
                                      description: |-
                                        TagsAny is a list of tags to filter by. If specified, the resource
                                        must have at least one of the tags specified to be included in the
                                        result.
                                      items:
                                        description: |-
                                          NeutronTag represents a tag on a Neutron resource.
                                          It may not be empty and may not contain commas.
                                        minLength: 1
                                        pattern: ^[^,]+$
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  type: object
                                id:
                                  description: ID is the uuid of the subnet. It will not be validated.
                                  format: uuid
                                  type: string
                              type: object
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      hostID:
                        description: HostID specifies the ID of the host where the port resides.
                        type: string
                      macAddress:
                        description: MACAddress specifies the MAC address of the port. If not specified, the MAC address will be generated.
                        type: string
                      nameSuffix:
                        description: NameSuffix will be appended to the name of the port if specified. If unspecified, instead the 0-based index of the port in the list is used.
                        type: string
                      network:
                        description: |-
                          Network is a query for an openstack network that the port will be created or discovered on.
                          This will fail if the query returns more than one network.
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          filter:
                            description: Filter specifies a filter to select an OpenStack network. If provided, cannot be empty.
                            minProperties: 1
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                              notTags:
                                description: |-
                                  NotTags is a list of tags to filter by. If specified, resources which
                                  contain all of the given tags will be excluded from the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              notTagsAny:
                                description: |-
                                  NotTagsAny is a list of tags to filter by. If specified, resources
                                  which contain any of the given tags will be excluded from the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              projectID:
                                type: string
                              tags:
                                description: |-
                                  Tags is a list of tags to filter by. If specified, the resource must
                                  have all of the tags specified to be included in the result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              tagsAny:
                                description: |-
                                  TagsAny is a list of tags to filter by. If specified, the resource
                                  must have at least one of the tags specified to be included in the
                                  result.
                                items:
                                  description: |-
                                    NeutronTag represents a tag on a Neutron resource.
                                    It may not be empty and may not contain commas.
                                  minLength: 1
                                  pattern: ^[^,]+$
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                            type: object
                          id:
                            description: ID is the ID of the network to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                            format: uuid
                            type: string
                        type: object
                      profile:
                        description: |-
                          Profile is a set of key-value pairs that are used for binding
                          details. We intentionally don't expose this as a map[string]string
                          because we only want to enable the users to set the values of the
                          keys that are known to work in OpenStack Networking API.  See
                          https://docs.openstack.org/api-ref/network/v2/index.html?expanded=create-port-detail#create-port
                          To set profiles, your tenant needs permissions rule:create_port, and
                          rule:create_port:binding:profile
                        properties:
                          ovsHWOffload:
                            description: |-
                              OVSHWOffload enables or disables the OVS hardware offload feature.
                              This flag is not required on OpenStack clouds since Yoga as Nova will set it automatically when the port is attached.
                              See: https://bugs.launchpad.net/nova/+bug/2020813
                            type: boolean
                          trustedVF:
                            description: TrustedVF enables or disables the “trusted mode” for the VF.
                            type: boolean
                        type: object
                      propagateUplinkStatus:
                        description: PropageteUplinkStatus enables or disables the propagate uplink status on the port.
                        type: boolean
                      securityGroups:
                        description: SecurityGroups is a list of the names, uuids, filters or any combination these of the security groups to assign to the instance.
                        items:
                          description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            filter:
                              description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                              minProperties: 1
                              properties:
                                description:
                                  type: string
                                name:
                                  type: string
                                notTags:
                                  description: |-
                                    NotTags is a list of tags to filter by. If specified, resources which
                                    contain all of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                notTagsAny:
                                  description: |-
                                    NotTagsAny is a list of tags to filter by. If specified, resources
                                    which contain any of the given tags will be excluded from the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                projectID:
                                  type: string
                                tags:
                                  description: |-
                                    Tags is a list of tags to filter by. If specified, the resource must
                                    have all of the tags specified to be included in the result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                                tagsAny:
                                  description: |-
                                    TagsAny is a list of tags to filter by. If specified, the resource
                                    must have at least one of the tags specified to be included in the
                                    result.
                                  items:
                                    description: |-
                                      NeutronTag represents a tag on a Neutron resource.
                                      It may not be empty and may not contain commas.
                                    minLength: 1
                                    pattern: ^[^,]+$
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: set
                              type: object
                            id:
                              description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                              format: uuid
                              type: string
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      tags:
                        description: |-
                          Tags applied to the port (and corresponding trunk, if a trunk is configured.)
                          These tags are applied in addition to the instance's tags, which will also be applied to the port.
                        items:
                          type: string
                        type: array
                        x-kubernetes-list-type: set
                      trunk:
                        description: |-
                          Trunk specifies whether trunking is enabled at the port level. If not
                          provided the value is inherited from the machine, or false for a
                          bastion host.
                        type: boolean
                      valueSpecs:
                        description: |-
                          Value specs are extra parameters to include in the API request with OpenStack.
                          This is an extension point for the API, so what they do and if they are supported,
                          depends on the specific OpenStack implementation.
                        items:
                          description: ValueSpec represents a single value_spec key-value pair.
                          properties:
                            key:
                              description: Key is the key in the key-value pair.
                              type: string
                            name:
                              description: |-
                                Name is the name of the key-value pair.
                                This is just for identifying the pair and will not be sent to the OpenStack API.
                              type: string
                            value:
                              description: Value is the value in the key-value pair.
                              type: string
                          required:
                            - key
                            - name
                            - value
                          type: object
                        type: array
                        x-kubernetes-list-map-keys:
                          - name
                        x-kubernetes-list-type: map
                      vnicType:
                        description: |-
                          VNICType specifies the type of vNIC which this port should be
                          attached to. This is used to determine which mechanism driver(s) to
                          be used to bind the port. The valid values are normal, macvtap,
                          direct, baremetal, direct-physical, virtio-forwarder, smart-nic and
                          remote-managed, although these values will not be validated in this
                          API to ensure compatibility with future neutron changes or custom
                          implementations. What type of vNIC is actually available depends on
                          deployments. If not specified, the Neutron default value is used.
                        type: string
                    type: object
                  type: array
                rootVolume:
                  description: RootVolume is the specification for the root volume of the server instance.
                  properties:
                    availabilityZone:
                      description: |-
                        AvailabilityZone is the volume availability zone to create the volume
                        in. If not specified, the volume will be created without an explicit
                        availability zone.
                      properties:
                        from:
                          default: Name
                          description: |-
                            From specifies where we will obtain the availability zone for the
                            volume. The options are "Name" and "Machine". If "Name" is specified
                            then the Name field must also be specified. If "Machine" is specified
                            the volume will use the value of FailureDomain, if any, from the
                            associated Machine.
                          enum:
                            - Name
                            - Machine
                          type: string
                        name:
                          description: |-
                            Name is the name of a volume availability zone to use. It is required
                            if From is "Name". The volume availability zone name may not contain
                            spaces.
                          minLength: 1
                          pattern: ^[^ ]+$
                          type: string
                      type: object
                      x-kubernetes-validations:
                        - message: name is required when from is 'Name' or default
                          rule: '!has(self.from) || self.from == ''Name'' ? has(self.name) : !has(self.name)'
                    sizeGiB:
                      description: SizeGiB is the size of the block device in gibibytes (GiB).
                      minimum: 1
                      type: integer
                    type:
                      description: |-
                        Type is the Cinder volume type of the volume.
                        If omitted, the default Cinder volume type that is configured in the OpenStack cloud
                        will be used.
                      type: string
                  required:
                    - sizeGiB
                  type: object
                schedulerHintAdditionalProperties:
                  description: |-
                    SchedulerHintAdditionalProperties are arbitrary key/value pairs that provide additional hints
                    to the OpenStack scheduler. These hints can influence how instances are placed on the infrastructure,
                    such as specifying certain host aggregates or availability zones.
                  items:
                    description: |-
                      SchedulerHintAdditionalProperty represents a single additional property for a scheduler hint.
                      It includes a Name to identify the property and a Value that can be of various types.
                    properties:
                      name:
                        description: |-
                          Name is the name of the scheduler hint property.
                          It is a unique identifier for the property.
                        minLength: 1
                        type: string
                      value:
                        description: |-
                          Value is the value of the scheduler hint property, which can be of various types
                          (e.g., bool, string, int). The type is indicated by the Value.Type field.
                        properties:
                          bool:
                            description: |-
                              Bool is the boolean value of the scheduler hint, used when Type is "Bool".
                              This field is required if type is 'Bool', and must not be set otherwise.
                            type: boolean
                          number:
                            description: |-
                              Number is the integer value of the scheduler hint, used when Type is "Number".
                              This field is required if type is 'Number', and must not be set otherwise.
                            type: integer
                          string:
                            description: |-
                              String is the string value of the scheduler hint, used when Type is "String".
                              This field is required if type is 'String', and must not be set otherwise.
                            maxLength: 255
                            minLength: 1
                            type: string
                          type:
                            description: |-
                              Type represents the type of the value.
                              Valid values are Bool, String, and Number.
                            enum:
                              - Bool
                              - String
                              - Number
                            type: string
                        required:
                          - type
                        type: object
                        x-kubernetes-validations:
                          - message: bool is required when type is Bool, and forbidden otherwise
                            rule: 'has(self.type) && self.type == ''Bool'' ? has(self.bool) : !has(self.bool)'
                          - message: number is required when type is Number, and forbidden otherwise
                            rule: 'has(self.type) && self.type == ''Number'' ? has(self.number) : !has(self.number)'
                          - message: string is required when type is String, and forbidden otherwise
                            rule: 'has(self.type) && self.type == ''String'' ? has(self.string) : !has(self.string)'
                    required:
                      - name
                      - value
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
                securityGroups:
                  description: SecurityGroups is a list of security groups names to assign to the instance.
                  items:
                    description: SecurityGroupParam specifies an OpenStack security group. It may be specified by ID or filter, but not both.
                    maxProperties: 1
                    minProperties: 1
                    properties:
                      filter:
                        description: Filter specifies a query to select an OpenStack security group. If provided, cannot be empty.
                        minProperties: 1
                        properties:
                          description:
                            type: string
                          name:
                            type: string
                          notTags:
                            description: |-
                              NotTags is a list of tags to filter by. If specified, resources which
                              contain all of the given tags will be excluded from the result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          notTagsAny:
                            description: |-
                              NotTagsAny is a list of tags to filter by. If specified, resources
                              which contain any of the given tags will be excluded from the result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          projectID:
                            type: string
                          tags:
                            description: |-
                              Tags is a list of tags to filter by. If specified, the resource must
                              have all of the tags specified to be included in the result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          tagsAny:
                            description: |-
                              TagsAny is a list of tags to filter by. If specified, the resource
                              must have at least one of the tags specified to be included in the
                              result.
                            items:
                              description: |-
                                NeutronTag represents a tag on a Neutron resource.
                                It may not be empty and may not contain commas.
                              minLength: 1
                              pattern: ^[^,]+$
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                        type: object
                      id:
                        description: ID is the ID of the security group to use. If ID is provided, the other filters cannot be provided. Must be in UUID format.
                        format: uuid
                        type: string
                    type: object
                  type: array
                serverGroup:
                  description: ServerGroup is the server group to which the server instance belongs.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    filter:
                      description: Filter specifies a query to select an OpenStack server group. If provided, it cannot be empty.
                      minProperties: 1
                      properties:
                        name:
                          description: Name is the name of a server group to look for.
                          type: string
                      type: object
                    id:
                      description: ID is the ID of the server group to use.
                      format: uuid
                      type: string
                  type: object
                serverMetadata:
                  description: ServerMetadata is a map of key value pairs to add to the server instance.
                  items:
                    properties:
                      key:
                        description: Key is the server metadata key
                        maxLength: 255
                        type: string
                      value:
                        description: Value is the server metadata value
                        maxLength: 255
                        type: string
                    required:
                      - key
                      - value
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - key
                  x-kubernetes-list-type: map
                sshKeyName:
                  description: SSHKeyName is the name of the SSH key to inject in the instance.
                  type: string
                tags:
                  description: |-
                    Tags which will be added to the machine and all dependent resources
                    which support them. These are in addition to Tags defined on the
                    cluster.
                    Requires Nova api 2.52 minimum!
                  items:
                    type: string
                  type: array
                  x-kubernetes-list-type: set
                trunk:
                  description: Trunk is a flag to indicate if the server instance is created on a trunk port or not.
                  type: boolean
                userDataRef:
                  description: |-
                    UserDataRef is a reference to a secret containing the user data to
                    be injected into the server instance.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - identityRef
                - image
                - ports
                - sshKeyName
              type: object
              x-kubernetes-validations:
                - message: at least one of flavor or flavorID must be set
                  rule: (has(self.flavor) || has(self.flavorID))
            status:
              description: OpenStackServerStatus defines the observed state of OpenStackServer.
              properties:
                addresses:
                  description: Addresses is the list of addresses of the server instance.
                  items:
                    description: NodeAddress contains information for the node's address.
                    properties:
                      address:
                        description: The node address.
                        type: string
                      type:
                        description: Node address type, one of Hostname, ExternalIP or InternalIP.
                        type: string
                    required:
                      - address
                      - type
                    type: object
                  type: array
                conditions:
                  description: Conditions defines current service state of the OpenStackServer.
                  items:
                    description: Condition defines an observation of a Cluster API resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      reason:
                        description: |-
                          reason is the reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may be empty.
                        maxLength: 256
                        minLength: 1
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 32
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 256
                        minLength: 1
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  type: array
                instanceID:
                  description: InstanceID is the ID of the server instance.
                  type: string
                instanceState:
                  description: InstanceState is the state of the server instance.
                  type: string
                ready:
                  default: false
                  description: Ready is true when the OpenStack server is ready.
                  type: boolean
                resolved:
                  description: |-
                    Resolved contains parts of the machine spec with all external
                    references fully resolved.
                  properties:
                    flavorID:
                      description: FlavorID is the ID of the flavor to use.
                      type: string
                    imageID:
                      description: ImageID is the ID of the image to use for the server and is calculated based on ImageFilter.
                      type: string
                    ports:
                      description: Ports is the fully resolved list of ports to create for the server.
                      items:
                        description: ResolvedPortSpec is a PortOpts with all contained references fully resolved.
                        properties:
                          adminStateUp:
                            description: AdminStateUp specifies whether the port should be created in the up (true) or down (false) state. The default is up.
                            type: boolean
                          allowedAddressPairs:
                            description: |-
                              AllowedAddressPairs is a list of address pairs which Neutron will
                              allow the port to send traffic from in addition to the port's
                              addresses. If not specified, the MAC Address will be the MAC Address
                              of the port. Depending on the configuration of Neutron, it may be
                              supported to specify a CIDR instead of a specific IP address.
                            items:
                              properties:
                                ipAddress:
                                  description: |-
                                    IPAddress is the IP address of the allowed address pair. Depending on
                                    the configuration of Neutron, it may be supported to specify a CIDR
                                    instead of a specific IP address.
                                  type: string
                                macAddress:
                                  description: |-
                                    MACAddress is the MAC address of the allowed address pair. If not
                                    specified, the MAC address will be the MAC address of the port.
                                  type: string
                              required:
                                - ipAddress
                              type: object
                            type: array
                          description:
                            description: Description is a human-readable description for the port.
                            type: string
                          disablePortSecurity:
                            description: |-
                              DisablePortSecurity enables or disables the port security when set.
                              When not set, it takes the value of the corresponding field at the network level.
                            type: boolean
                          fixedIPs:
                            description: FixedIPs is a list of pairs of subnet and/or IP address to assign to the port. If specified, these must be subnets of the port's network.
                            items:
                              description: ResolvedFixedIP is a FixedIP with the Subnet resolved to an ID.
                              properties:
                                ipAddress:
                                  description: |-
                                    IPAddress is a specific IP address to assign to the port. If SubnetID
                                    is also specified, IPAddress must be a valid IP address in the
                                    subnet. If Subnet is not specified, IPAddress must be a valid IP
                                    address in any subnet of the port's network.
                                  type: string
                                subnet:
                                  description: SubnetID is the id of a subnet to create the fixed IP of a port in.
                                  type: string
                              type: object
                            type: array
                            x-kubernetes-list-type: atomic
                          hostID:
                            description: HostID specifies the ID of the host where the port resides.
                            type: string
                          macAddress:
                            description: MACAddress specifies the MAC address of the port. If not specified, the MAC address will be generated.
                            type: string
                          name:
                            description: Name is the name of the port.
                            type: string
                          networkID:
                            description: NetworkID is the ID of the network the port will be created in.
                            type: string
                          profile:
                            description: |-
                              Profile is a set of key-value pairs that are used for binding
                              details. We intentionally don't expose this as a map[string]string
                              because we only want to enable the users to set the values of the
                              keys that are known to work in OpenStack Networking API.  See
                              https://docs.openstack.org/api-ref/network/v2/index.html?expanded=create-port-detail#create-port
                              To set profiles, your tenant needs permissions rule:create_port, and
                              rule:create_port:binding:profile
                            properties:
                              ovsHWOffload:
                                description: |-
                                  OVSHWOffload enables or disables the OVS hardware offload feature.
                                  This flag is not required on OpenStack clouds since Yoga as Nova will set it automatically when the port is attached.
                                  See: https://bugs.launchpad.net/nova/+bug/2020813
                                type: boolean
                              trustedVF:
                                description: TrustedVF enables or disables the “trusted mode” for the VF.
                                type: boolean
                            type: object
                          propagateUplinkStatus:
                            description: PropageteUplinkStatus enables or disables the propagate uplink status on the port.
                            type: boolean
                          securityGroups:
                            description: SecurityGroups is a list of security group IDs to assign to the port.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                          tags:
                            description: Tags applied to the port (and corresponding trunk, if a trunk is configured.)
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          trunk:
                            description: Trunk specifies whether trunking is enabled at the port level.
                            type: boolean
                          valueSpecs:
                            description: |-
                              Value specs are extra parameters to include in the API request with OpenStack.
                              This is an extension point for the API, so what they do and if they are supported,
                              depends on the specific OpenStack implementation.
                            items:
                              description: ValueSpec represents a single value_spec key-value pair.
                              properties:
                                key:
                                  description: Key is the key in the key-value pair.
                                  type: string
                                name:
                                  description: |-
                                    Name is the name of the key-value pair.
                                    This is just for identifying the pair and will not be sent to the OpenStack API.
                                  type: string
                                value:
                                  description: Value is the value in the key-value pair.
                                  type: string
                              required:
                                - key
                                - name
                                - value
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                          vnicType:
                            description: |-
                              VNICType specifies the type of vNIC which this port should be
                              attached to. This is used to determine which mechanism driver(s) to
                              be used to bind the port. The valid values are normal, macvtap,
                              direct, baremetal, direct-physical, virtio-forwarder, smart-nic and
                              remote-managed, although these values will not be validated in this
                              API to ensure compatibility with future neutron changes or custom
                              implementations. What type of vNIC is actually available depends on
                              deployments. If not specified, the Neutron default value is used.
                            type: string
                        required:
                          - description
                          - name
                          - networkID
                        type: object
                      type: array
                    serverGroupID:
                      description: ServerGroupID is the ID of the server group the server should be added to and is calculated based on ServerGroupFilter.
                      type: string
                  type: object
                resources:
                  description: Resources contains references to OpenStack resources created for the machine.
                  properties:
                    ports:
                      description: Ports is the status of the ports created for the server.
                      items:
                        properties:
                          id:
                            description: ID is the unique identifier of the port.
                            type: string
                        required:
                          - id
                        type: object
                      type: array
                  type: object
              required:
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: images.openstack.k-orc.cloud
spec:
  group: openstack.k-orc.cloud
  names:
    kind: Image
    listKind: ImageList
    plural: images
    singular: image
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Glance image ID
          jsonPath: .status.id
          name: ID
          type: string
        - description: Availability status of image
          jsonPath: .status.conditions[?(@.type=='Available')].status
          name: Available
          type: string
        - description: Message describing current availability status
          jsonPath: .status.conditions[?(@.type=='Available')].message
          name: Message
          type: string
        - description: Time duration since creation
          jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Image is the Schema for the ORC images API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ImageSpec defines the desired state of an Image.
              properties:
                cloudCredentialsRef:
                  description: CloudCredentialsRef points to a secret containing OpenStack credentials
                  properties:
                    cloudName:
                      description: CloudName specifies the name of the entry in the clouds.yaml file to use.
                      maxLength: 256
                      minLength: 1
                      type: string
                    secretName:
                      description: |-
                        SecretName is the name of a secret in the same namespace as the resource being provisioned.
                        The secret must contain a key named `clouds.yaml` which contains an OpenStack clouds.yaml file.
                        The secret may optionally contain a key named `cacert` containing a PEM-encoded CA certificate.
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                    - cloudName
                    - secretName
                  type: object
                import:
                  description: |-
                    Import refers to an existing image which will be imported instead of
                    creating a new image.
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    filter:
                      description: |-
                        Filter contains an image query which is expected to return a single
                        result. The controller will continue to retry if filter returns no
                        results. If filter returns multiple results the controller will set an
                        error state and will not continue to retry.
                      minProperties: 1
                      properties:
                        name:
                          description: Name specifies the name of a Glance image
                          maxLength: 1000
                          minLength: 1
                          type: string
                      type: object
                    id:
                      description: |-
                        ID contains the unique identifier of an existing Glance image. Note that
                        when specifying an image import by ID, the image MUST already exist. The
                        Image will enter an error state if the image does not exist.
                      format: uuid
                      type: string
                  type: object
                managedOptions:
                  description: ManagedOptions specifies options which may be applied to managed objects.
                  properties:
                    onDelete:
                      default: delete
                      description: |-
                        OnDelete specifies the behaviour of the controller when the ORC
                        object is deleted. Options are `delete` - delete the OpenStack resource;
                        `detach` - do not delete the OpenStack resource. If not specified, the
                        default is `delete`.
                      enum:
                        - delete
                        - detach
                      type: string
                  type: object
                managementPolicy:
                  default: managed
                  description: |-
                    ManagementPolicy defines how ORC will treat the object. Valid values are
                    `managed`: ORC will create, update, and delete the resource; `unmanaged`:
                    ORC will import an existing image, and will not apply updates to it or
                    delete it.
                  enum:
                    - managed
                    - unmanaged
                  type: string
                  x-kubernetes-validations:
                    - message: managementPolicy is immutable
                      rule: self == oldSelf
                resource:
                  description: |-
                    Resource specifies the desired state of the Glance image.

                    Resource may not be specified if the management policy is `unmanaged`.

                    Resource must be specified when the management policy is `managed`.
                  properties:
                    content:
                      description: Content specifies how to obtain the image content.
                      properties:
                        containerFormat:
                          default: bare
                          description: |-
                            ContainerFormat is the format of the image container.
                            qcow2 and raw images do not usually have a container. This is specified as "bare", which is also the default.
                            Permitted values are ami, ari, aki, bare, ovf, ova, and docker.
                          enum:
                            - ami
                            - ari
                            - aki
                            - bare
                            - ovf
                            - ova
                            - docker
                          type: string
                        diskFormat:
                          description: |-
                            DiskFormat is the format of the disk image.
                            Normal values are "qcow2", or "raw". Glance may be configured to support others.
                          enum:
                            - ami
                            - ari
                            - aki
                            - vhd
                            - vhdx
                            - vmdk
                            - raw
                            - qcow2
                            - vdi
                            - ploop
                            - iso
                          type: string
                        download:
                          description: |-
                            Download describes how to obtain image data by downloading it from a URL.
                            Must be set when creating a managed image.
                          properties:
                            decompress:
                              description: |-
                                Decompress specifies that the source data must be decompressed with the
                                given compression algorithm before being stored. Specifying Decompress
                                will disable the use of Glance's web-download, as web-download cannot
                                currently deterministically decompress downloaded content.
                              enum:
                                - xz
                                - gz
                                - bz2
                              type: string
                            hash:
                              description: |-
                                Hash is a hash which will be used to verify downloaded data, i.e.
                                before any decompression. If not specified, no hash verification will be
                                performed. Specifying a Hash will disable the use of Glance's
                                web-download, as web-download cannot currently deterministically verify
                                the hash of downloaded content.
                              properties:
                                algorithm:
                                  description: Algorithm is the hash algorithm used to generate value.
                                  enum:
                                    - md5
                                    - sha1
                                    - sha256
                                    - sha512
                                  type: string
                                value:
                                  description: Value is the hash of the image data using Algorithm. It must be hex encoded using lowercase letters.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[0-9a-f]+$
                                  type: string
                              required:
                                - algorithm
                                - value
                              type: object
                              x-kubernetes-validations:
                                - message: hash is immutable
                                  rule: self == oldSelf
                            url:
                              description: URL containing image data
                              format: uri
                              type: string
                          required:
                            - url
                          type: object
                      required:
                        - diskFormat
                        - download
                      type: object
                      x-kubernetes-validations:
                        - message: content is immutable
                          rule: self == oldSelf
                    name:
                      description: |-
                        Name will be the name of the created Glance image. If not specified, the
                        name of the Image object will be used.
                      maxLength: 1000
                      minLength: 1
                      type: string
                    properties:
                      description: Properties is metadata available to consumers of the image
                      properties:
                        hardware:
                          description: |-
                            Hardware is a set of properties which control the virtual hardware
                            created by Nova.
                          properties:
                            cdromBus:
                              description: CDROMBus specifies the type of disk controller to attach CD-ROM devices to.
                              enum:
                                - scsi
                                - virtio
                                - uml
                                - xen
                                - ide
                                - usb
                                - lxc
                              type: string
                            cpuCores:
                              description: CPUCores is the preferred number of cores to expose to the guest
                              type: integer
                            cpuPolicy:
                              description: |-
                                CPUPolicy is used to pin the virtual CPUs (vCPUs) of instances to the
                                host's physical CPU cores (pCPUs). Host aggregates should be used to
                                separate these pinned instances from unpinned instances as the latter
                                will not respect the resourcing requirements of the former.

                                Permitted values are shared (the default), and dedicated.

                                shared: The guest vCPUs will be allowed to freely float across host
                                pCPUs, albeit potentially constrained by NUMA policy.

                                dedicated: The guest vCPUs will be strictly pinned to a set of host
                                pCPUs. In the absence of an explicit vCPU topology request, the
                                drivers typically expose all vCPUs as sockets with one core and one
                                thread. When strict CPU pinning is in effect the guest CPU topology
                                will be setup to match the topology of the CPUs to which it is
                                pinned. This option implies an overcommit ratio of 1.0. For example,
                                if a two vCPU guest is pinned to a single host core with two threads,
                                then the guest will get a topology of one socket, one core, two
                                threads.
                              enum:
                                - shared
                                - dedicated
                              type: string
                            cpuSockets:
                              description: CPUSockets is the preferred number of sockets to expose to the guest
                              type: integer
                            cpuThreadPolicy:
                              description: |-
                                CPUThreadPolicy further refines a CPUPolicy of 'dedicated' by stating
                                how hardware CPU threads in a simultaneous multithreading-based (SMT)
                                architecture be used. SMT-based architectures include Intel
                                processors with Hyper-Threading technology. In these architectures,
                                processor cores share a number of components with one or more other
                                cores. Cores in such architectures are commonly referred to as
                                hardware threads, while the cores that a given core share components
                                with are known as thread siblings.

                                Permitted values are prefer (the default), isolate, and require.

                                prefer: The host may or may not have an SMT architecture. Where an
                                SMT architecture is present, thread siblings are preferred.

                                isolate: The host must not have an SMT architecture or must emulate a
                                non-SMT architecture. If the host does not have an SMT architecture,
                                each vCPU is placed on a different core as expected. If the host does
                                have an SMT architecture - that is, one or more cores have thread
                                siblings - then each vCPU is placed on a different physical core. No
                                vCPUs from other guests are placed on the same core. All but one
                                thread sibling on each utilized core is therefore guaranteed to be
                                unusable.

                                require: The host must have an SMT architecture. Each vCPU is
                                allocated on thread siblings. If the host does not have an SMT
                                architecture, then it is not used. If the host has an SMT
                                architecture, but not enough cores with free thread siblings are
                                available, then scheduling fails.
                              enum:
                                - prefer
                                - isolate
                                - require
                              type: string
                            cpuThreads:
                              description: CPUThreads is the preferred number of threads to expose to the guest
                              type: integer
                            diskBus:
                              description: DiskBus specifies the type of disk controller to attach disk devices to.
                              enum:
                                - scsi
                                - virtio
                                - uml
                                - xen
                                - ide
                                - usb
                                - lxc
                              type: string
                            scsiModel:
                              description: |-
                                SCSIModel enables the use of VirtIO SCSI (virtio-scsi) to provide
                                block device access for compute instances; by default, instances use
                                VirtIO Block (virtio-blk). VirtIO SCSI is a para-virtualized SCSI
                                controller device that provides improved scalability and performance,
                                and supports advanced SCSI hardware.

                                The only permitted value is virtio-scsi.
                              enum:
                                - virtio-scsi
                              type: string
                            vifModel:
                              description: |-
                                VIFModel specifies the model of virtual network interface device to use.

                                Permitted values are e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio,
                                and vmxnet3.
                              enum:
                                - e1000
                                - e1000e
                                - ne2k_pci
                                - pcnet
                                - rtl8139
                                - virtio
                                - vmxnet3
                              type: string
                          type: object
                        minDiskGB:
                          description: MinDisk is the minimum amount of disk space in GB that is required to boot the image
                          minimum: 1
                          type: integer
                        minMemoryMB:
                          description: MinMemoryMB is the minimum amount of RAM in MB that is required to boot the image.
                          minimum: 1
                          type: integer
                      type: object
                    protected:
                      description: |-
                        Protected specifies that the image is protected from deletion.
                        If not specified, the default is false.
                      type: boolean
                    tags:
                      description: Tags is a list of tags which will be applied to the image. A tag has a maximum length of 255 characters.
                      items:
                        maxLength: 255
                        minLength: 1
                        type: string
                      type: array
                      x-kubernetes-list-type: set
                    visibility:
                      description: Visibility of the image
                      enum:
                        - public
                        - private
                        - shared
                        - community
                      type: string
                      x-kubernetes-validations:
                        - message: visibility is immutable
                          rule: self == oldSelf
                  type: object
                  x-kubernetes-validations:
                    - message: name is immutable
                      rule: 'has(self.name) ? self.name == oldSelf.name : !has(oldSelf.name)'
                    - message: name is immutable
                      rule: 'has(self.protected) ? self.protected == oldSelf.protected : !has(oldSelf.protected)'
                    - message: tags is immutable
                      rule: 'has(self.tags) ? self.tags == oldSelf.tags : !has(oldSelf.tags)'
                    - message: visibility is immutable
                      rule: 'has(self.visibility) ? self.visibility == oldSelf.visibility : !has(oldSelf.visibility)'
                    - message: properties is immutable
                      rule: 'has(self.properties) ? self.properties == oldSelf.properties : !has(oldSelf.properties)'
              required:
                - cloudCredentialsRef
              type: object
              x-kubernetes-validations:
                - message: resource must be specified when policy is managed
                  rule: 'self.managementPolicy == ''managed'' ? has(self.resource) : true'
                - message: import may not be specified when policy is managed
                  rule: 'self.managementPolicy == ''managed'' ? !has(self.__import__) : true'
                - message: resource may not be specified when policy is unmanaged
                  rule: 'self.managementPolicy == ''unmanaged'' ? !has(self.resource) : true'
                - message: import must be specified when policy is unmanaged
                  rule: 'self.managementPolicy == ''unmanaged'' ? has(self.__import__) : true'
                - message: managedOptions may only be provided when policy is managed
                  rule: 'has(self.managedOptions) ? self.managementPolicy == ''managed'' : true'
                - message: resource content must be specified when not importing
                  rule: '!has(self.__import__) ? has(self.resource.content) : true'
            status:
              description: ImageStatus defines the observed state of an Image.
              properties:
                conditions:
                  description: |-
                    Conditions represents the observed status of the object.
                    Known .status.conditions.type are: "Available", "Progressing"

                    Available represents the availability of the Glance image. If it is
                    true then the image is ready for use in Glance, and its hash has been
                    verified.

                    Progressing indicates the state of the Glance image does not currently
                    reflect the desired state, but that reconciliation is progressing.
                    Progressing will be False either because the desired state has been
                    achieved, or some terminal error prevents it from being achieved and the
                    controller is no longer attempting to reconcile.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                downloadAttempts:
                  description: DownloadAttempts is the number of times the controller has attempted to download the image contents
                  type: integer
                id:
                  description: ID is the unique identifier of the Glance image
                  type: string
                resource:
                  description: Resource contains the observed state of the Glance image
                  properties:
                    hash:
                      description: |-
                        Hash is the hash of the image data published by Glance. Note that this is
                        a hash of the data stored internally by Glance, which will have been
                        decompressed and potentially format converted depending on server-side
                        configuration which is not visible to clients. It is expected that this
                        hash will usually differ from the download hash.
                      properties:
                        algorithm:
                          description: Algorithm is the hash algorithm used to generate value.
                          enum:
                            - md5
                            - sha1
                            - sha256
                            - sha512
                          type: string
                        value:
                          description: Value is the hash of the image data using Algorithm. It must be hex encoded using lowercase letters.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[0-9a-f]+$
                          type: string
                      required:
                        - algorithm
                        - value
                      type: object
                    sizeB:
                      description: SizeB is the size of the image data, in bytes
                      format: int64
                      type: integer
                    status:
                      description: Status is the image status as reported by Glance
                      type: string
                    virtualSizeB:
                      description: VirtualSizeB is the size of the disk the image data represents, in bytes
                      format: int64
                      type: integer
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: certificaterevocationrequests.certificates.hypershift.openshift.io
spec:
  group: certificates.hypershift.openshift.io
  names:
    kind: CertificateRevocationRequest
    listKind: CertificateRevocationRequestList
    plural: certificaterevocationrequests
    shortNames:
      - crr
      - crrs
    singular: certificaterevocationrequest
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            CertificateRevocationRequest defines the desired state of CertificateRevocationRequest.
            A request denotes the user's desire to revoke a signer certificate of the class indicated in spec.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: CertificateRevocationRequestSpec defines the desired state of CertificateRevocationRequest
              properties:
                signerClass:
                  description: |-
                    SignerClass identifies the class of signer to revoke. All the active signing CAs for the
                    signer class will be revoked.
                  enum:
                    - customer-break-glass
                    - sre-break-glass
                  type: string
                  x-kubernetes-validations:
                    - message: signerClass is immutable
                      rule: self == oldSelf
              required:
                - signerClass
              type: object
            status:
              description: CertificateRevocationRequestStatus defines the observed state of CertificateRevocationRequest
              properties:
                conditions:
                  description: Conditions contain details about the various aspects of certificate revocation.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                previousSigner:
                  description: |-
                    PreviousSigner stores a reference to the previous signer certificate. We require
                    storing this data to ensure that we can validate that the old signer is no longer
                    valid before considering revocation complete.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                revocationTimestamp:
                  description: |-
                    RevocationTimestamp is the cut-off time for signing CAs to be revoked. All certificates that
                    are valid before this time will be revoked; all re-generated certificates will not be valid
                    at or before this time.
                  format: date-time
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: certificatesigningrequestapprovals.certificates.hypershift.openshift.io
spec:
  group: certificates.hypershift.openshift.io
  names:
    kind: CertificateSigningRequestApproval
    listKind: CertificateSigningRequestApprovalList
    plural: certificatesigningrequestapprovals
    shortNames:
      - csra
      - csras
    singular: certificatesigningrequestapproval
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: CertificateSigningRequestApproval defines the desired state of CertificateSigningRequestApproval
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: CertificateSigningRequestApprovalSpec defines the desired state of CertificateSigningRequestApproval
              type: object
            status:
              description: CertificateSigningRequestApprovalStatus defines the observed state of CertificateSigningRequestApproval
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: clustersizingconfigurations.scheduling.hypershift.openshift.io
spec:
  group: scheduling.hypershift.openshift.io
  names:
    kind: ClusterSizingConfiguration
    listKind: ClusterSizingConfigurationList
    plural: clustersizingconfigurations
    shortNames:
      - csc
      - cscs
    singular: clustersizingconfiguration
  scope: Cluster
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: |-
            ClusterSizingConfiguration defines the desired state of ClusterSizingConfiguration.
            Configuration options here allow management cluster administrators to define sizing classes for hosted clusters and
            how the system should adapt hosted cluster functionality based on size.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ClusterSizingConfigurationSpec defines the desired state of ClusterSizingConfiguration
              properties:
                concurrency:
                  description: |-
                    Concurrency defines the bounds of allowed behavior for clusters transitioning between sizes.
                    Transitions will require that request-serving pods be re-scheduled between nodes, so each
                    transition incurs a small user-facing cost as well as a cost to the management cluster. Use
                    the concurrency configuration options to manage how many transitions can be occurring.
                    These limits do not apply to new clusters entering the fleet.
                    If unset, a sensible default will be provided.
                  properties:
                    limit:
                      default: 5
                      description: Limit is the maximum allowed number of cluster size transitions during the sliding window.
                      format: int32
                      minimum: 1
                      type: integer
                    slidingWindow:
                      default: 10m
                      description: SlidingWindow is the window over which the concurrency bound is enforced.
                      pattern: ^([0-9]+(\.[0-9]+)?(s|m|h))+$
                      type: string
                  required:
                    - limit
                    - slidingWindow
                  type: object
                nonRequestServingNodesBufferPerZone:
                  anyOf:
                    - type: integer
                    - type: string
                  description: |-
                    NonRequestServingNodesBufferPerZone is the number of extra nodes to allocate for non request serving
                    workloads per zone.
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
                sizes:
                  description: |-
                    Sizes holds the different t-shirt size classes into which guest clusters will be sorted.
                    Each size class applies to guest clusters using node count criteria; it is required that
                    the entire interval between [0,+inf) be covered by the set of sizes provided here.
                  items:
                    description: SizeConfiguration holds options for clusters of a given size.
                    properties:
                      criteria:
                        description: Criteria defines the node count range for clusters to fall into this t-shirt size class.
                        properties:
                          from:
                            description: From is the inclusive lower limit to node count for a cluster to be considered a particular size.
                            format: int32
                            minimum: 0
                            type: integer
                          to:
                            description: |-
                              To is the inclusive upper limit to node count for a cluster to be considered a particular size.
                              If unset, this size class will match clusters of all sizes greater than the lower limit.
                            format: int32
                            minimum: 0
                            type: integer
                        required:
                          - from
                        type: object
                        x-kubernetes-validations:
                          - message: lower limit must be less than or equal to the upper limit
                            rule: '!has(self.to) || self.from <= self.to'
                      effects:
                        description: Effects define the effects on a cluster being considered part of this t-shirt size class.
                        properties:
                          APICriticalPriorityClassName:
                            description: |-
                              APICriticalPriorityClassName is the priority class for pods in the API request serving path.
                              This includes Kube API Server, OpenShift APIServer, etc.
                            type: string
                          controlPlanePriorityClassName:
                            description: ControlPlanePriorityClassName is the priority class to use for most control plane pods
                            type: string
                          etcdPriorityClassName:
                            description: EtcdPriorityClassName is the priority class to use for etcd pods
                            type: string
                          kasGoMemLimit:
                            description: |-
                              KASGoMemLimit is the value to set for the $GOMEMLIMIT of the Kube APIServer container
                              Expected format is a number followed by a unit (B, KiB, MiB, GiB, TiB). See the Go runtime library for more
                              information on the format - https://pkg.go.dev/runtime#hdr-Environment_Variables.
                            maxLength: 20
                            pattern: ^\d+(B|KiB|MiB|GiB|TiB)?$
                            type: string
                          machineHealthCheckTimeout:
                            description: |-
                              MachineHealthCheckTimeout specifies an optional timeout for machinehealthchecks created
                              for HostedClusters with this specific size.
                            type: string
                          maximumMutatingRequestsInflight:
                            description: MaximumMutatingRequestsInflight specifies the maximum mutating requests in flight for Kube APIServer
                            type: integer
                          maximumRequestsInflight:
                            description: MaximumRequestsInFlight specifies the maximum requests in flight for Kube APIServer
                            type: integer
                          resourceRequests:
                            description: ResourceRequests allows specifying resource requests for control plane pods.
                            items:
                              properties:
                                containerName:
                                  description: ContainerName is the name of the container to which the resource request applies.
                                  type: string
                                cpu:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: CPU is the amount of CPU to request for the container.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                deploymentName:
                                  description: DeploymentName is the name of the deployment to which the resource request applies.
                                  type: string
                                memory:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Memory is the amount of memory to request for the container.
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                              required:
                                - containerName
                                - deploymentName
                              type: object
                            type: array
                        type: object
                      management:
                        description: Management configures the management aspects of this size class on the management plane.
                        properties:
                          nonRequestServingNodesPerZone:
                            anyOf:
                              - type: integer
                              - type: string
                            description: |-
                              NonRequestServingNodesPerZone is the number of nodes to allocate for non request serving workloads
                              per HostedCluster. This will likely be a fraction of a node (ie. 0.2) to allow 5 HostedClusters in
                              a single node. The total number of nodes needed per HostedCluster is this number multiplied by 3
                              (number of zones).
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          placeholders:
                            description: |-
                              Placeholders configures the number of dummy workloads that will be scheduled irrespective of
                              HostedClusters in order to keep a set of nodes ready to accept new cluster creation and scheduling.
                            minimum: 0
                            type: integer
                        type: object
                      name:
                        description: Name is the t-shirt size name.
                        type: string
                    required:
                      - criteria
                      - name
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - name
                  x-kubernetes-list-type: map
                  x-kubernetes-validations:
                    - message: exactly one size class must have a lower limit of zero
                      rule: self.exists_one(i, i.criteria.from == 0)
                    - message: exactly one size class must have no upper limit
                      rule: self.exists_one(i, !has(i.criteria.to))
                transitionDelay:
                  description: |-
                    TransitionDelay configures how quickly the system reacts to clusters transitioning between size classes.
                    It may be advantageous, for instance, to have a near-instant scale-down for clusters that begin to
                    use fewer resources, but allow for some lag on scale-up to ensure that the use is sustained before
                    incurring the larger cost for scale-up.
                  properties:
                    decrease:
                      default: 10m
                      description: |-
                        Decrease defines the minimum period of time to wait between a cluster's size decreasing and
                        the t-shirt size assigned to it being updated to reflect the new size.
                      pattern: ^([0-9]+(\.[0-9]+)?(s|m|h))+$
                      type: string
                    increase:
                      default: 30s
                      description: |-
                        Increase defines the minimum period of time to wait between a cluster's size increasing and
                        the t-shirt size assigned to it being updated to reflect the new size.
                      pattern: ^([0-9]+(\.[0-9]+)?(s|m|h))+$
                      type: string
                  type: object
              required:
                - sizes
              type: object
            status:
              description: ClusterSizingConfigurationStatus defines the observed state of ClusterSizingConfiguration
              properties:
                conditions:
                  description: Conditions contain details about the various aspects of cluster sizing.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
              type: object
          type: object
          x-kubernetes-validations:
            - message: exactly one configuration may exist and must be named 'cluster'
              rule: self.metadata.name == 'cluster'
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: awsendpointservices.hypershift.openshift.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: operator
          namespace: hypershift
          path: /convert
          port: 443
      conversionReviewVersions:
        - v1beta1
        - v1alpha1
  group: hypershift.openshift.io
  names:
    kind: AWSEndpointService
    listKind: AWSEndpointServiceList
    plural: awsendpointservices
    singular: awsendpointservice
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: AWSEndpointService specifies a request for an Endpoint Service in AWS
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification for the AWSEndpointService.
              properties:
                networkLoadBalancerName:
                  description: |-
                    networkLoadBalancerName is the name of the NLB for which an Endpoint Service should be configured
                    NetworkLoadBalancerName is the name of the network load balancer.
                  maxLength: 255
                  type: string
                resourceTags:
                  description: resourceTags is the list of tags to apply to the EndpointService
                  items:
                    description: AWSResourceTag is a tag to apply to AWS resources created for the cluster.
                    properties:
                      key:
                        description: key is the key of the tag.
                        maxLength: 128
                        minLength: 1
                        pattern: ^[0-9A-Za-z_.:/=+-@]+$
                        type: string
                      value:
                        description: |-
                          value is the value of the tag.

                          Some AWS service do not support empty values. Since tags are added to
                          resources in many services, the length of the tag value must meet the
                          requirements of all services.
                        maxLength: 256
                        minLength: 1
                        pattern: ^[0-9A-Za-z_.:/=+-@]+$
                        type: string
                    required:
                      - key
                      - value
                    type: object
                  maxItems: 25
                  type: array
                subnetIDs:
                  description: subnetIDs is the list of subnet IDs to which guest nodes can attach
                  items:
                    maxLength: 63
                    type: string
                  maxItems: 10
                  type: array
              required:
                - networkLoadBalancerName
              type: object
            status:
              description: status is the status of the AWSEndpointService.
              properties:
                conditions:
                  description: |-
                    conditions contains details for the current state of the Endpoint Service
                    request If there is an error processing the request e.g. the NLB doesn't
                    exist, then the Available condition will be false, reason AWSErrorReason,
                    and the error reported in the message.

                    Current condition types are: "Available"
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  maxItems: 10
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                dnsNames:
                  description: dnsNames are the names for the records created in the hypershift private zone
                  items:
                    maxLength: 253
                    type: string
                  maxItems: 10
                  type: array
                dnsZoneID:
                  description: dnsZoneID is ID for the hypershift private zone
                  maxLength: 255
                  type: string
                endpointID:
                  description: endpointID is the ID of the Endpoint created in the guest VPC
                  maxLength: 255
                  type: string
                endpointServiceName:
                  description: |-
                    endpointServiceName is the name of the Endpoint Service created in the
                    management VPC
                  maxLength: 255
                  type: string
                securityGroupID:
                  description: |-
                    securityGroupID is the ID for the VPC endpoint SecurityGroup
                    SecurityGroupID is the ID of the security group.
                  maxLength: 255
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: certificatesigningrequestapprovals.hypershift.openshift.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: operator
          namespace: hypershift
          path: /convert
          port: 443
      conversionReviewVersions:
        - v1beta1
        - v1alpha1
  group: hypershift.openshift.io
  names:
    kind: CertificateSigningRequestApproval
    listKind: CertificateSigningRequestApprovalList
    plural: certificatesigningrequestapprovals
    shortNames:
      - csra
      - csras
    singular: certificatesigningrequestapproval
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: CertificateSigningRequestApproval defines the desired state of CertificateSigningRequestApproval
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification of the desired behavior of the CertificateSigningRequestApproval.
              type: object
            status:
              description: status is the most recently observed status of the CertificateSigningRequestApproval.
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: controlplanecomponents.hypershift.openshift.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: operator
          namespace: hypershift
          path: /convert
          port: 443
      conversionReviewVersions:
        - v1beta1
        - v1alpha1
  group: hypershift.openshift.io
  names:
    kind: ControlPlaneComponent
    listKind: ControlPlaneComponentList
    plural: controlplanecomponents
    shortNames:
      - cpc
      - cpcs
    singular: controlplanecomponent
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Version
          jsonPath: .status.version
          name: Version
          type: string
        - description: Available
          jsonPath: .status.conditions[?(@.type=="Available")].status
          name: Available
          type: string
        - description: Progressing
          jsonPath: .status.conditions[?(@.type=="Progressing")].status
          name: Progressing
          type: string
        - description: Message
          jsonPath: .status.conditions[?(@.type=="Available")].message
          name: Message
          type: string
        - description: ProgressingMessage
          jsonPath: .status.conditions[?(@.type=="Progressing")].message
          name: ProgressingMessage
          priority: 1
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ControlPlaneComponent specifies the state of a ControlPlane Component
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification for the ControlPlaneComponent.
              type: object
            status:
              description: status is the status of the ControlPlaneComponent.
              properties:
                conditions:
                  description: |-
                    conditions contains details for the current state of the ControlPlane Component.
                    If there is an error, then the Available condition will be false.

                    Current condition types are: "Available"
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  maxItems: 10
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                resources:
                  description: resources is a list of the resources reconciled by this component.
                  items:
                    description: ComponentResource defines a resource reconciled by a ControlPlaneComponent.
                    properties:
                      group:
                        description: group is the API group for this resource type.
                        maxLength: 255
                        type: string
                      kind:
                        description: kind is the name of the resource schema.
                        maxLength: 255
                        type: string
                      name:
                        description: name is the name of this resource.
                        maxLength: 255
                        type: string
                    required:
                      - group
                      - kind
                      - name
                    type: object
                  maxItems: 100
                  type: array
                version:
                  description: version reports the current version of this component.
                  maxLength: 255
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: hostedclusters.hypershift.openshift.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: operator
          namespace: hypershift
          path: /convert
          port: 443
      conversionReviewVersions:
        - v1beta1
        - v1alpha1
  group: hypershift.openshift.io
  names:
    kind: HostedCluster
    listKind: HostedClusterList
    plural: hostedclusters
    shortNames:
      - hc
      - hcs
    singular: hostedcluster
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Version
          jsonPath: .status.version.history[?(@.state=="Completed")].version
          name: Version
          type: string
        - description: KubeConfig Secret
          jsonPath: .status.kubeconfig.name
          name: KubeConfig
          type: string
        - description: Progress
          jsonPath: .status.version.history[?(@.state!="")].state
          name: Progress
          type: string
        - description: Available
          jsonPath: .status.conditions[?(@.type=="Available")].status
          name: Available
          type: string
        - description: Progressing
          jsonPath: .status.conditions[?(@.type=="Progressing")].status
          name: Progressing
          type: string
        - description: Message
          jsonPath: .status.conditions[?(@.type=="Available")].message
          name: Message
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            HostedCluster is the primary representation of a HyperShift cluster and encapsulates
            the control plane and common data plane configuration. Creating a HostedCluster
            results in a fully functional OpenShift control plane with no attached nodes.
            To support workloads (e.g. pods), a HostedCluster may have one or more associated
            NodePool resources.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired behavior of the HostedCluster.
              properties:
                additionalTrustBundle:
                  description: |-
                    additionalTrustBundle is a local reference to a ConfigMap that must have a "ca-bundle.crt" key
                    whose content must be a PEM-encoded X.509 certificate bundle that will be added to the hosted controlplane and nodes
                    If the reference is set but none of the above requirements are met, the HostedCluster will enter a degraded state.
                    This will be part of every payload generated by the controllers for any NodePool of the HostedCluster.
                    Changing this value will trigger a rollout for all existing NodePools in the cluster.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                auditWebhook:
                  description: |-
                    auditWebhook contains metadata for configuring an audit webhook endpoint
                    for a cluster to process cluster audit events. It references a secret that
                    contains the webhook information for the audit webhook endpoint. It is a
                    secret because if the endpoint has mTLS the kubeconfig will contain client
                    keys. The kubeconfig needs to be stored in the secret with a secret key
                    name that corresponds to the constant AuditWebhookKubeconfigKey.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                autoscaling:
                  description: |-
                    autoscaling specifies auto-scaling behavior that applies to all NodePools
                    associated with this HostedCluster.
                  properties:
                    balancingIgnoredLabels:
                      description: |-
                        balancingIgnoredLabels sets "--balancing-ignore-label <label name>" flag on cluster-autoscaler for each listed label.
                        This option specifies labels that cluster autoscaler should ignore when considering node group similarity.
                        For example, if you have nodes with "topology.ebs.csi.aws.com/zone" label, you can add name of this label here
                        to prevent cluster autoscaler from splitting nodes into different node groups based on its value.

                        HyperShift automatically appends platform-specific balancing ignore labels:
                        - AWS: "lifecycle", "k8s.amazonaws.com/eniConfig", "topology.k8s.aws/zone-id"
                        - Azure: "agentpool", "kubernetes.azure.com/agentpool"
                        - Common:
                          - "hypershift.openshift.io/nodePool"
                          - "topology.ebs.csi.aws.com/zone"
                          - "topology.disk.csi.azure.com/zone"
                          - "ibm-cloud.kubernetes.io/worker-id"
                          - "vpc-block-csi-driver-labels"
                        These labels are added by default and do not need to be manually specified.
                      items:
                        maxLength: 317
                        type: string
                      maxItems: 64
                      type: array
                      x-kubernetes-validations:
                        - message: Each balancingIgnoredLabels item must be a valid label key
                          rule: self.all(l, l.matches('^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?[a-zA-Z0-9]([a-zA-Z0-9_.-]{0,61}[a-zA-Z0-9])?$'))
                    expanders:
                      description: |-
                        expanders guide the autoscaler in choosing node groups during scale-out.
                        Sets the order of expanders for scaling out node groups.
                        Options include:
                        * LeastWaste - selects the group with minimal idle CPU and memory after scaling.
                        * Priority - selects the group with the highest user-defined priority.
                        * Random - selects a group randomly.
                        If not specified, `[Priority, LeastWaste]` is the default.
                        Maximum of 3 expanders can be specified.
                      items:
                        description: ExpanderString contains the name of an expander to be used by the cluster autoscaler.
                        enum:
                          - LeastWaste
                          - Priority
                          - Random
                        type: string
                      maxItems: 3
                      minItems: 1
                      type: array
                    maxFreeDifferenceRatioPercent:
                      description: |-
                        maxFreeDifferenceRatioPercent sets the maximum difference ratio for free resources between similar node groups. This parameter controls how strict the similarity check is when comparing node groups for load balancing.
                        The value represents a percentage from 0 to 100.
                        When set to 0, this means node groups must have exactly the same free resources to be considered similar (no difference allowed).
                        When set to 100, this means node groups will be considered similar regardless of their free resource differences (any difference allowed).
                        A value between 0 and 100 represents the maximum allowed difference ratio for free resources between node groups to be considered similar.
                        When omitted, the autoscaler defaults to 10%.
                        This affects the "--max-free-difference-ratio" flag on cluster-autoscaler.
                      format: int32
                      maximum: 100
                      minimum: 0
                      type: integer
                    maxNodeProvisionTime:
                      description: |-
                        maxNodeProvisionTime is the maximum time to wait for node provisioning
                        before considering the provisioning to be unsuccessful, expressed as a Go
                        duration string. The default is 15 minutes.
                      maxLength: 100
                      pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                      type: string
                    maxNodesTotal:
                      description: |-
                        maxNodesTotal is the maximum allowable number of nodes for the Autoscaler scale out to be operational.
                        The autoscaler will not grow the cluster beyond this number.
                        If omitted, the autoscaler will not have a maximum limit.
                        number.
                      format: int32
                      minimum: 0
                      type: integer
                    maxPodGracePeriod:
                      description: |-
                        maxPodGracePeriod is the maximum seconds to wait for graceful pod
                        termination before scaling down a NodePool. The default is 600 seconds.
                      format: int32
                      minimum: 0
                      type: integer
                    podPriorityThreshold:
                      description: |-
                        podPriorityThreshold enables users to schedule "best-effort" pods, which
                        shouldn't trigger autoscaler actions, but only run when there are spare
                        resources available. The default is -10.

                        See the following for more details:
                        https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption
                      format: int32
                      type: integer
                    scaleDown:
                      description: |-
                        scaleDown configures the behavior of the Cluster Autoscaler scale down operation.
                        This field is only valid when scaling is set to ScaleUpAndScaleDown.
                      properties:
                        delayAfterAddSeconds:
                          description: |-
                            delayAfterAddSeconds sets how long after scale up the scale down evaluation resumes in seconds.
                            It must be between 0 and 86400 (24 hours).
                            When set to 0, this means scale down evaluation will resume immediately after scale up, without any delay.
                            When omitted, the autoscaler defaults to 600s (10 minutes).
                          format: int32
                          maximum: 86400
                          minimum: 0
                          type: integer
                        delayAfterDeleteSeconds:
                          description: |-
                            delayAfterDeleteSeconds sets how long after node deletion, scale down evaluation resumes, defaults to scan-interval.
                            It must be between 0 and 86400 (24 hours).
                            When set to 0, this means scale down evaluation will resume immediately after node deletion, without any delay.
                            When omitted, the autoscaler defaults to 0s.
                          format: int32
                          maximum: 86400
                          minimum: 0
                          type: integer
                        delayAfterFailureSeconds:
                          description: |-
                            delayAfterFailureSeconds sets how long after a scale down failure, scale down evaluation resumes.
                            It must be between 0 and 86400 (24 hours).
                            When set to 0, this means scale down evaluation will resume immediately after a scale down failure, without any delay.
                            When omitted, the autoscaler defaults to 180s (3 minutes).
                          format: int32
                          maximum: 86400
                          minimum: 0
                          type: integer
                        unneededDurationSeconds:
                          description: |-
                            unneededDurationSeconds establishes how long a node should be unneeded before it is eligible for scale down in seconds.
                            It must be between 0 and 86400 (24 hours).
                            When omitted, the autoscaler defaults to 600s (10 minutes).
                          format: int32
                          maximum: 86400
                          minimum: 0
                          type: integer
                        utilizationThresholdPercent:
                          description: |-
                            utilizationThresholdPercent determines the node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.
                            The value represents a percentage from 0 to 100.
                            When set to 0, this means nodes will only be considered for scale down if they are completely idle (0% utilization).
                            When set to 100, this means nodes will be considered for scale down regardless of their utilization level.
                            A value between 0 and 100 represents the utilization threshold below which a node can be considered for scale down.
                            When omitted, the autoscaler defaults to 50%.
                          format: int32
                          maximum: 100
                          minimum: 0
                          type: integer
                      type: object
                    scaling:
                      default: ScaleUpAndScaleDown
                      description: |-
                        scaling defines the scaling behavior for the cluster autoscaler.
                        ScaleUpOnly means the autoscaler will only scale up nodes, never scale down.
                        ScaleUpAndScaleDown means the autoscaler will both scale up and scale down nodes.
                        When set to ScaleUpAndScaleDown, the scaleDown field can be used to configure scale down behavior.

                        Note: This field is only supported in OpenShift versions 4.19 and above.
                      enum:
                        - ScaleUpOnly
                        - ScaleUpAndScaleDown
                      type: string
                  type: object
                  x-kubernetes-validations:
                    - message: scaleDown can only be set when scaling is ScaleUpAndScaleDown
                      rule: 'self.scaling == ''ScaleUpAndScaleDown'' ? true : !has(self.scaleDown)'
                capabilities:
                  default: {}
                  description: |-
                    capabilities allows for disabling optional components at cluster install time.
                    This field is optional and once set cannot be changed.
                  properties:
                    disabled:
                      description: |-
                        disabled when specified, explicitly disables the specified capabilitíes on the hosted cluster.
                        Once set, this field cannot be changed.

                        Note: Disabling 'openshift-samples','Insights', 'Console', 'NodeTuning', 'Ingress' are only supported in OpenShift versions 4.20 and above.
                      items:
                        enum:
                          - ImageRegistry
                          - openshift-samples
                          - Insights
                          - baremetal
                          - Console
                          - NodeTuning
                          - Ingress
                        type: string
                      maxItems: 25
                      type: array
                      x-kubernetes-list-type: atomic
                      x-kubernetes-validations:
                        - message: Disabled is immutable. Changes might result in unpredictable and disruptive behavior.
                          rule: self == oldSelf
                        - message: Ingress capability can only be disabled if Console capability is also disabled
                          rule: '!self.exists(cap, cap == ''Ingress'') || self.exists(cap, cap == ''Console'')'
                    enabled:
                      description: |-
                        enabled when specified, explicitly enables the specified capabilitíes on the hosted cluster.
                        Once set, this field cannot be changed.
                      items:
                        enum:
                          - ImageRegistry
                          - openshift-samples
                          - Insights
                          - baremetal
                          - Console
                          - NodeTuning
                          - Ingress
                        type: string
                      maxItems: 25
                      type: array
                      x-kubernetes-list-type: atomic
                      x-kubernetes-validations:
                        - message: Enabled is immutable. Changes might result in unpredictable and disruptive behavior.
                          rule: self == oldSelf
                  type: object
                  x-kubernetes-validations:
                    - message: Capabilities is immutable. Changes might result in unpredictable and disruptive behavior.
                      rule: self == oldSelf
                    - message: Capabilities can not be both enabled and disabled at once.
                      rule: 'has(self.enabled) && has(self.disabled) ? self.enabled.all(e, !(e in self.disabled)) : true'
                channel:
                  description: |-
                    channel is an identifier for explicitly requesting that a non-default set of updates be applied to this cluster.
                    If omitted no particular upgrades are suggested.
                  maxLength: 100
                  minLength: 1
                  type: string
                clusterID:
                  description: |-
                    clusterID uniquely identifies this cluster. This is expected to be an RFC4122 UUID value (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx in hexadecimal digits).
                    As with a Kubernetes metadata.uid, this ID uniquely identifies this cluster in space and time.
                    This value identifies the cluster in metrics pushed to telemetry and metrics produced by the control plane operators.
                    If a value is not specified, a random clusterID will be generated and set by the controller.
                    Once set, this value is immutable.
                  maxLength: 36
                  minLength: 36
                  type: string
                  x-kubernetes-validations:
                    - message: clusterID must be an RFC4122 UUID value (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx in hexadecimal digits)
                      rule: self.matches('[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}')
                    - message: clusterID is immutable
                      rule: oldSelf == "" || self == oldSelf
                configuration:
                  description: |-
                    configuration specifies configuration for individual OCP components in the
                    cluster, represented as embedded resources that correspond to the openshift
                    configuration API.
                  properties:
                    apiServer:
                      description: |-
                        apiServer holds configuration (like serving certificates, client CA and CORS domains)
                        shared by all API servers in the system, among them especially kube-apiserver
                        and openshift-apiserver.
                      properties:
                        additionalCORSAllowedOrigins:
                          description: |-
                            additionalCORSAllowedOrigins lists additional, user-defined regular expressions describing hosts for which the
                            API server allows access using the CORS headers. This may be needed to access the API and the integrated OAuth
                            server from JavaScript applications.
                            The values are regular expressions that correspond to the Golang regular expression language.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        audit:
                          default:
                            profile: Default
                          description: |-
                            audit specifies the settings for audit configuration to be applied to all OpenShift-provided
                            API servers in the cluster.
                          properties:
                            customRules:
                              description: |-
                                customRules specify profiles per group. These profile take precedence over the
                                top-level profile field if they apply. They are evaluation from top to bottom and
                                the first one that matches, applies.
                              items:
                                description: |-
                                  AuditCustomRule describes a custom rule for an audit profile that takes precedence over
                                  the top-level profile.
                                properties:
                                  group:
                                    description: group is a name of group a request user must be member of in order to this profile to apply.
                                    minLength: 1
                                    type: string
                                  profile:
                                    description: |-
                                      profile specifies the name of the desired audit policy configuration to be deployed to
                                      all OpenShift-provided API servers in the cluster.

                                      The following profiles are provided:
                                      - Default: the existing default policy.
                                      - WriteRequestBodies: like 'Default', but logs request and response HTTP payloads for
                                      write requests (create, update, patch).
                                      - AllRequestBodies: like 'WriteRequestBodies', but also logs request and response
                                      HTTP payloads for read requests (get, list).
                                      - None: no requests are logged at all, not even oauthaccesstokens and oauthauthorizetokens.

                                      If unset, the 'Default' profile is used as the default.
                                    enum:
                                      - Default
                                      - WriteRequestBodies
                                      - AllRequestBodies
                                      - None
                                    type: string
                                required:
                                  - group
                                  - profile
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - group
                              x-kubernetes-list-type: map
                            profile:
                              default: Default
                              description: |-
                                profile specifies the name of the desired top-level audit profile to be applied to all requests
                                sent to any of the OpenShift-provided API servers in the cluster (kube-apiserver,
                                openshift-apiserver and oauth-apiserver), with the exception of those requests that match
                                one or more of the customRules.

                                The following profiles are provided:
                                - Default: default policy which means MetaData level logging with the exception of events
                                  (not logged at all), oauthaccesstokens and oauthauthorizetokens (both logged at RequestBody
                                  level).
                                - WriteRequestBodies: like 'Default', but logs request and response HTTP payloads for
                                write requests (create, update, patch).
                                - AllRequestBodies: like 'WriteRequestBodies', but also logs request and response
                                HTTP payloads for read requests (get, list).
                                - None: no requests are logged at all, not even oauthaccesstokens and oauthauthorizetokens.

                                Warning: It is not recommended to disable audit logging by using the `None` profile unless you
                                are fully aware of the risks of not logging data that can be beneficial when troubleshooting issues.
                                If you disable audit logging and a support situation arises, you might need to enable audit logging
                                and reproduce the issue in order to troubleshoot properly.

                                If unset, the 'Default' profile is used as the default.
                              enum:
                                - Default
                                - WriteRequestBodies
                                - AllRequestBodies
                                - None
                              type: string
                          type: object
                        clientCA:
                          description: |-
                            clientCA references a ConfigMap containing a certificate bundle for the signers that will be recognized for
                            incoming client certificates in addition to the operator managed signers. If this is empty, then only operator managed signers are valid.
                            You usually only have to set this if you have your own PKI you wish to honor client certificates from.
                            The ConfigMap must exist in the openshift-config namespace and contain the following required fields:
                            - ConfigMap.Data["ca-bundle.crt"] - CA bundle.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                        encryption:
                          description: encryption allows the configuration of encryption of resources at the datastore layer.
                          properties:
                            type:
                              description: |-
                                type defines what encryption type should be used to encrypt resources at the datastore layer.
                                When this field is unset (i.e. when it is set to the empty string), identity is implied.
                                The behavior of unset can and will change over time.  Even if encryption is enabled by default,
                                the meaning of unset may change to a different encryption type based on changes in best practices.

                                When encryption is enabled, all sensitive resources shipped with the platform are encrypted.
                                This list of sensitive resources can and will change over time.  The current authoritative list is:

                                  1. secrets
                                  2. configmaps
                                  3. routes.route.openshift.io
                                  4. oauthaccesstokens.oauth.openshift.io
                                  5. oauthauthorizetokens.oauth.openshift.io
                              enum:
                                - ""
                                - identity
                                - aescbc
                                - aesgcm
                              type: string
                          type: object
                        servingCerts:
                          description: |-
                            servingCert is the TLS cert info for serving secure traffic. If not specified, operator managed certificates
                            will be used for serving secure traffic.
                          properties:
                            namedCertificates:
                              description: |-
                                namedCertificates references secrets containing the TLS cert info for serving secure traffic to specific hostnames.
                                If no named certificates are provided, or no named certificates match the server name as understood by a client,
                                the defaultServingCertificate will be used.
                              items:
                                description: APIServerNamedServingCert maps a server DNS name, as understood by a client, to a certificate.
                                properties:
                                  names:
                                    description: |-
                                      names is a optional list of explicit DNS names (leading wildcards allowed) that should use this certificate to
                                      serve secure traffic. If no names are provided, the implicit names will be extracted from the certificates.
                                      Exact names trump over wildcard names. Explicit names defined here trump over extracted implicit names.
                                    items:
                                      type: string
                                    maxItems: 64
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  servingCertificate:
                                    description: |-
                                      servingCertificate references a kubernetes.io/tls type secret containing the TLS cert info for serving secure traffic.
                                      The secret must exist in the openshift-config namespace and contain the following required fields:
                                      - Secret.Data["tls.key"] - TLS private key.
                                      - Secret.Data["tls.crt"] - TLS certificate.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                type: object
                              maxItems: 32
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        tlsSecurityProfile:
                          description: |-
                            tlsSecurityProfile specifies settings for TLS connections for externally exposed servers.

                            If unset, a default (which may change between releases) is chosen. Note that only Old,
                            Intermediate and Custom profiles are currently supported, and the maximum available
                            minTLSVersion is VersionTLS12.
                          properties:
                            custom:
                              description: |-
                                custom is a user-defined TLS security profile. Be extremely careful using a custom
                                profile as invalid configurations can be catastrophic. An example custom profile
                                looks like this:

                                  ciphers:

                                    - ECDHE-ECDSA-CHACHA20-POLY1305

                                    - ECDHE-RSA-CHACHA20-POLY1305

                                    - ECDHE-RSA-AES128-GCM-SHA256

                                    - ECDHE-ECDSA-AES128-GCM-SHA256

                                  minTLSVersion: VersionTLS11
                              nullable: true
                              properties:
                                ciphers:
                                  description: |-
                                    ciphers is used to specify the cipher algorithms that are negotiated
                                    during the TLS handshake.  Operators may remove entries their operands
                                    do not support.  For example, to use DES-CBC3-SHA  (yaml):

                                      ciphers:
                                        - DES-CBC3-SHA
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                minTLSVersion:
                                  description: |-
                                    minTLSVersion is used to specify the minimal version of the TLS protocol
                                    that is negotiated during the TLS handshake. For example, to use TLS
                                    versions 1.1, 1.2 and 1.3 (yaml):

                                      minTLSVersion: VersionTLS11

                                    NOTE: currently the highest minTLSVersion allowed is VersionTLS12
                                  enum:
                                    - VersionTLS10
                                    - VersionTLS11
                                    - VersionTLS12
                                    - VersionTLS13
                                  type: string
                              type: object
                            intermediate:
                              description: |-
                                intermediate is a TLS security profile based on:

                                https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29

                                and looks like this (yaml):

                                  ciphers:

                                    - TLS_AES_128_GCM_SHA256

                                    - TLS_AES_256_GCM_SHA384

                                    - TLS_CHACHA20_POLY1305_SHA256

                                    - ECDHE-ECDSA-AES128-GCM-SHA256

                                    - ECDHE-RSA-AES128-GCM-SHA256

                                    - ECDHE-ECDSA-AES256-GCM-SHA384

                                    - ECDHE-RSA-AES256-GCM-SHA384

                                    - ECDHE-ECDSA-CHACHA20-POLY1305

                                    - ECDHE-RSA-CHACHA20-POLY1305

                                    - DHE-RSA-AES128-GCM-SHA256

                                    - DHE-RSA-AES256-GCM-SHA384

                                  minTLSVersion: VersionTLS12
                              nullable: true
                              type: object
                            modern:
                              description: |-
                                modern is a TLS security profile based on:

                                https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility

                                and looks like this (yaml):

                                  ciphers:

                                    - TLS_AES_128_GCM_SHA256

                                    - TLS_AES_256_GCM_SHA384

                                    - TLS_CHACHA20_POLY1305_SHA256

                                  minTLSVersion: VersionTLS13
                              nullable: true
                              type: object
                            old:
                              description: |-
                                old is a TLS security profile based on:

                                https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility

                                and looks like this (yaml):

                                  ciphers:

                                    - TLS_AES_128_GCM_SHA256

                                    - TLS_AES_256_GCM_SHA384

                                    - TLS_CHACHA20_POLY1305_SHA256

                                    - ECDHE-ECDSA-AES128-GCM-SHA256

                                    - ECDHE-RSA-AES128-GCM-SHA256

                                    - ECDHE-ECDSA-AES256-GCM-SHA384

                                    - ECDHE-RSA-AES256-GCM-SHA384

                                    - ECDHE-ECDSA-CHACHA20-POLY1305

                                    - ECDHE-RSA-CHACHA20-POLY1305

                                    - DHE-RSA-AES128-GCM-SHA256

                                    - DHE-RSA-AES256-GCM-SHA384

                                    - DHE-RSA-CHACHA20-POLY1305

                                    - ECDHE-ECDSA-AES128-SHA256

                                    - ECDHE-RSA-AES128-SHA256

                                    - ECDHE-ECDSA-AES128-SHA

                                    - ECDHE-RSA-AES128-SHA

                                    - ECDHE-ECDSA-AES256-SHA384

                                    - ECDHE-RSA-AES256-SHA384

                                    - ECDHE-ECDSA-AES256-SHA

                                    - ECDHE-RSA-AES256-SHA

                                    - DHE-RSA-AES128-SHA256

                                    - DHE-RSA-AES256-SHA256

                                    - AES128-GCM-SHA256

                                    - AES256-GCM-SHA384

                                    - AES128-SHA256

                                    - AES256-SHA256

                                    - AES128-SHA

                                    - AES256-SHA

                                    - DES-CBC3-SHA

                                  minTLSVersion: VersionTLS10
                              nullable: true
                              type: object
                            type:
                              description: |-
                                type is one of Old, Intermediate, Modern or Custom. Custom provides
                                the ability to specify individual TLS security profile parameters.
                                Old, Intermediate and Modern are TLS security profiles based on:

                                https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations

                                The profiles are intent based, so they may change over time as new ciphers are developed and existing ciphers
                                are found to be insecure.  Depending on precisely which ciphers are available to a process, the list may be
                                reduced.

                                Note that the Modern profile is currently not supported because it is not
                                yet well adopted by common software libraries.
                              enum:
                                - Old
                                - Intermediate
                                - Modern
                                - Custom
                              type: string
                          type: object
                      type: object
                    authentication:
                      description: |-
                        authentication specifies cluster-wide settings for authentication (like OAuth and
                        webhook token authenticators).
                      properties:
                        oauthMetadata:
                          description: |-
                            oauthMetadata contains the discovery endpoint data for OAuth 2.0
                            Authorization Server Metadata for an external OAuth server.
                            This discovery document can be viewed from its served location:
                            oc get --raw '/.well-known/oauth-authorization-server'
                            For further details, see the IETF Draft:
                            https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
                            If oauthMetadata.name is non-empty, this value has precedence
                            over any metadata reference stored in status.
                            The key "oauthMetadata" is used to locate the data.
                            If specified and the config map or expected key is not found, no metadata is served.
                            If the specified metadata is not valid, no metadata is served.
                            The namespace for this config map is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                        oidcProviders:
                          description: |-
                            oidcProviders are OIDC identity providers that can issue tokens
                            for this cluster
                            Can only be set if "Type" is set to "OIDC".

                            At most one provider can be configured.
                          items:
                            properties:
                              claimMappings:
                                description: |-
                                  claimMappings is an optional field that configures the rules to be used by
                                  the Kubernetes API server for translating claims in a JWT token, issued
                                  by the identity provider, to a cluster identity.
                                properties:
                                  groups:
                                    description: |-
                                      groups is an optional field that configures how the groups of a cluster identity
                                      should be constructed from the claims in a JWT token issued
                                      by the identity provider.
                                      When referencing a claim, if the claim is present in the JWT
                                      token, its value must be a list of groups separated by a comma (',').
                                      For example - '"example"' and '"exampleOne", "exampleTwo", "exampleThree"' are valid claim values.
                                    properties:
                                      claim:
                                        description: |-
                                          claim is a required field that configures the JWT token
                                          claim whose value is assigned to the cluster identity
                                          field associated with this mapping.
                                        type: string
                                      prefix:
                                        description: |-
                                          prefix is an optional field that configures the prefix that will be
                                          applied to the cluster identity attribute during the process of mapping
                                          JWT claims to cluster identity attributes.

                                          When omitted (""), no prefix is applied to the cluster identity attribute.

                                          Example: if `prefix` is set to "myoidc:" and the `claim` in JWT contains
                                          an array of strings "a", "b" and  "c", the mapping will result in an
                                          array of string "myoidc:a", "myoidc:b" and "myoidc:c".
                                        type: string
                                    required:
                                      - claim
                                    type: object
                                  username:
                                    description: |-
                                      username is an optional field that configures how the username of a cluster identity
                                      should be constructed from the claims in a JWT token issued by the identity provider.
                                    properties:
                                      claim:
                                        description: |-
                                          claim is a required field that configures the JWT token
                                          claim whose value is assigned to the cluster identity
                                          field associated with this mapping.
                                        type: string
                                      prefix:
                                        description: |-
                                          prefix configures the prefix that should be prepended to the value
                                          of the JWT claim.

                                          prefix must be set when prefixPolicy is set to 'Prefix' and must be unset otherwise.
                                        properties:
                                          prefixString:
                                            description: |-
                                              prefixString is a required field that configures the prefix that will
                                              be applied to cluster identity username attribute
                                              during the process of mapping JWT claims to cluster identity attributes.

                                              prefixString must not be an empty string ("").
                                            minLength: 1
                                            type: string
                                        required:
                                          - prefixString
                                        type: object
                                      prefixPolicy:
                                        description: |-
                                          prefixPolicy is an optional field that configures how a prefix should be
                                          applied to the value of the JWT claim specified in the 'claim' field.

                                          Allowed values are 'Prefix', 'NoPrefix', and omitted (not provided or an empty string).

                                          When set to 'Prefix', the value specified in the prefix field will be
                                          prepended to the value of the JWT claim.
                                          The prefix field must be set when prefixPolicy is 'Prefix'.

                                          When set to 'NoPrefix', no prefix will be prepended to the value
                                          of the JWT claim.

                                          When omitted, this means no opinion and the platform is left to choose
                                          any prefixes that are applied which is subject to change over time.
                                          Currently, the platform prepends `{issuerURL}#` to the value of the JWT claim
                                          when the claim is not 'email'.
                                          As an example, consider the following scenario:
                                             `prefix` is unset, `issuerURL` is set to `https://myoidc.tld`,
                                             the JWT claims include "username":"userA" and "email":"userA@myoidc.tld",
                                             and `claim` is set to:
                                             - "username": the mapped value will be "https://myoidc.tld#userA"
                                             - "email": the mapped value will be "userA@myoidc.tld"
                                        enum:
                                          - ""
                                          - NoPrefix
                                          - Prefix
                                        type: string
                                    required:
                                      - claim
                                    type: object
                                    x-kubernetes-validations:
                                      - message: prefix must be set if prefixPolicy is 'Prefix', but must remain unset otherwise
                                        rule: 'has(self.prefixPolicy) && self.prefixPolicy == ''Prefix'' ? (has(self.prefix) && size(self.prefix.prefixString) > 0) : !has(self.prefix)'
                                type: object
                              claimValidationRules:
                                description: |-
                                  claimValidationRules is an optional field that configures the rules to
                                  be used by the Kubernetes API server for validating the claims in a JWT
                                  token issued by the identity provider.

                                  Validation rules are joined via an AND operation.
                                items:
                                  properties:
                                    requiredClaim:
                                      description: |-
                                        requiredClaim is an optional field that configures the required claim
                                        and value that the Kubernetes API server will use to validate if an incoming
                                        JWT is valid for this identity provider.
                                      properties:
                                        claim:
                                          description: |-
                                            claim is a required field that configures the name of the required claim.
                                            When taken from the JWT claims, claim must be a string value.

                                            claim must not be an empty string ("").
                                          minLength: 1
                                          type: string
                                        requiredValue:
                                          description: |-
                                            requiredValue is a required field that configures the value that 'claim' must
                                            have when taken from the incoming JWT claims.
                                            If the value in the JWT claims does not match, the token
                                            will be rejected for authentication.

                                            requiredValue must not be an empty string ("").
                                          minLength: 1
                                          type: string
                                      required:
                                        - claim
                                        - requiredValue
                                      type: object
                                    type:
                                      default: RequiredClaim
                                      description: |-
                                        type is an optional field that configures the type of the validation rule.

                                        Allowed values are 'RequiredClaim' and omitted (not provided or an empty string).

                                        When set to 'RequiredClaim', the Kubernetes API server
                                        will be configured to validate that the incoming JWT
                                        contains the required claim and that its value matches
                                        the required value.

                                        Defaults to 'RequiredClaim'.
                                      enum:
                                        - RequiredClaim
                                      type: string
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              issuer:
                                description: |-
                                  issuer is a required field that configures how the platform interacts
                                  with the identity provider and how tokens issued from the identity provider
                                  are evaluated by the Kubernetes API server.
                                properties:
                                  audiences:
                                    description: |-
                                      audiences is a required field that configures the acceptable audiences
                                      the JWT token, issued by the identity provider, must be issued to.
                                      At least one of the entries must match the 'aud' claim in the JWT token.

                                      audiences must contain at least one entry and must not exceed ten entries.
                                    items:
                                      minLength: 1
                                      type: string
                                    maxItems: 10
                                    minItems: 1
                                    type: array
                                    x-kubernetes-list-type: set
                                  issuerCertificateAuthority:
                                    description: |-
                                      issuerCertificateAuthority is an optional field that configures the
                                      certificate authority, used by the Kubernetes API server, to validate
                                      the connection to the identity provider when fetching discovery information.

                                      When not specified, the system trust is used.

                                      When specified, it must reference a ConfigMap in the openshift-config
                                      namespace containing the PEM-encoded CA certificates under the 'ca-bundle.crt'
                                      key in the data field of the ConfigMap.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  issuerURL:
                                    description: |-
                                      issuerURL is a required field that configures the URL used to issue tokens
                                      by the identity provider.
                                      The Kubernetes API server determines how authentication tokens should be handled
                                      by matching the 'iss' claim in the JWT to the issuerURL of configured identity providers.

                                      issuerURL must use the 'https' scheme.
                                    pattern: ^https:\/\/[^\s]
                                    type: string
                                required:
                                  - audiences
                                  - issuerURL
                                type: object
                              name:
                                description: |-
                                  name is a required field that configures the unique human-readable identifier
                                  associated with the identity provider.
                                  It is used to distinguish between multiple identity providers
                                  and has no impact on token validation or authentication mechanics.

                                  name must not be an empty string ("").
                                minLength: 1
                                type: string
                              oidcClients:
                                description: |-
                                  oidcClients is an optional field that configures how on-cluster,
                                  platform clients should request tokens from the identity provider.
                                  oidcClients must not exceed 20 entries and entries must have unique namespace/name pairs.
                                items:
                                  description: |-
                                    OIDCClientConfig configures how platform clients
                                    interact with identity providers as an authentication
                                    method
                                  properties:
                                    clientID:
                                      description: |-
                                        clientID is a required field that configures the client identifier, from
                                        the identity provider, that the platform component uses for authentication
                                        requests made to the identity provider.
                                        The identity provider must accept this identifier for platform components
                                        to be able to use the identity provider as an authentication mode.

                                        clientID must not be an empty string ("").
                                      minLength: 1
                                      type: string
                                    clientSecret:
                                      description: |-
                                        clientSecret is an optional field that configures the client secret used
                                        by the platform component when making authentication requests to the identity provider.

                                        When not specified, no client secret will be used when making authentication requests
                                        to the identity provider.

                                        When specified, clientSecret references a Secret in the 'openshift-config'
                                        namespace that contains the client secret in the 'clientSecret' key of the '.data' field.
                                        The client secret will be used when making authentication requests to the identity provider.

                                        Public clients do not require a client secret but private
                                        clients do require a client secret to work with the identity provider.
                                      properties:
                                        name:
                                          description: name is the metadata.name of the referenced secret
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    componentName:
                                      description: |-
                                        componentName is a required field that specifies the name of the platform
                                        component being configured to use the identity provider as an authentication mode.
                                        It is used in combination with componentNamespace as a unique identifier.

                                        componentName must not be an empty string ("") and must not exceed 256 characters in length.
                                      maxLength: 256
                                      minLength: 1
                                      type: string
                                    componentNamespace:
                                      description: |-
                                        componentNamespace is a required field that specifies the namespace in which the
                                        platform component being configured to use the identity provider as an authentication
                                        mode is running.
                                        It is used in combination with componentName as a unique identifier.

                                        componentNamespace must not be an empty string ("") and must not exceed 63 characters in length.
                                      maxLength: 63
                                      minLength: 1
                                      type: string
                                    extraScopes:
                                      description: |-
                                        extraScopes is an optional field that configures the extra scopes that should
                                        be requested by the platform component when making authentication requests to the
                                        identity provider.
                                        This is useful if you have configured claim mappings that requires specific
                                        scopes to be requested beyond the standard OIDC scopes.

                                        When omitted, no additional scopes are requested.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  required:
                                    - clientID
                                    - componentName
                                    - componentNamespace
                                  type: object
                                maxItems: 20
                                type: array
                                x-kubernetes-list-map-keys:
                                  - componentNamespace
                                  - componentName
                                x-kubernetes-list-type: map
                            required:
                              - issuer
                              - name
                            type: object
                          maxItems: 1
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        serviceAccountIssuer:
                          description: |-
                            serviceAccountIssuer is the identifier of the bound service account token
                            issuer.
                            The default is https://kubernetes.default.svc
                            WARNING: Updating this field will not result in immediate invalidation of all bound tokens with the
                            previous issuer value. Instead, the tokens issued by previous service account issuer will continue to
                            be trusted for a time period chosen by the platform (currently set to 24h).
                            This time period is subject to change over time.
                            This allows internal components to transition to use new service account issuer without service distruption.
                          type: string
                        type:
                          description: |-
                            type identifies the cluster managed, user facing authentication mode in use.
                            Specifically, it manages the component that responds to login attempts.
                            The default is IntegratedOAuth.
                          enum:
                            - ""
                            - None
                            - IntegratedOAuth
                            - OIDC
                          type: string
                        webhookTokenAuthenticator:
                          description: |-
                            webhookTokenAuthenticator configures a remote token reviewer.
                            These remote authentication webhooks can be used to verify bearer tokens
                            via the tokenreviews.authentication.k8s.io REST API. This is required to
                            honor bearer tokens that are provisioned by an external authentication service.

                            Can only be set if "Type" is set to "None".
                          properties:
                            kubeConfig:
                              description: |-
                                kubeConfig references a secret that contains kube config file data which
                                describes how to access the remote webhook service.
                                The namespace for the referenced secret is openshift-config.

                                For further details, see:

                                https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication

                                The key "kubeConfig" is used to locate the data.
                                If the secret or expected key is not found, the webhook is not honored.
                                If the specified kube config data is not valid, the webhook is not honored.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced secret
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - kubeConfig
                          type: object
                        webhookTokenAuthenticators:
                          description: webhookTokenAuthenticators is DEPRECATED, setting it has no effect.
                          items:
                            description: |-
                              deprecatedWebhookTokenAuthenticator holds the necessary configuration options for a remote token authenticator.
                              It's the same as WebhookTokenAuthenticator but it's missing the 'required' validation on KubeConfig field.
                            properties:
                              kubeConfig:
                                description: |-
                                  kubeConfig contains kube config file data which describes how to access the remote webhook service.
                                  For further details, see:
                                  https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                  The key "kubeConfig" is used to locate the data.
                                  If the secret or expected key is not found, the webhook is not honored.
                                  If the specified kube config data is not valid, the webhook is not honored.
                                  The namespace for this secret is determined by the point of use.
                                properties:
                                  name:
                                    description: name is the metadata.name of the referenced secret
                                    type: string
                                required:
                                  - name
                                type: object
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    featureGate:
                      description: featureGate holds cluster-wide information about feature gates.
                      properties:
                        customNoUpgrade:
                          description: |-
                            customNoUpgrade allows the enabling or disabling of any feature. Turning this feature set on IS NOT SUPPORTED, CANNOT BE UNDONE, and PREVENTS UPGRADES.
                            Because of its nature, this setting cannot be validated.  If you have any typos or accidentally apply invalid combinations
                            your cluster may fail in an unrecoverable way.  featureSet must equal "CustomNoUpgrade" must be set to use this field.
                          nullable: true
                          properties:
                            disabled:
                              description: disabled is a list of all feature gates that you want to force off
                              items:
                                description: FeatureGateName is a string to enforce patterns on the name of a FeatureGate
                                pattern: ^([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+\.?$
                                type: string
                              type: array
                            enabled:
                              description: enabled is a list of all feature gates that you want to force on
                              items:
                                description: FeatureGateName is a string to enforce patterns on the name of a FeatureGate
                                pattern: ^([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+\.?$
                                type: string
                              type: array
                          type: object
                        featureSet:
                          description: |-
                            featureSet changes the list of features in the cluster.  The default is empty.  Be very careful adjusting this setting.
                            Turning on or off features may cause irreversible changes in your cluster which cannot be undone.
                          enum:
                            - CustomNoUpgrade
                            - DevPreviewNoUpgrade
                            - TechPreviewNoUpgrade
                            - ""
                          type: string
                          x-kubernetes-validations:
                            - message: CustomNoUpgrade may not be changed
                              rule: 'oldSelf == ''CustomNoUpgrade'' ? self == ''CustomNoUpgrade'' : true'
                            - message: TechPreviewNoUpgrade may not be changed
                              rule: 'oldSelf == ''TechPreviewNoUpgrade'' ? self == ''TechPreviewNoUpgrade'' : true'
                            - message: DevPreviewNoUpgrade may not be changed
                              rule: 'oldSelf == ''DevPreviewNoUpgrade'' ? self == ''DevPreviewNoUpgrade'' : true'
                      type: object
                    image:
                      description: |-
                        image governs policies related to imagestream imports and runtime configuration
                        for external registries. It allows cluster admins to configure which registries
                        OpenShift is allowed to import images from, extra CA trust bundles for external
                        registries, and policies to block or allow registry hostnames.
                        When exposing OpenShift's image registry to the public, this also lets cluster
                        admins specify the external hostname.
                        This input will be part of every payload generated by the controllers for any NodePool of the HostedCluster.
                        Changing this value will trigger a rollout for all existing NodePools in the cluster.
                      properties:
                        additionalTrustedCA:
                          description: |-
                            additionalTrustedCA is a reference to a ConfigMap containing additional CAs that
                            should be trusted during imagestream import, pod image pull, build image pull, and
                            imageregistry pullthrough.
                            The namespace for this config map is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                        allowedRegistriesForImport:
                          description: |-
                            allowedRegistriesForImport limits the container image registries that normal users may import
                            images from. Set this list to the registries that you trust to contain valid Docker
                            images and that you want applications to be able to import from. Users with
                            permission to create Images or ImageStreamMappings via the API are not affected by
                            this policy - typically only administrators or system integrations will have those
                            permissions.
                          items:
                            description: |-
                              RegistryLocation contains a location of the registry specified by the registry domain
                              name. The domain name might include wildcards, like '*' or '??'.
                            properties:
                              domainName:
                                description: |-
                                  domainName specifies a domain name for the registry
                                  In case the registry use non-standard (80 or 443) port, the port should be included
                                  in the domain name as well.
                                type: string
                              insecure:
                                description: |-
                                  insecure indicates whether the registry is secure (https) or insecure (http)
                                  By default (if not specified) the registry is assumed as secure.
                                type: boolean
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        externalRegistryHostnames:
                          description: |-
                            externalRegistryHostnames provides the hostnames for the default external image
                            registry. The external hostname should be set only when the image registry
                            is exposed externally. The first value is used in 'publicDockerImageRepository'
                            field in ImageStreams. The value must be in "hostname[:port]" format.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        registrySources:
                          description: |-
                            registrySources contains configuration that determines how the container runtime
                            should treat individual registries when accessing images for builds+pods. (e.g.
                            whether or not to allow insecure access).  It does not contain configuration for the
                            internal cluster registry.
                          properties:
                            allowedRegistries:
                              description: |-
                                allowedRegistries are the only registries permitted for image pull and push actions. All other registries are denied.

                                Only one of BlockedRegistries or AllowedRegistries may be set.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            blockedRegistries:
                              description: |-
                                blockedRegistries cannot be used for image pull and push actions. All other registries are permitted.

                                Only one of BlockedRegistries or AllowedRegistries may be set.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            containerRuntimeSearchRegistries:
                              description: |-
                                containerRuntimeSearchRegistries are registries that will be searched when pulling images that do not have fully qualified
                                domains in their pull specs. Registries will be searched in the order provided in the list.
                                Note: this search list only works with the container runtime, i.e CRI-O. Will NOT work with builds or imagestream imports.
                              format: hostname
                              items:
                                type: string
                              minItems: 1
                              type: array
                              x-kubernetes-list-type: set
                            insecureRegistries:
                              description: insecureRegistries are registries which do not have a valid TLS certificates or only support HTTP connections.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                          x-kubernetes-validations:
                            - message: Only one of blockedRegistries or allowedRegistries may be set
                              rule: 'has(self.blockedRegistries) ? !has(self.allowedRegistries) : true'
                      type: object
                    ingress:
                      description: |-
                        ingress holds cluster-wide information about ingress, including the default ingress domain
                        used for routes.
                      properties:
                        appsDomain:
                          description: |-
                            appsDomain is an optional domain to use instead of the one specified
                            in the domain field when a Route is created without specifying an explicit
                            host. If appsDomain is nonempty, this value is used to generate default
                            host values for Route. Unlike domain, appsDomain may be modified after
                            installation.
                            This assumes a new ingresscontroller has been setup with a wildcard
                            certificate.
                          type: string
                        componentRoutes:
                          description: |-
                            componentRoutes is an optional list of routes that are managed by OpenShift components
                            that a cluster-admin is able to configure the hostname and serving certificate for.
                            The namespace and name of each route in this list should match an existing entry in the
                            status.componentRoutes list.

                            To determine the set of configurable Routes, look at namespace and name of entries in the
                            .status.componentRoutes list, where participating operators write the status of
                            configurable routes.
                          items:
                            description: ComponentRouteSpec allows for configuration of a route's hostname and serving certificate.
                            properties:
                              hostname:
                                description: hostname is the hostname that should be used by the route.
                                pattern: ^([a-zA-Z0-9\p{S}\p{L}]((-?[a-zA-Z0-9\p{S}\p{L}]{0,62})?)|([a-zA-Z0-9\p{S}\p{L}](([a-zA-Z0-9-\p{S}\p{L}]{0,61}[a-zA-Z0-9\p{S}\p{L}])?)(\.)){1,}([a-zA-Z\p{L}]){2,63})$|^(([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})[\.]){0,}([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})$
                                type: string
                              name:
                                description: |-
                                  name is the logical name of the route to customize.

                                  The namespace and name of this componentRoute must match a corresponding
                                  entry in the list of status.componentRoutes if the route is to be customized.
                                maxLength: 256
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  namespace is the namespace of the route to customize.

                                  The namespace and name of this componentRoute must match a corresponding
                                  entry in the list of status.componentRoutes if the route is to be customized.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              servingCertKeyPairSecret:
                                description: |-
                                  servingCertKeyPairSecret is a reference to a secret of type `kubernetes.io/tls` in the openshift-config namespace.
                                  The serving cert/key pair must match and will be used by the operator to fulfill the intent of serving with this name.
                                  If the custom hostname uses the default routing suffix of the cluster,
                                  the Secret specification for a serving certificate will not be needed.
                                properties:
                                  name:
                                    description: name is the metadata.name of the referenced secret
                                    type: string
                                required:
                                  - name
                                type: object
                            required:
                              - hostname
                              - name
                              - namespace
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - namespace
                            - name
                          x-kubernetes-list-type: map
                        domain:
                          description: |-
                            domain is used to generate a default host name for a route when the
                            route's host name is empty. The generated host name will follow this
                            pattern: "<route-name>.<route-namespace>.<domain>".

                            It is also used as the default wildcard domain suffix for ingress. The
                            default ingresscontroller domain will follow this pattern: "*.<domain>".

                            Once set, changing domain is not currently supported.
                          type: string
                        loadBalancer:
                          description: |-
                            loadBalancer contains the load balancer details in general which are not only specific to the underlying infrastructure
                            provider of the current cluster and are required for Ingress Controller to work on OpenShift.
                          properties:
                            platform:
                              description: |-
                                platform holds configuration specific to the underlying
                                infrastructure provider for the ingress load balancers.
                                When omitted, this means the user has no opinion and the platform is left
                                to choose reasonable defaults. These defaults are subject to change over time.
                              properties:
                                aws:
                                  description: aws contains settings specific to the Amazon Web Services infrastructure provider.
                                  properties:
                                    type:
                                      description: |-
                                        type allows user to set a load balancer type.
                                        When this field is set the default ingresscontroller will get created using the specified LBType.
                                        If this field is not set then the default ingress controller of LBType Classic will be created.
                                        Valid values are:

                                        * "Classic": A Classic Load Balancer that makes routing decisions at either
                                          the transport layer (TCP/SSL) or the application layer (HTTP/HTTPS). See
                                          the following for additional details:

                                            https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb

                                        * "NLB": A Network Load Balancer that makes routing decisions at the
                                          transport layer (TCP/SSL). See the following for additional details:

                                            https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb
                                      enum:
                                        - NLB
                                        - Classic
                                      type: string
                                  required:
                                    - type
                                  type: object
                                type:
                                  description: |-
                                    type is the underlying infrastructure provider for the cluster.
                                    Allowed values are "AWS", "Azure", "BareMetal", "GCP", "Libvirt",
                                    "OpenStack", "VSphere", "oVirt", "KubeVirt", "EquinixMetal", "PowerVS",
                                    "AlibabaCloud", "Nutanix" and "None". Individual components may not support all platforms,
                                    and must handle unrecognized platforms as None if they do not support that platform.
                                  enum:
                                    - ""
                                    - AWS
                                    - Azure
                                    - BareMetal
                                    - GCP
                                    - Libvirt
                                    - OpenStack
                                    - None
                                    - VSphere
                                    - oVirt
                                    - IBMCloud
                                    - KubeVirt
                                    - EquinixMetal
                                    - PowerVS
                                    - AlibabaCloud
                                    - Nutanix
                                    - External
                                  type: string
                              type: object
                          type: object
                        requiredHSTSPolicies:
                          description: |-
                            requiredHSTSPolicies specifies HSTS policies that are required to be set on newly created  or updated routes
                            matching the domainPattern/s and namespaceSelector/s that are specified in the policy.
                            Each requiredHSTSPolicy must have at least a domainPattern and a maxAge to validate a route HSTS Policy route
                            annotation, and affect route admission.

                            A candidate route is checked for HSTS Policies if it has the HSTS Policy route annotation:
                            "haproxy.router.openshift.io/hsts_header"
                            E.g. haproxy.router.openshift.io/hsts_header: max-age=31536000;preload;includeSubDomains

                            - For each candidate route, if it matches a requiredHSTSPolicy domainPattern and optional namespaceSelector,
                            then the maxAge, preloadPolicy, and includeSubdomainsPolicy must be valid to be admitted.  Otherwise, the route
                            is rejected.
                            - The first match, by domainPattern and optional namespaceSelector, in the ordering of the RequiredHSTSPolicies
                            determines the route's admission status.
                            - If the candidate route doesn't match any requiredHSTSPolicy domainPattern and optional namespaceSelector,
                            then it may use any HSTS Policy annotation.

                            The HSTS policy configuration may be changed after routes have already been created. An update to a previously
                            admitted route may then fail if the updated route does not conform to the updated HSTS policy configuration.
                            However, changing the HSTS policy configuration will not cause a route that is already admitted to stop working.

                            Note that if there are no RequiredHSTSPolicies, any HSTS Policy annotation on the route is valid.
                          items:
                            properties:
                              domainPatterns:
                                description: |-
                                  domainPatterns is a list of domains for which the desired HSTS annotations are required.
                                  If domainPatterns is specified and a route is created with a spec.host matching one of the domains,
                                  the route must specify the HSTS Policy components described in the matching RequiredHSTSPolicy.

                                  The use of wildcards is allowed like this: *.foo.com matches everything under foo.com.
                                  foo.com only matches foo.com, so to cover foo.com and everything under it, you must specify *both*.
                                items:
                                  type: string
                                minItems: 1
                                type: array
                              includeSubDomainsPolicy:
                                description: |-
                                  includeSubDomainsPolicy means the HSTS Policy should apply to any subdomains of the host's
                                  domain name.  Thus, for the host bar.foo.com, if includeSubDomainsPolicy was set to RequireIncludeSubDomains:
                                  - the host app.bar.foo.com would inherit the HSTS Policy of bar.foo.com
                                  - the host bar.foo.com would inherit the HSTS Policy of bar.foo.com
                                  - the host foo.com would NOT inherit the HSTS Policy of bar.foo.com
                                  - the host def.foo.com would NOT inherit the HSTS Policy of bar.foo.com
                                enum:
                                  - RequireIncludeSubDomains
                                  - RequireNoIncludeSubDomains
                                  - NoOpinion
                                type: string
                              maxAge:
                                description: |-
                                  maxAge is the delta time range in seconds during which hosts are regarded as HSTS hosts.
                                  If set to 0, it negates the effect, and hosts are removed as HSTS hosts.
                                  If set to 0 and includeSubdomains is specified, all subdomains of the host are also removed as HSTS hosts.
                                  maxAge is a time-to-live value, and if this policy is not refreshed on a client, the HSTS
                                  policy will eventually expire on that client.
                                properties:
                                  largestMaxAge:
                                    description: |-
                                      The largest allowed value (in seconds) of the RequiredHSTSPolicy max-age
                                      This value can be left unspecified, in which case no upper limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                  smallestMaxAge:
                                    description: |-
                                      The smallest allowed value (in seconds) of the RequiredHSTSPolicy max-age
                                      Setting max-age=0 allows the deletion of an existing HSTS header from a host.  This is a necessary
                                      tool for administrators to quickly correct mistakes.
                                      This value can be left unspecified, in which case no lower limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                type: object
                              namespaceSelector:
                                description: |-
                                  namespaceSelector specifies a label selector such that the policy applies only to those routes that
                                  are in namespaces with labels that match the selector, and are in one of the DomainPatterns.
                                  Defaults to the empty LabelSelector, which matches everything.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              preloadPolicy:
                                description: |-
                                  preloadPolicy directs the client to include hosts in its host preload list so that
                                  it never needs to do an initial load to get the HSTS header (note that this is not defined
                                  in RFC 6797 and is therefore client implementation-dependent).
                                enum:
                                  - RequirePreload
                                  - RequireNoPreload
                                  - NoOpinion
                                type: string
                            required:
                              - domainPatterns
                            type: object
                          type: array
                      type: object
                    network:
                      description: |-
                        network holds cluster-wide information about the network. It is used to configure the desired network configuration, such as: IP address pools for services/pod IPs, network plugin, etc.
                        Please view network.spec for an explanation on what applies when configuring this resource.
                      properties:
                        clusterNetwork:
                          description: |-
                            IP address pool to use for pod IPs.
                            This field is immutable after installation.
                          items:
                            description: |-
                              ClusterNetworkEntry is a contiguous block of IP addresses from which pod IPs
                              are allocated.
                            properties:
                              cidr:
                                description: The complete block for pod IPs.
                                type: string
                              hostPrefix:
                                description: |-
                                  The size (prefix) of block to allocate to each node. If this
                                  field is not used by the plugin, it can be left unset.
                                format: int32
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        externalIP:
                          description: |-
                            externalIP defines configuration for controllers that
                            affect Service.ExternalIP. If nil, then ExternalIP is
                            not allowed to be set.
                          properties:
                            autoAssignCIDRs:
                              description: |-
                                autoAssignCIDRs is a list of CIDRs from which to automatically assign
                                Service.ExternalIP. These are assigned when the service is of type
                                LoadBalancer. In general, this is only useful for bare-metal clusters.
                                In Openshift 3.x, this was misleadingly called "IngressIPs".
                                Automatically assigned External IPs are not affected by any
                                ExternalIPPolicy rules.
                                Currently, only one entry may be provided.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            policy:
                              description: |-
                                policy is a set of restrictions applied to the ExternalIP field.
                                If nil or empty, then ExternalIP is not allowed to be set.
                              properties:
                                allowedCIDRs:
                                  description: allowedCIDRs is the list of allowed CIDRs.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                rejectedCIDRs:
                                  description: |-
                                    rejectedCIDRs is the list of disallowed CIDRs. These take precedence
                                    over allowedCIDRs.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                          type: object
                        networkDiagnostics:
                          description: |-
                            networkDiagnostics defines network diagnostics configuration.

                            Takes precedence over spec.disableNetworkDiagnostics in network.operator.openshift.io.
                            If networkDiagnostics is not specified or is empty,
                            and the spec.disableNetworkDiagnostics flag in network.operator.openshift.io is set to true,
                            the network diagnostics feature will be disabled.
                          properties:
                            mode:
                              description: |-
                                mode controls the network diagnostics mode

                                When omitted, this means the user has no opinion and the platform is left
                                to choose reasonable defaults. These defaults are subject to change over time.
                                The current default is All.
                              enum:
                                - ""
                                - All
                                - Disabled
                              type: string
                            sourcePlacement:
                              description: |-
                                sourcePlacement controls the scheduling of network diagnostics source deployment

                                See NetworkDiagnosticsSourcePlacement for more details about default values.
                              properties:
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    nodeSelector is the node selector applied to network diagnostics components

                                    When omitted, this means the user has no opinion and the platform is left
                                    to choose reasonable defaults. These defaults are subject to change over time.
                                    The current default is `kubernetes.io/os: linux`.
                                  type: object
                                tolerations:
                                  description: |-
                                    tolerations is a list of tolerations applied to network diagnostics components

                                    When omitted, this means the user has no opinion and the platform is left
                                    to choose reasonable defaults. These defaults are subject to change over time.
                                    The current default is an empty list.
                                  items:
                                    description: |-
                                      The pod this Toleration is attached to tolerates any taint that matches
                                      the triple <key,value,effect> using the matching operator <operator>.
                                    properties:
                                      effect:
                                        description: |-
                                          Effect indicates the taint effect to match. Empty means match all taint effects.
                                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                        type: string
                                      key:
                                        description: |-
                                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                        type: string
                                      operator:
                                        description: |-
                                          Operator represents a key's relationship to the value.
                                          Valid operators are Exists and Equal. Defaults to Equal.
                                          Exists is equivalent to wildcard for value, so that a pod can
                                          tolerate all taints of a particular category.
                                        type: string
                                      tolerationSeconds:
                                        description: |-
                                          TolerationSeconds represents the period of time the toleration (which must be
                                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                                          negative values will be treated as 0 (evict immediately) by the system.
                                        format: int64
                                        type: integer
                                      value:
                                        description: |-
                                          Value is the taint value the toleration matches to.
                                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                                        type: string
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            targetPlacement:
                              description: |-
                                targetPlacement controls the scheduling of network diagnostics target daemonset

                                See NetworkDiagnosticsTargetPlacement for more details about default values.
                              properties:
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    nodeSelector is the node selector applied to network diagnostics components

                                    When omitted, this means the user has no opinion and the platform is left
                                    to choose reasonable defaults. These defaults are subject to change over time.
                                    The current default is `kubernetes.io/os: linux`.
                                  type: object
                                tolerations:
                                  description: |-
                                    tolerations is a list of tolerations applied to network diagnostics components

                                    When omitted, this means the user has no opinion and the platform is left
                                    to choose reasonable defaults. These defaults are subject to change over time.
                                    The current default is `- operator: "Exists"` which means that all taints are tolerated.
                                  items:
                                    description: |-
                                      The pod this Toleration is attached to tolerates any taint that matches
                                      the triple <key,value,effect> using the matching operator <operator>.
                                    properties:
                                      effect:
                                        description: |-
                                          Effect indicates the taint effect to match. Empty means match all taint effects.
                                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                        type: string
                                      key:
                                        description: |-
                                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                        type: string
                                      operator:
                                        description: |-
                                          Operator represents a key's relationship to the value.
                                          Valid operators are Exists and Equal. Defaults to Equal.
                                          Exists is equivalent to wildcard for value, so that a pod can
                                          tolerate all taints of a particular category.
                                        type: string
                                      tolerationSeconds:
                                        description: |-
                                          TolerationSeconds represents the period of time the toleration (which must be
                                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                                          negative values will be treated as 0 (evict immediately) by the system.
                                        format: int64
                                        type: integer
                                      value:
                                        description: |-
                                          Value is the taint value the toleration matches to.
                                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                                        type: string
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                          type: object
                        networkType:
                          description: |-
                            networkType is the plugin that is to be deployed (e.g. OVNKubernetes).
                            This should match a value that the cluster-network-operator understands,
                            or else no networking will be installed.
                            Currently supported values are:
                            - OVNKubernetes
                            This field is immutable after installation.
                          type: string
                        serviceNetwork:
                          description: |-
                            IP address pool for services.
                            Currently, we only support a single entry here.
                            This field is immutable after installation.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        serviceNodePortRange:
                          description: |-
                            The port range allowed for Services of type NodePort.
                            If not specified, the default of 30000-32767 will be used.
                            Such Services without a NodePort specified will have one
                            automatically allocated from this range.
                            This parameter can be updated after the cluster is
                            installed.
                          pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                          type: string
                      type: object
                      x-kubernetes-validations:
                        - message: cannot set networkDiagnostics.sourcePlacement and networkDiagnostics.targetPlacement when networkDiagnostics.mode is Disabled
                          rule: '!has(self.networkDiagnostics) || !has(self.networkDiagnostics.mode) || self.networkDiagnostics.mode!=''Disabled'' || !has(self.networkDiagnostics.sourcePlacement) && !has(self.networkDiagnostics.targetPlacement)'
                    oauth:
                      description: |-
                        oauth holds cluster-wide information about OAuth.
                        It is used to configure the integrated OAuth server.
                        This configuration is only honored when the top level Authentication config has type set to IntegratedOAuth.
                      properties:
                        identityProviders:
                          description: |-
                            identityProviders is an ordered list of ways for a user to identify themselves.
                            When this list is empty, no identities are provisioned for users.
                          items:
                            description: IdentityProvider provides identities for users authenticating using credentials
                            properties:
                              basicAuth:
                                description: basicAuth contains configuration options for the BasicAuth IdP
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  tlsClientCert:
                                    description: |-
                                      tlsClientCert is an optional reference to a secret by name that contains the
                                      PEM-encoded TLS client certificate to present when connecting to the server.
                                      The key "tls.crt" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      If the specified certificate data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  tlsClientKey:
                                    description: |-
                                      tlsClientKey is an optional reference to a secret by name that contains the
                                      PEM-encoded TLS private key for the client certificate referenced in tlsClientCert.
                                      The key "tls.key" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      If the specified certificate data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect to
                                    type: string
                                type: object
                              github:
                                description: github enables user authentication using GitHub credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      This can only be configured when hostname is set to a non-empty value.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: |-
                                      clientSecret is a required reference to the secret by name containing the oauth client secret.
                                      The key "clientSecret" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  hostname:
                                    description: |-
                                      hostname is the optional domain (e.g. "mycompany.com") for use with a hosted instance of
                                      GitHub Enterprise.
                                      It must match the GitHub Enterprise settings value configured at /setup/settings#hostname.
                                    type: string
                                  organizations:
                                    description: organizations optionally restricts which organizations are allowed to log in
                                    items:
                                      type: string
                                    type: array
                                  teams:
                                    description: teams optionally restricts which teams are allowed to log in. Format is <org>/<team>.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              gitlab:
                                description: gitlab enables user authentication using GitLab credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: |-
                                      clientSecret is a required reference to the secret by name containing the oauth client secret.
                                      The key "clientSecret" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  url:
                                    description: url is the oauth server base URL
                                    type: string
                                type: object
                              google:
                                description: google enables user authentication using Google credentials
                                properties:
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: |-
                                      clientSecret is a required reference to the secret by name containing the oauth client secret.
                                      The key "clientSecret" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  hostedDomain:
                                    description: hostedDomain is the optional Google App domain (e.g. "mycompany.com") to restrict logins to
                                    type: string
                                type: object
                              htpasswd:
                                description: htpasswd enables user authentication using an HTPasswd file to validate credentials
                                properties:
                                  fileData:
                                    description: |-
                                      fileData is a required reference to a secret by name containing the data to use as the htpasswd file.
                                      The key "htpasswd" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      If the specified htpasswd data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                type: object
                              keystone:
                                description: keystone enables user authentication using keystone password credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  domainName:
                                    description: domainName is required for keystone v3
                                    type: string
                                  tlsClientCert:
                                    description: |-
                                      tlsClientCert is an optional reference to a secret by name that contains the
                                      PEM-encoded TLS client certificate to present when connecting to the server.
                                      The key "tls.crt" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      If the specified certificate data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  tlsClientKey:
                                    description: |-
                                      tlsClientKey is an optional reference to a secret by name that contains the
                                      PEM-encoded TLS private key for the client certificate referenced in tlsClientCert.
                                      The key "tls.key" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      If the specified certificate data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect to
                                    type: string
                                type: object
                              ldap:
                                description: ldap enables user authentication using LDAP credentials
                                properties:
                                  attributes:
                                    description: attributes maps LDAP attributes to identities
                                    properties:
                                      email:
                                        description: |-
                                          email is the list of attributes whose values should be used as the email address. Optional.
                                          If unspecified, no email is set for the identity
                                        items:
                                          type: string
                                        type: array
                                      id:
                                        description: |-
                                          id is the list of attributes whose values should be used as the user ID. Required.
                                          First non-empty attribute is used. At least one attribute is required. If none of the listed
                                          attribute have a value, authentication fails.
                                          LDAP standard identity attribute is "dn"
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: |-
                                          name is the list of attributes whose values should be used as the display name. Optional.
                                          If unspecified, no display name is set for the identity
                                          LDAP standard display name attribute is "cn"
                                        items:
                                          type: string
                                        type: array
                                      preferredUsername:
                                        description: |-
                                          preferredUsername is the list of attributes whose values should be used as the preferred username.
                                          LDAP standard login attribute is "uid"
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  bindDN:
                                    description: bindDN is an optional DN to bind with during the search phase.
                                    type: string
                                  bindPassword:
                                    description: |-
                                      bindPassword is an optional reference to a secret by name
                                      containing a password to bind with during the search phase.
                                      The key "bindPassword" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  insecure:
                                    description: |-
                                      insecure, if true, indicates the connection should not use TLS
                                      WARNING: Should not be set to `true` with the URL scheme "ldaps://" as "ldaps://" URLs always
                                               attempt to connect using TLS, even when `insecure` is set to `true`
                                      When `true`, "ldap://" URLS connect insecurely. When `false`, "ldap://" URLs are upgraded to
                                      a TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830.
                                    type: boolean
                                  url:
                                    description: |-
                                      url is an RFC 2255 URL which specifies the LDAP search parameters to use.
                                      The syntax of the URL is:
                                      ldap://host:port/basedn?attribute?scope?filter
                                    type: string
                                type: object
                              mappingMethod:
                                description: |-
                                  mappingMethod determines how identities from this provider are mapped to users
                                  Defaults to "claim"
                                type: string
                              name:
                                description: |-
                                  name is used to qualify the identities returned by this provider.
                                  - It MUST be unique and not shared by any other identity provider used
                                  - It MUST be a valid path segment: name cannot equal "." or ".." or contain "/" or "%" or ":"
                                    Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName
                                type: string
                              openID:
                                description: openID enables user authentication using OpenID credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  claims:
                                    description: claims mappings
                                    properties:
                                      email:
                                        description: |-
                                          email is the list of claims whose values should be used as the email address. Optional.
                                          If unspecified, no email is set for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      groups:
                                        description: |-
                                          groups is the list of claims value of which should be used to synchronize groups
                                          from the OIDC provider to OpenShift for the user.
                                          If multiple claims are specified, the first one with a non-empty value is used.
                                        items:
                                          description: |-
                                            OpenIDClaim represents a claim retrieved from an OpenID provider's tokens or userInfo
                                            responses
                                          minLength: 1
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        description: |-
                                          name is the list of claims whose values should be used as the display name. Optional.
                                          If unspecified, no display name is set for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      preferredUsername:
                                        description: |-
                                          preferredUsername is the list of claims whose values should be used as the preferred username.
                                          If unspecified, the preferred username is determined from the value of the sub claim
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: |-
                                      clientSecret is a required reference to the secret by name containing the oauth client secret.
                                      The key "clientSecret" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  extraAuthorizeParameters:
                                    additionalProperties:
                                      type: string
                                    description: extraAuthorizeParameters are any custom parameters to add to the authorize request.
                                    type: object
                                  extraScopes:
                                    description: extraScopes are any scopes to request in addition to the standard "openid" scope.
                                    items:
                                      type: string
                                    type: array
                                  issuer:
                                    description: |-
                                      issuer is the URL that the OpenID Provider asserts as its Issuer Identifier.
                                      It must use the https scheme with no query or fragment component.
                                    type: string
                                type: object
                              requestHeader:
                                description: requestHeader enables user authentication using request header credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is a required reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      Specifically, it allows verification of incoming requests to prevent header spoofing.
                                      The key "ca.crt" is used to locate the data.
                                      If the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  challengeURL:
                                    description: |-
                                      challengeURL is a URL to redirect unauthenticated /authorize requests to
                                      Unauthenticated requests from OAuth clients which expect WWW-Authenticate challenges will be
                                      redirected here.
                                      ${url} is replaced with the current URL, escaped to be safe in a query parameter
                                        https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query string
                                        https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when challenge is set to true.
                                    type: string
                                  clientCommonNames:
                                    description: |-
                                      clientCommonNames is an optional list of common names to require a match from. If empty, any
                                      client certificate validated against the clientCA bundle is considered authoritative.
                                    items:
                                      type: string
                                    type: array
                                  emailHeaders:
                                    description: emailHeaders is the set of headers to check for the email address
                                    items:
                                      type: string
                                    type: array
                                  headers:
                                    description: headers is the set of headers to check for identity information
                                    items:
                                      type: string
                                    type: array
                                  loginURL:
                                    description: |-
                                      loginURL is a URL to redirect unauthenticated /authorize requests to
                                      Unauthenticated requests from OAuth clients which expect interactive logins will be redirected here
                                      ${url} is replaced with the current URL, escaped to be safe in a query parameter
                                        https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query string
                                        https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when login is set to true.
                                    type: string
                                  nameHeaders:
                                    description: nameHeaders is the set of headers to check for the display name
                                    items:
                                      type: string
                                    type: array
                                  preferredUsernameHeaders:
                                    description: preferredUsernameHeaders is the set of headers to check for the preferred username
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type:
                                description: type identifies the identity provider type for this entry.
                                type: string
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        templates:
                          description: templates allow you to customize pages like the login page.
                          properties:
                            error:
                              description: |-
                                error is the name of a secret that specifies a go template to use to render error pages
                                during the authentication or grant flow.
                                The key "errors.html" is used to locate the template data.
                                If specified and the secret or expected key is not found, the default error page is used.
                                If the specified template is not valid, the default error page is used.
                                If unspecified, the default error page is used.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced secret
                                  type: string
                              required:
                                - name
                              type: object
                            login:
                              description: |-
                                login is the name of a secret that specifies a go template to use to render the login page.
                                The key "login.html" is used to locate the template data.
                                If specified and the secret or expected key is not found, the default login page is used.
                                If the specified template is not valid, the default login page is used.
                                If unspecified, the default login page is used.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced secret
                                  type: string
                              required:
                                - name
                              type: object
                            providerSelection:
                              description: |-
                                providerSelection is the name of a secret that specifies a go template to use to render
                                the provider selection page.
                                The key "providers.html" is used to locate the template data.
                                If specified and the secret or expected key is not found, the default provider selection page is used.
                                If the specified template is not valid, the default provider selection page is used.
                                If unspecified, the default provider selection page is used.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced secret
                                  type: string
                              required:
                                - name
                              type: object
                          type: object
                        tokenConfig:
                          description: tokenConfig contains options for authorization and access tokens
                          properties:
                            accessTokenInactivityTimeout:
                              description: |-
                                accessTokenInactivityTimeout defines the token inactivity timeout
                                for tokens granted by any client.
                                The value represents the maximum amount of time that can occur between
                                consecutive uses of the token. Tokens become invalid if they are not
                                used within this temporal window. The user will need to acquire a new
                                token to regain access once a token times out. Takes valid time
                                duration string such as "5m", "1.5h" or "2h45m". The minimum allowed
                                value for duration is 300s (5 minutes). If the timeout is configured
                                per client, then that value takes precedence. If the timeout value is
                                not specified and the client does not override the value, then tokens
                                are valid until their lifetime.

                                WARNING: existing tokens' timeout will not be affected (lowered) by changing this value
                              type: string
                            accessTokenInactivityTimeoutSeconds:
                              description: 'accessTokenInactivityTimeoutSeconds - DEPRECATED: setting this field has no effect.'
                              format: int32
                              type: integer
                            accessTokenMaxAgeSeconds:
                              description: accessTokenMaxAgeSeconds defines the maximum age of access tokens
                              format: int32
                              type: integer
                          type: object
                      type: object
                      x-kubernetes-validations:
                        - message: spec.configuration.oauth.tokenConfig.accessTokenInactivityTimeout minimum acceptable token timeout value is 300 seconds
                          rule: '!has(self.tokenConfig) || !has(self.tokenConfig.accessTokenInactivityTimeout) || duration(self.tokenConfig.accessTokenInactivityTimeout).getSeconds() >= 300'
                    operatorhub:
                      description: |-
                        operatorhub specifies the configuration for the Operator Lifecycle Manager in the HostedCluster. This is only configured at deployment time but the controller are not reconcilling over it.
                        The OperatorHub configuration will be constantly reconciled if catalog placement is management, but only on cluster creation otherwise.
                      properties:
                        disableAllDefaultSources:
                          description: |-
                            disableAllDefaultSources allows you to disable all the default hub
                            sources. If this is true, a specific entry in sources can be used to
                            enable a default source. If this is false, a specific entry in
                            sources can be used to disable or enable a default source.
                          type: boolean
                        sources:
                          description: |-
                            sources is the list of default hub sources and their configuration.
                            If the list is empty, it implies that the default hub sources are
                            enabled on the cluster unless disableAllDefaultSources is true.
                            If disableAllDefaultSources is true and sources is not empty,
                            the configuration present in sources will take precedence. The list of
                            default hub sources and their current state will always be reflected in
                            the status block.
                          items:
                            description: HubSource is used to specify the hub source and its configuration
                            properties:
                              disabled:
                                description: disabled is used to disable a default hub source on cluster
                                type: boolean
                              name:
                                description: name is the name of one of the default hub sources
                                maxLength: 253
                                minLength: 1
                                type: string
                            type: object
                          type: array
                      type: object
                    proxy:
                      description: |-
                        proxy holds cluster-wide information on how to configure default proxies for the cluster.
                        This affects traffic flowing from the hosted cluster data plane.
                        The controllers will generate a machineConfig with the proxy config for the cluster.
                        This MachineConfig will be part of every payload generated by the controllers for any NodePool of the HostedCluster.
                        Changing this value will trigger a rollout for all existing NodePools in the cluster.
                      properties:
                        httpProxy:
                          description: httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.
                          type: string
                        httpsProxy:
                          description: httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.
                          type: string
                        noProxy:
                          description: |-
                            noProxy is a comma-separated list of hostnames and/or CIDRs and/or IPs for which the proxy should not be used.
                            Empty means unset and will not result in an env var.
                          type: string
                        readinessEndpoints:
                          description: readinessEndpoints is a list of endpoints used to verify readiness of the proxy.
                          items:
                            type: string
                          type: array
                        trustedCA:
                          description: |-
                            trustedCA is a reference to a ConfigMap containing a CA certificate bundle.
                            The trustedCA field should only be consumed by a proxy validator. The
                            validator is responsible for reading the certificate bundle from the required
                            key "ca-bundle.crt", merging it with the system default trust bundle,
                            and writing the merged trust bundle to a ConfigMap named "trusted-ca-bundle"
                            in the "openshift-config-managed" namespace. Clients that expect to make
                            proxy connections must use the trusted-ca-bundle for all HTTPS requests to
                            the proxy, and may use the trusted-ca-bundle for non-proxy HTTPS requests as
                            well.

                            The namespace for the ConfigMap referenced by trustedCA is
                            "openshift-config". Here is an example ConfigMap (in yaml):

                            apiVersion: v1
                            kind: ConfigMap
                            metadata:
                             name: user-ca-bundle
                             namespace: openshift-config
                             data:
                               ca-bundle.crt: |
                                 -----BEGIN CERTIFICATE-----
                                 Custom CA certificate bundle.
                                 -----END CERTIFICATE-----
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                      type: object
                    scheduler:
                      description: |-
                        scheduler holds cluster-wide config information to run the Kubernetes Scheduler
                        and influence its placement decisions. The canonical name for this config is `cluster`.
                      properties:
                        defaultNodeSelector:
                          description: |-
                            defaultNodeSelector helps set the cluster-wide default node selector to
                            restrict pod placement to specific nodes. This is applied to the pods
                            created in all namespaces and creates an intersection with any existing
                            nodeSelectors already set on a pod, additionally constraining that pod's selector.
                            For example,
                            defaultNodeSelector: "type=user-node,region=east" would set nodeSelector
                            field in pod spec to "type=user-node,region=east" to all pods created
                            in all namespaces. Namespaces having project-wide node selectors won't be
                            impacted even if this field is set. This adds an annotation section to
                            the namespace.
                            For example, if a new namespace is created with
                            node-selector='type=user-node,region=east',
                            the annotation openshift.io/node-selector: type=user-node,region=east
                            gets added to the project. When the openshift.io/node-selector annotation
                            is set on the project the value is used in preference to the value we are setting
                            for defaultNodeSelector field.
                            For instance,
                            openshift.io/node-selector: "type=user-node,region=west" means
                            that the default of "type=user-node,region=east" set in defaultNodeSelector
                            would not be applied.
                          type: string
                        mastersSchedulable:
                          description: |-
                            mastersSchedulable allows masters nodes to be schedulable. When this flag is
                            turned on, all the master nodes in the cluster will be made schedulable,
                            so that workload pods can run on them. The default value for this field is false,
                            meaning none of the master nodes are schedulable.
                            Important Note: Once the workload pods start running on the master nodes,
                            extreme care must be taken to ensure that cluster-critical control plane components
                            are not impacted.
                            Please turn on this field after doing due diligence.
                          type: boolean
                        policy:
                          description: |-
                            DEPRECATED: the scheduler Policy API has been deprecated and will be removed in a future release.
                            policy is a reference to a ConfigMap containing scheduler policy which has
                            user specified predicates and priorities. If this ConfigMap is not available
                            scheduler will default to use DefaultAlgorithmProvider.
                            The namespace for this configmap is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                        profile:
                          description: |-
                            profile sets which scheduling profile should be set in order to configure scheduling
                            decisions for new pods.

                            Valid values are "LowNodeUtilization", "HighNodeUtilization", "NoScoring"
                            Defaults to "LowNodeUtilization"
                          enum:
                            - ""
                            - LowNodeUtilization
                            - HighNodeUtilization
                            - NoScoring
                          type: string
                        profileCustomizations:
                          description: profileCustomizations contains configuration for modifying the default behavior of existing scheduler profiles.
                          properties:
                            dynamicResourceAllocation:
                              description: |-
                                dynamicResourceAllocation allows to enable or disable dynamic resource allocation within the scheduler.
                                Dynamic resource allocation is an API for requesting and sharing resources between pods and containers inside a pod.
                                Third-party resource drivers are responsible for tracking and allocating resources.
                                Different kinds of resources support arbitrary parameters for defining requirements and initialization.
                                Valid values are Enabled, Disabled and omitted.
                                When omitted, this means no opinion and the platform is left to choose a reasonable default,
                                which is subject to change over time.
                                The current default is Disabled.
                              enum:
                                - ""
                                - Enabled
                                - Disabled
                              type: string
                          type: object
                      type: object
                  type: object
                controlPlaneRelease:
                  description: |-
                    controlPlaneRelease is like spec.release but only for the components running on the management cluster.
                    This excludes any operand which will land in the hosted cluster data plane.
                    It is useful when you need to apply patch management side like a CVE, transparently for the hosted cluster.
                    Version input for this field is free, no validation is performed against spec.release or maximum and minimum is performed.
                    If defined, it will dicate the version of the components running management side, while spec.release will dictate the version of the components landing in the hosted cluster data plane.
                    If not defined, spec.release is used for both.
                    Changing this field will trigger a rollout of the control plane.
                    The behavior of the rollout will be driven by the ControllerAvailabilityPolicy and InfrastructureAvailabilityPolicy for PDBs and maxUnavailable and surce policies.
                  properties:
                    image:
                      description: |-
                        image is the image pullspec of an OCP release payload image.
                        See https://quay.io/repository/openshift-release-dev/ocp-release?tab=tags for a list of available images.
                      maxLength: 253
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                        - message: Image must start with a word character (letters, digits, or underscores) and contain no white spaces
                          rule: self.matches('^(\\w+\\S+)$')
                  required:
                    - image
                  type: object
                controllerAvailabilityPolicy:
                  default: HighlyAvailable
                  description: |-
                    controllerAvailabilityPolicy specifies the availability policy applied to critical control plane components like the Kube API Server.
                    Possible values are HighlyAvailable and SingleReplica. The default value is HighlyAvailable.
                    This field is immutable.
                  enum:
                    - HighlyAvailable
                    - SingleReplica
                  type: string
                  x-kubernetes-validations:
                    - message: ControllerAvailabilityPolicy is immutable
                      rule: self == oldSelf
                dns:
                  description: dns specifies the DNS configuration for the hosted cluster ingress.
                  properties:
                    baseDomain:
                      description: |-
                        baseDomain is the base domain of the hosted cluster.
                        It will be used to configure ingress in the hosted cluster through the subdomain baseDomainPrefix.baseDomain.
                        If baseDomainPrefix is omitted, the hostedCluster.name will be used as the subdomain.
                        Once set, this field is immutable.
                        When the value is the empty string "", the controller might default to a value depending on the platform.
                      maxLength: 253
                      type: string
                      x-kubernetes-validations:
                        - message: baseDomain must be a valid domain name (e.g., example, example.com, sub.example.com)
                          rule: self == "" || self.matches('^(?:(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}|[a-zA-Z0-9-]+)$')
                        - message: baseDomain is immutable
                          rule: oldSelf == "" || self == oldSelf
                    baseDomainPrefix:
                      description: |-
                        baseDomainPrefix is the base domain prefix for the hosted cluster ingress.
                        It will be used to configure ingress in the hosted cluster through the subdomain baseDomainPrefix.baseDomain.
                        If baseDomainPrefix is omitted, the hostedCluster.name will be used as the subdomain.
                        Set baseDomainPrefix to an empty string "", if you don't want a prefix at all (not even hostedCluster.name) to be prepended to baseDomain.
                        This field is immutable.
                      maxLength: 253
                      type: string
                      x-kubernetes-validations:
                        - message: baseDomainPrefix must be a valid domain name (e.g., example, example.com, sub.example.com)
                          rule: self == "" || self.matches('^(?:(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}|[a-zA-Z0-9-]+)$')
                        - message: baseDomainPrefix is immutable
                          rule: self == oldSelf
                    privateZoneID:
                      description: |-
                        privateZoneID is the Hosted Zone ID where all the DNS records that are only available internally to the cluster exist.
                        This field is optional and mainly leveraged in cloud environments where the DNS records for the .baseDomain are created by controllers in this zone.
                        Once set, this value is immutable.
                      maxLength: 253
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                        - message: privateZoneID is immutable
                          rule: oldSelf == "" || self == oldSelf
                    publicZoneID:
                      description: |-
                        publicZoneID is the Hosted Zone ID where all the DNS records that are publicly accessible to the internet exist.
                        This field is optional and mainly leveraged in cloud environments where the DNS records for the .baseDomain are created by controllers in this zone.
                        Once set, this value is immutable.
                      maxLength: 253
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                        - message: publicZoneID is immutable
                          rule: oldSelf == "" || self == oldSelf
                  required:
                    - baseDomain
                  type: object
                etcd:
                  default:
                    managed:
                      storage:
                        persistentVolume:
                          size: 8Gi
                        type: PersistentVolume
                    managementType: Managed
                  description: |-
                    etcd specifies configuration for the control plane etcd cluster. The
                    default managementType is Managed. Once set, the managementType cannot be
                    changed.
                  properties:
                    managed:
                      description: managed specifies the behavior of an etcd cluster managed by HyperShift.
                      properties:
                        storage:
                          description: storage specifies how etcd data is persisted.
                          properties:
                            persistentVolume:
                              description: |-
                                persistentVolume is the configuration for PersistentVolume etcd storage.
                                With this implementation, a PersistentVolume will be allocated for every
                                etcd member (either 1 or 3 depending on the HostedCluster control plane
                                availability configuration).
                              properties:
                                size:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  default: 8Gi
                                  description: |-
                                    size is the minimum size of the data volume for each etcd member.
                                    Default is 8Gi.
                                    This field is immutable
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                  x-kubernetes-validations:
                                    - message: Etcd PV storage size is immutable
                                      rule: self == oldSelf
                                storageClassName:
                                  description: |-
                                    storageClassName is the StorageClass of the data volume for each etcd member.
                                    See https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1.
                                  maxLength: 255
                                  type: string
                                  x-kubernetes-validations:
                                    - message: storageClassName is immutable
                                      rule: self == oldSelf
                              type: object
                            restoreSnapshotURL:
                              description: |-
                                restoreSnapshotURL allows an optional URL to be provided where
                                an etcd snapshot can be downloaded, for example a pre-signed URL
                                referencing a storage service.
                                This snapshot will be restored on initial startup, only when the etcd PV
                                is empty.
                              items:
                                maxLength: 1024
                                type: string
                              maxItems: 1
                              type: array
                              x-kubernetes-list-type: set
                              x-kubernetes-validations:
                                - message: RestoreSnapshotURL shouldn't contain more than 1 entry
                                  rule: self.size() <= 1
                            type:
                              description: |-
                                type is the kind of persistent storage implementation to use for etcd.
                                Only PersistentVolume is supported at the moment.
                              enum:
                                - PersistentVolume
                              type: string
                          required:
                            - type
                          type: object
                      required:
                        - storage
                      type: object
                    managementType:
                      description: |-
                        managementType defines how the etcd cluster is managed.
                        This can be either Managed or Unmanaged.
                        This field is immutable.
                      enum:
                        - Managed
                        - Unmanaged
                      type: string
                      x-kubernetes-validations:
                        - message: managementType is immutable
                          rule: self == oldSelf
                    unmanaged:
                      description: |-
                        unmanaged specifies configuration which enables the control plane to
                        integrate with an externally managed etcd cluster.
                      properties:
                        endpoint:
                          description: |-
                            endpoint is the full etcd cluster client endpoint URL. For example:

                                https://etcd-client:2379

                            If the URL uses an HTTPS scheme, the TLS field is required.
                          maxLength: 255
                          pattern: ^https://
                          type: string
                        tls:
                          description: tls specifies TLS configuration for HTTPS etcd client endpoints.
                          properties:
                            clientSecret:
                              description: |-
                                clientSecret refers to a secret for client mTLS authentication with the etcd cluster. It
                                may have the following key/value pairs:

                                    etcd-client-ca.crt: Certificate Authority value
                                    etcd-client.crt: Client certificate value
                                    etcd-client.key: Client certificate key value
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - clientSecret
                          type: object
                      required:
                        - endpoint
                        - tls
                      type: object
                  required:
                    - managementType
                  type: object
                  x-kubernetes-validations:
                    - message: Only managed configuration must be set when managementType is Managed
                      rule: 'self.managementType == ''Managed'' ? has(self.managed) : !has(self.managed)'
                    - message: Only unmanaged configuration must be set when managementType is Unmanaged
                      rule: 'self.managementType == ''Unmanaged'' ? has(self.unmanaged) : !has(self.unmanaged)'
                fips:
                  description: |-
                    fips indicates whether this cluster's nodes will be running in FIPS mode.
                    If set to true, the control plane's ignition server will be configured to
                    expect that nodes joining the cluster will be FIPS-enabled.
                  type: boolean
                  x-kubernetes-validations:
                    - message: fips is immutable
                      rule: self == oldSelf
                imageContentSources:
                  description: |-
                    imageContentSources specifies image mirrors that can be used by cluster
                    nodes to pull content.
                    When imageContentSources is set, the controllers will generate a machineConfig.
                    This MachineConfig will be part of every payload generated by the controllers for any NodePool of the HostedCluster.
                    Changing this value will trigger a rollout for all existing NodePools in the cluster.
                  items:
                    description: |-
                      ImageContentSource specifies image mirrors that can be used by cluster nodes
                      to pull content. For cluster workloads, if a container image registry host of
                      the pullspec matches Source then one of the Mirrors are substituted as hosts
                      in the pullspec and tried in order to fetch the image.
                    properties:
                      mirrors:
                        description: mirrors are one or more repositories that may also contain the same images.
                        items:
                          maxLength: 255
                          type: string
                        maxItems: 255
                        type: array
                        x-kubernetes-list-type: set
                      source:
                        description: |-
                          source is the repository that users refer to, e.g. in image pull
                          specifications.
                        maxLength: 255
                        type: string
                    required:
                      - source
                    type: object
                  maxItems: 255
                  type: array
                infraID:
                  description: |-
                    infraID is a globally unique identifier for the cluster.
                    It must consist of lowercase alphanumeric characters and hyphens ('-') only, and start and end with an alphanumeric character.
                    It must be no more than 253 characters in length.
                    This identifier will be used to associate various cloud resources with the HostedCluster and its associated NodePools.
                    infraID is used to compute and tag created resources with "kubernetes.io/cluster/"+hcluster.Spec.InfraID which has contractual meaning for the cloud provider implementations.
                    If a value is not specified, a random infraID will be generated and set by the controller.
                    Once set, this value is immutable.
                  maxLength: 253
                  minLength: 1
                  type: string
                  x-kubernetes-validations:
                    - message: infraID must consist of lowercase alphanumeric characters or '-', start and end with an alphanumeric character, and be between 1 and 253 characters
                      rule: self.matches('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$')
                    - message: infraID is immutable
                      rule: oldSelf == "" || self == oldSelf
                infrastructureAvailabilityPolicy:
                  default: SingleReplica
                  description: |-
                    infrastructureAvailabilityPolicy specifies the availability policy applied to infrastructure services which run on the hosted cluster data plane like the ingress controller and image registry controller.
                    Possible values are HighlyAvailable and SingleReplica. The default value is SingleReplica.
                  enum:
                    - HighlyAvailable
                    - SingleReplica
                  type: string
                issuerURL:
                  default: https://kubernetes.default.svc
                  description: |-
                    issuerURL is an OIDC issuer URL which will be used as the issuer in all
                    ServiceAccount tokens generated by the control plane API server via --service-account-issuer kube api server flag.
                    https://k8s-docs.netlify.app/en/docs/reference/command-line-tools-reference/kube-apiserver/
                    https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#serviceaccount-token-volume-projection
                    The default value is kubernetes.default.svc, which only works for in-cluster
                    validation.
                    If the platform is AWS and this value is set, the controller will update an s3 object with the appropriate OIDC documents (using the serviceAccountSigningKey info) into that issuerURL.
                    The expectation is for this s3 url to be backed by an OIDC provider in the AWS IAM.
                  maxLength: 255
                  type: string
                  x-kubernetes-validations:
                    - message: issuerURL is immutable
                      rule: self == oldSelf
                    - message: issuerURL must be a valid absolute URL
                      rule: isURL(self)
                kubeAPIServerDNSName:
                  description: |-
                    kubeAPIServerDNSName specifies a desired DNS name to resolve to the KAS.
                    When set, the controller will automatically generate a secret with kubeconfig and expose it in the hostedCluster Status.customKubeconfig field.
                    If it's set or removed day 2, the kubeconfig generated secret will be created, recreated or deleted.
                    The DNS entries should be resolvable from the cluster, so this should be manually configured in the DNS provider.
                    This field works in conjunction with configuration.APIServer.ServingCerts.NamedCertificates to enable
                    access to the API server via a custom domain name. The NamedCertificates provide the TLS certificates
                    for the custom domain, while this field triggers the generation of a kubeconfig that uses those certificates.
                    This API endpoint only works in OCP version 4.19 or later. Older versions will result in a no-op.
                  maxLength: 253
                  type: string
                  x-kubernetes-validations:
                    - message: kubeAPIServerDNSName must be a valid URL name (e.g., api.example.com)
                      rule: self == "" || self.matches('^(?:(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}|[a-zA-Z0-9-]+)$')
                labels:
                  additionalProperties:
                    type: string
                  description: |-
                    labels when specified, define what custom labels are added to the hcp pods.
                    Changing this day 2 will cause a rollout of all hcp pods.
                    Duplicate keys are not supported. If duplicate keys are defined, only the last key/value pair is preserved.
                    Valid values are those in https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set

                    -kubebuilder:validation:XValidation:rule=`self.all(key, size(key) <= 317 && key.matches('^(([A-Za-z0-9]+(\\.[A-Za-z0-9]+)?)*[A-Za-z0-9]\\/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$'))`, message="label key must have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/)"
                    -kubebuilder:validation:XValidation:rule=`self.all(key, size(self[key]) <= 63 && self[key].matches('^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$'))`, message="label value must be 63 characters or less (can be empty), consist of alphanumeric characters, dashes (-), underscores (_) or dots (.), and begin and end with an alphanumeric character"
                  maxProperties: 20
                  type: object
                networking:
                  default:
                    clusterNetwork:
                      - cidr: 10.132.0.0/14
                    networkType: OVNKubernetes
                    serviceNetwork:
                      - cidr: 172.31.0.0/16
                  description: |-
                    networking specifies network configuration for the hosted cluster.
                    Defaults to OVNKubernetes with a cluster network of cidr: "10.132.0.0/14" and a service network of cidr: "172.31.0.0/16".
                  properties:
                    apiServer:
                      description: |-
                        apiServer contains advanced network settings for the API server that affect
                        how the APIServer is exposed inside a hosted cluster node.
                      properties:
                        advertiseAddress:
                          description: |-
                            advertiseAddress is the address that pods within the nodes will use to talk to the API
                            server. This is an address associated with the loopback adapter of each
                            node. If not specified, the controller will take default values.
                            The default values will be set as 172.20.0.1 or fd00::1.
                            This value is immutable.
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: advertiseAddress is immutable
                              rule: self == oldSelf
                        allowedCIDRBlocks:
                          description: |-
                            allowedCIDRBlocks is an allow list of CIDR blocks that can access the APIServer.
                            If not specified, traffic is allowed from all addresses.
                            This field is enforced for ARO (Azure Red Hat OpenShift) via the shared-ingress HAProxy.
                            For platforms other than ARO, the enforcement depends on whether the underlying cloud provider supports the Service LoadBalancerSourceRanges field.
                            If the platform does not support LoadBalancerSourceRanges, this field may have no effect.
                          items:
                            maxLength: 43
                            type: string
                            x-kubernetes-validations:
                              - message: cidr must be a valid IPv4 or IPv6 CIDR notation (e.g., 192.168.1.0/24 or 2001:db8::/64)
                                rule: self.matches('^((\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2})$') || self.matches('^([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?/[0-9]{1,3}$')
                          maxItems: 500
                          type: array
                          x-kubernetes-list-type: set
                        port:
                          description: |-
                            port is the port at which the APIServer is exposed inside a node. Other
                            pods using host networking cannot listen on this port.
                            If omitted 6443 is used.
                            This is useful to choose a port other than the default one which might interfere with customer environments e.g. https://github.com/openshift/hypershift/pull/356.
                            Setting this to 443 is possible only for backward compatibility reasons and it's discouraged.
                            Doing so, it would result in the controller overriding the KAS endpoint in the guest cluster having a discrepancy with the KAS Pod and potentially causing temporarily network failures.
                            This value is immutable.
                          format: int32
                          type: integer
                          x-kubernetes-validations:
                            - message: port is immutable
                              rule: self == oldSelf
                      type: object
                    clusterNetwork:
                      default:
                        - cidr: 10.132.0.0/14
                      description: |-
                        clusterNetwork is the list of IP address pools for pods.
                        Defaults to cidr: "10.132.0.0/14".
                        Currently only one entry is supported.
                        This field is immutable.
                      items:
                        description: |-
                          ClusterNetworkEntry is a single IP address block for pod IP blocks. IP blocks
                          are allocated with size 2^HostSubnetLength.
                        properties:
                          cidr:
                            description: cidr is the IP block address pool.
                            maxLength: 43
                            type: string
                            x-kubernetes-validations:
                              - message: cidr must be a valid IPv4 or IPv6 CIDR notation (e.g., 192.168.1.0/24 or 2001:db8::/64)
                                rule: self.matches('^((\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2})$') || self.matches('^([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?/[0-9]{1,3}$')
                          hostPrefix:
                            description: |-
                              hostPrefix is the prefix size to allocate to each node from the CIDR.
                              For example, 24 would allocate 2^(32-24)=2^8=256 addresses to each node. If this
                              field is not used by the plugin, it can be left unset.
                            format: int32
                            type: integer
                        required:
                          - cidr
                        type: object
                      maxItems: 2
                      minItems: 1
                      type: array
                      x-kubernetes-validations:
                        - message: clusterNetwork is immutable and cannot be modified once set.
                          rule: self == oldSelf
                    machineNetwork:
                      description: |-
                        machineNetwork is the list of IP address pools for machines.
                        This might be used among other things to generate appropriate networking security groups in some clouds providers.
                        Currently only one entry or two for dual stack is supported.
                        This field is immutable.
                      items:
                        description: MachineNetworkEntry is a single IP address block for node IP blocks.
                        properties:
                          cidr:
                            description: cidr is the IP block address pool for machines within the cluster.
                            maxLength: 43
                            type: string
                            x-kubernetes-validations:
                              - message: cidr must be a valid IPv4 or IPv6 CIDR notation (e.g., 192.168.1.0/24 or 2001:db8::/64)
                                rule: self.matches('^((\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2})$') || self.matches('^([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?/[0-9]{1,3}$')
                        required:
                          - cidr
                        type: object
                      maxItems: 2
                      minItems: 1
                      type: array
                      x-kubernetes-validations:
                        - message: machineNetwork is immutable and cannot be modified once set.
                          rule: self == oldSelf
                    networkType:
                      default: OVNKubernetes
                      description: |-
                        networkType specifies the SDN provider used for cluster networking.
                        Defaults to OVNKubernetes.
                        This field is required and immutable.
                        kubebuilder:validation:XValidation:rule="self == oldSelf", message="networkType is immutable"
                      enum:
                        - OpenShiftSDN
                        - Calico
                        - OVNKubernetes
                        - Other
                      type: string
                    serviceNetwork:
                      default:
                        - cidr: 172.31.0.0/16
                      description: |-
                        serviceNetwork is the list of IP address pools for services.
                        Defaults to cidr: "172.31.0.0/16".
                        Currently only one entry is supported.
                        This field is immutable.
                      items:
                        description: ServiceNetworkEntry is a single IP address block for the service network.
                        properties:
                          cidr:
                            description: cidr is the IP block address pool for services within the cluster in CIDR format (e.g., 192.168.1.0/24 or 2001:0db8::/64)
                            maxLength: 43
                            type: string
                            x-kubernetes-validations:
                              - message: cidr must be a valid IPv4 or IPv6 CIDR notation (e.g., 192.168.1.0/24 or 2001:db8::/64)
                                rule: self.matches('^((\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2})$') || self.matches('^([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?/[0-9]{1,3}$')
                        required:
                          - cidr
                        type: object
                      maxItems: 2
                      minItems: 1
                      type: array
                      x-kubernetes-validations:
                        - message: serviceNetwork is immutable and cannot be modified once set.
                          rule: self == oldSelf
                  type: object
                  x-kubernetes-validations:
                    - message: CIDR ranges in machineNetwork, clusterNetwork, and serviceNetwork must be unique and non-overlapping
                      rule: (!has(self.machineNetwork) && self.clusterNetwork.all(c, self.serviceNetwork.all(s, c.cidr != s.cidr)) || (has(self.machineNetwork) && (self.machineNetwork.all(m, self.clusterNetwork.all(c, m.cidr != c.cidr)) && self.machineNetwork.all(m, self.serviceNetwork.all(s, m.cidr != s.cidr)) && self.clusterNetwork.all(c, self.serviceNetwork.all(s, c.cidr != s.cidr)))))
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: |-
                    nodeSelector when specified, is propagated to all control plane Deployments and Stateful sets running management side.
                    It must be satisfied by the management Nodes for the pods to be scheduled. Otherwise the HostedCluster will enter a degraded state.
                    Changes to this field will propagate to existing Deployments and StatefulSets.
                  type: object
                  x-kubernetes-validations:
                    - message: nodeSelector map can have at most 20 entries
                      rule: size(self) <= 20
                olmCatalogPlacement:
                  default: management
                  description: |-
                    olmCatalogPlacement specifies the placement of OLM catalog components. By default,
                    this is set to management and OLM catalog components are deployed onto the management
                    cluster. If set to guest, the OLM catalog components will be deployed onto the guest
                    cluster.
                  enum:
                    - management
                    - guest
                  type: string
                  x-kubernetes-validations:
                    - message: OLMCatalogPlacement is immutable
                      rule: self == oldSelf
                operatorConfiguration:
                  description: operatorConfiguration specifies configuration for individual OCP operators in the cluster.
                  properties:
                    clusterNetworkOperator:
                      description: clusterNetworkOperator specifies the configuration for the Cluster Network Operator in the hosted cluster.
                      properties:
                        disableMultiNetwork:
                          default: false
                          description: |-
                            disableMultiNetwork when set to true disables the Multus CNI plugin and related components
                            in the hosted cluster. This prevents the installation of multus daemon sets in the
                            guest cluster and the multus-admission-controller in the management cluster.
                            Default is false (Multus is enabled).
                            This field is immutable.
                            This field can only be set to true when NetworkType is "Other". Setting it to true
                            with any other NetworkType will result in a validation error during cluster creation.
                          type: boolean
                          x-kubernetes-validations:
                            - message: disableMultiNetwork is immutable
                              rule: self == oldSelf
                        ovnKubernetesConfig:
                          description: |-
                            ovnKubernetesConfig holds OVN-Kubernetes specific configuration.
                            This is only consumed when NetworkType is OVNKubernetes.
                          minProperties: 1
                          properties:
                            ipv4:
                              description: |-
                                ipv4 allows users to configure IP settings for IPv4 connections. When omitted,
                                this means no opinions and the default configuration is used. Check individual
                                fields within ipv4 for details of default values.
                              minProperties: 1
                              properties:
                                internalJoinSubnet:
                                  description: |-
                                    internalJoinSubnet is a v4 subnet used internally by ovn-kubernetes in case the
                                    default one is being already used by something else. It must not overlap with
                                    any other subnet being used by OpenShift or by the node network. The size of the
                                    subnet must be larger than the number of nodes.
                                    The current default value is 100.64.0.0/16
                                    The subnet must be large enough to accommodate one IP per node in your cluster
                                    The value must be in proper IPV4 CIDR format
                                  maxLength: 18
                                  minLength: 9
                                  type: string
                                  x-kubernetes-validations:
                                    - message: Subnet must be in a valid IPv4 CIDR format (e.g., 192.168.1.1/24)
                                      rule: self.matches('^([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$') && self.split('/')[0].split('.').all(oct, int(oct) >= 0 && int(oct) <= 255)
                                    - message: subnet must be in the range /0 to /30 inclusive
                                      rule: self.matches('^.*/[0-9]+$') && int(self.split('/')[1]) <= 30
                                    - message: first IP address octet must not be 0
                                      rule: self.matches('^[0-9]{1,3}\\..*') && int(self.split('/')[0].split('.')[0]) > 0
                                internalTransitSwitchSubnet:
                                  description: |-
                                    internalTransitSwitchSubnet is a v4 subnet in IPV4 CIDR format used internally
                                    by OVN-Kubernetes for the distributed transit switch in the OVN Interconnect
                                    architecture that connects the cluster routers on each node together to enable
                                    east west traffic. The subnet chosen should not overlap with other networks
                                    specified for OVN-Kubernetes as well as other networks used on the host.
                                    When omitted, this means no opinion and the platform is left to choose a reasonable
                                    default which is subject to change over time.
                                    The current default subnet is 100.88.0.0/16
                                    The subnet must be large enough to accommodate one IP per node in your cluster
                                    The value must be in proper IPV4 CIDR format
                                  maxLength: 18
                                  minLength: 9
                                  type: string
                                  x-kubernetes-validations:
                                    - message: Subnet must be in a valid IPv4 CIDR format
                                      rule: self.matches('^([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$') && self.split('/')[0].split('.').all(oct, int(oct) >= 0 && int(oct) <= 255)
                                    - message: subnet must be in the range /0 to /30 inclusive
                                      rule: self.matches('^.*/[0-9]+$') && int(self.split('/')[1]) <= 30
                                    - message: first IP address octet must not be 0
                                      rule: self.matches('^[0-9]{1,3}\\..*') && int(self.split('/')[0].split('.')[0]) > 0
                              type: object
                          type: object
                          x-kubernetes-validations:
                            - message: internalJoinSubnet and internalTransitSwitchSubnet must not be the same
                              rule: '!has(self.ipv4) || !has(self.ipv4.internalJoinSubnet) || !has(self.ipv4.internalTransitSwitchSubnet) || self.ipv4.internalJoinSubnet != self.ipv4.internalTransitSwitchSubnet'
                      type: object
                  type: object
                pausedUntil:
                  description: |-
                    pausedUntil is a field that can be used to pause reconciliation on the HostedCluster controller, resulting in any change to the HostedCluster being ignored.
                    Either a date can be provided in RFC3339 format or a boolean as in 'true', 'false', 'True', 'False'. If a date is
                    provided: reconciliation is paused on the resource until that date. If the boolean true is
                    provided: reconciliation is paused on the resource until the field is removed.
                  maxLength: 35
                  minLength: 4
                  type: string
                  x-kubernetes-validations:
                    - message: PausedUntil must be a date in RFC3339 format or 'True', 'true', 'False' or 'false'
                      rule: self.matches('^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.*$') || self in ['true', 'false', 'True', 'False']
                platform:
                  description: |-
                    platform specifies the underlying infrastructure provider for the cluster
                    and is used to configure platform specific behavior.
                  properties:
                    agent:
                      description: agent specifies configuration for agent-based installations.
                      properties:
                        agentNamespace:
                          description: agentNamespace is the namespace where to search for Agents for this cluster
                          maxLength: 63
                          type: string
                      required:
                        - agentNamespace
                      type: object
                    aws:
                      description: aws specifies configuration for clusters running on Amazon Web Services.
                      properties:
                        additionalAllowedPrincipals:
                          description: |-
                            additionalAllowedPrincipals specifies a list of additional allowed principal ARNs
                            to be added to the hosted control plane's VPC Endpoint Service to enable additional
                            VPC Endpoint connection requests to be automatically accepted.
                            See https://docs.aws.amazon.com/vpc/latest/privatelink/configure-endpoint-service.html
                            for more details around VPC Endpoint Service allowed principals.
                          items:
                            maxLength: 255
                            type: string
                          maxItems: 25
                          type: array
                        cloudProviderConfig:
                          description: |-
                            cloudProviderConfig specifies AWS networking configuration for the control
                            plane.
                            This is mainly used for cloud provider controller config:
                            https://github.com/kubernetes/kubernetes/blob/f5be5052e3d0808abb904aebd3218fe4a5c2dd82/staging/src/k8s.io/legacy-cloud-providers/aws/aws.go#L1347-L1364
                          properties:
                            subnet:
                              description: subnet is the subnet to use for control plane cloud resources.
                              properties:
                                filters:
                                  description: |-
                                    filters is a set of key/value pairs used to identify a resource
                                    They are applied according to the rules defined by the AWS API:
                                    https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                                  items:
                                    description: Filter is a filter used to identify an AWS resource
                                    properties:
                                      name:
                                        description: name is the name of the filter.
                                        maxLength: 255
                                        type: string
                                      values:
                                        description: values is a list of values for the filter.
                                        items:
                                          maxLength: 255
                                          type: string
                                        maxItems: 50
                                        type: array
                                    required:
                                      - name
                                      - values
                                    type: object
                                  maxItems: 50
                                  type: array
                                id:
                                  description: id of resource
                                  maxLength: 255
                                  type: string
                              type: object
                            vpc:
                              description: vpc is the VPC to use for control plane cloud resources.
                              maxLength: 255
                              type: string
                            zone:
                              description: |-
                                zone is the availability zone where control plane cloud resources are
                                created.
                              maxLength: 255
                              type: string
                          required:
                            - vpc
                          type: object
                        endpointAccess:
                          default: Public
                          description: |-
                            endpointAccess specifies the publishing scope of cluster endpoints. The
                            default is Public.
                          enum:
                            - Public
                            - PublicAndPrivate
                            - Private
                          type: string
                        multiArch:
                          default: false
                          description: |-
                            multiArch specifies whether the Hosted Cluster will be expected to support NodePools with different
                            CPU architectures, i.e., supporting arm64 NodePools and supporting amd64 NodePools on the same Hosted Cluster.
                            Deprecated: This field is no longer used. The HyperShift Operator now performs multi-arch validations
                            automatically despite the platform type. The HyperShift Operator will set HostedCluster.Status.PayloadArch based
                            on the HostedCluster release image. This field is used by the NodePool controller to validate the
                            NodePool.Spec.Arch is supported.
                          type: boolean
                        region:
                          description: |-
                            region is the AWS region in which the cluster resides. This configures the
                            OCP control plane cloud integrations, and is used by NodePool to resolve
                            the correct boot AMI for a given release.
                          maxLength: 255
                          type: string
                        resourceTags:
                          description: |-
                            resourceTags is a list of additional tags to apply to AWS resources created
                            for the cluster. See
                            https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for
                            information on tagging AWS resources. AWS supports a maximum of 50 tags per
                            resource. OpenShift reserves 25 tags for its use, leaving 25 tags available
                            for the user.
                            Changes to this field will be propagated in-place to AWS resources (VPC Endpoints, EC2 instances, initial EBS volumes and default/endpoint security groups).
                            These tags will be propagated to the infrastructure CR in the guest cluster, where other OCP operators might choose to honor this input to reconcile AWS resources created by them.
                            Please consult the official documentation for a list of all AWS resources that support in-place tag updates.
                            These take precedence over tags defined out of band (i.e., tags added manually or by other tools outside of HyperShift) in AWS in case of conflicts.
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources created for the cluster.
                            properties:
                              key:
                                description: key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: |-
                                  value is the value of the tag.

                                  Some AWS service do not support empty values. Since tags are added to
                                  resources in many services, the length of the tag value must meet the
                                  requirements of all services.
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                              - key
                              - value
                            type: object
                          maxItems: 25
                          type: array
                        rolesRef:
                          description: |-
                            rolesRef contains references to various AWS IAM roles required to enable
                            integrations such as OIDC.
                          properties:
                            controlPlaneOperatorARN:
                              description: "controlPlaneOperatorARN  is an ARN value referencing a role appropriate for the Control Plane Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateVpcEndpoint\",\n\t\t\t\t\"ec2:DescribeVpcEndpoints\",\n\t\t\t\t\"ec2:ModifyVpcEndpoint\",\n\t\t\t\t\"ec2:DeleteVpcEndpoints\",\n\t\t\t\t\"ec2:CreateTags\",\n\t\t\t\t\"route53:ListHostedZones\",\n\t\t\t\t\"ec2:CreateSecurityGroup\",\n\t\t\t\t\"ec2:AuthorizeSecurityGroupIngress\",\n\t\t\t\t\"ec2:AuthorizeSecurityGroupEgress\",\n\t\t\t\t\"ec2:DeleteSecurityGroup\",\n\t\t\t\t\"ec2:RevokeSecurityGroupIngress\",\n\t\t\t\t\"ec2:RevokeSecurityGroupEgress\",\n\t\t\t\t\"ec2:DescribeSecurityGroups\",\n\t\t\t\t\"ec2:DescribeVpcs\",\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"route53:ChangeResourceRecordSets\",\n\t\t\t\t\"route53:ListResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:route53:::%s\"\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                            imageRegistryARN:
                              description: "imageRegistryARN is an ARN value referencing a role appropriate for the Image Registry Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"s3:CreateBucket\",\n\t\t\t\t\"s3:DeleteBucket\",\n\t\t\t\t\"s3:PutBucketTagging\",\n\t\t\t\t\"s3:GetBucketTagging\",\n\t\t\t\t\"s3:PutBucketPublicAccessBlock\",\n\t\t\t\t\"s3:GetBucketPublicAccessBlock\",\n\t\t\t\t\"s3:PutEncryptionConfiguration\",\n\t\t\t\t\"s3:GetEncryptionConfiguration\",\n\t\t\t\t\"s3:PutLifecycleConfiguration\",\n\t\t\t\t\"s3:GetLifecycleConfiguration\",\n\t\t\t\t\"s3:GetBucketLocation\",\n\t\t\t\t\"s3:ListBucket\",\n\t\t\t\t\"s3:GetObject\",\n\t\t\t\t\"s3:PutObject\",\n\t\t\t\t\"s3:DeleteObject\",\n\t\t\t\t\"s3:ListBucketMultipartUploads\",\n\t\t\t\t\"s3:AbortMultipartUpload\",\n\t\t\t\t\"s3:ListMultipartUploadParts\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                            ingressARN:
                              description: "ingressARN is an ARN value referencing a role appropriate for the Ingress Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"elasticloadbalancing:DescribeLoadBalancers\",\n\t\t\t\t\"tag:GetResources\",\n\t\t\t\t\"route53:ListHostedZones\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"route53:ChangeResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:route53:::PUBLIC_ZONE_ID\",\n\t\t\t\t\"arn:aws:route53:::PRIVATE_ZONE_ID\"\n\t\t\t]\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                            kubeCloudControllerARN:
                              description: |-
                                kubeCloudControllerARN is an ARN value referencing a role appropriate for the KCM/KCC.
                                Source: https://cloud-provider-aws.sigs.k8s.io/prerequisites/#iam-policies

                                The following is an example of a valid policy document:

                                 {
                                 "Version": "2012-10-17",
                                 "Statement": [
                                   {
                                     "Action": [
                                       "autoscaling:DescribeAutoScalingGroups",
                                       "autoscaling:DescribeLaunchConfigurations",
                                       "autoscaling:DescribeTags",
                                       "ec2:DescribeAvailabilityZones",
                                       "ec2:DescribeInstances",
                                       "ec2:DescribeImages",
                                       "ec2:DescribeRegions",
                                       "ec2:DescribeRouteTables",
                                       "ec2:DescribeSecurityGroups",
                                       "ec2:DescribeSubnets",
                                       "ec2:DescribeVolumes",
                                       "ec2:CreateSecurityGroup",
                                       "ec2:CreateTags",
                                       "ec2:CreateVolume",
                                       "ec2:ModifyInstanceAttribute",
                                       "ec2:ModifyVolume",
                                       "ec2:AttachVolume",
                                       "ec2:AuthorizeSecurityGroupIngress",
                                       "ec2:CreateRoute",
                                       "ec2:DeleteRoute",
                                       "ec2:DeleteSecurityGroup",
                                       "ec2:DeleteVolume",
                                       "ec2:DetachVolume",
                                       "ec2:RevokeSecurityGroupIngress",
                                       "ec2:DescribeVpcs",
                                       "elasticloadbalancing:AddTags",
                                       "elasticloadbalancing:AttachLoadBalancerToSubnets",
                                       "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                                       "elasticloadbalancing:CreateLoadBalancer",
                                       "elasticloadbalancing:CreateLoadBalancerPolicy",
                                       "elasticloadbalancing:CreateLoadBalancerListeners",
                                       "elasticloadbalancing:ConfigureHealthCheck",
                                       "elasticloadbalancing:DeleteLoadBalancer",
                                       "elasticloadbalancing:DeleteLoadBalancerListeners",
                                       "elasticloadbalancing:DescribeLoadBalancers",
                                       "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                       "elasticloadbalancing:DetachLoadBalancerFromSubnets",
                                       "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                       "elasticloadbalancing:ModifyLoadBalancerAttributes",
                                       "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                       "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
                                       "elasticloadbalancing:AddTags",
                                       "elasticloadbalancing:CreateListener",
                                       "elasticloadbalancing:CreateTargetGroup",
                                       "elasticloadbalancing:DeleteListener",
                                       "elasticloadbalancing:DeleteTargetGroup",
                                       "elasticloadbalancing:DeregisterTargets",
                                       "elasticloadbalancing:DescribeListeners",
                                       "elasticloadbalancing:DescribeLoadBalancerPolicies",
                                       "elasticloadbalancing:DescribeTargetGroups",
                                       "elasticloadbalancing:DescribeTargetHealth",
                                       "elasticloadbalancing:ModifyListener",
                                       "elasticloadbalancing:ModifyTargetGroup",
                                       "elasticloadbalancing:RegisterTargets",
                                       "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
                                       "iam:CreateServiceLinkedRole",
                                       "kms:DescribeKey"
                                     ],
                                     "Resource": [
                                       "*"
                                     ],
                                     "Effect": "Allow"
                                   }
                                 ]
                                }
                              maxLength: 2048
                              type: string
                            networkARN:
                              description: "networkARN is an ARN value referencing a role appropriate for the Network Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DescribeInstances\",\n       \"ec2:DescribeInstanceStatus\",\n       \"ec2:DescribeInstanceTypes\",\n       \"ec2:UnassignPrivateIpAddresses\",\n       \"ec2:AssignPrivateIpAddresses\",\n       \"ec2:UnassignIpv6Addresses\",\n       \"ec2:AssignIpv6Addresses\",\n       \"ec2:DescribeSubnets\",\n       \"ec2:DescribeNetworkInterfaces\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                            nodePoolManagementARN:
                              description: "nodePoolManagementARN is an ARN value referencing a role appropriate for the CAPI Controller.\n\nThe following is an example of a valid policy document:\n\n{\n  \"Version\": \"2012-10-17\",\n \"Statement\": [\n   {\n     \"Action\": [\n       \"ec2:AssociateRouteTable\",\n       \"ec2:AttachInternetGateway\",\n       \"ec2:AuthorizeSecurityGroupIngress\",\n       \"ec2:CreateInternetGateway\",\n       \"ec2:CreateNatGateway\",\n       \"ec2:CreateRoute\",\n       \"ec2:CreateRouteTable\",\n       \"ec2:CreateSecurityGroup\",\n       \"ec2:CreateSubnet\",\n       \"ec2:CreateTags\",\n       \"ec2:DeleteInternetGateway\",\n       \"ec2:DeleteNatGateway\",\n       \"ec2:DeleteRouteTable\",\n       \"ec2:DeleteSecurityGroup\",\n       \"ec2:DeleteSubnet\",\n       \"ec2:DeleteTags\",\n       \"ec2:DescribeAccountAttributes\",\n       \"ec2:DescribeAddresses\",\n       \"ec2:DescribeAvailabilityZones\",\n       \"ec2:DescribeImages\",\n       \"ec2:DescribeInstances\",\n       \"ec2:DescribeInternetGateways\",\n       \"ec2:DescribeNatGateways\",\n       \"ec2:DescribeNetworkInterfaces\",\n       \"ec2:DescribeNetworkInterfaceAttribute\",\n       \"ec2:DescribeRouteTables\",\n       \"ec2:DescribeSecurityGroups\",\n       \"ec2:DescribeSubnets\",\n       \"ec2:DescribeVpcs\",\n       \"ec2:DescribeVpcAttribute\",\n       \"ec2:DescribeVolumes\",\n       \"ec2:DetachInternetGateway\",\n       \"ec2:DisassociateRouteTable\",\n       \"ec2:DisassociateAddress\",\n       \"ec2:ModifyInstanceAttribute\",\n       \"ec2:ModifyNetworkInterfaceAttribute\",\n       \"ec2:ModifySubnetAttribute\",\n       \"ec2:RevokeSecurityGroupIngress\",\n       \"ec2:RunInstances\",\n       \"ec2:TerminateInstances\",\n       \"tag:GetResources\",\n       \"ec2:CreateLaunchTemplate\",\n       \"ec2:CreateLaunchTemplateVersion\",\n       \"ec2:DescribeLaunchTemplates\",\n       \"ec2:DescribeLaunchTemplateVersions\",\n       \"ec2:DeleteLaunchTemplate\",\n       \"ec2:DeleteLaunchTemplateVersions\"\n     ],\n     \"Resource\": [\n       \"*\"\n     ],\n     \"Effect\": \"Allow\"\n   },\n   {\n     \"Condition\": {\n       \"StringLike\": {\n         \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n       }\n     },\n     \"Action\": [\n       \"iam:CreateServiceLinkedRole\"\n     ],\n     \"Resource\": [\n       \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"\n     ],\n     \"Effect\": \"Allow\"\n   },\n   {\n     \"Action\": [\n       \"iam:PassRole\"\n     ],\n     \"Resource\": [\n       \"arn:*:iam::*:role/*-worker-role\"\n     ],\n     \"Effect\": \"Allow\"\n   },\n\t  {\n\t  \t\"Effect\": \"Allow\",\n\t  \t\"Action\": [\n\t  \t\t\"kms:Decrypt\",\n\t  \t\t\"kms:ReEncrypt\",\n\t  \t\t\"kms:GenerateDataKeyWithoutPlainText\",\n\t  \t\t\"kms:DescribeKey\"\n\t  \t],\n\t  \t\"Resource\": \"*\"\n\t  },\n\t  {\n\t  \t\"Effect\": \"Allow\",\n\t  \t\"Action\": [\n\t  \t\t\"kms:CreateGrant\"\n\t  \t],\n\t  \t\"Resource\": \"*\",\n\t  \t\"Condition\": {\n\t  \t\t\"Bool\": {\n\t  \t\t\t\"kms:GrantIsForAWSResource\": true\n\t  \t\t}\n\t  \t}\n\t  }\n ]\n}"
                              maxLength: 2048
                              type: string
                            storageARN:
                              description: "storageARN is an ARN value referencing a role appropriate for the Storage Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:AttachVolume\",\n\t\t\t\t\"ec2:CreateSnapshot\",\n\t\t\t\t\"ec2:CreateTags\",\n\t\t\t\t\"ec2:CreateVolume\",\n\t\t\t\t\"ec2:DeleteSnapshot\",\n\t\t\t\t\"ec2:DeleteTags\",\n\t\t\t\t\"ec2:DeleteVolume\",\n\t\t\t\t\"ec2:DescribeInstances\",\n\t\t\t\t\"ec2:DescribeSnapshots\",\n\t\t\t\t\"ec2:DescribeTags\",\n\t\t\t\t\"ec2:DescribeVolumes\",\n\t\t\t\t\"ec2:DescribeVolumesModifications\",\n\t\t\t\t\"ec2:DetachVolume\",\n\t\t\t\t\"ec2:ModifyVolume\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                          required:
                            - controlPlaneOperatorARN
                            - imageRegistryARN
                            - ingressARN
                            - kubeCloudControllerARN
                            - networkARN
                            - nodePoolManagementARN
                            - storageARN
                          type: object
                        serviceEndpoints:
                          description: |-
                            serviceEndpoints specifies optional custom endpoints which will override
                            the default service endpoint of specific AWS Services.

                            There must be only one ServiceEndpoint for a given service name.
                          items:
                            description: |-
                              AWSServiceEndpoint stores the configuration for services to
                              override existing defaults of AWS Services.
                            properties:
                              name:
                                description: |-
                                  name is the name of the AWS service.
                                  This must be provided and cannot be empty.
                                maxLength: 255
                                type: string
                              url:
                                description: |-
                                  url is fully qualified URI with scheme https, that overrides the default generated
                                  endpoint for a client.
                                  This must be provided and cannot be empty.
                                maxLength: 2048
                                pattern: ^https://
                                type: string
                            required:
                              - name
                              - url
                            type: object
                          maxItems: 50
                          type: array
                        sharedVPC:
                          description: |-
                            sharedVPC contains fields that must be specified if the HostedCluster must use a VPC that is
                            created in a different AWS account and is shared with the AWS account where the HostedCluster
                            will be created.
                          properties:
                            localZoneID:
                              description: |-
                                localZoneID is the ID of the route53 hosted zone for [cluster-name].hypershift.local that is
                                associated with the HostedCluster's VPC and exists in the VPC owner account.
                              maxLength: 32
                              type: string
                            rolesRef:
                              description: |-
                                rolesRef contains references to roles in the VPC owner account that enable a
                                HostedCluster on a shared VPC.
                              properties:
                                controlPlaneARN:
                                  description: "controlPlaneARN is an ARN value referencing the role in the VPC owner account that allows\nthe control plane operator in the cluster account to create and manage a VPC endpoint, its\ncorresponding Security Group, and DNS records in the hypershift local hosted zone.\n\nThe referenced role must have a trust relationship that allows it to be assumed by the\ncontrol plane operator role in the VPC creator account.\nExample:\n{\n\t \"Version\": \"2012-10-17\",\n\t \"Statement\": [\n\t \t{\n\t \t\t\"Sid\": \"Statement1\",\n\t \t\t\"Effect\": \"Allow\",\n\t \t\t\"Principal\": {\n\t \t\t\t\"AWS\": \"arn:aws:iam::[cluster-creator-account-id]:role/[infra-id]-control-plane-operator\"\n\t \t\t},\n\t \t\t\"Action\": \"sts:AssumeRole\"\n\t \t}\n\t ]\n}\n\nThe following is an example of the policy document for this role.\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateVpcEndpoint\",\n\t\t\t\t\"ec2:DescribeVpcEndpoints\",\n\t\t\t\t\"ec2:ModifyVpcEndpoint\",\n\t\t\t\t\"ec2:DeleteVpcEndpoints\",\n\t\t\t\t\"ec2:CreateTags\",\n\t\t\t\t\"route53:ListHostedZones\",\n\t\t\t\t\"ec2:CreateSecurityGroup\",\n\t\t\t\t\"ec2:AuthorizeSecurityGroupIngress\",\n\t\t\t\t\"ec2:AuthorizeSecurityGroupEgress\",\n\t\t\t\t\"ec2:DeleteSecurityGroup\",\n\t\t\t\t\"ec2:RevokeSecurityGroupIngress\",\n\t\t\t\t\"ec2:RevokeSecurityGroupEgress\",\n\t\t\t\t\"ec2:DescribeSecurityGroups\",\n\t\t\t\t\"ec2:DescribeVpcs\",\n\t\t\t\t\"route53:ChangeResourceRecordSets\",\n\t\t\t\t\"route53:ListResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}"
                                  maxLength: 2048
                                  pattern: ^arn:(aws|aws-cn|aws-us-gov):iam::[0-9]{12}:role\/.*$
                                  type: string
                                ingressARN:
                                  description: "ingressARN is an ARN value referencing the role in the VPC owner account that allows the\ningress operator in the cluster account to create and manage records in the private DNS\nhosted zone.\n\nThe referenced role must have a trust relationship that allows it to be assumed by the\ningress operator role in the VPC creator account.\nExample:\n{\n\t \"Version\": \"2012-10-17\",\n\t \"Statement\": [\n\t \t{\n\t \t\t\"Sid\": \"Statement1\",\n\t \t\t\"Effect\": \"Allow\",\n\t \t\t\"Principal\": {\n\t \t\t\t\"AWS\": \"arn:aws:iam::[cluster-creator-account-id]:role/[infra-id]-openshift-ingress\"\n\t \t\t},\n\t \t\t\"Action\": \"sts:AssumeRole\"\n\t \t}\n\t ]\n}\n\nThe following is an example of the policy document for this role.\n(Based on https://docs.openshift.com/rosa/rosa_install_access_delete_clusters/rosa-shared-vpc-config.html#rosa-sharing-vpc-dns-and-roles_rosa-shared-vpc-config)\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"route53:ListHostedZones\",\n\t\t\t\t\"route53:ListHostedZonesByName\",\n\t\t\t\t\"route53:ChangeTagsForResource\",\n\t\t\t\t\"route53:GetAccountLimit\",\n\t\t\t\t\"route53:GetChange\",\n\t\t\t\t\"route53:GetHostedZone\",\n\t\t\t\t\"route53:ListTagsForResource\",\n\t\t\t\t\"route53:UpdateHostedZoneComment\",\n\t\t\t\t\"tag:GetResources\",\n\t\t\t\t\"tag:UntagResources\"\n\t\t\t\t\"route53:ChangeResourceRecordSets\",\n\t\t\t\t\"route53:ListResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t]\n}"
                                  maxLength: 2048
                                  pattern: ^arn:(aws|aws-cn|aws-us-gov):iam::[0-9]{12}:role\/.*$
                                  type: string
                              required:
                                - controlPlaneARN
                                - ingressARN
                              type: object
                          required:
                            - localZoneID
                            - rolesRef
                          type: object
                      required:
                        - region
                        - rolesRef
                      type: object
                    azure:
                      description: azure defines azure specific settings
                      properties:
                        azureAuthenticationConfig:
                          description: |-
                            azureAuthenticationConfig is the type of Azure authentication configuration to use to authenticate with Azure's
                            Cloud API.
                          properties:
                            azureAuthenticationConfigType:
                              description: |-
                                azureAuthenticationConfigType is the type of identity configuration used in the Hosted Cluster. This field is
                                used to determine which identity configuration is being used. Valid values are "ManagedIdentities" and
                                "WorkloadIdentities".
                              enum:
                                - ManagedIdentities
                                - WorkloadIdentities
                              type: string
                            managedIdentities:
                              description: |-
                                managedIdentities contains the managed identities needed for HCP control plane and data plane components that
                                authenticate with Azure's API.

                                These are required for managed Azure, also known as ARO HCP.
                              properties:
                                controlPlane:
                                  description: |-
                                    controlPlane contains the client IDs of all the managed identities on the HCP control plane needing to
                                    authenticate with Azure's API.
                                  properties:
                                    cloudProvider:
                                      description: |-
                                        cloudProvider is a pre-existing managed identity associated with the azure cloud provider, aka cloud controller
                                        manager.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    controlPlaneOperator:
                                      description: controlPlaneOperator is a pre-existing managed identity associated with the control plane operator.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    disk:
                                      description: disk is a pre-existing managed identity associated with the azure-disk-controller.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    file:
                                      description: file is a pre-existing managed identity associated with the azure-disk-controller.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    imageRegistry:
                                      description: imageRegistry is a pre-existing managed identity associated with the cluster-image-registry-operator.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    ingress:
                                      description: ingress is a pre-existing managed identity associated with the cluster-ingress-operator.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    managedIdentitiesKeyVault:
                                      description: |-
                                        managedIdentitiesKeyVault contains information on the management cluster's managed identities Azure Key Vault.
                                        This Key Vault is where the managed identities certificates are stored. These certificates are pulled out of the
                                        Key Vault by the Secrets Store CSI driver and mounted into a volume on control plane pods requiring
                                        authentication with Azure API.

                                        More information on how the Secrets Store CSI driver works to do this can be found here:
                                        https://learn.microsoft.com/en-us/azure/aks/csi-secrets-store-driver.
                                      properties:
                                        name:
                                          description: name is the name of the Azure Key Vault on the management cluster.
                                          maxLength: 255
                                          type: string
                                        tenantID:
                                          description: tenantID is the tenant ID of the Azure Key Vault on the management cluster.
                                          maxLength: 255
                                          type: string
                                      required:
                                        - name
                                        - tenantID
                                      type: object
                                    network:
                                      description: network is a pre-existing managed identity associated with the cluster-network-operator.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    nodePoolManagement:
                                      description: nodePoolManagement is a pre-existing managed identity associated with the operator managing the NodePools.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                  required:
                                    - cloudProvider
                                    - controlPlaneOperator
                                    - disk
                                    - file
                                    - ingress
                                    - managedIdentitiesKeyVault
                                    - network
                                    - nodePoolManagement
                                  type: object
                                dataPlane:
                                  description: |-
                                    dataPlane contains the client IDs of all the managed identities on the data plane needing to authenticate with
                                    Azure's API.
                                  properties:
                                    diskMSIClientID:
                                      description: diskMSIClientID is the client ID of a pre-existing managed identity ID associated with the CSI Disk driver.
                                      maxLength: 255
                                      type: string
                                    fileMSIClientID:
                                      description: fileMSIClientID is the client ID of a pre-existing managed identity ID associated with the CSI File driver.
                                      maxLength: 255
                                      type: string
                                    imageRegistryMSIClientID:
                                      description: |-
                                        imageRegistryMSIClientID is the client ID of a pre-existing managed identity ID associated with the image
                                        registry controller.
                                      maxLength: 255
                                      type: string
                                  required:
                                    - diskMSIClientID
                                    - fileMSIClientID
                                    - imageRegistryMSIClientID
                                  type: object
                              required:
                                - controlPlane
                                - dataPlane
                              type: object
                            workloadIdentities:
                              description: |-
                                workloadIdentities is a struct of client IDs for each component that needs to authenticate with Azure's API in
                                self-managed Azure. These client IDs are used to authenticate with Azure cloud on both the control plane and data
                                plane.

                                This is required for self-managed Azure.
                              properties:
                                cloudProvider:
                                  description: |-
                                    cloudProvider is the client ID of a federated managed identity, associated with azure-cloud-provider, used in
                                    workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                disk:
                                  description: |-
                                    disk is the client ID of a federated managed identity, associated with cluster-storage-operator-disk,
                                    used in workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                file:
                                  description: |-
                                    file is the client ID of a federated managed identity, associated with cluster-storage-operator-file,
                                    used in workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                imageRegistry:
                                  description: |-
                                    imageRegistry is the client ID of a federated managed identity, associated with cluster-image-registry-operator, used in
                                    workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                ingress:
                                  description: |-
                                    ingress is the client ID of a federated managed identity, associated with cluster-ingress-operator, used in
                                    workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                nodePoolManagement:
                                  description: |-
                                    nodePoolManagement is the client ID of a federated managed identity, associated with cluster-api-provider-azure, used
                                    in workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                              required:
                                - cloudProvider
                                - disk
                                - file
                                - imageRegistry
                                - ingress
                                - nodePoolManagement
                              type: object
                          required:
                            - azureAuthenticationConfigType
                          type: object
                          x-kubernetes-validations:
                            - message: managedIdentities is required when azureAuthenticationConfigType is ManagedIdentities, and forbidden otherwise
                              rule: 'self.azureAuthenticationConfigType == ''ManagedIdentities'' ? has(self.managedIdentities) : !has(self.managedIdentities)'
                            - message: workloadIdentities is required when azureAuthenticationConfigType is WorkloadIdentities, and forbidden otherwise
                              rule: 'self.azureAuthenticationConfigType == ''WorkloadIdentities'' ? has(self.workloadIdentities) : !has(self.workloadIdentities)'
                        cloud:
                          default: AzurePublicCloud
                          description: 'cloud is the cloud environment identifier, valid values could be found here: https://github.com/Azure/go-autorest/blob/4c0e21ca2bbb3251fe7853e6f9df6397f53dd419/autorest/azure/environments.go#L33'
                          enum:
                            - AzurePublicCloud
                            - AzureUSGovernmentCloud
                            - AzureChinaCloud
                            - AzureGermanCloud
                            - AzureStackCloud
                          type: string
                        location:
                          description: |-
                            location is the Azure region in where all the cloud infrastructure resources will be created.

                            Example: eastus
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: Location is immutable
                              rule: self == oldSelf
                        resourceGroup:
                          default: default
                          description: |-
                            resourceGroup is the name of an existing resource group where all cloud resources created by the Hosted
                            Cluster are to be placed. The resource group is expected to exist under the same subscription as SubscriptionID.

                            In ARO HCP, this will be the managed resource group where customer cloud resources will be created.

                            Resource group naming requirements can be found here: https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.ResourceGroup.Name/.

                            Example: if your resource group ID is /subscriptions/<subscriptionID>/resourceGroups/<resourceGroupName>, your
                                     ResourceGroupName is <resourceGroupName>.
                          maxLength: 90
                          pattern: ^[a-zA-Z0-9_()\-\.]{1,89}[a-zA-Z0-9_()\-]$
                          type: string
                          x-kubernetes-validations:
                            - message: ResourceGroupName is immutable
                              rule: self == oldSelf
                        securityGroupID:
                          description: |-
                            securityGroupID is the ID of an existing security group on the SubnetID. This field is provided as part of the
                            configuration for the Azure cloud provider, aka Azure cloud controller manager (CCM). This security group is
                            expected to exist under the same subscription as SubscriptionID.
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: SecurityGroupID is immutable
                              rule: self == oldSelf
                        subnetID:
                          description: |-
                            subnetID is the subnet ID of an existing subnet where the nodes in the nodepool will be created. This can be a
                            different subnet than the one listed in the HostedCluster, HostedCluster.Spec.Platform.Azure.SubnetID, but must
                            exist in the same network, HostedCluster.Spec.Platform.Azure.VnetID, and must exist under the same subscription ID,
                            HostedCluster.Spec.Platform.Azure.SubscriptionID.
                            subnetID is immutable once set.
                            The subnetID should be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}`.
                            The subscriptionId in the encryptionSetID must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                            The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis and must not end with a period (.) character.
                            The vnetName should be between 2 and 64 characters, consisting only of alphanumeric characters, hyphens, underscores and periods and must not end with either a period (.) or hyphen (-) character.
                            The subnetName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores and must start with an alphanumeric character and must not end with a period (.) or hyphen (-) character.
                          maxLength: 355
                          minLength: 1
                          type: string
                          x-kubernetes-validations:
                            - message: encryptionSetID must be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}`
                              rule: size(self.split('/')) == 11 && self.matches('^/subscriptions/.*/resourceGroups/.*/providers/Microsoft.Network/virtualNetworks/.*/subnets/.*$')
                            - message: The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis
                              rule: self.split('/')[4].matches('[a-zA-Z0-9-_\\(\\)\\.]{1,90}')
                            - message: the resourceGroupName in the subnetID must not end with a period (.) character
                              rule: '!self.split(''/'')[4].endsWith(''.'')'
                            - message: The vnetName should be between 2 and 64 characters, consisting only of alphanumeric characters, hyphens, underscores and periods
                              rule: self.split('/')[8].matches('[a-zA-Z0-9-_\\.]{2,64}')
                            - message: the vnetName in the subnetID must not end with either a period (.) or hyphen (-) character
                              rule: '!self.split(''/'')[8].endsWith(''.'') && !self.split(''/'')[8].endsWith(''-'')'
                            - message: The subnetName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores and must start with an alphanumeric character
                              rule: self.split('/')[10].matches('[a-zA-Z0-9][a-zA-Z0-9-_\\.]{0,79}')
                            - message: the subnetName in the subnetID must not end with a period (.) or hyphen (-) character
                              rule: '!self.split(''/'')[10].endsWith(''.'') && !self.split(''/'')[10].endsWith(''-'')'
                            - message: SubnetID is immutable
                              rule: self == oldSelf
                        subscriptionID:
                          description: subscriptionID is a unique identifier for an Azure subscription used to manage resources.
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: SubscriptionID is immutable
                              rule: self == oldSelf
                        tenantID:
                          description: tenantID is a unique identifier for the tenant where Azure resources will be created and managed in.
                          maxLength: 255
                          type: string
                        vnetID:
                          description: |-
                            vnetID is the ID of an existing VNET to use in creating VMs. The VNET can exist in a different resource group
                            other than the one specified in ResourceGroupName, but it must exist under the same subscription as
                            SubscriptionID.

                            In ARO HCP, this will be the ID of the customer provided VNET.

                            Example: /subscriptions/<subscriptionID>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/virtualNetworks/<vnetName>
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: VnetID is immutable
                              rule: self == oldSelf
                      required:
                        - azureAuthenticationConfig
                        - location
                        - resourceGroup
                        - securityGroupID
                        - subnetID
                        - subscriptionID
                        - tenantID
                        - vnetID
                      type: object
                    ibmcloud:
                      description: ibmcloud defines IBMCloud specific settings for components
                      properties:
                        providerType:
                          description: providerType is a specific supported infrastructure provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: kubevirt defines KubeVirt specific settings for cluster components.
                      properties:
                        baseDomainPassthrough:
                          description: |-
                            baseDomainPassthrough toggles whether or not an automatically
                            generated base domain for the guest cluster should be used that
                            is a subdomain of the management cluster's *.apps DNS.

                            For the KubeVirt platform, the basedomain can be autogenerated using
                            the *.apps domain of the management/infra hosting cluster
                            This makes the guest cluster's base domain a subdomain of the
                            hypershift infra/mgmt cluster's base domain.

                            Example:
                              Infra/Mgmt cluster's DNS
                                Base: example.com
                                Cluster: mgmt-cluster.example.com
                                Apps:    *.apps.mgmt-cluster.example.com
                              KubeVirt Guest cluster's DNS
                                Base: apps.mgmt-cluster.example.com
                                Cluster: guest.apps.mgmt-cluster.example.com
                                Apps: *.apps.guest.apps.mgmt-cluster.example.com

                            This is possible using OCP wildcard routes
                          type: boolean
                          x-kubernetes-validations:
                            - message: baseDomainPassthrough is immutable
                              rule: self == oldSelf
                        credentials:
                          description: |-
                            credentials defines the client credentials used when creating KubeVirt virtual machines.
                            Defining credentials is only necessary when the KubeVirt virtual machines are being placed
                            on a cluster separate from the one hosting the Hosted Control Plane components.

                            The default behavior when Credentials is not defined is for the KubeVirt VMs to be placed on
                            the same cluster and namespace as the Hosted Control Plane.
                          properties:
                            infraKubeConfigSecret:
                              description: |-
                                infraKubeConfigSecret is a reference to the secret containing the kubeconfig
                                of an external infrastructure cluster for kubevirt provider
                              properties:
                                key:
                                  description: key is the key in the secret containing the kubeconfig.
                                  maxLength: 255
                                  type: string
                                name:
                                  description: name is the name of the secret containing the kubeconfig.
                                  maxLength: 255
                                  type: string
                              required:
                                - key
                                - name
                              type: object
                              x-kubernetes-validations:
                                - message: infraKubeConfigSecret is immutable
                                  rule: self == oldSelf
                            infraNamespace:
                              description: |-
                                infraNamespace is the namespace in the external infrastructure cluster
                                where kubevirt resources will be created
                              maxLength: 255
                              type: string
                              x-kubernetes-validations:
                                - message: infraNamespace is immutable
                                  rule: self == oldSelf
                          required:
                            - infraNamespace
                          type: object
                        generateID:
                          description: |-
                            generateID is used to uniquely apply a name suffix to resources associated with
                            kubevirt infrastructure resources
                          maxLength: 11
                          type: string
                          x-kubernetes-validations:
                            - message: Kubevirt GenerateID is immutable once set
                              rule: self == oldSelf
                        storageDriver:
                          description: |-
                            storageDriver defines how the KubeVirt CSI driver exposes StorageClasses on
                            the infra cluster (hosting the VMs) to the guest cluster.
                          properties:
                            manual:
                              description: |-
                                manual is used to explicitly define how the infra storageclasses are
                                mapped to guest storageclasses
                              properties:
                                storageClassMapping:
                                  description: |-
                                    storageClassMapping maps StorageClasses on the infra cluster hosting
                                    the KubeVirt VMs to StorageClasses that are made available within the
                                    Guest Cluster.

                                    NOTE: It is possible that not all capabilities of an infra cluster's
                                    storageclass will be present for the corresponding guest clusters storageclass.
                                  items:
                                    properties:
                                      group:
                                        description: group contains which group this mapping belongs to.
                                        maxLength: 255
                                        type: string
                                      guestStorageClassName:
                                        description: |-
                                          guestStorageClassName is the name that the corresponding storageclass will
                                          be called within the guest cluster
                                        maxLength: 255
                                        type: string
                                      infraStorageClassName:
                                        description: |-
                                          infraStorageClassName is the name of the infra cluster storage class that
                                          will be exposed to the guest.
                                        maxLength: 255
                                        type: string
                                    required:
                                      - guestStorageClassName
                                      - infraStorageClassName
                                    type: object
                                  maxItems: 50
                                  type: array
                                  x-kubernetes-validations:
                                    - message: storageClassMapping is immutable
                                      rule: self == oldSelf
                                volumeSnapshotClassMapping:
                                  description: |-
                                    volumeSnapshotClassMapping maps VolumeSnapshotClasses on the infra cluster hosting
                                    the KubeVirt VMs to VolumeSnapshotClasses that are made available within the
                                    Guest Cluster.
                                  items:
                                    properties:
                                      group:
                                        description: group contains which group this mapping belongs to.
                                        maxLength: 255
                                        type: string
                                      guestVolumeSnapshotClassName:
                                        description: |-
                                          guestVolumeSnapshotClassName is the name that the corresponding volumeSnapshotClass will
                                          be called within the guest cluster
                                        maxLength: 255
                                        type: string
                                      infraVolumeSnapshotClassName:
                                        description: |-
                                          infraVolumeSnapshotClassName is the name of the infra cluster volume snapshot class that
                                          will be exposed to the guest.
                                        maxLength: 255
                                        type: string
                                    required:
                                      - guestVolumeSnapshotClassName
                                      - infraVolumeSnapshotClassName
                                    type: object
                                  maxItems: 50
                                  type: array
                                  x-kubernetes-validations:
                                    - message: volumeSnapshotClassMapping is immutable
                                      rule: self == oldSelf
                              type: object
                              x-kubernetes-validations:
                                - message: storageDriver.Manual is immutable
                                  rule: self == oldSelf
                            type:
                              default: Default
                              description: type represents the type of kubevirt csi driver configuration to use
                              enum:
                                - None
                                - Default
                                - Manual
                              type: string
                              x-kubernetes-validations:
                                - message: storageDriver.Type is immutable
                                  rule: self == oldSelf
                          type: object
                          x-kubernetes-validations:
                            - message: storageDriver is immutable
                              rule: self == oldSelf
                      type: object
                      x-kubernetes-validations:
                        - message: Kubevirt GenerateID is required once set
                          rule: '!has(oldSelf.generateID) || has(self.generateID)'
                    powervs:
                      description: |-
                        powervs specifies configuration for clusters running on IBMCloud Power VS Service.
                        This field is immutable. Once set, It can't be changed.
                      properties:
                        accountID:
                          description: |-
                            accountID is the IBMCloud account id.
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                        cisInstanceCRN:
                          description: |-
                            cisInstanceCRN is the IBMCloud CIS Service Instance's Cloud Resource Name
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          pattern: '^crn:'
                          type: string
                        imageRegistryOperatorCloudCreds:
                          description: |-
                            imageRegistryOperatorCloudCreds is a reference to a secret containing ibm cloud
                            credentials for image registry operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        ingressOperatorCloudCreds:
                          description: |-
                            ingressOperatorCloudCreds is a reference to a secret containing ibm cloud
                            credentials for ingress operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        kubeCloudControllerCreds:
                          description: |
                            kubeCloudControllerCreds is a reference to a secret containing cloud
                            credentials with permissions matching the cloud controller policy.
                            This field is immutable. Once set, It can't be changed.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodePoolManagementCreds:
                          description: |
                            nodePoolManagementCreds is a reference to a secret containing cloud
                            credentials with permissions matching the node pool management policy.
                            This field is immutable. Once set, It can't be changed.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        region:
                          description: |-
                            region is the IBMCloud region in which the cluster resides. This configures the
                            OCP control plane cloud integrations, and is used by NodePool to resolve
                            the correct boot image for a given release.
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                        resourceGroup:
                          description: |-
                            resourceGroup is the IBMCloud Resource Group in which the cluster resides.
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                        serviceInstanceID:
                          description: |-
                            serviceInstanceID is the reference to the Power VS service on which the server instance(VM) will be created.
                            Power VS service is a container for all Power VS instances at a specific geographic region.
                            serviceInstance can be created via IBM Cloud catalog or CLI.
                            ServiceInstanceID is the unique identifier that can be obtained from IBM Cloud UI or IBM Cloud cli.

                            More detail about Power VS service instance.
                            https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server

                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                        storageOperatorCloudCreds:
                          description: |-
                            storageOperatorCloudCreds is a reference to a secret containing ibm cloud
                            credentials for storage operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        subnet:
                          description: |-
                            subnet is the subnet to use for control plane cloud resources.
                            This field is immutable. Once set, It can't be changed.
                          properties:
                            id:
                              description: id of resource
                              maxLength: 255
                              type: string
                            name:
                              description: name of resource
                              maxLength: 255
                              type: string
                          type: object
                        vpc:
                          description: |-
                            vpc specifies IBM Cloud PowerVS Load Balancing configuration for the control
                            plane.
                            This field is immutable. Once set, It can't be changed.
                          properties:
                            name:
                              description: |-
                                name for VPC to used for all the service load balancer.
                                This field is immutable. Once set, It can't be changed.
                              maxLength: 255
                              type: string
                            region:
                              description: |-
                                region is the IBMCloud region in which VPC gets created, this VPC used for all the ingress traffic
                                into the OCP cluster.
                                This field is immutable. Once set, It can't be changed.
                              maxLength: 255
                              type: string
                            subnet:
                              description: |-
                                subnet is the subnet to use for load balancer.
                                This field is immutable. Once set, It can't be changed.
                              maxLength: 255
                              type: string
                            zone:
                              description: |-
                                zone is the availability zone where load balancer cloud resources are
                                created.
                                This field is immutable. Once set, It can't be changed.
                              maxLength: 255
                              type: string
                          required:
                            - name
                            - region
                          type: object
                        zone:
                          description: |-
                            zone is the availability zone where control plane cloud resources are
                            created.
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                      required:
                        - accountID
                        - cisInstanceCRN
                        - imageRegistryOperatorCloudCreds
                        - ingressOperatorCloudCreds
                        - kubeCloudControllerCreds
                        - nodePoolManagementCreds
                        - region
                        - resourceGroup
                        - serviceInstanceID
                        - storageOperatorCloudCreds
                        - subnet
                        - vpc
                        - zone
                      type: object
                    type:
                      description: type is the type of infrastructure provider for the cluster.
                      enum:
                        - AWS
                        - Azure
                        - IBMCloud
                        - KubeVirt
                        - Agent
                        - PowerVS
                        - None
                      maxLength: 100
                      type: string
                      x-kubernetes-validations:
                        - message: Type is immutable
                          rule: self == oldSelf
                  required:
                    - type
                  type: object
                pullSecret:
                  description: |-
                    pullSecret is a local reference to a Secret that must have a ".dockerconfigjson" key whose content must be a valid Openshift pull secret JSON.
                    If the reference is set but none of the above requirements are met, the HostedCluster will enter a degraded state.
                    This pull secret will be part of every payload generated by the controllers for any NodePool of the HostedCluster
                    and it will be injected into the container runtime of all NodePools.
                    Changing this value will trigger a rollout for all existing NodePools in the cluster.
                    Changing the content of the secret inplace will not trigger a rollout and might result in unpredictable behaviour.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                release:
                  description: |-
                    release specifies the desired OCP release payload for all the hosted cluster components.
                    This includes those components running management side like the Kube API Server and the CVO but also the operands which land in the hosted cluster data plane like the ingress controller, ovn agents, etc.
                    The maximum and minimum supported release versions are determined by the running Hypersfhit Operator.
                    Attempting to use an unsupported version will result in the HostedCluster being degraded and the validateReleaseImage condition being false.
                    Attempting to use a release with a skew against a NodePool release bigger than N-2 for the y-stream will result in leaving the NodePool in an unsupported state.
                    Changing this field will trigger a rollout of the control plane components.
                    The behavior of the rollout will be driven by the ControllerAvailabilityPolicy and InfrastructureAvailabilityPolicy for PDBs and maxUnavailable and surce policies.
                  properties:
                    image:
                      description: |-
                        image is the image pullspec of an OCP release payload image.
                        See https://quay.io/repository/openshift-release-dev/ocp-release?tab=tags for a list of available images.
                      maxLength: 253
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                        - message: Image must start with a word character (letters, digits, or underscores) and contain no white spaces
                          rule: self.matches('^(\\w+\\S+)$')
                  required:
                    - image
                  type: object
                secretEncryption:
                  description: |-
                    secretEncryption specifies a Kubernetes secret encryption strategy for the
                    control plane.
                  properties:
                    aescbc:
                      description: aescbc defines metadata about the AESCBC secret encryption strategy
                      properties:
                        activeKey:
                          description: activeKey defines the active key used to encrypt new secrets
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        backupKey:
                          description: |-
                            backupKey defines the old key during the rotation process so previously created
                            secrets can continue to be decrypted until they are all re-encrypted with the active key.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - activeKey
                      type: object
                    kms:
                      description: kms defines metadata about the kms secret encryption strategy
                      properties:
                        aws:
                          description: aws defines metadata about the configuration of the AWS KMS Secret Encryption provider
                          properties:
                            activeKey:
                              description: activeKey defines the active key used to encrypt new secrets
                              properties:
                                arn:
                                  description: arn is the Amazon Resource Name for the encryption key
                                  maxLength: 2048
                                  pattern: '^arn:'
                                  type: string
                              required:
                                - arn
                              type: object
                            auth:
                              description: auth defines metadata about the management of credentials used to interact with AWS KMS
                              properties:
                                awsKms:
                                  description: "awsKms is an ARN value referencing a role appropriate for managing the auth via the AWS KMS key.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n   \t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"kms:Encrypt\",\n\t\t\t\t\"kms:Decrypt\",\n\t\t\t\t\"kms:ReEncrypt*\",\n\t\t\t\t\"kms:GenerateDataKey*\",\n\t\t\t\t\"kms:DescribeKey\"\n\t\t\t],\n\t\t\t\"Resource\": %q\n\t\t}\n\t]\n}"
                                  maxLength: 2048
                                  type: string
                              required:
                                - awsKms
                              type: object
                            backupKey:
                              description: |-
                                backupKey defines the old key during the rotation process so previously created
                                secrets can continue to be decrypted until they are all re-encrypted with the active key.
                              properties:
                                arn:
                                  description: arn is the Amazon Resource Name for the encryption key
                                  maxLength: 2048
                                  pattern: '^arn:'
                                  type: string
                              required:
                                - arn
                              type: object
                            region:
                              description: region contains the AWS region
                              maxLength: 255
                              type: string
                          required:
                            - activeKey
                            - auth
                            - region
                          type: object
                        azure:
                          description: azure defines metadata about the configuration of the Azure KMS Secret Encryption provider using Azure key vault
                          properties:
                            activeKey:
                              description: activeKey defines the active key used to encrypt new secrets
                              properties:
                                keyName:
                                  description: keyName is the name of the keyvault key used for encrypt/decrypt
                                  maxLength: 255
                                  type: string
                                keyVaultName:
                                  description: |-
                                    keyVaultName is the name of the keyvault. Must match criteria specified at https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name
                                    Your Microsoft Entra application used to create the cluster must be authorized to access this keyvault, e.g using the AzureCLI:
                                    `az keyvault set-policy -n $KEYVAULT_NAME --key-permissions decrypt encrypt --spn <YOUR APPLICATION CLIENT ID>`
                                  maxLength: 255
                                  type: string
                                keyVersion:
                                  description: keyVersion contains the version of the key to use
                                  maxLength: 255
                                  type: string
                              required:
                                - keyName
                                - keyVaultName
                                - keyVersion
                              type: object
                            backupKey:
                              description: |-
                                backupKey defines the old key during the rotation process so previously created
                                secrets can continue to be decrypted until they are all re-encrypted with the active key.
                              properties:
                                keyName:
                                  description: keyName is the name of the keyvault key used for encrypt/decrypt
                                  maxLength: 255
                                  type: string
                                keyVaultName:
                                  description: |-
                                    keyVaultName is the name of the keyvault. Must match criteria specified at https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name
                                    Your Microsoft Entra application used to create the cluster must be authorized to access this keyvault, e.g using the AzureCLI:
                                    `az keyvault set-policy -n $KEYVAULT_NAME --key-permissions decrypt encrypt --spn <YOUR APPLICATION CLIENT ID>`
                                  maxLength: 255
                                  type: string
                                keyVersion:
                                  description: keyVersion contains the version of the key to use
                                  maxLength: 255
                                  type: string
                              required:
                                - keyName
                                - keyVaultName
                                - keyVersion
                              type: object
                            kms:
                              description: kms is a pre-existing managed identity used to authenticate with Azure KMS.
                              properties:
                                clientID:
                                  description: |-
                                    clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                    mainly used for CI purposes.
                                  maxLength: 36
                                  minLength: 36
                                  pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                  type: string
                                  x-kubernetes-validations:
                                    - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                      rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                credentialsSecretName:
                                  description: |-
                                    credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                    format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                    ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                    More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                    credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                    credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                  maxLength: 127
                                  minLength: 1
                                  pattern: ^[a-zA-Z0-9-]+$
                                  type: string
                                objectEncoding:
                                  allOf:
                                    - enum:
                                        - utf-8
                                        - hex
                                        - base64
                                    - enum:
                                        - utf-8
                                        - hex
                                        - base64
                                  default: utf-8
                                  description: |-
                                    objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                    the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                    Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                    unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                    SecretProviderClass custom resource related to the managed identity.

                                    The default value is utf-8.

                                    See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                  type: string
                              required:
                                - credentialsSecretName
                                - objectEncoding
                              type: object
                          required:
                            - activeKey
                            - kms
                          type: object
                        ibmcloud:
                          description: ibmcloud defines metadata for the IBM Cloud KMS encryption strategy
                          properties:
                            auth:
                              description: auth defines metadata for how authentication is done with IBM Cloud KMS
                              properties:
                                managed:
                                  description: |-
                                    managed defines metadata around the service to service authentication strategy for the IBM Cloud
                                    KMS system (all provider managed).
                                  type: object
                                type:
                                  description: type defines the IBM Cloud KMS authentication strategy
                                  enum:
                                    - Managed
                                    - Unmanaged
                                  type: string
                                unmanaged:
                                  description: unmanaged defines the auth metadata the customer provides to interact with IBM Cloud KMS
                                  properties:
                                    credentials:
                                      description: |-
                                        credentials should reference a secret with a key field of IBMCloudIAMAPIKeySecretKey that contains a apikey to
                                        call IBM Cloud KMS APIs
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                    - credentials
                                  type: object
                              required:
                                - type
                              type: object
                            keyList:
                              description: keyList defines the list of keys used for data encryption
                              items:
                                description: IBMCloudKMSKeyEntry defines metadata for an IBM Cloud KMS encryption key
                                properties:
                                  correlationID:
                                    description: correlationID is an identifier used to track all api call usage from hypershift
                                    maxLength: 255
                                    type: string
                                  crkID:
                                    description: crkID is the customer rook key id
                                    maxLength: 255
                                    type: string
                                  instanceID:
                                    description: instanceID is the id for the key protect instance
                                    maxLength: 255
                                    type: string
                                  keyVersion:
                                    description: |-
                                      keyVersion is a unique number associated with the key. The number increments whenever a new
                                      key is enabled for data encryption.
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                  url:
                                    description: url is the url to call key protect apis over
                                    maxLength: 2048
                                    pattern: ^https://
                                    type: string
                                required:
                                  - correlationID
                                  - crkID
                                  - instanceID
                                  - keyVersion
                                  - url
                                type: object
                              maxItems: 100
                              type: array
                            region:
                              description: region is the IBM Cloud region
                              maxLength: 255
                              type: string
                          required:
                            - auth
                            - keyList
                            - region
                          type: object
                        provider:
                          description: provider defines the KMS provider
                          enum:
                            - IBMCloud
                            - AWS
                            - Azure
                          type: string
                      required:
                        - provider
                      type: object
                    type:
                      description: type defines the type of kube secret encryption being used
                      enum:
                        - kms
                        - aescbc
                      type: string
                  required:
                    - type
                  type: object
                serviceAccountSigningKey:
                  description: |-
                    serviceAccountSigningKey is a local reference to a secret that must have a "key" key whose content must be the private key
                    used by the service account token issuer.
                    If not specified, a service account signing key will
                    be generated automatically for the cluster.
                    When specifying a service account signing key, an IssuerURL must also be specified.
                    If the reference is set but none of the above requirements are met, the HostedCluster will enter a degraded state.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                services:
                  description: |-
                    services specifies how individual control plane services endpoints are published for consumption.
                    This requires APIServer;OAuthServer;Konnectivity;Ignition.
                    This field is immutable for all platforms but IBMCloud.
                    Max is 6 to account for OIDC;OVNSbDb for backward compatibility though they are no-op.

                    -kubebuilder:validation:XValidation:rule="self.all(s, !(s.service == 'APIServer' && s.servicePublishingStrategy.type == 'Route') || has(s.servicePublishingStrategy.route.hostname))",message="If serviceType is 'APIServer' and publishing strategy is 'Route', then hostname must be set"
                    -kubebuilder:validation:XValidation:rule="self.platform.type == 'IBMCloud' ? ['APIServer', 'OAuthServer', 'Konnectivity'].all(requiredType, self.exists(s, s.service == requiredType))",message="Services list must contain at least 'APIServer', 'OAuthServer', and 'Konnectivity' service types" : ['APIServer', 'OAuthServer', 'Konnectivity', 'Ignition'].all(requiredType, self.exists(s, s.service == requiredType))",message="Services list must contain at least 'APIServer', 'OAuthServer', 'Konnectivity', and 'Ignition' service types"
                    -kubebuilder:validation:XValidation:rule="self.filter(s, s.servicePublishingStrategy.type == 'Route' && has(s.servicePublishingStrategy.route) && has(s.servicePublishingStrategy.route.hostname)).all(x, self.filter(y, y.servicePublishingStrategy.type == 'Route' && (has(y.servicePublishingStrategy.route) && has(y.servicePublishingStrategy.route.hostname) && y.servicePublishingStrategy.route.hostname == x.servicePublishingStrategy.route.hostname)).size() <= 1)",message="Each route publishingStrategy 'hostname' must be unique within the Services list."
                    -kubebuilder:validation:XValidation:rule="self.filter(s, s.servicePublishingStrategy.type == 'NodePort' && has(s.servicePublishingStrategy.nodePort) && has(s.servicePublishingStrategy.nodePort.address) && has(s.servicePublishingStrategy.nodePort.port)).all(x, self.filter(y, y.servicePublishingStrategy.type == 'NodePort' && (has(y.servicePublishingStrategy.nodePort) && has(y.servicePublishingStrategy.nodePort.address) && y.servicePublishingStrategy.nodePort.address == x.servicePublishingStrategy.nodePort.address && has(y.servicePublishingStrategy.nodePort.port) && y.servicePublishingStrategy.nodePort.port == x.servicePublishingStrategy.nodePort.port )).size() <= 1)",message="Each nodePort publishingStrategy 'nodePort' and 'hostname' must be unique within the Services list."
                  items:
                    description: |-
                      ServicePublishingStrategyMapping specifies how individual control plane services endpoints are published for consumption.
                      This includes APIServer;OAuthServer;Konnectivity;Ignition.
                      If a given service is not present in this list, it will be exposed publicly by default.
                    properties:
                      service:
                        description: |-
                          service identifies the type of service being published.
                          It can be APIServer;OAuthServer;Konnectivity;Ignition
                          OVNSbDb;OIDC are no-op and kept for backward compatibility.
                          This field is immutable.
                        enum:
                          - APIServer
                          - OAuthServer
                          - OIDC
                          - Konnectivity
                          - Ignition
                          - OVNSbDb
                        type: string
                      servicePublishingStrategy:
                        description: servicePublishingStrategy specifies how to publish a service endpoint.
                        properties:
                          loadBalancer:
                            description: loadBalancer configures exposing a service using a dedicated LoadBalancer.
                            properties:
                              hostname:
                                description: |-
                                  hostname is the name of the DNS record that will be created pointing to the LoadBalancer and passed through to consumers of the service.
                                  If omitted, the value will be inferred from the corev1.Service Load balancer type .status.
                                maxLength: 253
                                minLength: 1
                                type: string
                                x-kubernetes-validations:
                                  - message: hostname must be a valid domain name (e.g., example.com)
                                    rule: self.matches('^(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}$')
                            type: object
                          nodePort:
                            description: nodePort configures exposing a service using a NodePort.
                            properties:
                              address:
                                description: address is the host/ip that the NodePort service is exposed over.
                                maxLength: 253
                                minLength: 1
                                type: string
                                x-kubernetes-validations:
                                  - message: address must be a valid hostname, IPv4, or IPv6 address
                                    rule: self.matches('^(([a-zA-Z0-9][-a-zA-Z0-9]*\\.)+[a-zA-Z]{2,}|localhost)$') || self.matches('^((\\d{1,3}\\.){3}\\d{1,3})$') || self.matches('^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$')
                              port:
                                description: |-
                                  port is the port of the NodePort service. If <=0, the port is dynamically
                                  assigned when the service is created.
                                format: int32
                                type: integer
                            required:
                              - address
                            type: object
                          route:
                            description: |-
                              route configures exposing a service using a Route through and an ingress controller behind a cloud Load Balancer.
                              The specifics of the setup are platform dependent.
                            properties:
                              hostname:
                                description: |-
                                  hostname is the name of the DNS record that will be created pointing to the Route and passed through to consumers of the service.
                                  If omitted, the value will be inferred from management ingress.Spec.Domain.
                                maxLength: 253
                                minLength: 1
                                type: string
                                x-kubernetes-validations:
                                  - message: hostname must be a valid domain name (e.g., example.com)
                                    rule: self.matches('^(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}$')
                            type: object
                          type:
                            description: |-
                              type is the publishing strategy used for the service.
                              It can be LoadBalancer;NodePort;Route;None;S3
                            enum:
                              - LoadBalancer
                              - NodePort
                              - Route
                              - None
                              - S3
                            type: string
                        required:
                          - type
                        type: object
                        x-kubernetes-validations:
                          - message: nodePort is required when type is NodePort, and forbidden otherwise
                            rule: 'self.type == ''NodePort'' ? has(self.nodePort) : !has(self.nodePort)'
                          - message: only route is allowed when type is Route, and forbidden otherwise
                            rule: 'self.type == ''Route'' ? !has(self.nodePort) && !has(self.loadBalancer) : !has(self.route)'
                          - message: only loadBalancer is required when type is LoadBalancer, and forbidden otherwise
                            rule: 'self.type == ''LoadBalancer'' ? !has(self.nodePort) && !has(self.route) : !has(self.loadBalancer)'
                          - message: None does not allowed any configuration for loadBalancer, nodePort, or route
                            rule: 'self.type == ''None'' ? !has(self.nodePort) && !has(self.route) && !has(self.loadBalancer) : true'
                          - message: S3 does not allowed any configuration for loadBalancer, nodePort, or route
                            rule: 'self.type == ''S3'' ? !has(self.nodePort) && !has(self.route) && !has(self.loadBalancer) : true'
                    required:
                      - service
                      - servicePublishingStrategy
                    type: object
                  maxItems: 6
                  type: array
                sshKey:
                  description: |-
                    sshKey is a local reference to a Secret that must have a "id_rsa.pub" key whose content must be the public part of 1..N SSH keys.
                    If the reference is set but none of the above requirements are met, the HostedCluster will enter a degraded state.
                    When sshKey is set, the controllers will generate a machineConfig with the sshAuthorizedKeys https://coreos.github.io/ignition/configuration-v3_2/ populated with this value.
                    This MachineConfig will be part of every payload generated by the controllers for any NodePool of the HostedCluster.
                    Changing this value will trigger a rollout for all existing NodePools in the cluster.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                tolerations:
                  description: tolerations when specified, define what custom tolerations are added to the hcp pods.
                  items:
                    description: |-
                      The pod this Toleration is attached to tolerates any taint that matches
                      the triple <key,value,effect> using the matching operator <operator>.
                    properties:
                      effect:
                        description: |-
                          Effect indicates the taint effect to match. Empty means match all taint effects.
                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: |-
                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                        type: string
                      operator:
                        description: |-
                          Operator represents a key's relationship to the value.
                          Valid operators are Exists and Equal. Defaults to Equal.
                          Exists is equivalent to wildcard for value, so that a pod can
                          tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: |-
                          TolerationSeconds represents the period of time the toleration (which must be
                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                          negative values will be treated as 0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: |-
                          Value is the taint value the toleration matches to.
                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                        type: string
                    type: object
                  maxItems: 25
                  type: array
                updateService:
                  description: |-
                    updateService may be used to specify the preferred upstream update service.
                    If omitted we will use the appropriate update service for the cluster and region.
                    This is used by the control plane operator to determine and signal the appropriate available upgrades in the hostedCluster.status.
                  type: string
                  x-kubernetes-validations:
                    - message: updateService must be a valid absolute URL
                      rule: isURL(self)
              required:
                - etcd
                - networking
                - platform
                - pullSecret
                - release
                - services
              type: object
              x-kubernetes-validations:
                - message: spec.services in body should have at least 4 items or 3 for IBMCloud
                  rule: 'self.platform.type == ''IBMCloud'' ? size(self.services) >= 3 : size(self.services) >= 4'
                - message: Services is immutable. Changes might result in unpredictable and disruptive behavior.
                  rule: 'self.platform.type != "IBMCloud" ? self.services == oldSelf.services : true'
                - message: Azure platform requires APIServer Route service with a hostname to be defined
                  rule: 'self.platform.type == "Azure" ? self.services.exists(s, s.service == "APIServer" && s.servicePublishingStrategy.type == "Route" && s.servicePublishingStrategy.route.hostname != "") : true'
                - message: Azure platform requires OAuthServer Route service with a hostname to be defined
                  rule: 'self.platform.type == "Azure" ? self.services.exists(s, s.service == "OAuthServer" && s.servicePublishingStrategy.type == "Route" && s.servicePublishingStrategy.route.hostname != "") : true'
                - message: Azure platform requires Konnectivity Route service with a hostname to be defined
                  rule: 'self.platform.type == "Azure" ? self.services.exists(s, s.service == "Konnectivity" && s.servicePublishingStrategy.type == "Route" && s.servicePublishingStrategy.route.hostname != "") : true'
                - message: Azure platform requires Ignition Route service with a hostname to be defined
                  rule: 'self.platform.type == "Azure" ? self.services.exists(s, s.service == "Ignition" && s.servicePublishingStrategy.type == "Route" && s.servicePublishingStrategy.route.hostname != "") : true'
                - message: If serviceAccountSigningKey is set, issuerURL must be set
                  rule: has(self.issuerURL) || !has(self.serviceAccountSigningKey)
                - message: APIServer loadBalancer hostname cannot be in ClusterConfiguration.apiserver.servingCerts.namedCertificates[]
                  rule: '!self.services.exists(s, s.service == ''APIServer'' && has(s.servicePublishingStrategy.loadBalancer) && s.servicePublishingStrategy.loadBalancer.hostname != "" && has(self.configuration) && has(self.configuration.apiServer) && self.configuration.apiServer.servingCerts.namedCertificates.exists(cert, cert.names.exists(n, n == s.servicePublishingStrategy.loadBalancer.hostname)))'
                - message: disableMultiNetwork can only be set to true when networkType is 'Other'
                  rule: '!has(self.operatorConfiguration) || !has(self.operatorConfiguration.clusterNetworkOperator) || !has(self.operatorConfiguration.clusterNetworkOperator.disableMultiNetwork) || !self.operatorConfiguration.clusterNetworkOperator.disableMultiNetwork || self.networking.networkType == ''Other'''
                - message: ovnKubernetesConfig is forbidden when networkType is not OVNKubernetes
                  rule: self.networking.networkType == 'OVNKubernetes' || !self.?operatorConfiguration.clusterNetworkOperator.ovnKubernetesConfig.hasValue()
            status:
              description: status is the latest observed status of the HostedCluster.
              properties:
                conditions:
                  description: |-
                    conditions represents the latest available observations of a control
                    plane's current state.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  maxItems: 100
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                controlPlaneEndpoint:
                  description: |-
                    controlPlaneEndpoint contains the endpoint information by which
                    external clients can access the control plane. This is populated
                    after the infrastructure is ready.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 255
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                customKubeconfig:
                  description: |-
                    customKubeconfig is a local secret reference to the external custom kubeconfig.
                    Once the hypershift operator sets this status field, it will generate a secret with the specified name containing a kubeconfig within the `HostedCluster` namespace.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                ignitionEndpoint:
                  description: |-
                    ignitionEndpoint is the endpoint injected in the ign config userdata.
                    It exposes the config for instances to become kubernetes nodes.
                  maxLength: 1024
                  type: string
                kubeadminPassword:
                  description: |-
                    kubeadminPassword is a reference to the secret that contains the initial
                    kubeadmin user password for the guest cluster.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                kubeconfig:
                  description: |-
                    kubeconfig is a reference to the secret containing the default kubeconfig
                    for the cluster.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                oauthCallbackURLTemplate:
                  description: |-
                    oauthCallbackURLTemplate contains a template for the URL to use as a callback
                    for identity providers. The [identity-provider-name] placeholder must be replaced
                    with the name of an identity provider defined on the HostedCluster.
                    This is populated after the infrastructure is ready.
                  maxLength: 1024
                  type: string
                payloadArch:
                  description: |-
                    payloadArch represents the CPU architecture type of the HostedCluster.Spec.Release.Image. The valid values are:
                    Multi, ARM64, AMD64, S390X, or PPC64LE.
                  enum:
                    - Multi
                    - ARM64
                    - AMD64
                    - PPC64LE
                    - S390X
                  type: string
                platform:
                  description: platform contains platform-specific status of the HostedCluster
                  properties:
                    aws:
                      description: aws contains platform-specific status for AWS
                      properties:
                        defaultWorkerSecurityGroupID:
                          description: |-
                            defaultWorkerSecurityGroupID is the ID of a security group created by
                            the control plane operator. It is always added to worker machines in
                            addition to any security groups specified in the NodePool.
                          maxLength: 255
                          type: string
                      type: object
                  type: object
                version:
                  description: |-
                    version is the status of the release version applied to the
                    HostedCluster.
                  properties:
                    availableUpdates:
                      description: |-
                        availableUpdates contains updates recommended for this
                        cluster. Updates which appear in conditionalUpdates but not in
                        availableUpdates may expose this cluster to known issues. This list
                        may be empty if no updates are recommended, if the update service
                        is unavailable, or if an invalid channel has been specified.
                      items:
                        description: Release represents an OpenShift release image and associated metadata.
                        properties:
                          channels:
                            description: |-
                              channels is the set of Cincinnati channels to which the release
                              currently belongs.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          image:
                            description: |-
                              image is a container image location that contains the update. When this
                              field is part of spec, image is optional if version is specified and the
                              availableUpdates field contains a matching version.
                            type: string
                          url:
                            description: |-
                              url contains information about this release. This URL is set by
                              the 'url' metadata property on a release or the metadata returned by
                              the update API and should be displayed as a link in user
                              interfaces. The URL field may not be set for test or nightly
                              releases.
                            type: string
                          version:
                            description: |-
                              version is a semantic version identifying the update version. When this
                              field is part of spec, version is optional if image is specified.
                            type: string
                        required:
                          - image
                          - version
                        type: object
                      maxItems: 100
                      nullable: true
                      type: array
                    conditionalUpdates:
                      description: |-
                        conditionalUpdates contains the list of updates that may be
                        recommended for this cluster if it meets specific required
                        conditions. Consumers interested in the set of updates that are
                        actually recommended for this cluster should use
                        availableUpdates. This list may be empty if no updates are
                        recommended, if the update service is unavailable, or if an empty
                        or invalid channel has been specified.
                      items:
                        description: |-
                          ConditionalUpdate represents an update which is recommended to some
                          clusters on the version the current cluster is reconciling, but which
                          may not be recommended for the current cluster.
                        properties:
                          conditions:
                            description: |-
                              conditions represents the observations of the conditional update's
                              current status. Known types are:
                              * Recommended, for whether the update is recommended for the current cluster.
                            items:
                              description: Condition contains details for one aspect of the current state of this API Resource.
                              properties:
                                lastTransitionTime:
                                  description: |-
                                    lastTransitionTime is the last time the condition transitioned from one status to another.
                                    This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                  format: date-time
                                  type: string
                                message:
                                  description: |-
                                    message is a human readable message indicating details about the transition.
                                    This may be an empty string.
                                  maxLength: 32768
                                  type: string
                                observedGeneration:
                                  description: |-
                                    observedGeneration represents the .metadata.generation that the condition was set based upon.
                                    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                    with respect to the current state of the instance.
                                  format: int64
                                  minimum: 0
                                  type: integer
                                reason:
                                  description: |-
                                    reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                    Producers of specific condition types may define expected values and meanings for this field,
                                    and whether the values are considered a guaranteed API.
                                    The value should be a CamelCase string.
                                    This field may not be empty.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                  type: string
                                status:
                                  description: status of the condition, one of True, False, Unknown.
                                  enum:
                                    - "True"
                                    - "False"
                                    - Unknown
                                  type: string
                                type:
                                  description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                              required:
                                - lastTransitionTime
                                - message
                                - reason
                                - status
                                - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                              - type
                            x-kubernetes-list-type: map
                          release:
                            description: release is the target of the update.
                            properties:
                              channels:
                                description: |-
                                  channels is the set of Cincinnati channels to which the release
                                  currently belongs.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              image:
                                description: |-
                                  image is a container image location that contains the update. When this
                                  field is part of spec, image is optional if version is specified and the
                                  availableUpdates field contains a matching version.
                                type: string
                              url:
                                description: |-
                                  url contains information about this release. This URL is set by
                                  the 'url' metadata property on a release or the metadata returned by
                                  the update API and should be displayed as a link in user
                                  interfaces. The URL field may not be set for test or nightly
                                  releases.
                                type: string
                              version:
                                description: |-
                                  version is a semantic version identifying the update version. When this
                                  field is part of spec, version is optional if image is specified.
                                type: string
                            required:
                              - image
                              - version
                            type: object
                          risks:
                            description: |-
                              risks represents the range of issues associated with
                              updating to the target release. The cluster-version
                              operator will evaluate all entries, and only recommend the
                              update if there is at least one entry and all entries
                              recommend the update.
                            items:
                              description: |-
                                ConditionalUpdateRisk represents a reason and cluster-state
                                for not recommending a conditional update.
                              properties:
                                matchingRules:
                                  description: |-
                                    matchingRules is a slice of conditions for deciding which
                                    clusters match the risk and which do not. The slice is
                                    ordered by decreasing precedence. The cluster-version
                                    operator will walk the slice in order, and stop after the
                                    first it can successfully evaluate. If no condition can be
                                    successfully evaluated, the update will not be recommended.
                                  items:
                                    description: |-
                                      ClusterCondition is a union of typed cluster conditions.  The 'type'
                                      property determines which of the type-specific properties are relevant.
                                      When evaluated on a cluster, the condition may match, not match, or
                                      fail to evaluate.
                                    properties:
                                      promql:
                                        description: promql represents a cluster condition based on PromQL.
                                        properties:
                                          promql:
                                            description: |-
                                              promql is a PromQL query classifying clusters. This query
                                              query should return a 1 in the match case and a 0 in the
                                              does-not-match case. Queries which return no time
                                              series, or which return values besides 0 or 1, are
                                              evaluation failures.
                                            type: string
                                        required:
                                          - promql
                                        type: object
                                      type:
                                        description: |-
                                          type represents the cluster-condition type. This defines
                                          the members and semantics of any additional properties.
                                        enum:
                                          - Always
                                          - PromQL
                                        type: string
                                    required:
                                      - type
                                    type: object
                                  minItems: 1
                                  type: array
                                  x-kubernetes-list-type: atomic
                                message:
                                  description: |-
                                    message provides additional information about the risk of
                                    updating, in the event that matchingRules match the cluster
                                    state. This is only to be consumed by humans. It may
                                    contain Line Feed characters (U+000A), which should be
                                    rendered as new lines.
                                  minLength: 1
                                  type: string
                                name:
                                  description: |-
                                    name is the CamelCase reason for not recommending a
                                    conditional update, in the event that matchingRules match the
                                    cluster state.
                                  minLength: 1
                                  type: string
                                url:
                                  description: url contains information about this risk.
                                  format: uri
                                  minLength: 1
                                  type: string
                              required:
                                - matchingRules
                                - message
                                - name
                                - url
                              type: object
                            minItems: 1
                            type: array
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                        required:
                          - release
                          - risks
                        type: object
                      maxItems: 100
                      type: array
                      x-kubernetes-list-type: atomic
                    desired:
                      description: |-
                        desired is the version that the cluster is reconciling towards.
                        If the cluster is not yet fully initialized desired will be set
                        with the information available, which may be an image or a tag.
                      properties:
                        channels:
                          description: |-
                            channels is the set of Cincinnati channels to which the release
                            currently belongs.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        image:
                          description: |-
                            image is a container image location that contains the update. When this
                            field is part of spec, image is optional if version is specified and the
                            availableUpdates field contains a matching version.
                          type: string
                        url:
                          description: |-
                            url contains information about this release. This URL is set by
                            the 'url' metadata property on a release or the metadata returned by
                            the update API and should be displayed as a link in user
                            interfaces. The URL field may not be set for test or nightly
                            releases.
                          type: string
                        version:
                          description: |-
                            version is a semantic version identifying the update version. When this
                            field is part of spec, version is optional if image is specified.
                          type: string
                      required:
                        - image
                        - version
                      type: object
                    history:
                      description: |-
                        history contains a list of the most recent versions applied to the cluster.
                        This value may be empty during cluster startup, and then will be updated
                        when a new update is being applied. The newest update is first in the
                        list and it is ordered by recency. Updates in the history have state
                        Completed if the rollout completed - if an update was failing or halfway
                        applied the state will be Partial. Only a limited amount of update history
                        is preserved.
                      items:
                        description: UpdateHistory is a single attempted update to the cluster.
                        properties:
                          acceptedRisks:
                            description: |-
                              acceptedRisks records risks which were accepted to initiate the update.
                              For example, it may menition an Upgradeable=False or missing signature
                              that was overriden via desiredUpdate.force, or an update that was
                              initiated despite not being in the availableUpdates set of recommended
                              update targets.
                            type: string
                          completionTime:
                            description: |-
                              completionTime, if set, is when the update was fully applied. The update
                              that is currently being applied will have a null completion time.
                              Completion time will always be set for entries that are not the current
                              update (usually to the started time of the next update).
                            format: date-time
                            nullable: true
                            type: string
                          image:
                            description: |-
                              image is a container image location that contains the update. This value
                              is always populated.
                            type: string
                          startedTime:
                            description: startedTime is the time at which the update was started.
                            format: date-time
                            type: string
                          state:
                            description: |-
                              state reflects whether the update was fully applied. The Partial state
                              indicates the update is not fully applied, while the Completed state
                              indicates the update was successfully rolled out at least once (all
                              parts of the update successfully applied).
                            type: string
                          verified:
                            description: |-
                              verified indicates whether the provided update was properly verified
                              before it was installed. If this is false the cluster may not be trusted.
                              Verified does not cover upgradeable checks that depend on the cluster
                              state at the time when the update target was accepted.
                            type: boolean
                          version:
                            description: |-
                              version is a semantic version identifying the update version. If the
                              requested image does not define a version, or if a failure occurs
                              retrieving the image, this value may be empty.
                            type: string
                        required:
                          - completionTime
                          - image
                          - startedTime
                          - state
                          - verified
                        type: object
                      type: array
                    observedGeneration:
                      description: |-
                        observedGeneration reports which version of the spec is being synced.
                        If this value is not equal to metadata.generation, then the desired
                        and conditions fields may represent a previous version.
                      format: int64
                      type: integer
                  required:
                    - availableUpdates
                    - desired
                    - observedGeneration
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: hostedcontrolplanes.hypershift.openshift.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: operator
          namespace: hypershift
          path: /convert
          port: 443
      conversionReviewVersions:
        - v1beta1
        - v1alpha1
  group: hypershift.openshift.io
  names:
    categories:
      - cluster-api
    kind: HostedControlPlane
    listKind: HostedControlPlaneList
    plural: hostedcontrolplanes
    shortNames:
      - hcp
      - hcps
    singular: hostedcontrolplane
  scope: Namespaced
  versions:
    - name: v1beta1
      schema:
        openAPIV3Schema:
          description: HostedControlPlane defines the desired state of HostedControlPlane
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the specification for the HostedControlPlane.
              properties:
                additionalTrustBundle:
                  description: additionalTrustBundle references a ConfigMap containing a PEM-encoded X.509 certificate bundle
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                auditWebhook:
                  description: |-
                    auditWebhook contains metadata for configuring an audit webhook
                    endpoint for a cluster to process cluster audit events. It references
                    a secret that contains the webhook information for the audit webhook endpoint.
                    It is a secret because if the endpoint has MTLS the kubeconfig will contain client
                    keys. This is currently only supported in IBM Cloud. The kubeconfig needs to be stored
                    in the secret with a secret key name that corresponds to the constant AuditWebhookKubeconfigKey.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                autoscaling:
                  description: |-
                    autoscaling specifies auto-scaling behavior that applies to all NodePools
                    associated with the control plane.
                  properties:
                    balancingIgnoredLabels:
                      description: |-
                        balancingIgnoredLabels sets "--balancing-ignore-label <label name>" flag on cluster-autoscaler for each listed label.
                        This option specifies labels that cluster autoscaler should ignore when considering node group similarity.
                        For example, if you have nodes with "topology.ebs.csi.aws.com/zone" label, you can add name of this label here
                        to prevent cluster autoscaler from splitting nodes into different node groups based on its value.

                        HyperShift automatically appends platform-specific balancing ignore labels:
                        - AWS: "lifecycle", "k8s.amazonaws.com/eniConfig", "topology.k8s.aws/zone-id"
                        - Azure: "agentpool", "kubernetes.azure.com/agentpool"
                        - Common:
                          - "hypershift.openshift.io/nodePool"
                          - "topology.ebs.csi.aws.com/zone"
                          - "topology.disk.csi.azure.com/zone"
                          - "ibm-cloud.kubernetes.io/worker-id"
                          - "vpc-block-csi-driver-labels"
                        These labels are added by default and do not need to be manually specified.
                      items:
                        maxLength: 317
                        type: string
                      maxItems: 64
                      type: array
                      x-kubernetes-validations:
                        - message: Each balancingIgnoredLabels item must be a valid label key
                          rule: self.all(l, l.matches('^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?[a-zA-Z0-9]([a-zA-Z0-9_.-]{0,61}[a-zA-Z0-9])?$'))
                    expanders:
                      description: |-
                        expanders guide the autoscaler in choosing node groups during scale-out.
                        Sets the order of expanders for scaling out node groups.
                        Options include:
                        * LeastWaste - selects the group with minimal idle CPU and memory after scaling.
                        * Priority - selects the group with the highest user-defined priority.
                        * Random - selects a group randomly.
                        If not specified, `[Priority, LeastWaste]` is the default.
                        Maximum of 3 expanders can be specified.
                      items:
                        description: ExpanderString contains the name of an expander to be used by the cluster autoscaler.
                        enum:
                          - LeastWaste
                          - Priority
                          - Random
                        type: string
                      maxItems: 3
                      minItems: 1
                      type: array
                    maxFreeDifferenceRatioPercent:
                      description: |-
                        maxFreeDifferenceRatioPercent sets the maximum difference ratio for free resources between similar node groups. This parameter controls how strict the similarity check is when comparing node groups for load balancing.
                        The value represents a percentage from 0 to 100.
                        When set to 0, this means node groups must have exactly the same free resources to be considered similar (no difference allowed).
                        When set to 100, this means node groups will be considered similar regardless of their free resource differences (any difference allowed).
                        A value between 0 and 100 represents the maximum allowed difference ratio for free resources between node groups to be considered similar.
                        When omitted, the autoscaler defaults to 10%.
                        This affects the "--max-free-difference-ratio" flag on cluster-autoscaler.
                      format: int32
                      maximum: 100
                      minimum: 0
                      type: integer
                    maxNodeProvisionTime:
                      description: |-
                        maxNodeProvisionTime is the maximum time to wait for node provisioning
                        before considering the provisioning to be unsuccessful, expressed as a Go
                        duration string. The default is 15 minutes.
                      maxLength: 100
                      pattern: ^([0-9]+(\.[0-9]+)?(ns|us|µs|ms|s|m|h))+$
                      type: string
                    maxNodesTotal:
                      description: |-
                        maxNodesTotal is the maximum allowable number of nodes for the Autoscaler scale out to be operational.
                        The autoscaler will not grow the cluster beyond this number.
                        If omitted, the autoscaler will not have a maximum limit.
                        number.
                      format: int32
                      minimum: 0
                      type: integer
                    maxPodGracePeriod:
                      description: |-
                        maxPodGracePeriod is the maximum seconds to wait for graceful pod
                        termination before scaling down a NodePool. The default is 600 seconds.
                      format: int32
                      minimum: 0
                      type: integer
                    podPriorityThreshold:
                      description: |-
                        podPriorityThreshold enables users to schedule "best-effort" pods, which
                        shouldn't trigger autoscaler actions, but only run when there are spare
                        resources available. The default is -10.

                        See the following for more details:
                        https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption
                      format: int32
                      type: integer
                    scaleDown:
                      description: |-
                        scaleDown configures the behavior of the Cluster Autoscaler scale down operation.
                        This field is only valid when scaling is set to ScaleUpAndScaleDown.
                      properties:
                        delayAfterAddSeconds:
                          description: |-
                            delayAfterAddSeconds sets how long after scale up the scale down evaluation resumes in seconds.
                            It must be between 0 and 86400 (24 hours).
                            When set to 0, this means scale down evaluation will resume immediately after scale up, without any delay.
                            When omitted, the autoscaler defaults to 600s (10 minutes).
                          format: int32
                          maximum: 86400
                          minimum: 0
                          type: integer
                        delayAfterDeleteSeconds:
                          description: |-
                            delayAfterDeleteSeconds sets how long after node deletion, scale down evaluation resumes, defaults to scan-interval.
                            It must be between 0 and 86400 (24 hours).
                            When set to 0, this means scale down evaluation will resume immediately after node deletion, without any delay.
                            When omitted, the autoscaler defaults to 0s.
                          format: int32
                          maximum: 86400
                          minimum: 0
                          type: integer
                        delayAfterFailureSeconds:
                          description: |-
                            delayAfterFailureSeconds sets how long after a scale down failure, scale down evaluation resumes.
                            It must be between 0 and 86400 (24 hours).
                            When set to 0, this means scale down evaluation will resume immediately after a scale down failure, without any delay.
                            When omitted, the autoscaler defaults to 180s (3 minutes).
                          format: int32
                          maximum: 86400
                          minimum: 0
                          type: integer
                        unneededDurationSeconds:
                          description: |-
                            unneededDurationSeconds establishes how long a node should be unneeded before it is eligible for scale down in seconds.
                            It must be between 0 and 86400 (24 hours).
                            When omitted, the autoscaler defaults to 600s (10 minutes).
                          format: int32
                          maximum: 86400
                          minimum: 0
                          type: integer
                        utilizationThresholdPercent:
                          description: |-
                            utilizationThresholdPercent determines the node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down.
                            The value represents a percentage from 0 to 100.
                            When set to 0, this means nodes will only be considered for scale down if they are completely idle (0% utilization).
                            When set to 100, this means nodes will be considered for scale down regardless of their utilization level.
                            A value between 0 and 100 represents the utilization threshold below which a node can be considered for scale down.
                            When omitted, the autoscaler defaults to 50%.
                          format: int32
                          maximum: 100
                          minimum: 0
                          type: integer
                      type: object
                    scaling:
                      default: ScaleUpAndScaleDown
                      description: |-
                        scaling defines the scaling behavior for the cluster autoscaler.
                        ScaleUpOnly means the autoscaler will only scale up nodes, never scale down.
                        ScaleUpAndScaleDown means the autoscaler will both scale up and scale down nodes.
                        When set to ScaleUpAndScaleDown, the scaleDown field can be used to configure scale down behavior.

                        Note: This field is only supported in OpenShift versions 4.19 and above.
                      enum:
                        - ScaleUpOnly
                        - ScaleUpAndScaleDown
                      type: string
                  type: object
                  x-kubernetes-validations:
                    - message: scaleDown can only be set when scaling is ScaleUpAndScaleDown
                      rule: 'self.scaling == ''ScaleUpAndScaleDown'' ? true : !has(self.scaleDown)'
                capabilities:
                  default: {}
                  description: |-
                    capabilities allows for disabling optional components at cluster install time.
                    This field is optional and once set cannot be changed.
                  properties:
                    disabled:
                      description: |-
                        disabled when specified, explicitly disables the specified capabilitíes on the hosted cluster.
                        Once set, this field cannot be changed.

                        Note: Disabling 'openshift-samples','Insights', 'Console', 'NodeTuning', 'Ingress' are only supported in OpenShift versions 4.20 and above.
                      items:
                        enum:
                          - ImageRegistry
                          - openshift-samples
                          - Insights
                          - baremetal
                          - Console
                          - NodeTuning
                          - Ingress
                        type: string
                      maxItems: 25
                      type: array
                      x-kubernetes-list-type: atomic
                      x-kubernetes-validations:
                        - message: Disabled is immutable. Changes might result in unpredictable and disruptive behavior.
                          rule: self == oldSelf
                        - message: Ingress capability can only be disabled if Console capability is also disabled
                          rule: '!self.exists(cap, cap == ''Ingress'') || self.exists(cap, cap == ''Console'')'
                    enabled:
                      description: |-
                        enabled when specified, explicitly enables the specified capabilitíes on the hosted cluster.
                        Once set, this field cannot be changed.
                      items:
                        enum:
                          - ImageRegistry
                          - openshift-samples
                          - Insights
                          - baremetal
                          - Console
                          - NodeTuning
                          - Ingress
                        type: string
                      maxItems: 25
                      type: array
                      x-kubernetes-list-type: atomic
                      x-kubernetes-validations:
                        - message: Enabled is immutable. Changes might result in unpredictable and disruptive behavior.
                          rule: self == oldSelf
                  type: object
                  x-kubernetes-validations:
                    - message: Capabilities is immutable. Changes might result in unpredictable and disruptive behavior.
                      rule: self == oldSelf
                    - message: Capabilities can not be both enabled and disabled at once.
                      rule: 'has(self.enabled) && has(self.disabled) ? self.enabled.all(e, !(e in self.disabled)) : true'
                channel:
                  description: |-
                    channel is an identifier for explicitly requesting that a non-default
                    set of updates be applied to this cluster. The default channel will be
                    contain stable updates that are appropriate for production clusters.
                  maxLength: 255
                  type: string
                clusterID:
                  description: |-
                    clusterID is the unique id that identifies the cluster externally.
                    Making it optional here allows us to keep compatibility with previous
                    versions of the control-plane-operator that have no knowledge of this
                    field.
                  maxLength: 255
                  type: string
                configuration:
                  description: |-
                    configuration embeds resources that correspond to the openshift configuration API:
                    https://docs.openshift.com/container-platform/4.7/rest_api/config_apis/config-apis-index.html
                  properties:
                    apiServer:
                      description: |-
                        apiServer holds configuration (like serving certificates, client CA and CORS domains)
                        shared by all API servers in the system, among them especially kube-apiserver
                        and openshift-apiserver.
                      properties:
                        additionalCORSAllowedOrigins:
                          description: |-
                            additionalCORSAllowedOrigins lists additional, user-defined regular expressions describing hosts for which the
                            API server allows access using the CORS headers. This may be needed to access the API and the integrated OAuth
                            server from JavaScript applications.
                            The values are regular expressions that correspond to the Golang regular expression language.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        audit:
                          default:
                            profile: Default
                          description: |-
                            audit specifies the settings for audit configuration to be applied to all OpenShift-provided
                            API servers in the cluster.
                          properties:
                            customRules:
                              description: |-
                                customRules specify profiles per group. These profile take precedence over the
                                top-level profile field if they apply. They are evaluation from top to bottom and
                                the first one that matches, applies.
                              items:
                                description: |-
                                  AuditCustomRule describes a custom rule for an audit profile that takes precedence over
                                  the top-level profile.
                                properties:
                                  group:
                                    description: group is a name of group a request user must be member of in order to this profile to apply.
                                    minLength: 1
                                    type: string
                                  profile:
                                    description: |-
                                      profile specifies the name of the desired audit policy configuration to be deployed to
                                      all OpenShift-provided API servers in the cluster.

                                      The following profiles are provided:
                                      - Default: the existing default policy.
                                      - WriteRequestBodies: like 'Default', but logs request and response HTTP payloads for
                                      write requests (create, update, patch).
                                      - AllRequestBodies: like 'WriteRequestBodies', but also logs request and response
                                      HTTP payloads for read requests (get, list).
                                      - None: no requests are logged at all, not even oauthaccesstokens and oauthauthorizetokens.

                                      If unset, the 'Default' profile is used as the default.
                                    enum:
                                      - Default
                                      - WriteRequestBodies
                                      - AllRequestBodies
                                      - None
                                    type: string
                                required:
                                  - group
                                  - profile
                                type: object
                              type: array
                              x-kubernetes-list-map-keys:
                                - group
                              x-kubernetes-list-type: map
                            profile:
                              default: Default
                              description: |-
                                profile specifies the name of the desired top-level audit profile to be applied to all requests
                                sent to any of the OpenShift-provided API servers in the cluster (kube-apiserver,
                                openshift-apiserver and oauth-apiserver), with the exception of those requests that match
                                one or more of the customRules.

                                The following profiles are provided:
                                - Default: default policy which means MetaData level logging with the exception of events
                                  (not logged at all), oauthaccesstokens and oauthauthorizetokens (both logged at RequestBody
                                  level).
                                - WriteRequestBodies: like 'Default', but logs request and response HTTP payloads for
                                write requests (create, update, patch).
                                - AllRequestBodies: like 'WriteRequestBodies', but also logs request and response
                                HTTP payloads for read requests (get, list).
                                - None: no requests are logged at all, not even oauthaccesstokens and oauthauthorizetokens.

                                Warning: It is not recommended to disable audit logging by using the `None` profile unless you
                                are fully aware of the risks of not logging data that can be beneficial when troubleshooting issues.
                                If you disable audit logging and a support situation arises, you might need to enable audit logging
                                and reproduce the issue in order to troubleshoot properly.

                                If unset, the 'Default' profile is used as the default.
                              enum:
                                - Default
                                - WriteRequestBodies
                                - AllRequestBodies
                                - None
                              type: string
                          type: object
                        clientCA:
                          description: |-
                            clientCA references a ConfigMap containing a certificate bundle for the signers that will be recognized for
                            incoming client certificates in addition to the operator managed signers. If this is empty, then only operator managed signers are valid.
                            You usually only have to set this if you have your own PKI you wish to honor client certificates from.
                            The ConfigMap must exist in the openshift-config namespace and contain the following required fields:
                            - ConfigMap.Data["ca-bundle.crt"] - CA bundle.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                        encryption:
                          description: encryption allows the configuration of encryption of resources at the datastore layer.
                          properties:
                            type:
                              description: |-
                                type defines what encryption type should be used to encrypt resources at the datastore layer.
                                When this field is unset (i.e. when it is set to the empty string), identity is implied.
                                The behavior of unset can and will change over time.  Even if encryption is enabled by default,
                                the meaning of unset may change to a different encryption type based on changes in best practices.

                                When encryption is enabled, all sensitive resources shipped with the platform are encrypted.
                                This list of sensitive resources can and will change over time.  The current authoritative list is:

                                  1. secrets
                                  2. configmaps
                                  3. routes.route.openshift.io
                                  4. oauthaccesstokens.oauth.openshift.io
                                  5. oauthauthorizetokens.oauth.openshift.io
                              enum:
                                - ""
                                - identity
                                - aescbc
                                - aesgcm
                              type: string
                          type: object
                        servingCerts:
                          description: |-
                            servingCert is the TLS cert info for serving secure traffic. If not specified, operator managed certificates
                            will be used for serving secure traffic.
                          properties:
                            namedCertificates:
                              description: |-
                                namedCertificates references secrets containing the TLS cert info for serving secure traffic to specific hostnames.
                                If no named certificates are provided, or no named certificates match the server name as understood by a client,
                                the defaultServingCertificate will be used.
                              items:
                                description: APIServerNamedServingCert maps a server DNS name, as understood by a client, to a certificate.
                                properties:
                                  names:
                                    description: |-
                                      names is a optional list of explicit DNS names (leading wildcards allowed) that should use this certificate to
                                      serve secure traffic. If no names are provided, the implicit names will be extracted from the certificates.
                                      Exact names trump over wildcard names. Explicit names defined here trump over extracted implicit names.
                                    items:
                                      type: string
                                    maxItems: 64
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  servingCertificate:
                                    description: |-
                                      servingCertificate references a kubernetes.io/tls type secret containing the TLS cert info for serving secure traffic.
                                      The secret must exist in the openshift-config namespace and contain the following required fields:
                                      - Secret.Data["tls.key"] - TLS private key.
                                      - Secret.Data["tls.crt"] - TLS certificate.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                type: object
                              maxItems: 32
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                        tlsSecurityProfile:
                          description: |-
                            tlsSecurityProfile specifies settings for TLS connections for externally exposed servers.

                            If unset, a default (which may change between releases) is chosen. Note that only Old,
                            Intermediate and Custom profiles are currently supported, and the maximum available
                            minTLSVersion is VersionTLS12.
                          properties:
                            custom:
                              description: |-
                                custom is a user-defined TLS security profile. Be extremely careful using a custom
                                profile as invalid configurations can be catastrophic. An example custom profile
                                looks like this:

                                  ciphers:

                                    - ECDHE-ECDSA-CHACHA20-POLY1305

                                    - ECDHE-RSA-CHACHA20-POLY1305

                                    - ECDHE-RSA-AES128-GCM-SHA256

                                    - ECDHE-ECDSA-AES128-GCM-SHA256

                                  minTLSVersion: VersionTLS11
                              nullable: true
                              properties:
                                ciphers:
                                  description: |-
                                    ciphers is used to specify the cipher algorithms that are negotiated
                                    during the TLS handshake.  Operators may remove entries their operands
                                    do not support.  For example, to use DES-CBC3-SHA  (yaml):

                                      ciphers:
                                        - DES-CBC3-SHA
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                minTLSVersion:
                                  description: |-
                                    minTLSVersion is used to specify the minimal version of the TLS protocol
                                    that is negotiated during the TLS handshake. For example, to use TLS
                                    versions 1.1, 1.2 and 1.3 (yaml):

                                      minTLSVersion: VersionTLS11

                                    NOTE: currently the highest minTLSVersion allowed is VersionTLS12
                                  enum:
                                    - VersionTLS10
                                    - VersionTLS11
                                    - VersionTLS12
                                    - VersionTLS13
                                  type: string
                              type: object
                            intermediate:
                              description: |-
                                intermediate is a TLS security profile based on:

                                https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29

                                and looks like this (yaml):

                                  ciphers:

                                    - TLS_AES_128_GCM_SHA256

                                    - TLS_AES_256_GCM_SHA384

                                    - TLS_CHACHA20_POLY1305_SHA256

                                    - ECDHE-ECDSA-AES128-GCM-SHA256

                                    - ECDHE-RSA-AES128-GCM-SHA256

                                    - ECDHE-ECDSA-AES256-GCM-SHA384

                                    - ECDHE-RSA-AES256-GCM-SHA384

                                    - ECDHE-ECDSA-CHACHA20-POLY1305

                                    - ECDHE-RSA-CHACHA20-POLY1305

                                    - DHE-RSA-AES128-GCM-SHA256

                                    - DHE-RSA-AES256-GCM-SHA384

                                  minTLSVersion: VersionTLS12
                              nullable: true
                              type: object
                            modern:
                              description: |-
                                modern is a TLS security profile based on:

                                https://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility

                                and looks like this (yaml):

                                  ciphers:

                                    - TLS_AES_128_GCM_SHA256

                                    - TLS_AES_256_GCM_SHA384

                                    - TLS_CHACHA20_POLY1305_SHA256

                                  minTLSVersion: VersionTLS13
                              nullable: true
                              type: object
                            old:
                              description: |-
                                old is a TLS security profile based on:

                                https://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility

                                and looks like this (yaml):

                                  ciphers:

                                    - TLS_AES_128_GCM_SHA256

                                    - TLS_AES_256_GCM_SHA384

                                    - TLS_CHACHA20_POLY1305_SHA256

                                    - ECDHE-ECDSA-AES128-GCM-SHA256

                                    - ECDHE-RSA-AES128-GCM-SHA256

                                    - ECDHE-ECDSA-AES256-GCM-SHA384

                                    - ECDHE-RSA-AES256-GCM-SHA384

                                    - ECDHE-ECDSA-CHACHA20-POLY1305

                                    - ECDHE-RSA-CHACHA20-POLY1305

                                    - DHE-RSA-AES128-GCM-SHA256

                                    - DHE-RSA-AES256-GCM-SHA384

                                    - DHE-RSA-CHACHA20-POLY1305

                                    - ECDHE-ECDSA-AES128-SHA256

                                    - ECDHE-RSA-AES128-SHA256

                                    - ECDHE-ECDSA-AES128-SHA

                                    - ECDHE-RSA-AES128-SHA

                                    - ECDHE-ECDSA-AES256-SHA384

                                    - ECDHE-RSA-AES256-SHA384

                                    - ECDHE-ECDSA-AES256-SHA

                                    - ECDHE-RSA-AES256-SHA

                                    - DHE-RSA-AES128-SHA256

                                    - DHE-RSA-AES256-SHA256

                                    - AES128-GCM-SHA256

                                    - AES256-GCM-SHA384

                                    - AES128-SHA256

                                    - AES256-SHA256

                                    - AES128-SHA

                                    - AES256-SHA

                                    - DES-CBC3-SHA

                                  minTLSVersion: VersionTLS10
                              nullable: true
                              type: object
                            type:
                              description: |-
                                type is one of Old, Intermediate, Modern or Custom. Custom provides
                                the ability to specify individual TLS security profile parameters.
                                Old, Intermediate and Modern are TLS security profiles based on:

                                https://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations

                                The profiles are intent based, so they may change over time as new ciphers are developed and existing ciphers
                                are found to be insecure.  Depending on precisely which ciphers are available to a process, the list may be
                                reduced.

                                Note that the Modern profile is currently not supported because it is not
                                yet well adopted by common software libraries.
                              enum:
                                - Old
                                - Intermediate
                                - Modern
                                - Custom
                              type: string
                          type: object
                      type: object
                    authentication:
                      description: |-
                        authentication specifies cluster-wide settings for authentication (like OAuth and
                        webhook token authenticators).
                      properties:
                        oauthMetadata:
                          description: |-
                            oauthMetadata contains the discovery endpoint data for OAuth 2.0
                            Authorization Server Metadata for an external OAuth server.
                            This discovery document can be viewed from its served location:
                            oc get --raw '/.well-known/oauth-authorization-server'
                            For further details, see the IETF Draft:
                            https://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2
                            If oauthMetadata.name is non-empty, this value has precedence
                            over any metadata reference stored in status.
                            The key "oauthMetadata" is used to locate the data.
                            If specified and the config map or expected key is not found, no metadata is served.
                            If the specified metadata is not valid, no metadata is served.
                            The namespace for this config map is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                        oidcProviders:
                          description: |-
                            oidcProviders are OIDC identity providers that can issue tokens
                            for this cluster
                            Can only be set if "Type" is set to "OIDC".

                            At most one provider can be configured.
                          items:
                            properties:
                              claimMappings:
                                description: |-
                                  claimMappings is an optional field that configures the rules to be used by
                                  the Kubernetes API server for translating claims in a JWT token, issued
                                  by the identity provider, to a cluster identity.
                                properties:
                                  groups:
                                    description: |-
                                      groups is an optional field that configures how the groups of a cluster identity
                                      should be constructed from the claims in a JWT token issued
                                      by the identity provider.
                                      When referencing a claim, if the claim is present in the JWT
                                      token, its value must be a list of groups separated by a comma (',').
                                      For example - '"example"' and '"exampleOne", "exampleTwo", "exampleThree"' are valid claim values.
                                    properties:
                                      claim:
                                        description: |-
                                          claim is a required field that configures the JWT token
                                          claim whose value is assigned to the cluster identity
                                          field associated with this mapping.
                                        type: string
                                      prefix:
                                        description: |-
                                          prefix is an optional field that configures the prefix that will be
                                          applied to the cluster identity attribute during the process of mapping
                                          JWT claims to cluster identity attributes.

                                          When omitted (""), no prefix is applied to the cluster identity attribute.

                                          Example: if `prefix` is set to "myoidc:" and the `claim` in JWT contains
                                          an array of strings "a", "b" and  "c", the mapping will result in an
                                          array of string "myoidc:a", "myoidc:b" and "myoidc:c".
                                        type: string
                                    required:
                                      - claim
                                    type: object
                                  username:
                                    description: |-
                                      username is an optional field that configures how the username of a cluster identity
                                      should be constructed from the claims in a JWT token issued by the identity provider.
                                    properties:
                                      claim:
                                        description: |-
                                          claim is a required field that configures the JWT token
                                          claim whose value is assigned to the cluster identity
                                          field associated with this mapping.
                                        type: string
                                      prefix:
                                        description: |-
                                          prefix configures the prefix that should be prepended to the value
                                          of the JWT claim.

                                          prefix must be set when prefixPolicy is set to 'Prefix' and must be unset otherwise.
                                        properties:
                                          prefixString:
                                            description: |-
                                              prefixString is a required field that configures the prefix that will
                                              be applied to cluster identity username attribute
                                              during the process of mapping JWT claims to cluster identity attributes.

                                              prefixString must not be an empty string ("").
                                            minLength: 1
                                            type: string
                                        required:
                                          - prefixString
                                        type: object
                                      prefixPolicy:
                                        description: |-
                                          prefixPolicy is an optional field that configures how a prefix should be
                                          applied to the value of the JWT claim specified in the 'claim' field.

                                          Allowed values are 'Prefix', 'NoPrefix', and omitted (not provided or an empty string).

                                          When set to 'Prefix', the value specified in the prefix field will be
                                          prepended to the value of the JWT claim.
                                          The prefix field must be set when prefixPolicy is 'Prefix'.

                                          When set to 'NoPrefix', no prefix will be prepended to the value
                                          of the JWT claim.

                                          When omitted, this means no opinion and the platform is left to choose
                                          any prefixes that are applied which is subject to change over time.
                                          Currently, the platform prepends `{issuerURL}#` to the value of the JWT claim
                                          when the claim is not 'email'.
                                          As an example, consider the following scenario:
                                             `prefix` is unset, `issuerURL` is set to `https://myoidc.tld`,
                                             the JWT claims include "username":"userA" and "email":"userA@myoidc.tld",
                                             and `claim` is set to:
                                             - "username": the mapped value will be "https://myoidc.tld#userA"
                                             - "email": the mapped value will be "userA@myoidc.tld"
                                        enum:
                                          - ""
                                          - NoPrefix
                                          - Prefix
                                        type: string
                                    required:
                                      - claim
                                    type: object
                                    x-kubernetes-validations:
                                      - message: prefix must be set if prefixPolicy is 'Prefix', but must remain unset otherwise
                                        rule: 'has(self.prefixPolicy) && self.prefixPolicy == ''Prefix'' ? (has(self.prefix) && size(self.prefix.prefixString) > 0) : !has(self.prefix)'
                                type: object
                              claimValidationRules:
                                description: |-
                                  claimValidationRules is an optional field that configures the rules to
                                  be used by the Kubernetes API server for validating the claims in a JWT
                                  token issued by the identity provider.

                                  Validation rules are joined via an AND operation.
                                items:
                                  properties:
                                    requiredClaim:
                                      description: |-
                                        requiredClaim is an optional field that configures the required claim
                                        and value that the Kubernetes API server will use to validate if an incoming
                                        JWT is valid for this identity provider.
                                      properties:
                                        claim:
                                          description: |-
                                            claim is a required field that configures the name of the required claim.
                                            When taken from the JWT claims, claim must be a string value.

                                            claim must not be an empty string ("").
                                          minLength: 1
                                          type: string
                                        requiredValue:
                                          description: |-
                                            requiredValue is a required field that configures the value that 'claim' must
                                            have when taken from the incoming JWT claims.
                                            If the value in the JWT claims does not match, the token
                                            will be rejected for authentication.

                                            requiredValue must not be an empty string ("").
                                          minLength: 1
                                          type: string
                                      required:
                                        - claim
                                        - requiredValue
                                      type: object
                                    type:
                                      default: RequiredClaim
                                      description: |-
                                        type is an optional field that configures the type of the validation rule.

                                        Allowed values are 'RequiredClaim' and omitted (not provided or an empty string).

                                        When set to 'RequiredClaim', the Kubernetes API server
                                        will be configured to validate that the incoming JWT
                                        contains the required claim and that its value matches
                                        the required value.

                                        Defaults to 'RequiredClaim'.
                                      enum:
                                        - RequiredClaim
                                      type: string
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              issuer:
                                description: |-
                                  issuer is a required field that configures how the platform interacts
                                  with the identity provider and how tokens issued from the identity provider
                                  are evaluated by the Kubernetes API server.
                                properties:
                                  audiences:
                                    description: |-
                                      audiences is a required field that configures the acceptable audiences
                                      the JWT token, issued by the identity provider, must be issued to.
                                      At least one of the entries must match the 'aud' claim in the JWT token.

                                      audiences must contain at least one entry and must not exceed ten entries.
                                    items:
                                      minLength: 1
                                      type: string
                                    maxItems: 10
                                    minItems: 1
                                    type: array
                                    x-kubernetes-list-type: set
                                  issuerCertificateAuthority:
                                    description: |-
                                      issuerCertificateAuthority is an optional field that configures the
                                      certificate authority, used by the Kubernetes API server, to validate
                                      the connection to the identity provider when fetching discovery information.

                                      When not specified, the system trust is used.

                                      When specified, it must reference a ConfigMap in the openshift-config
                                      namespace containing the PEM-encoded CA certificates under the 'ca-bundle.crt'
                                      key in the data field of the ConfigMap.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  issuerURL:
                                    description: |-
                                      issuerURL is a required field that configures the URL used to issue tokens
                                      by the identity provider.
                                      The Kubernetes API server determines how authentication tokens should be handled
                                      by matching the 'iss' claim in the JWT to the issuerURL of configured identity providers.

                                      issuerURL must use the 'https' scheme.
                                    pattern: ^https:\/\/[^\s]
                                    type: string
                                required:
                                  - audiences
                                  - issuerURL
                                type: object
                              name:
                                description: |-
                                  name is a required field that configures the unique human-readable identifier
                                  associated with the identity provider.
                                  It is used to distinguish between multiple identity providers
                                  and has no impact on token validation or authentication mechanics.

                                  name must not be an empty string ("").
                                minLength: 1
                                type: string
                              oidcClients:
                                description: |-
                                  oidcClients is an optional field that configures how on-cluster,
                                  platform clients should request tokens from the identity provider.
                                  oidcClients must not exceed 20 entries and entries must have unique namespace/name pairs.
                                items:
                                  description: |-
                                    OIDCClientConfig configures how platform clients
                                    interact with identity providers as an authentication
                                    method
                                  properties:
                                    clientID:
                                      description: |-
                                        clientID is a required field that configures the client identifier, from
                                        the identity provider, that the platform component uses for authentication
                                        requests made to the identity provider.
                                        The identity provider must accept this identifier for platform components
                                        to be able to use the identity provider as an authentication mode.

                                        clientID must not be an empty string ("").
                                      minLength: 1
                                      type: string
                                    clientSecret:
                                      description: |-
                                        clientSecret is an optional field that configures the client secret used
                                        by the platform component when making authentication requests to the identity provider.

                                        When not specified, no client secret will be used when making authentication requests
                                        to the identity provider.

                                        When specified, clientSecret references a Secret in the 'openshift-config'
                                        namespace that contains the client secret in the 'clientSecret' key of the '.data' field.
                                        The client secret will be used when making authentication requests to the identity provider.

                                        Public clients do not require a client secret but private
                                        clients do require a client secret to work with the identity provider.
                                      properties:
                                        name:
                                          description: name is the metadata.name of the referenced secret
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    componentName:
                                      description: |-
                                        componentName is a required field that specifies the name of the platform
                                        component being configured to use the identity provider as an authentication mode.
                                        It is used in combination with componentNamespace as a unique identifier.

                                        componentName must not be an empty string ("") and must not exceed 256 characters in length.
                                      maxLength: 256
                                      minLength: 1
                                      type: string
                                    componentNamespace:
                                      description: |-
                                        componentNamespace is a required field that specifies the namespace in which the
                                        platform component being configured to use the identity provider as an authentication
                                        mode is running.
                                        It is used in combination with componentName as a unique identifier.

                                        componentNamespace must not be an empty string ("") and must not exceed 63 characters in length.
                                      maxLength: 63
                                      minLength: 1
                                      type: string
                                    extraScopes:
                                      description: |-
                                        extraScopes is an optional field that configures the extra scopes that should
                                        be requested by the platform component when making authentication requests to the
                                        identity provider.
                                        This is useful if you have configured claim mappings that requires specific
                                        scopes to be requested beyond the standard OIDC scopes.

                                        When omitted, no additional scopes are requested.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: set
                                  required:
                                    - clientID
                                    - componentName
                                    - componentNamespace
                                  type: object
                                maxItems: 20
                                type: array
                                x-kubernetes-list-map-keys:
                                  - componentNamespace
                                  - componentName
                                x-kubernetes-list-type: map
                            required:
                              - issuer
                              - name
                            type: object
                          maxItems: 1
                          type: array
                          x-kubernetes-list-map-keys:
                            - name
                          x-kubernetes-list-type: map
                        serviceAccountIssuer:
                          description: |-
                            serviceAccountIssuer is the identifier of the bound service account token
                            issuer.
                            The default is https://kubernetes.default.svc
                            WARNING: Updating this field will not result in immediate invalidation of all bound tokens with the
                            previous issuer value. Instead, the tokens issued by previous service account issuer will continue to
                            be trusted for a time period chosen by the platform (currently set to 24h).
                            This time period is subject to change over time.
                            This allows internal components to transition to use new service account issuer without service distruption.
                          type: string
                        type:
                          description: |-
                            type identifies the cluster managed, user facing authentication mode in use.
                            Specifically, it manages the component that responds to login attempts.
                            The default is IntegratedOAuth.
                          enum:
                            - ""
                            - None
                            - IntegratedOAuth
                            - OIDC
                          type: string
                        webhookTokenAuthenticator:
                          description: |-
                            webhookTokenAuthenticator configures a remote token reviewer.
                            These remote authentication webhooks can be used to verify bearer tokens
                            via the tokenreviews.authentication.k8s.io REST API. This is required to
                            honor bearer tokens that are provisioned by an external authentication service.

                            Can only be set if "Type" is set to "None".
                          properties:
                            kubeConfig:
                              description: |-
                                kubeConfig references a secret that contains kube config file data which
                                describes how to access the remote webhook service.
                                The namespace for the referenced secret is openshift-config.

                                For further details, see:

                                https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication

                                The key "kubeConfig" is used to locate the data.
                                If the secret or expected key is not found, the webhook is not honored.
                                If the specified kube config data is not valid, the webhook is not honored.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced secret
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - kubeConfig
                          type: object
                        webhookTokenAuthenticators:
                          description: webhookTokenAuthenticators is DEPRECATED, setting it has no effect.
                          items:
                            description: |-
                              deprecatedWebhookTokenAuthenticator holds the necessary configuration options for a remote token authenticator.
                              It's the same as WebhookTokenAuthenticator but it's missing the 'required' validation on KubeConfig field.
                            properties:
                              kubeConfig:
                                description: |-
                                  kubeConfig contains kube config file data which describes how to access the remote webhook service.
                                  For further details, see:
                                  https://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication
                                  The key "kubeConfig" is used to locate the data.
                                  If the secret or expected key is not found, the webhook is not honored.
                                  If the specified kube config data is not valid, the webhook is not honored.
                                  The namespace for this secret is determined by the point of use.
                                properties:
                                  name:
                                    description: name is the metadata.name of the referenced secret
                                    type: string
                                required:
                                  - name
                                type: object
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    featureGate:
                      description: featureGate holds cluster-wide information about feature gates.
                      properties:
                        customNoUpgrade:
                          description: |-
                            customNoUpgrade allows the enabling or disabling of any feature. Turning this feature set on IS NOT SUPPORTED, CANNOT BE UNDONE, and PREVENTS UPGRADES.
                            Because of its nature, this setting cannot be validated.  If you have any typos or accidentally apply invalid combinations
                            your cluster may fail in an unrecoverable way.  featureSet must equal "CustomNoUpgrade" must be set to use this field.
                          nullable: true
                          properties:
                            disabled:
                              description: disabled is a list of all feature gates that you want to force off
                              items:
                                description: FeatureGateName is a string to enforce patterns on the name of a FeatureGate
                                pattern: ^([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+\.?$
                                type: string
                              type: array
                            enabled:
                              description: enabled is a list of all feature gates that you want to force on
                              items:
                                description: FeatureGateName is a string to enforce patterns on the name of a FeatureGate
                                pattern: ^([A-Za-z0-9-]+\.)*[A-Za-z0-9-]+\.?$
                                type: string
                              type: array
                          type: object
                        featureSet:
                          description: |-
                            featureSet changes the list of features in the cluster.  The default is empty.  Be very careful adjusting this setting.
                            Turning on or off features may cause irreversible changes in your cluster which cannot be undone.
                          enum:
                            - CustomNoUpgrade
                            - DevPreviewNoUpgrade
                            - TechPreviewNoUpgrade
                            - ""
                          type: string
                          x-kubernetes-validations:
                            - message: CustomNoUpgrade may not be changed
                              rule: 'oldSelf == ''CustomNoUpgrade'' ? self == ''CustomNoUpgrade'' : true'
                            - message: TechPreviewNoUpgrade may not be changed
                              rule: 'oldSelf == ''TechPreviewNoUpgrade'' ? self == ''TechPreviewNoUpgrade'' : true'
                            - message: DevPreviewNoUpgrade may not be changed
                              rule: 'oldSelf == ''DevPreviewNoUpgrade'' ? self == ''DevPreviewNoUpgrade'' : true'
                      type: object
                    image:
                      description: |-
                        image governs policies related to imagestream imports and runtime configuration
                        for external registries. It allows cluster admins to configure which registries
                        OpenShift is allowed to import images from, extra CA trust bundles for external
                        registries, and policies to block or allow registry hostnames.
                        When exposing OpenShift's image registry to the public, this also lets cluster
                        admins specify the external hostname.
                        This input will be part of every payload generated by the controllers for any NodePool of the HostedCluster.
                        Changing this value will trigger a rollout for all existing NodePools in the cluster.
                      properties:
                        additionalTrustedCA:
                          description: |-
                            additionalTrustedCA is a reference to a ConfigMap containing additional CAs that
                            should be trusted during imagestream import, pod image pull, build image pull, and
                            imageregistry pullthrough.
                            The namespace for this config map is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                        allowedRegistriesForImport:
                          description: |-
                            allowedRegistriesForImport limits the container image registries that normal users may import
                            images from. Set this list to the registries that you trust to contain valid Docker
                            images and that you want applications to be able to import from. Users with
                            permission to create Images or ImageStreamMappings via the API are not affected by
                            this policy - typically only administrators or system integrations will have those
                            permissions.
                          items:
                            description: |-
                              RegistryLocation contains a location of the registry specified by the registry domain
                              name. The domain name might include wildcards, like '*' or '??'.
                            properties:
                              domainName:
                                description: |-
                                  domainName specifies a domain name for the registry
                                  In case the registry use non-standard (80 or 443) port, the port should be included
                                  in the domain name as well.
                                type: string
                              insecure:
                                description: |-
                                  insecure indicates whether the registry is secure (https) or insecure (http)
                                  By default (if not specified) the registry is assumed as secure.
                                type: boolean
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        externalRegistryHostnames:
                          description: |-
                            externalRegistryHostnames provides the hostnames for the default external image
                            registry. The external hostname should be set only when the image registry
                            is exposed externally. The first value is used in 'publicDockerImageRepository'
                            field in ImageStreams. The value must be in "hostname[:port]" format.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        registrySources:
                          description: |-
                            registrySources contains configuration that determines how the container runtime
                            should treat individual registries when accessing images for builds+pods. (e.g.
                            whether or not to allow insecure access).  It does not contain configuration for the
                            internal cluster registry.
                          properties:
                            allowedRegistries:
                              description: |-
                                allowedRegistries are the only registries permitted for image pull and push actions. All other registries are denied.

                                Only one of BlockedRegistries or AllowedRegistries may be set.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            blockedRegistries:
                              description: |-
                                blockedRegistries cannot be used for image pull and push actions. All other registries are permitted.

                                Only one of BlockedRegistries or AllowedRegistries may be set.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            containerRuntimeSearchRegistries:
                              description: |-
                                containerRuntimeSearchRegistries are registries that will be searched when pulling images that do not have fully qualified
                                domains in their pull specs. Registries will be searched in the order provided in the list.
                                Note: this search list only works with the container runtime, i.e CRI-O. Will NOT work with builds or imagestream imports.
                              format: hostname
                              items:
                                type: string
                              minItems: 1
                              type: array
                              x-kubernetes-list-type: set
                            insecureRegistries:
                              description: insecureRegistries are registries which do not have a valid TLS certificates or only support HTTP connections.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                          type: object
                          x-kubernetes-validations:
                            - message: Only one of blockedRegistries or allowedRegistries may be set
                              rule: 'has(self.blockedRegistries) ? !has(self.allowedRegistries) : true'
                      type: object
                    ingress:
                      description: |-
                        ingress holds cluster-wide information about ingress, including the default ingress domain
                        used for routes.
                      properties:
                        appsDomain:
                          description: |-
                            appsDomain is an optional domain to use instead of the one specified
                            in the domain field when a Route is created without specifying an explicit
                            host. If appsDomain is nonempty, this value is used to generate default
                            host values for Route. Unlike domain, appsDomain may be modified after
                            installation.
                            This assumes a new ingresscontroller has been setup with a wildcard
                            certificate.
                          type: string
                        componentRoutes:
                          description: |-
                            componentRoutes is an optional list of routes that are managed by OpenShift components
                            that a cluster-admin is able to configure the hostname and serving certificate for.
                            The namespace and name of each route in this list should match an existing entry in the
                            status.componentRoutes list.

                            To determine the set of configurable Routes, look at namespace and name of entries in the
                            .status.componentRoutes list, where participating operators write the status of
                            configurable routes.
                          items:
                            description: ComponentRouteSpec allows for configuration of a route's hostname and serving certificate.
                            properties:
                              hostname:
                                description: hostname is the hostname that should be used by the route.
                                pattern: ^([a-zA-Z0-9\p{S}\p{L}]((-?[a-zA-Z0-9\p{S}\p{L}]{0,62})?)|([a-zA-Z0-9\p{S}\p{L}](([a-zA-Z0-9-\p{S}\p{L}]{0,61}[a-zA-Z0-9\p{S}\p{L}])?)(\.)){1,}([a-zA-Z\p{L}]){2,63})$|^(([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})[\.]){0,}([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})$
                                type: string
                              name:
                                description: |-
                                  name is the logical name of the route to customize.

                                  The namespace and name of this componentRoute must match a corresponding
                                  entry in the list of status.componentRoutes if the route is to be customized.
                                maxLength: 256
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  namespace is the namespace of the route to customize.

                                  The namespace and name of this componentRoute must match a corresponding
                                  entry in the list of status.componentRoutes if the route is to be customized.
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                              servingCertKeyPairSecret:
                                description: |-
                                  servingCertKeyPairSecret is a reference to a secret of type `kubernetes.io/tls` in the openshift-config namespace.
                                  The serving cert/key pair must match and will be used by the operator to fulfill the intent of serving with this name.
                                  If the custom hostname uses the default routing suffix of the cluster,
                                  the Secret specification for a serving certificate will not be needed.
                                properties:
                                  name:
                                    description: name is the metadata.name of the referenced secret
                                    type: string
                                required:
                                  - name
                                type: object
                            required:
                              - hostname
                              - name
                              - namespace
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - namespace
                            - name
                          x-kubernetes-list-type: map
                        domain:
                          description: |-
                            domain is used to generate a default host name for a route when the
                            route's host name is empty. The generated host name will follow this
                            pattern: "<route-name>.<route-namespace>.<domain>".

                            It is also used as the default wildcard domain suffix for ingress. The
                            default ingresscontroller domain will follow this pattern: "*.<domain>".

                            Once set, changing domain is not currently supported.
                          type: string
                        loadBalancer:
                          description: |-
                            loadBalancer contains the load balancer details in general which are not only specific to the underlying infrastructure
                            provider of the current cluster and are required for Ingress Controller to work on OpenShift.
                          properties:
                            platform:
                              description: |-
                                platform holds configuration specific to the underlying
                                infrastructure provider for the ingress load balancers.
                                When omitted, this means the user has no opinion and the platform is left
                                to choose reasonable defaults. These defaults are subject to change over time.
                              properties:
                                aws:
                                  description: aws contains settings specific to the Amazon Web Services infrastructure provider.
                                  properties:
                                    type:
                                      description: |-
                                        type allows user to set a load balancer type.
                                        When this field is set the default ingresscontroller will get created using the specified LBType.
                                        If this field is not set then the default ingress controller of LBType Classic will be created.
                                        Valid values are:

                                        * "Classic": A Classic Load Balancer that makes routing decisions at either
                                          the transport layer (TCP/SSL) or the application layer (HTTP/HTTPS). See
                                          the following for additional details:

                                            https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb

                                        * "NLB": A Network Load Balancer that makes routing decisions at the
                                          transport layer (TCP/SSL). See the following for additional details:

                                            https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb
                                      enum:
                                        - NLB
                                        - Classic
                                      type: string
                                  required:
                                    - type
                                  type: object
                                type:
                                  description: |-
                                    type is the underlying infrastructure provider for the cluster.
                                    Allowed values are "AWS", "Azure", "BareMetal", "GCP", "Libvirt",
                                    "OpenStack", "VSphere", "oVirt", "KubeVirt", "EquinixMetal", "PowerVS",
                                    "AlibabaCloud", "Nutanix" and "None". Individual components may not support all platforms,
                                    and must handle unrecognized platforms as None if they do not support that platform.
                                  enum:
                                    - ""
                                    - AWS
                                    - Azure
                                    - BareMetal
                                    - GCP
                                    - Libvirt
                                    - OpenStack
                                    - None
                                    - VSphere
                                    - oVirt
                                    - IBMCloud
                                    - KubeVirt
                                    - EquinixMetal
                                    - PowerVS
                                    - AlibabaCloud
                                    - Nutanix
                                    - External
                                  type: string
                              type: object
                          type: object
                        requiredHSTSPolicies:
                          description: |-
                            requiredHSTSPolicies specifies HSTS policies that are required to be set on newly created  or updated routes
                            matching the domainPattern/s and namespaceSelector/s that are specified in the policy.
                            Each requiredHSTSPolicy must have at least a domainPattern and a maxAge to validate a route HSTS Policy route
                            annotation, and affect route admission.

                            A candidate route is checked for HSTS Policies if it has the HSTS Policy route annotation:
                            "haproxy.router.openshift.io/hsts_header"
                            E.g. haproxy.router.openshift.io/hsts_header: max-age=31536000;preload;includeSubDomains

                            - For each candidate route, if it matches a requiredHSTSPolicy domainPattern and optional namespaceSelector,
                            then the maxAge, preloadPolicy, and includeSubdomainsPolicy must be valid to be admitted.  Otherwise, the route
                            is rejected.
                            - The first match, by domainPattern and optional namespaceSelector, in the ordering of the RequiredHSTSPolicies
                            determines the route's admission status.
                            - If the candidate route doesn't match any requiredHSTSPolicy domainPattern and optional namespaceSelector,
                            then it may use any HSTS Policy annotation.

                            The HSTS policy configuration may be changed after routes have already been created. An update to a previously
                            admitted route may then fail if the updated route does not conform to the updated HSTS policy configuration.
                            However, changing the HSTS policy configuration will not cause a route that is already admitted to stop working.

                            Note that if there are no RequiredHSTSPolicies, any HSTS Policy annotation on the route is valid.
                          items:
                            properties:
                              domainPatterns:
                                description: |-
                                  domainPatterns is a list of domains for which the desired HSTS annotations are required.
                                  If domainPatterns is specified and a route is created with a spec.host matching one of the domains,
                                  the route must specify the HSTS Policy components described in the matching RequiredHSTSPolicy.

                                  The use of wildcards is allowed like this: *.foo.com matches everything under foo.com.
                                  foo.com only matches foo.com, so to cover foo.com and everything under it, you must specify *both*.
                                items:
                                  type: string
                                minItems: 1
                                type: array
                              includeSubDomainsPolicy:
                                description: |-
                                  includeSubDomainsPolicy means the HSTS Policy should apply to any subdomains of the host's
                                  domain name.  Thus, for the host bar.foo.com, if includeSubDomainsPolicy was set to RequireIncludeSubDomains:
                                  - the host app.bar.foo.com would inherit the HSTS Policy of bar.foo.com
                                  - the host bar.foo.com would inherit the HSTS Policy of bar.foo.com
                                  - the host foo.com would NOT inherit the HSTS Policy of bar.foo.com
                                  - the host def.foo.com would NOT inherit the HSTS Policy of bar.foo.com
                                enum:
                                  - RequireIncludeSubDomains
                                  - RequireNoIncludeSubDomains
                                  - NoOpinion
                                type: string
                              maxAge:
                                description: |-
                                  maxAge is the delta time range in seconds during which hosts are regarded as HSTS hosts.
                                  If set to 0, it negates the effect, and hosts are removed as HSTS hosts.
                                  If set to 0 and includeSubdomains is specified, all subdomains of the host are also removed as HSTS hosts.
                                  maxAge is a time-to-live value, and if this policy is not refreshed on a client, the HSTS
                                  policy will eventually expire on that client.
                                properties:
                                  largestMaxAge:
                                    description: |-
                                      The largest allowed value (in seconds) of the RequiredHSTSPolicy max-age
                                      This value can be left unspecified, in which case no upper limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                  smallestMaxAge:
                                    description: |-
                                      The smallest allowed value (in seconds) of the RequiredHSTSPolicy max-age
                                      Setting max-age=0 allows the deletion of an existing HSTS header from a host.  This is a necessary
                                      tool for administrators to quickly correct mistakes.
                                      This value can be left unspecified, in which case no lower limit is enforced.
                                    format: int32
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                type: object
                              namespaceSelector:
                                description: |-
                                  namespaceSelector specifies a label selector such that the policy applies only to those routes that
                                  are in namespaces with labels that match the selector, and are in one of the DomainPatterns.
                                  Defaults to the empty LabelSelector, which matches everything.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                          items:
                                            type: string
                                          type: array
                                          x-kubernetes-list-type: atomic
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                    x-kubernetes-list-type: atomic
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              preloadPolicy:
                                description: |-
                                  preloadPolicy directs the client to include hosts in its host preload list so that
                                  it never needs to do an initial load to get the HSTS header (note that this is not defined
                                  in RFC 6797 and is therefore client implementation-dependent).
                                enum:
                                  - RequirePreload
                                  - RequireNoPreload
                                  - NoOpinion
                                type: string
                            required:
                              - domainPatterns
                            type: object
                          type: array
                      type: object
                    network:
                      description: |-
                        network holds cluster-wide information about the network. It is used to configure the desired network configuration, such as: IP address pools for services/pod IPs, network plugin, etc.
                        Please view network.spec for an explanation on what applies when configuring this resource.
                      properties:
                        clusterNetwork:
                          description: |-
                            IP address pool to use for pod IPs.
                            This field is immutable after installation.
                          items:
                            description: |-
                              ClusterNetworkEntry is a contiguous block of IP addresses from which pod IPs
                              are allocated.
                            properties:
                              cidr:
                                description: The complete block for pod IPs.
                                type: string
                              hostPrefix:
                                description: |-
                                  The size (prefix) of block to allocate to each node. If this
                                  field is not used by the plugin, it can be left unset.
                                format: int32
                                minimum: 0
                                type: integer
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        externalIP:
                          description: |-
                            externalIP defines configuration for controllers that
                            affect Service.ExternalIP. If nil, then ExternalIP is
                            not allowed to be set.
                          properties:
                            autoAssignCIDRs:
                              description: |-
                                autoAssignCIDRs is a list of CIDRs from which to automatically assign
                                Service.ExternalIP. These are assigned when the service is of type
                                LoadBalancer. In general, this is only useful for bare-metal clusters.
                                In Openshift 3.x, this was misleadingly called "IngressIPs".
                                Automatically assigned External IPs are not affected by any
                                ExternalIPPolicy rules.
                                Currently, only one entry may be provided.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            policy:
                              description: |-
                                policy is a set of restrictions applied to the ExternalIP field.
                                If nil or empty, then ExternalIP is not allowed to be set.
                              properties:
                                allowedCIDRs:
                                  description: allowedCIDRs is the list of allowed CIDRs.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                rejectedCIDRs:
                                  description: |-
                                    rejectedCIDRs is the list of disallowed CIDRs. These take precedence
                                    over allowedCIDRs.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                          type: object
                        networkDiagnostics:
                          description: |-
                            networkDiagnostics defines network diagnostics configuration.

                            Takes precedence over spec.disableNetworkDiagnostics in network.operator.openshift.io.
                            If networkDiagnostics is not specified or is empty,
                            and the spec.disableNetworkDiagnostics flag in network.operator.openshift.io is set to true,
                            the network diagnostics feature will be disabled.
                          properties:
                            mode:
                              description: |-
                                mode controls the network diagnostics mode

                                When omitted, this means the user has no opinion and the platform is left
                                to choose reasonable defaults. These defaults are subject to change over time.
                                The current default is All.
                              enum:
                                - ""
                                - All
                                - Disabled
                              type: string
                            sourcePlacement:
                              description: |-
                                sourcePlacement controls the scheduling of network diagnostics source deployment

                                See NetworkDiagnosticsSourcePlacement for more details about default values.
                              properties:
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    nodeSelector is the node selector applied to network diagnostics components

                                    When omitted, this means the user has no opinion and the platform is left
                                    to choose reasonable defaults. These defaults are subject to change over time.
                                    The current default is `kubernetes.io/os: linux`.
                                  type: object
                                tolerations:
                                  description: |-
                                    tolerations is a list of tolerations applied to network diagnostics components

                                    When omitted, this means the user has no opinion and the platform is left
                                    to choose reasonable defaults. These defaults are subject to change over time.
                                    The current default is an empty list.
                                  items:
                                    description: |-
                                      The pod this Toleration is attached to tolerates any taint that matches
                                      the triple <key,value,effect> using the matching operator <operator>.
                                    properties:
                                      effect:
                                        description: |-
                                          Effect indicates the taint effect to match. Empty means match all taint effects.
                                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                        type: string
                                      key:
                                        description: |-
                                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                        type: string
                                      operator:
                                        description: |-
                                          Operator represents a key's relationship to the value.
                                          Valid operators are Exists and Equal. Defaults to Equal.
                                          Exists is equivalent to wildcard for value, so that a pod can
                                          tolerate all taints of a particular category.
                                        type: string
                                      tolerationSeconds:
                                        description: |-
                                          TolerationSeconds represents the period of time the toleration (which must be
                                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                                          negative values will be treated as 0 (evict immediately) by the system.
                                        format: int64
                                        type: integer
                                      value:
                                        description: |-
                                          Value is the taint value the toleration matches to.
                                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                                        type: string
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                            targetPlacement:
                              description: |-
                                targetPlacement controls the scheduling of network diagnostics target daemonset

                                See NetworkDiagnosticsTargetPlacement for more details about default values.
                              properties:
                                nodeSelector:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    nodeSelector is the node selector applied to network diagnostics components

                                    When omitted, this means the user has no opinion and the platform is left
                                    to choose reasonable defaults. These defaults are subject to change over time.
                                    The current default is `kubernetes.io/os: linux`.
                                  type: object
                                tolerations:
                                  description: |-
                                    tolerations is a list of tolerations applied to network diagnostics components

                                    When omitted, this means the user has no opinion and the platform is left
                                    to choose reasonable defaults. These defaults are subject to change over time.
                                    The current default is `- operator: "Exists"` which means that all taints are tolerated.
                                  items:
                                    description: |-
                                      The pod this Toleration is attached to tolerates any taint that matches
                                      the triple <key,value,effect> using the matching operator <operator>.
                                    properties:
                                      effect:
                                        description: |-
                                          Effect indicates the taint effect to match. Empty means match all taint effects.
                                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                                        type: string
                                      key:
                                        description: |-
                                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                                        type: string
                                      operator:
                                        description: |-
                                          Operator represents a key's relationship to the value.
                                          Valid operators are Exists and Equal. Defaults to Equal.
                                          Exists is equivalent to wildcard for value, so that a pod can
                                          tolerate all taints of a particular category.
                                        type: string
                                      tolerationSeconds:
                                        description: |-
                                          TolerationSeconds represents the period of time the toleration (which must be
                                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                                          negative values will be treated as 0 (evict immediately) by the system.
                                        format: int64
                                        type: integer
                                      value:
                                        description: |-
                                          Value is the taint value the toleration matches to.
                                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                                        type: string
                                    type: object
                                  type: array
                                  x-kubernetes-list-type: atomic
                              type: object
                          type: object
                        networkType:
                          description: |-
                            networkType is the plugin that is to be deployed (e.g. OVNKubernetes).
                            This should match a value that the cluster-network-operator understands,
                            or else no networking will be installed.
                            Currently supported values are:
                            - OVNKubernetes
                            This field is immutable after installation.
                          type: string
                        serviceNetwork:
                          description: |-
                            IP address pool for services.
                            Currently, we only support a single entry here.
                            This field is immutable after installation.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        serviceNodePortRange:
                          description: |-
                            The port range allowed for Services of type NodePort.
                            If not specified, the default of 30000-32767 will be used.
                            Such Services without a NodePort specified will have one
                            automatically allocated from this range.
                            This parameter can be updated after the cluster is
                            installed.
                          pattern: ^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$
                          type: string
                      type: object
                      x-kubernetes-validations:
                        - message: cannot set networkDiagnostics.sourcePlacement and networkDiagnostics.targetPlacement when networkDiagnostics.mode is Disabled
                          rule: '!has(self.networkDiagnostics) || !has(self.networkDiagnostics.mode) || self.networkDiagnostics.mode!=''Disabled'' || !has(self.networkDiagnostics.sourcePlacement) && !has(self.networkDiagnostics.targetPlacement)'
                    oauth:
                      description: |-
                        oauth holds cluster-wide information about OAuth.
                        It is used to configure the integrated OAuth server.
                        This configuration is only honored when the top level Authentication config has type set to IntegratedOAuth.
                      properties:
                        identityProviders:
                          description: |-
                            identityProviders is an ordered list of ways for a user to identify themselves.
                            When this list is empty, no identities are provisioned for users.
                          items:
                            description: IdentityProvider provides identities for users authenticating using credentials
                            properties:
                              basicAuth:
                                description: basicAuth contains configuration options for the BasicAuth IdP
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  tlsClientCert:
                                    description: |-
                                      tlsClientCert is an optional reference to a secret by name that contains the
                                      PEM-encoded TLS client certificate to present when connecting to the server.
                                      The key "tls.crt" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      If the specified certificate data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  tlsClientKey:
                                    description: |-
                                      tlsClientKey is an optional reference to a secret by name that contains the
                                      PEM-encoded TLS private key for the client certificate referenced in tlsClientCert.
                                      The key "tls.key" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      If the specified certificate data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect to
                                    type: string
                                type: object
                              github:
                                description: github enables user authentication using GitHub credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      This can only be configured when hostname is set to a non-empty value.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: |-
                                      clientSecret is a required reference to the secret by name containing the oauth client secret.
                                      The key "clientSecret" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  hostname:
                                    description: |-
                                      hostname is the optional domain (e.g. "mycompany.com") for use with a hosted instance of
                                      GitHub Enterprise.
                                      It must match the GitHub Enterprise settings value configured at /setup/settings#hostname.
                                    type: string
                                  organizations:
                                    description: organizations optionally restricts which organizations are allowed to log in
                                    items:
                                      type: string
                                    type: array
                                  teams:
                                    description: teams optionally restricts which teams are allowed to log in. Format is <org>/<team>.
                                    items:
                                      type: string
                                    type: array
                                type: object
                              gitlab:
                                description: gitlab enables user authentication using GitLab credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: |-
                                      clientSecret is a required reference to the secret by name containing the oauth client secret.
                                      The key "clientSecret" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  url:
                                    description: url is the oauth server base URL
                                    type: string
                                type: object
                              google:
                                description: google enables user authentication using Google credentials
                                properties:
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: |-
                                      clientSecret is a required reference to the secret by name containing the oauth client secret.
                                      The key "clientSecret" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  hostedDomain:
                                    description: hostedDomain is the optional Google App domain (e.g. "mycompany.com") to restrict logins to
                                    type: string
                                type: object
                              htpasswd:
                                description: htpasswd enables user authentication using an HTPasswd file to validate credentials
                                properties:
                                  fileData:
                                    description: |-
                                      fileData is a required reference to a secret by name containing the data to use as the htpasswd file.
                                      The key "htpasswd" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      If the specified htpasswd data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                type: object
                              keystone:
                                description: keystone enables user authentication using keystone password credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  domainName:
                                    description: domainName is required for keystone v3
                                    type: string
                                  tlsClientCert:
                                    description: |-
                                      tlsClientCert is an optional reference to a secret by name that contains the
                                      PEM-encoded TLS client certificate to present when connecting to the server.
                                      The key "tls.crt" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      If the specified certificate data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  tlsClientKey:
                                    description: |-
                                      tlsClientKey is an optional reference to a secret by name that contains the
                                      PEM-encoded TLS private key for the client certificate referenced in tlsClientCert.
                                      The key "tls.key" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      If the specified certificate data is not valid, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  url:
                                    description: url is the remote URL to connect to
                                    type: string
                                type: object
                              ldap:
                                description: ldap enables user authentication using LDAP credentials
                                properties:
                                  attributes:
                                    description: attributes maps LDAP attributes to identities
                                    properties:
                                      email:
                                        description: |-
                                          email is the list of attributes whose values should be used as the email address. Optional.
                                          If unspecified, no email is set for the identity
                                        items:
                                          type: string
                                        type: array
                                      id:
                                        description: |-
                                          id is the list of attributes whose values should be used as the user ID. Required.
                                          First non-empty attribute is used. At least one attribute is required. If none of the listed
                                          attribute have a value, authentication fails.
                                          LDAP standard identity attribute is "dn"
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: |-
                                          name is the list of attributes whose values should be used as the display name. Optional.
                                          If unspecified, no display name is set for the identity
                                          LDAP standard display name attribute is "cn"
                                        items:
                                          type: string
                                        type: array
                                      preferredUsername:
                                        description: |-
                                          preferredUsername is the list of attributes whose values should be used as the preferred username.
                                          LDAP standard login attribute is "uid"
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                  bindDN:
                                    description: bindDN is an optional DN to bind with during the search phase.
                                    type: string
                                  bindPassword:
                                    description: |-
                                      bindPassword is an optional reference to a secret by name
                                      containing a password to bind with during the search phase.
                                      The key "bindPassword" is used to locate the data.
                                      If specified and the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  insecure:
                                    description: |-
                                      insecure, if true, indicates the connection should not use TLS
                                      WARNING: Should not be set to `true` with the URL scheme "ldaps://" as "ldaps://" URLs always
                                               attempt to connect using TLS, even when `insecure` is set to `true`
                                      When `true`, "ldap://" URLS connect insecurely. When `false`, "ldap://" URLs are upgraded to
                                      a TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830.
                                    type: boolean
                                  url:
                                    description: |-
                                      url is an RFC 2255 URL which specifies the LDAP search parameters to use.
                                      The syntax of the URL is:
                                      ldap://host:port/basedn?attribute?scope?filter
                                    type: string
                                type: object
                              mappingMethod:
                                description: |-
                                  mappingMethod determines how identities from this provider are mapped to users
                                  Defaults to "claim"
                                type: string
                              name:
                                description: |-
                                  name is used to qualify the identities returned by this provider.
                                  - It MUST be unique and not shared by any other identity provider used
                                  - It MUST be a valid path segment: name cannot equal "." or ".." or contain "/" or "%" or ":"
                                    Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName
                                type: string
                              openID:
                                description: openID enables user authentication using OpenID credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      The key "ca.crt" is used to locate the data.
                                      If specified and the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      If empty, the default system roots are used.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  claims:
                                    description: claims mappings
                                    properties:
                                      email:
                                        description: |-
                                          email is the list of claims whose values should be used as the email address. Optional.
                                          If unspecified, no email is set for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      groups:
                                        description: |-
                                          groups is the list of claims value of which should be used to synchronize groups
                                          from the OIDC provider to OpenShift for the user.
                                          If multiple claims are specified, the first one with a non-empty value is used.
                                        items:
                                          description: |-
                                            OpenIDClaim represents a claim retrieved from an OpenID provider's tokens or userInfo
                                            responses
                                          minLength: 1
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      name:
                                        description: |-
                                          name is the list of claims whose values should be used as the display name. Optional.
                                          If unspecified, no display name is set for the identity
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                      preferredUsername:
                                        description: |-
                                          preferredUsername is the list of claims whose values should be used as the preferred username.
                                          If unspecified, the preferred username is determined from the value of the sub claim
                                        items:
                                          type: string
                                        type: array
                                        x-kubernetes-list-type: atomic
                                    type: object
                                  clientID:
                                    description: clientID is the oauth client ID
                                    type: string
                                  clientSecret:
                                    description: |-
                                      clientSecret is a required reference to the secret by name containing the oauth client secret.
                                      The key "clientSecret" is used to locate the data.
                                      If the secret or expected key is not found, the identity provider is not honored.
                                      The namespace for this secret is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced secret
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  extraAuthorizeParameters:
                                    additionalProperties:
                                      type: string
                                    description: extraAuthorizeParameters are any custom parameters to add to the authorize request.
                                    type: object
                                  extraScopes:
                                    description: extraScopes are any scopes to request in addition to the standard "openid" scope.
                                    items:
                                      type: string
                                    type: array
                                  issuer:
                                    description: |-
                                      issuer is the URL that the OpenID Provider asserts as its Issuer Identifier.
                                      It must use the https scheme with no query or fragment component.
                                    type: string
                                type: object
                              requestHeader:
                                description: requestHeader enables user authentication using request header credentials
                                properties:
                                  ca:
                                    description: |-
                                      ca is a required reference to a config map by name containing the PEM-encoded CA bundle.
                                      It is used as a trust anchor to validate the TLS certificate presented by the remote server.
                                      Specifically, it allows verification of incoming requests to prevent header spoofing.
                                      The key "ca.crt" is used to locate the data.
                                      If the config map or expected key is not found, the identity provider is not honored.
                                      If the specified ca data is not valid, the identity provider is not honored.
                                      The namespace for this config map is openshift-config.
                                    properties:
                                      name:
                                        description: name is the metadata.name of the referenced config map
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  challengeURL:
                                    description: |-
                                      challengeURL is a URL to redirect unauthenticated /authorize requests to
                                      Unauthenticated requests from OAuth clients which expect WWW-Authenticate challenges will be
                                      redirected here.
                                      ${url} is replaced with the current URL, escaped to be safe in a query parameter
                                        https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query string
                                        https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when challenge is set to true.
                                    type: string
                                  clientCommonNames:
                                    description: |-
                                      clientCommonNames is an optional list of common names to require a match from. If empty, any
                                      client certificate validated against the clientCA bundle is considered authoritative.
                                    items:
                                      type: string
                                    type: array
                                  emailHeaders:
                                    description: emailHeaders is the set of headers to check for the email address
                                    items:
                                      type: string
                                    type: array
                                  headers:
                                    description: headers is the set of headers to check for identity information
                                    items:
                                      type: string
                                    type: array
                                  loginURL:
                                    description: |-
                                      loginURL is a URL to redirect unauthenticated /authorize requests to
                                      Unauthenticated requests from OAuth clients which expect interactive logins will be redirected here
                                      ${url} is replaced with the current URL, escaped to be safe in a query parameter
                                        https://www.example.com/sso-login?then=${url}
                                      ${query} is replaced with the current query string
                                        https://www.example.com/auth-proxy/oauth/authorize?${query}
                                      Required when login is set to true.
                                    type: string
                                  nameHeaders:
                                    description: nameHeaders is the set of headers to check for the display name
                                    items:
                                      type: string
                                    type: array
                                  preferredUsernameHeaders:
                                    description: preferredUsernameHeaders is the set of headers to check for the preferred username
                                    items:
                                      type: string
                                    type: array
                                type: object
                              type:
                                description: type identifies the identity provider type for this entry.
                                type: string
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        templates:
                          description: templates allow you to customize pages like the login page.
                          properties:
                            error:
                              description: |-
                                error is the name of a secret that specifies a go template to use to render error pages
                                during the authentication or grant flow.
                                The key "errors.html" is used to locate the template data.
                                If specified and the secret or expected key is not found, the default error page is used.
                                If the specified template is not valid, the default error page is used.
                                If unspecified, the default error page is used.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced secret
                                  type: string
                              required:
                                - name
                              type: object
                            login:
                              description: |-
                                login is the name of a secret that specifies a go template to use to render the login page.
                                The key "login.html" is used to locate the template data.
                                If specified and the secret or expected key is not found, the default login page is used.
                                If the specified template is not valid, the default login page is used.
                                If unspecified, the default login page is used.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced secret
                                  type: string
                              required:
                                - name
                              type: object
                            providerSelection:
                              description: |-
                                providerSelection is the name of a secret that specifies a go template to use to render
                                the provider selection page.
                                The key "providers.html" is used to locate the template data.
                                If specified and the secret or expected key is not found, the default provider selection page is used.
                                If the specified template is not valid, the default provider selection page is used.
                                If unspecified, the default provider selection page is used.
                                The namespace for this secret is openshift-config.
                              properties:
                                name:
                                  description: name is the metadata.name of the referenced secret
                                  type: string
                              required:
                                - name
                              type: object
                          type: object
                        tokenConfig:
                          description: tokenConfig contains options for authorization and access tokens
                          properties:
                            accessTokenInactivityTimeout:
                              description: |-
                                accessTokenInactivityTimeout defines the token inactivity timeout
                                for tokens granted by any client.
                                The value represents the maximum amount of time that can occur between
                                consecutive uses of the token. Tokens become invalid if they are not
                                used within this temporal window. The user will need to acquire a new
                                token to regain access once a token times out. Takes valid time
                                duration string such as "5m", "1.5h" or "2h45m". The minimum allowed
                                value for duration is 300s (5 minutes). If the timeout is configured
                                per client, then that value takes precedence. If the timeout value is
                                not specified and the client does not override the value, then tokens
                                are valid until their lifetime.

                                WARNING: existing tokens' timeout will not be affected (lowered) by changing this value
                              type: string
                            accessTokenInactivityTimeoutSeconds:
                              description: 'accessTokenInactivityTimeoutSeconds - DEPRECATED: setting this field has no effect.'
                              format: int32
                              type: integer
                            accessTokenMaxAgeSeconds:
                              description: accessTokenMaxAgeSeconds defines the maximum age of access tokens
                              format: int32
                              type: integer
                          type: object
                      type: object
                      x-kubernetes-validations:
                        - message: spec.configuration.oauth.tokenConfig.accessTokenInactivityTimeout minimum acceptable token timeout value is 300 seconds
                          rule: '!has(self.tokenConfig) || !has(self.tokenConfig.accessTokenInactivityTimeout) || duration(self.tokenConfig.accessTokenInactivityTimeout).getSeconds() >= 300'
                    operatorhub:
                      description: |-
                        operatorhub specifies the configuration for the Operator Lifecycle Manager in the HostedCluster. This is only configured at deployment time but the controller are not reconcilling over it.
                        The OperatorHub configuration will be constantly reconciled if catalog placement is management, but only on cluster creation otherwise.
                      properties:
                        disableAllDefaultSources:
                          description: |-
                            disableAllDefaultSources allows you to disable all the default hub
                            sources. If this is true, a specific entry in sources can be used to
                            enable a default source. If this is false, a specific entry in
                            sources can be used to disable or enable a default source.
                          type: boolean
                        sources:
                          description: |-
                            sources is the list of default hub sources and their configuration.
                            If the list is empty, it implies that the default hub sources are
                            enabled on the cluster unless disableAllDefaultSources is true.
                            If disableAllDefaultSources is true and sources is not empty,
                            the configuration present in sources will take precedence. The list of
                            default hub sources and their current state will always be reflected in
                            the status block.
                          items:
                            description: HubSource is used to specify the hub source and its configuration
                            properties:
                              disabled:
                                description: disabled is used to disable a default hub source on cluster
                                type: boolean
                              name:
                                description: name is the name of one of the default hub sources
                                maxLength: 253
                                minLength: 1
                                type: string
                            type: object
                          type: array
                      type: object
                    proxy:
                      description: |-
                        proxy holds cluster-wide information on how to configure default proxies for the cluster.
                        This affects traffic flowing from the hosted cluster data plane.
                        The controllers will generate a machineConfig with the proxy config for the cluster.
                        This MachineConfig will be part of every payload generated by the controllers for any NodePool of the HostedCluster.
                        Changing this value will trigger a rollout for all existing NodePools in the cluster.
                      properties:
                        httpProxy:
                          description: httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.
                          type: string
                        httpsProxy:
                          description: httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.
                          type: string
                        noProxy:
                          description: |-
                            noProxy is a comma-separated list of hostnames and/or CIDRs and/or IPs for which the proxy should not be used.
                            Empty means unset and will not result in an env var.
                          type: string
                        readinessEndpoints:
                          description: readinessEndpoints is a list of endpoints used to verify readiness of the proxy.
                          items:
                            type: string
                          type: array
                        trustedCA:
                          description: |-
                            trustedCA is a reference to a ConfigMap containing a CA certificate bundle.
                            The trustedCA field should only be consumed by a proxy validator. The
                            validator is responsible for reading the certificate bundle from the required
                            key "ca-bundle.crt", merging it with the system default trust bundle,
                            and writing the merged trust bundle to a ConfigMap named "trusted-ca-bundle"
                            in the "openshift-config-managed" namespace. Clients that expect to make
                            proxy connections must use the trusted-ca-bundle for all HTTPS requests to
                            the proxy, and may use the trusted-ca-bundle for non-proxy HTTPS requests as
                            well.

                            The namespace for the ConfigMap referenced by trustedCA is
                            "openshift-config". Here is an example ConfigMap (in yaml):

                            apiVersion: v1
                            kind: ConfigMap
                            metadata:
                             name: user-ca-bundle
                             namespace: openshift-config
                             data:
                               ca-bundle.crt: |
                                 -----BEGIN CERTIFICATE-----
                                 Custom CA certificate bundle.
                                 -----END CERTIFICATE-----
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                      type: object
                    scheduler:
                      description: |-
                        scheduler holds cluster-wide config information to run the Kubernetes Scheduler
                        and influence its placement decisions. The canonical name for this config is `cluster`.
                      properties:
                        defaultNodeSelector:
                          description: |-
                            defaultNodeSelector helps set the cluster-wide default node selector to
                            restrict pod placement to specific nodes. This is applied to the pods
                            created in all namespaces and creates an intersection with any existing
                            nodeSelectors already set on a pod, additionally constraining that pod's selector.
                            For example,
                            defaultNodeSelector: "type=user-node,region=east" would set nodeSelector
                            field in pod spec to "type=user-node,region=east" to all pods created
                            in all namespaces. Namespaces having project-wide node selectors won't be
                            impacted even if this field is set. This adds an annotation section to
                            the namespace.
                            For example, if a new namespace is created with
                            node-selector='type=user-node,region=east',
                            the annotation openshift.io/node-selector: type=user-node,region=east
                            gets added to the project. When the openshift.io/node-selector annotation
                            is set on the project the value is used in preference to the value we are setting
                            for defaultNodeSelector field.
                            For instance,
                            openshift.io/node-selector: "type=user-node,region=west" means
                            that the default of "type=user-node,region=east" set in defaultNodeSelector
                            would not be applied.
                          type: string
                        mastersSchedulable:
                          description: |-
                            mastersSchedulable allows masters nodes to be schedulable. When this flag is
                            turned on, all the master nodes in the cluster will be made schedulable,
                            so that workload pods can run on them. The default value for this field is false,
                            meaning none of the master nodes are schedulable.
                            Important Note: Once the workload pods start running on the master nodes,
                            extreme care must be taken to ensure that cluster-critical control plane components
                            are not impacted.
                            Please turn on this field after doing due diligence.
                          type: boolean
                        policy:
                          description: |-
                            DEPRECATED: the scheduler Policy API has been deprecated and will be removed in a future release.
                            policy is a reference to a ConfigMap containing scheduler policy which has
                            user specified predicates and priorities. If this ConfigMap is not available
                            scheduler will default to use DefaultAlgorithmProvider.
                            The namespace for this configmap is openshift-config.
                          properties:
                            name:
                              description: name is the metadata.name of the referenced config map
                              type: string
                          required:
                            - name
                          type: object
                        profile:
                          description: |-
                            profile sets which scheduling profile should be set in order to configure scheduling
                            decisions for new pods.

                            Valid values are "LowNodeUtilization", "HighNodeUtilization", "NoScoring"
                            Defaults to "LowNodeUtilization"
                          enum:
                            - ""
                            - LowNodeUtilization
                            - HighNodeUtilization
                            - NoScoring
                          type: string
                        profileCustomizations:
                          description: profileCustomizations contains configuration for modifying the default behavior of existing scheduler profiles.
                          properties:
                            dynamicResourceAllocation:
                              description: |-
                                dynamicResourceAllocation allows to enable or disable dynamic resource allocation within the scheduler.
                                Dynamic resource allocation is an API for requesting and sharing resources between pods and containers inside a pod.
                                Third-party resource drivers are responsible for tracking and allocating resources.
                                Different kinds of resources support arbitrary parameters for defining requirements and initialization.
                                Valid values are Enabled, Disabled and omitted.
                                When omitted, this means no opinion and the platform is left to choose a reasonable default,
                                which is subject to change over time.
                                The current default is Disabled.
                              enum:
                                - ""
                                - Enabled
                                - Disabled
                              type: string
                          type: object
                      type: object
                  type: object
                controlPlaneReleaseImage:
                  description: |-
                    controlPlaneReleaseImage specifies the desired OCP release payload for
                    control plane components running on the management cluster.
                    If not defined, ReleaseImage is used
                  maxLength: 255
                  type: string
                controllerAvailabilityPolicy:
                  default: HighlyAvailable
                  description: |-
                    controllerAvailabilityPolicy specifies the availability policy applied to
                    critical control plane components. The default value is SingleReplica.
                  enum:
                    - HighlyAvailable
                    - SingleReplica
                  type: string
                  x-kubernetes-validations:
                    - message: ControllerAvailabilityPolicy is immutable
                      rule: self == oldSelf
                dns:
                  description: dns is the DNS configuration for the cluster.
                  properties:
                    baseDomain:
                      description: |-
                        baseDomain is the base domain of the hosted cluster.
                        It will be used to configure ingress in the hosted cluster through the subdomain baseDomainPrefix.baseDomain.
                        If baseDomainPrefix is omitted, the hostedCluster.name will be used as the subdomain.
                        Once set, this field is immutable.
                        When the value is the empty string "", the controller might default to a value depending on the platform.
                      maxLength: 253
                      type: string
                      x-kubernetes-validations:
                        - message: baseDomain must be a valid domain name (e.g., example, example.com, sub.example.com)
                          rule: self == "" || self.matches('^(?:(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}|[a-zA-Z0-9-]+)$')
                        - message: baseDomain is immutable
                          rule: oldSelf == "" || self == oldSelf
                    baseDomainPrefix:
                      description: |-
                        baseDomainPrefix is the base domain prefix for the hosted cluster ingress.
                        It will be used to configure ingress in the hosted cluster through the subdomain baseDomainPrefix.baseDomain.
                        If baseDomainPrefix is omitted, the hostedCluster.name will be used as the subdomain.
                        Set baseDomainPrefix to an empty string "", if you don't want a prefix at all (not even hostedCluster.name) to be prepended to baseDomain.
                        This field is immutable.
                      maxLength: 253
                      type: string
                      x-kubernetes-validations:
                        - message: baseDomainPrefix must be a valid domain name (e.g., example, example.com, sub.example.com)
                          rule: self == "" || self.matches('^(?:(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}|[a-zA-Z0-9-]+)$')
                        - message: baseDomainPrefix is immutable
                          rule: self == oldSelf
                    privateZoneID:
                      description: |-
                        privateZoneID is the Hosted Zone ID where all the DNS records that are only available internally to the cluster exist.
                        This field is optional and mainly leveraged in cloud environments where the DNS records for the .baseDomain are created by controllers in this zone.
                        Once set, this value is immutable.
                      maxLength: 253
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                        - message: privateZoneID is immutable
                          rule: oldSelf == "" || self == oldSelf
                    publicZoneID:
                      description: |-
                        publicZoneID is the Hosted Zone ID where all the DNS records that are publicly accessible to the internet exist.
                        This field is optional and mainly leveraged in cloud environments where the DNS records for the .baseDomain are created by controllers in this zone.
                        Once set, this value is immutable.
                      maxLength: 253
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                        - message: publicZoneID is immutable
                          rule: oldSelf == "" || self == oldSelf
                  required:
                    - baseDomain
                  type: object
                etcd:
                  description: |-
                    etcd contains metadata about the etcd cluster the hypershift managed Openshift control plane components
                    use to store data.
                  properties:
                    managed:
                      description: managed specifies the behavior of an etcd cluster managed by HyperShift.
                      properties:
                        storage:
                          description: storage specifies how etcd data is persisted.
                          properties:
                            persistentVolume:
                              description: |-
                                persistentVolume is the configuration for PersistentVolume etcd storage.
                                With this implementation, a PersistentVolume will be allocated for every
                                etcd member (either 1 or 3 depending on the HostedCluster control plane
                                availability configuration).
                              properties:
                                size:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  default: 8Gi
                                  description: |-
                                    size is the minimum size of the data volume for each etcd member.
                                    Default is 8Gi.
                                    This field is immutable
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                  x-kubernetes-validations:
                                    - message: Etcd PV storage size is immutable
                                      rule: self == oldSelf
                                storageClassName:
                                  description: |-
                                    storageClassName is the StorageClass of the data volume for each etcd member.
                                    See https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1.
                                  maxLength: 255
                                  type: string
                                  x-kubernetes-validations:
                                    - message: storageClassName is immutable
                                      rule: self == oldSelf
                              type: object
                            restoreSnapshotURL:
                              description: |-
                                restoreSnapshotURL allows an optional URL to be provided where
                                an etcd snapshot can be downloaded, for example a pre-signed URL
                                referencing a storage service.
                                This snapshot will be restored on initial startup, only when the etcd PV
                                is empty.
                              items:
                                maxLength: 1024
                                type: string
                              maxItems: 1
                              type: array
                              x-kubernetes-list-type: set
                              x-kubernetes-validations:
                                - message: RestoreSnapshotURL shouldn't contain more than 1 entry
                                  rule: self.size() <= 1
                            type:
                              description: |-
                                type is the kind of persistent storage implementation to use for etcd.
                                Only PersistentVolume is supported at the moment.
                              enum:
                                - PersistentVolume
                              type: string
                          required:
                            - type
                          type: object
                      required:
                        - storage
                      type: object
                    managementType:
                      description: |-
                        managementType defines how the etcd cluster is managed.
                        This can be either Managed or Unmanaged.
                        This field is immutable.
                      enum:
                        - Managed
                        - Unmanaged
                      type: string
                      x-kubernetes-validations:
                        - message: managementType is immutable
                          rule: self == oldSelf
                    unmanaged:
                      description: |-
                        unmanaged specifies configuration which enables the control plane to
                        integrate with an externally managed etcd cluster.
                      properties:
                        endpoint:
                          description: |-
                            endpoint is the full etcd cluster client endpoint URL. For example:

                                https://etcd-client:2379

                            If the URL uses an HTTPS scheme, the TLS field is required.
                          maxLength: 255
                          pattern: ^https://
                          type: string
                        tls:
                          description: tls specifies TLS configuration for HTTPS etcd client endpoints.
                          properties:
                            clientSecret:
                              description: |-
                                clientSecret refers to a secret for client mTLS authentication with the etcd cluster. It
                                may have the following key/value pairs:

                                    etcd-client-ca.crt: Certificate Authority value
                                    etcd-client.crt: Client certificate value
                                    etcd-client.key: Client certificate key value
                              properties:
                                name:
                                  default: ""
                                  description: |-
                                    Name of the referent.
                                    This field is effectively required, but due to backwards compatibility is
                                    allowed to be empty. Instances of this type with an empty value here are
                                    almost certainly wrong.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                          required:
                            - clientSecret
                          type: object
                      required:
                        - endpoint
                        - tls
                      type: object
                  required:
                    - managementType
                  type: object
                  x-kubernetes-validations:
                    - message: Only managed configuration must be set when managementType is Managed
                      rule: 'self.managementType == ''Managed'' ? has(self.managed) : !has(self.managed)'
                    - message: Only unmanaged configuration must be set when managementType is Unmanaged
                      rule: 'self.managementType == ''Unmanaged'' ? has(self.unmanaged) : !has(self.unmanaged)'
                fips:
                  description: fips specifies if the nodes for the cluster will be running in FIPS mode
                  type: boolean
                imageContentSources:
                  description: imageContentSources lists sources/repositories for the release-image content.
                  items:
                    description: |-
                      ImageContentSource specifies image mirrors that can be used by cluster nodes
                      to pull content. For cluster workloads, if a container image registry host of
                      the pullspec matches Source then one of the Mirrors are substituted as hosts
                      in the pullspec and tried in order to fetch the image.
                    properties:
                      mirrors:
                        description: mirrors are one or more repositories that may also contain the same images.
                        items:
                          maxLength: 255
                          type: string
                        maxItems: 255
                        type: array
                        x-kubernetes-list-type: set
                      source:
                        description: |-
                          source is the repository that users refer to, e.g. in image pull
                          specifications.
                        maxLength: 255
                        type: string
                    required:
                      - source
                    type: object
                  maxItems: 255
                  type: array
                infraID:
                  description: infraID is the unique id that identifies the cluster internally.
                  maxLength: 255
                  type: string
                infrastructureAvailabilityPolicy:
                  default: SingleReplica
                  description: |-
                    infrastructureAvailabilityPolicy specifies the availability policy applied
                    to infrastructure services which run on cluster nodes. The default value is
                    SingleReplica.
                  enum:
                    - HighlyAvailable
                    - SingleReplica
                  type: string
                issuerURL:
                  description: |-
                    issuerURL is an OIDC issuer URL which is used as the issuer in all
                    ServiceAccount tokens generated by the control plane API server. The
                    default value is kubernetes.default.svc, which only works for in-cluster
                    validation.
                  maxLength: 255
                  type: string
                kubeAPIServerDNSName:
                  description: |-
                    kubeAPIServerDNSName specifies a desired DNS name to resolve to the KAS.
                    When set, the controller will automatically generate a secret with kubeconfig and expose it in the hostedCluster Status.customKubeconfig field.
                    If it's set or removed day 2, the kubeconfig generated secret will be created, recreated or deleted.
                    The DNS entries should be resolvable from the cluster, so this should be manually configured in the DNS provider.
                    This field works in conjunction with configuration.APIServer.ServingCerts.NamedCertificates to enable
                    access to the API server via a custom domain name. The NamedCertificates provide the TLS certificates
                    for the custom domain, while this field triggers the generation of a kubeconfig that uses those certificates.
                  maxLength: 253
                  type: string
                  x-kubernetes-validations:
                    - message: kubeAPIServerDNSName must be a valid URL name (e.g., api.example.com)
                      rule: self == "" || self.matches('^(?:(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}|[a-zA-Z0-9-]+)$')
                kubeconfig:
                  description: kubeconfig specifies the name and key for the kubeconfig secret
                  properties:
                    key:
                      description: key is the key in the secret containing the kubeconfig.
                      maxLength: 255
                      type: string
                    name:
                      description: name is the name of the secret containing the kubeconfig.
                      maxLength: 255
                      type: string
                  required:
                    - key
                    - name
                  type: object
                labels:
                  additionalProperties:
                    type: string
                  description: |-
                    labels when specified, define what custom labels are added to the hcp pods.
                    Changing this day 2 will cause a rollout of all hcp pods.
                    Duplicate keys are not supported. If duplicate keys are defined, only the last key/value pair is preserved.
                    Valid values are those in https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set

                    -kubebuilder:validation:XValidation:rule=`self.all(key, size(key) <= 317 && key.matches('^(([A-Za-z0-9]+(\\.[A-Za-z0-9]+)?)*[A-Za-z0-9]\\/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$'))`, message="label key must have two segments: an optional prefix and name, separated by a slash (/). The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between. The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots (.), not longer than 253 characters in total, followed by a slash (/)"
                    -kubebuilder:validation:XValidation:rule=`self.all(key, size(self[key]) <= 63 && self[key].matches('^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$'))`, message="label value must be 63 characters or less (can be empty), consist of alphanumeric characters, dashes (-), underscores (_) or dots (.), and begin and end with an alphanumeric character"
                  maxProperties: 20
                  type: object
                networking:
                  description: |-
                    networking specifies network configuration for the cluster.
                    Temporarily optional for backward compatibility, required in future releases.
                  properties:
                    apiServer:
                      description: |-
                        apiServer contains advanced network settings for the API server that affect
                        how the APIServer is exposed inside a hosted cluster node.
                      properties:
                        advertiseAddress:
                          description: |-
                            advertiseAddress is the address that pods within the nodes will use to talk to the API
                            server. This is an address associated with the loopback adapter of each
                            node. If not specified, the controller will take default values.
                            The default values will be set as 172.20.0.1 or fd00::1.
                            This value is immutable.
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: advertiseAddress is immutable
                              rule: self == oldSelf
                        allowedCIDRBlocks:
                          description: |-
                            allowedCIDRBlocks is an allow list of CIDR blocks that can access the APIServer.
                            If not specified, traffic is allowed from all addresses.
                            This field is enforced for ARO (Azure Red Hat OpenShift) via the shared-ingress HAProxy.
                            For platforms other than ARO, the enforcement depends on whether the underlying cloud provider supports the Service LoadBalancerSourceRanges field.
                            If the platform does not support LoadBalancerSourceRanges, this field may have no effect.
                          items:
                            maxLength: 43
                            type: string
                            x-kubernetes-validations:
                              - message: cidr must be a valid IPv4 or IPv6 CIDR notation (e.g., 192.168.1.0/24 or 2001:db8::/64)
                                rule: self.matches('^((\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2})$') || self.matches('^([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?/[0-9]{1,3}$')
                          maxItems: 500
                          type: array
                          x-kubernetes-list-type: set
                        port:
                          description: |-
                            port is the port at which the APIServer is exposed inside a node. Other
                            pods using host networking cannot listen on this port.
                            If omitted 6443 is used.
                            This is useful to choose a port other than the default one which might interfere with customer environments e.g. https://github.com/openshift/hypershift/pull/356.
                            Setting this to 443 is possible only for backward compatibility reasons and it's discouraged.
                            Doing so, it would result in the controller overriding the KAS endpoint in the guest cluster having a discrepancy with the KAS Pod and potentially causing temporarily network failures.
                            This value is immutable.
                          format: int32
                          type: integer
                          x-kubernetes-validations:
                            - message: port is immutable
                              rule: self == oldSelf
                      type: object
                    clusterNetwork:
                      default:
                        - cidr: 10.132.0.0/14
                      description: |-
                        clusterNetwork is the list of IP address pools for pods.
                        Defaults to cidr: "10.132.0.0/14".
                        Currently only one entry is supported.
                        This field is immutable.
                      items:
                        description: |-
                          ClusterNetworkEntry is a single IP address block for pod IP blocks. IP blocks
                          are allocated with size 2^HostSubnetLength.
                        properties:
                          cidr:
                            description: cidr is the IP block address pool.
                            maxLength: 43
                            type: string
                            x-kubernetes-validations:
                              - message: cidr must be a valid IPv4 or IPv6 CIDR notation (e.g., 192.168.1.0/24 or 2001:db8::/64)
                                rule: self.matches('^((\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2})$') || self.matches('^([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?/[0-9]{1,3}$')
                          hostPrefix:
                            description: |-
                              hostPrefix is the prefix size to allocate to each node from the CIDR.
                              For example, 24 would allocate 2^(32-24)=2^8=256 addresses to each node. If this
                              field is not used by the plugin, it can be left unset.
                            format: int32
                            type: integer
                        required:
                          - cidr
                        type: object
                      maxItems: 2
                      minItems: 1
                      type: array
                      x-kubernetes-validations:
                        - message: clusterNetwork is immutable and cannot be modified once set.
                          rule: self == oldSelf
                    machineNetwork:
                      description: |-
                        machineNetwork is the list of IP address pools for machines.
                        This might be used among other things to generate appropriate networking security groups in some clouds providers.
                        Currently only one entry or two for dual stack is supported.
                        This field is immutable.
                      items:
                        description: MachineNetworkEntry is a single IP address block for node IP blocks.
                        properties:
                          cidr:
                            description: cidr is the IP block address pool for machines within the cluster.
                            maxLength: 43
                            type: string
                            x-kubernetes-validations:
                              - message: cidr must be a valid IPv4 or IPv6 CIDR notation (e.g., 192.168.1.0/24 or 2001:db8::/64)
                                rule: self.matches('^((\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2})$') || self.matches('^([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?/[0-9]{1,3}$')
                        required:
                          - cidr
                        type: object
                      maxItems: 2
                      minItems: 1
                      type: array
                      x-kubernetes-validations:
                        - message: machineNetwork is immutable and cannot be modified once set.
                          rule: self == oldSelf
                    networkType:
                      default: OVNKubernetes
                      description: |-
                        networkType specifies the SDN provider used for cluster networking.
                        Defaults to OVNKubernetes.
                        This field is required and immutable.
                        kubebuilder:validation:XValidation:rule="self == oldSelf", message="networkType is immutable"
                      enum:
                        - OpenShiftSDN
                        - Calico
                        - OVNKubernetes
                        - Other
                      type: string
                    serviceNetwork:
                      default:
                        - cidr: 172.31.0.0/16
                      description: |-
                        serviceNetwork is the list of IP address pools for services.
                        Defaults to cidr: "172.31.0.0/16".
                        Currently only one entry is supported.
                        This field is immutable.
                      items:
                        description: ServiceNetworkEntry is a single IP address block for the service network.
                        properties:
                          cidr:
                            description: cidr is the IP block address pool for services within the cluster in CIDR format (e.g., 192.168.1.0/24 or 2001:0db8::/64)
                            maxLength: 43
                            type: string
                            x-kubernetes-validations:
                              - message: cidr must be a valid IPv4 or IPv6 CIDR notation (e.g., 192.168.1.0/24 or 2001:db8::/64)
                                rule: self.matches('^((\\d{1,3}\\.){3}\\d{1,3}/\\d{1,2})$') || self.matches('^([0-9a-fA-F]{0,4}:){2,7}([0-9a-fA-F]{0,4})?/[0-9]{1,3}$')
                        required:
                          - cidr
                        type: object
                      maxItems: 2
                      minItems: 1
                      type: array
                      x-kubernetes-validations:
                        - message: serviceNetwork is immutable and cannot be modified once set.
                          rule: self == oldSelf
                  type: object
                  x-kubernetes-validations:
                    - message: CIDR ranges in machineNetwork, clusterNetwork, and serviceNetwork must be unique and non-overlapping
                      rule: (!has(self.machineNetwork) && self.clusterNetwork.all(c, self.serviceNetwork.all(s, c.cidr != s.cidr)) || (has(self.machineNetwork) && (self.machineNetwork.all(m, self.clusterNetwork.all(c, m.cidr != c.cidr)) && self.machineNetwork.all(m, self.serviceNetwork.all(s, m.cidr != s.cidr)) && self.clusterNetwork.all(c, self.serviceNetwork.all(s, c.cidr != s.cidr)))))
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: nodeSelector when specified, must be true for the pods managed by the HostedCluster to be scheduled.
                  type: object
                olmCatalogPlacement:
                  default: management
                  description: |-
                    olmCatalogPlacement specifies the placement of OLM catalog components. By default,
                    this is set to management and OLM catalog components are deployed onto the management
                    cluster. If set to guest, the OLM catalog components will be deployed onto the guest
                    cluster.
                  enum:
                    - management
                    - guest
                  type: string
                operatorConfiguration:
                  description: operatorConfiguration specifies configuration for individual OCP operators in the cluster.
                  properties:
                    clusterNetworkOperator:
                      description: clusterNetworkOperator specifies the configuration for the Cluster Network Operator in the hosted cluster.
                      properties:
                        disableMultiNetwork:
                          default: false
                          description: |-
                            disableMultiNetwork when set to true disables the Multus CNI plugin and related components
                            in the hosted cluster. This prevents the installation of multus daemon sets in the
                            guest cluster and the multus-admission-controller in the management cluster.
                            Default is false (Multus is enabled).
                            This field is immutable.
                            This field can only be set to true when NetworkType is "Other". Setting it to true
                            with any other NetworkType will result in a validation error during cluster creation.
                          type: boolean
                          x-kubernetes-validations:
                            - message: disableMultiNetwork is immutable
                              rule: self == oldSelf
                        ovnKubernetesConfig:
                          description: |-
                            ovnKubernetesConfig holds OVN-Kubernetes specific configuration.
                            This is only consumed when NetworkType is OVNKubernetes.
                          minProperties: 1
                          properties:
                            ipv4:
                              description: |-
                                ipv4 allows users to configure IP settings for IPv4 connections. When omitted,
                                this means no opinions and the default configuration is used. Check individual
                                fields within ipv4 for details of default values.
                              minProperties: 1
                              properties:
                                internalJoinSubnet:
                                  description: |-
                                    internalJoinSubnet is a v4 subnet used internally by ovn-kubernetes in case the
                                    default one is being already used by something else. It must not overlap with
                                    any other subnet being used by OpenShift or by the node network. The size of the
                                    subnet must be larger than the number of nodes.
                                    The current default value is 100.64.0.0/16
                                    The subnet must be large enough to accommodate one IP per node in your cluster
                                    The value must be in proper IPV4 CIDR format
                                  maxLength: 18
                                  minLength: 9
                                  type: string
                                  x-kubernetes-validations:
                                    - message: Subnet must be in a valid IPv4 CIDR format (e.g., 192.168.1.1/24)
                                      rule: self.matches('^([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$') && self.split('/')[0].split('.').all(oct, int(oct) >= 0 && int(oct) <= 255)
                                    - message: subnet must be in the range /0 to /30 inclusive
                                      rule: self.matches('^.*/[0-9]+$') && int(self.split('/')[1]) <= 30
                                    - message: first IP address octet must not be 0
                                      rule: self.matches('^[0-9]{1,3}\\..*') && int(self.split('/')[0].split('.')[0]) > 0
                                internalTransitSwitchSubnet:
                                  description: |-
                                    internalTransitSwitchSubnet is a v4 subnet in IPV4 CIDR format used internally
                                    by OVN-Kubernetes for the distributed transit switch in the OVN Interconnect
                                    architecture that connects the cluster routers on each node together to enable
                                    east west traffic. The subnet chosen should not overlap with other networks
                                    specified for OVN-Kubernetes as well as other networks used on the host.
                                    When omitted, this means no opinion and the platform is left to choose a reasonable
                                    default which is subject to change over time.
                                    The current default subnet is 100.88.0.0/16
                                    The subnet must be large enough to accommodate one IP per node in your cluster
                                    The value must be in proper IPV4 CIDR format
                                  maxLength: 18
                                  minLength: 9
                                  type: string
                                  x-kubernetes-validations:
                                    - message: Subnet must be in a valid IPv4 CIDR format
                                      rule: self.matches('^([0-9]{1,3}\\.){3}[0-9]{1,3}/([0-9]|[1-2][0-9]|3[0-2])$') && self.split('/')[0].split('.').all(oct, int(oct) >= 0 && int(oct) <= 255)
                                    - message: subnet must be in the range /0 to /30 inclusive
                                      rule: self.matches('^.*/[0-9]+$') && int(self.split('/')[1]) <= 30
                                    - message: first IP address octet must not be 0
                                      rule: self.matches('^[0-9]{1,3}\\..*') && int(self.split('/')[0].split('.')[0]) > 0
                              type: object
                          type: object
                          x-kubernetes-validations:
                            - message: internalJoinSubnet and internalTransitSwitchSubnet must not be the same
                              rule: '!has(self.ipv4) || !has(self.ipv4.internalJoinSubnet) || !has(self.ipv4.internalTransitSwitchSubnet) || self.ipv4.internalJoinSubnet != self.ipv4.internalTransitSwitchSubnet'
                      type: object
                  type: object
                pausedUntil:
                  description: |-
                    pausedUntil is a field that can be used to pause reconciliation on a resource.
                    Either a date can be provided in RFC3339 format or a boolean. If a date is
                    provided: reconciliation is paused on the resource until that date. If the boolean true is
                    provided: reconciliation is paused on the resource until the field is removed.
                  maxLength: 255
                  type: string
                platform:
                  description: platform is the platform configuration for the cluster.
                  properties:
                    agent:
                      description: agent specifies configuration for agent-based installations.
                      properties:
                        agentNamespace:
                          description: agentNamespace is the namespace where to search for Agents for this cluster
                          maxLength: 63
                          type: string
                      required:
                        - agentNamespace
                      type: object
                    aws:
                      description: aws specifies configuration for clusters running on Amazon Web Services.
                      properties:
                        additionalAllowedPrincipals:
                          description: |-
                            additionalAllowedPrincipals specifies a list of additional allowed principal ARNs
                            to be added to the hosted control plane's VPC Endpoint Service to enable additional
                            VPC Endpoint connection requests to be automatically accepted.
                            See https://docs.aws.amazon.com/vpc/latest/privatelink/configure-endpoint-service.html
                            for more details around VPC Endpoint Service allowed principals.
                          items:
                            maxLength: 255
                            type: string
                          maxItems: 25
                          type: array
                        cloudProviderConfig:
                          description: |-
                            cloudProviderConfig specifies AWS networking configuration for the control
                            plane.
                            This is mainly used for cloud provider controller config:
                            https://github.com/kubernetes/kubernetes/blob/f5be5052e3d0808abb904aebd3218fe4a5c2dd82/staging/src/k8s.io/legacy-cloud-providers/aws/aws.go#L1347-L1364
                          properties:
                            subnet:
                              description: subnet is the subnet to use for control plane cloud resources.
                              properties:
                                filters:
                                  description: |-
                                    filters is a set of key/value pairs used to identify a resource
                                    They are applied according to the rules defined by the AWS API:
                                    https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                                  items:
                                    description: Filter is a filter used to identify an AWS resource
                                    properties:
                                      name:
                                        description: name is the name of the filter.
                                        maxLength: 255
                                        type: string
                                      values:
                                        description: values is a list of values for the filter.
                                        items:
                                          maxLength: 255
                                          type: string
                                        maxItems: 50
                                        type: array
                                    required:
                                      - name
                                      - values
                                    type: object
                                  maxItems: 50
                                  type: array
                                id:
                                  description: id of resource
                                  maxLength: 255
                                  type: string
                              type: object
                            vpc:
                              description: vpc is the VPC to use for control plane cloud resources.
                              maxLength: 255
                              type: string
                            zone:
                              description: |-
                                zone is the availability zone where control plane cloud resources are
                                created.
                              maxLength: 255
                              type: string
                          required:
                            - vpc
                          type: object
                        endpointAccess:
                          default: Public
                          description: |-
                            endpointAccess specifies the publishing scope of cluster endpoints. The
                            default is Public.
                          enum:
                            - Public
                            - PublicAndPrivate
                            - Private
                          type: string
                        multiArch:
                          default: false
                          description: |-
                            multiArch specifies whether the Hosted Cluster will be expected to support NodePools with different
                            CPU architectures, i.e., supporting arm64 NodePools and supporting amd64 NodePools on the same Hosted Cluster.
                            Deprecated: This field is no longer used. The HyperShift Operator now performs multi-arch validations
                            automatically despite the platform type. The HyperShift Operator will set HostedCluster.Status.PayloadArch based
                            on the HostedCluster release image. This field is used by the NodePool controller to validate the
                            NodePool.Spec.Arch is supported.
                          type: boolean
                        region:
                          description: |-
                            region is the AWS region in which the cluster resides. This configures the
                            OCP control plane cloud integrations, and is used by NodePool to resolve
                            the correct boot AMI for a given release.
                          maxLength: 255
                          type: string
                        resourceTags:
                          description: |-
                            resourceTags is a list of additional tags to apply to AWS resources created
                            for the cluster. See
                            https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for
                            information on tagging AWS resources. AWS supports a maximum of 50 tags per
                            resource. OpenShift reserves 25 tags for its use, leaving 25 tags available
                            for the user.
                            Changes to this field will be propagated in-place to AWS resources (VPC Endpoints, EC2 instances, initial EBS volumes and default/endpoint security groups).
                            These tags will be propagated to the infrastructure CR in the guest cluster, where other OCP operators might choose to honor this input to reconcile AWS resources created by them.
                            Please consult the official documentation for a list of all AWS resources that support in-place tag updates.
                            These take precedence over tags defined out of band (i.e., tags added manually or by other tools outside of HyperShift) in AWS in case of conflicts.
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources created for the cluster.
                            properties:
                              key:
                                description: key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: |-
                                  value is the value of the tag.

                                  Some AWS service do not support empty values. Since tags are added to
                                  resources in many services, the length of the tag value must meet the
                                  requirements of all services.
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                              - key
                              - value
                            type: object
                          maxItems: 25
                          type: array
                        rolesRef:
                          description: |-
                            rolesRef contains references to various AWS IAM roles required to enable
                            integrations such as OIDC.
                          properties:
                            controlPlaneOperatorARN:
                              description: "controlPlaneOperatorARN  is an ARN value referencing a role appropriate for the Control Plane Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateVpcEndpoint\",\n\t\t\t\t\"ec2:DescribeVpcEndpoints\",\n\t\t\t\t\"ec2:ModifyVpcEndpoint\",\n\t\t\t\t\"ec2:DeleteVpcEndpoints\",\n\t\t\t\t\"ec2:CreateTags\",\n\t\t\t\t\"route53:ListHostedZones\",\n\t\t\t\t\"ec2:CreateSecurityGroup\",\n\t\t\t\t\"ec2:AuthorizeSecurityGroupIngress\",\n\t\t\t\t\"ec2:AuthorizeSecurityGroupEgress\",\n\t\t\t\t\"ec2:DeleteSecurityGroup\",\n\t\t\t\t\"ec2:RevokeSecurityGroupIngress\",\n\t\t\t\t\"ec2:RevokeSecurityGroupEgress\",\n\t\t\t\t\"ec2:DescribeSecurityGroups\",\n\t\t\t\t\"ec2:DescribeVpcs\",\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"route53:ChangeResourceRecordSets\",\n\t\t\t\t\"route53:ListResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:route53:::%s\"\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                            imageRegistryARN:
                              description: "imageRegistryARN is an ARN value referencing a role appropriate for the Image Registry Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"s3:CreateBucket\",\n\t\t\t\t\"s3:DeleteBucket\",\n\t\t\t\t\"s3:PutBucketTagging\",\n\t\t\t\t\"s3:GetBucketTagging\",\n\t\t\t\t\"s3:PutBucketPublicAccessBlock\",\n\t\t\t\t\"s3:GetBucketPublicAccessBlock\",\n\t\t\t\t\"s3:PutEncryptionConfiguration\",\n\t\t\t\t\"s3:GetEncryptionConfiguration\",\n\t\t\t\t\"s3:PutLifecycleConfiguration\",\n\t\t\t\t\"s3:GetLifecycleConfiguration\",\n\t\t\t\t\"s3:GetBucketLocation\",\n\t\t\t\t\"s3:ListBucket\",\n\t\t\t\t\"s3:GetObject\",\n\t\t\t\t\"s3:PutObject\",\n\t\t\t\t\"s3:DeleteObject\",\n\t\t\t\t\"s3:ListBucketMultipartUploads\",\n\t\t\t\t\"s3:AbortMultipartUpload\",\n\t\t\t\t\"s3:ListMultipartUploadParts\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                            ingressARN:
                              description: "ingressARN is an ARN value referencing a role appropriate for the Ingress Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"elasticloadbalancing:DescribeLoadBalancers\",\n\t\t\t\t\"tag:GetResources\",\n\t\t\t\t\"route53:ListHostedZones\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"route53:ChangeResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:route53:::PUBLIC_ZONE_ID\",\n\t\t\t\t\"arn:aws:route53:::PRIVATE_ZONE_ID\"\n\t\t\t]\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                            kubeCloudControllerARN:
                              description: |-
                                kubeCloudControllerARN is an ARN value referencing a role appropriate for the KCM/KCC.
                                Source: https://cloud-provider-aws.sigs.k8s.io/prerequisites/#iam-policies

                                The following is an example of a valid policy document:

                                 {
                                 "Version": "2012-10-17",
                                 "Statement": [
                                   {
                                     "Action": [
                                       "autoscaling:DescribeAutoScalingGroups",
                                       "autoscaling:DescribeLaunchConfigurations",
                                       "autoscaling:DescribeTags",
                                       "ec2:DescribeAvailabilityZones",
                                       "ec2:DescribeInstances",
                                       "ec2:DescribeImages",
                                       "ec2:DescribeRegions",
                                       "ec2:DescribeRouteTables",
                                       "ec2:DescribeSecurityGroups",
                                       "ec2:DescribeSubnets",
                                       "ec2:DescribeVolumes",
                                       "ec2:CreateSecurityGroup",
                                       "ec2:CreateTags",
                                       "ec2:CreateVolume",
                                       "ec2:ModifyInstanceAttribute",
                                       "ec2:ModifyVolume",
                                       "ec2:AttachVolume",
                                       "ec2:AuthorizeSecurityGroupIngress",
                                       "ec2:CreateRoute",
                                       "ec2:DeleteRoute",
                                       "ec2:DeleteSecurityGroup",
                                       "ec2:DeleteVolume",
                                       "ec2:DetachVolume",
                                       "ec2:RevokeSecurityGroupIngress",
                                       "ec2:DescribeVpcs",
                                       "elasticloadbalancing:AddTags",
                                       "elasticloadbalancing:AttachLoadBalancerToSubnets",
                                       "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
                                       "elasticloadbalancing:CreateLoadBalancer",
                                       "elasticloadbalancing:CreateLoadBalancerPolicy",
                                       "elasticloadbalancing:CreateLoadBalancerListeners",
                                       "elasticloadbalancing:ConfigureHealthCheck",
                                       "elasticloadbalancing:DeleteLoadBalancer",
                                       "elasticloadbalancing:DeleteLoadBalancerListeners",
                                       "elasticloadbalancing:DescribeLoadBalancers",
                                       "elasticloadbalancing:DescribeLoadBalancerAttributes",
                                       "elasticloadbalancing:DetachLoadBalancerFromSubnets",
                                       "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                                       "elasticloadbalancing:ModifyLoadBalancerAttributes",
                                       "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                                       "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
                                       "elasticloadbalancing:AddTags",
                                       "elasticloadbalancing:CreateListener",
                                       "elasticloadbalancing:CreateTargetGroup",
                                       "elasticloadbalancing:DeleteListener",
                                       "elasticloadbalancing:DeleteTargetGroup",
                                       "elasticloadbalancing:DeregisterTargets",
                                       "elasticloadbalancing:DescribeListeners",
                                       "elasticloadbalancing:DescribeLoadBalancerPolicies",
                                       "elasticloadbalancing:DescribeTargetGroups",
                                       "elasticloadbalancing:DescribeTargetHealth",
                                       "elasticloadbalancing:ModifyListener",
                                       "elasticloadbalancing:ModifyTargetGroup",
                                       "elasticloadbalancing:RegisterTargets",
                                       "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
                                       "iam:CreateServiceLinkedRole",
                                       "kms:DescribeKey"
                                     ],
                                     "Resource": [
                                       "*"
                                     ],
                                     "Effect": "Allow"
                                   }
                                 ]
                                }
                              maxLength: 2048
                              type: string
                            networkARN:
                              description: "networkARN is an ARN value referencing a role appropriate for the Network Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DescribeInstances\",\n       \"ec2:DescribeInstanceStatus\",\n       \"ec2:DescribeInstanceTypes\",\n       \"ec2:UnassignPrivateIpAddresses\",\n       \"ec2:AssignPrivateIpAddresses\",\n       \"ec2:UnassignIpv6Addresses\",\n       \"ec2:AssignIpv6Addresses\",\n       \"ec2:DescribeSubnets\",\n       \"ec2:DescribeNetworkInterfaces\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                            nodePoolManagementARN:
                              description: "nodePoolManagementARN is an ARN value referencing a role appropriate for the CAPI Controller.\n\nThe following is an example of a valid policy document:\n\n{\n  \"Version\": \"2012-10-17\",\n \"Statement\": [\n   {\n     \"Action\": [\n       \"ec2:AssociateRouteTable\",\n       \"ec2:AttachInternetGateway\",\n       \"ec2:AuthorizeSecurityGroupIngress\",\n       \"ec2:CreateInternetGateway\",\n       \"ec2:CreateNatGateway\",\n       \"ec2:CreateRoute\",\n       \"ec2:CreateRouteTable\",\n       \"ec2:CreateSecurityGroup\",\n       \"ec2:CreateSubnet\",\n       \"ec2:CreateTags\",\n       \"ec2:DeleteInternetGateway\",\n       \"ec2:DeleteNatGateway\",\n       \"ec2:DeleteRouteTable\",\n       \"ec2:DeleteSecurityGroup\",\n       \"ec2:DeleteSubnet\",\n       \"ec2:DeleteTags\",\n       \"ec2:DescribeAccountAttributes\",\n       \"ec2:DescribeAddresses\",\n       \"ec2:DescribeAvailabilityZones\",\n       \"ec2:DescribeImages\",\n       \"ec2:DescribeInstances\",\n       \"ec2:DescribeInternetGateways\",\n       \"ec2:DescribeNatGateways\",\n       \"ec2:DescribeNetworkInterfaces\",\n       \"ec2:DescribeNetworkInterfaceAttribute\",\n       \"ec2:DescribeRouteTables\",\n       \"ec2:DescribeSecurityGroups\",\n       \"ec2:DescribeSubnets\",\n       \"ec2:DescribeVpcs\",\n       \"ec2:DescribeVpcAttribute\",\n       \"ec2:DescribeVolumes\",\n       \"ec2:DetachInternetGateway\",\n       \"ec2:DisassociateRouteTable\",\n       \"ec2:DisassociateAddress\",\n       \"ec2:ModifyInstanceAttribute\",\n       \"ec2:ModifyNetworkInterfaceAttribute\",\n       \"ec2:ModifySubnetAttribute\",\n       \"ec2:RevokeSecurityGroupIngress\",\n       \"ec2:RunInstances\",\n       \"ec2:TerminateInstances\",\n       \"tag:GetResources\",\n       \"ec2:CreateLaunchTemplate\",\n       \"ec2:CreateLaunchTemplateVersion\",\n       \"ec2:DescribeLaunchTemplates\",\n       \"ec2:DescribeLaunchTemplateVersions\",\n       \"ec2:DeleteLaunchTemplate\",\n       \"ec2:DeleteLaunchTemplateVersions\"\n     ],\n     \"Resource\": [\n       \"*\"\n     ],\n     \"Effect\": \"Allow\"\n   },\n   {\n     \"Condition\": {\n       \"StringLike\": {\n         \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n       }\n     },\n     \"Action\": [\n       \"iam:CreateServiceLinkedRole\"\n     ],\n     \"Resource\": [\n       \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"\n     ],\n     \"Effect\": \"Allow\"\n   },\n   {\n     \"Action\": [\n       \"iam:PassRole\"\n     ],\n     \"Resource\": [\n       \"arn:*:iam::*:role/*-worker-role\"\n     ],\n     \"Effect\": \"Allow\"\n   },\n\t  {\n\t  \t\"Effect\": \"Allow\",\n\t  \t\"Action\": [\n\t  \t\t\"kms:Decrypt\",\n\t  \t\t\"kms:ReEncrypt\",\n\t  \t\t\"kms:GenerateDataKeyWithoutPlainText\",\n\t  \t\t\"kms:DescribeKey\"\n\t  \t],\n\t  \t\"Resource\": \"*\"\n\t  },\n\t  {\n\t  \t\"Effect\": \"Allow\",\n\t  \t\"Action\": [\n\t  \t\t\"kms:CreateGrant\"\n\t  \t],\n\t  \t\"Resource\": \"*\",\n\t  \t\"Condition\": {\n\t  \t\t\"Bool\": {\n\t  \t\t\t\"kms:GrantIsForAWSResource\": true\n\t  \t\t}\n\t  \t}\n\t  }\n ]\n}"
                              maxLength: 2048
                              type: string
                            storageARN:
                              description: "storageARN is an ARN value referencing a role appropriate for the Storage Operator.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:AttachVolume\",\n\t\t\t\t\"ec2:CreateSnapshot\",\n\t\t\t\t\"ec2:CreateTags\",\n\t\t\t\t\"ec2:CreateVolume\",\n\t\t\t\t\"ec2:DeleteSnapshot\",\n\t\t\t\t\"ec2:DeleteTags\",\n\t\t\t\t\"ec2:DeleteVolume\",\n\t\t\t\t\"ec2:DescribeInstances\",\n\t\t\t\t\"ec2:DescribeSnapshots\",\n\t\t\t\t\"ec2:DescribeTags\",\n\t\t\t\t\"ec2:DescribeVolumes\",\n\t\t\t\t\"ec2:DescribeVolumesModifications\",\n\t\t\t\t\"ec2:DetachVolume\",\n\t\t\t\t\"ec2:ModifyVolume\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}"
                              maxLength: 2048
                              type: string
                          required:
                            - controlPlaneOperatorARN
                            - imageRegistryARN
                            - ingressARN
                            - kubeCloudControllerARN
                            - networkARN
                            - nodePoolManagementARN
                            - storageARN
                          type: object
                        serviceEndpoints:
                          description: |-
                            serviceEndpoints specifies optional custom endpoints which will override
                            the default service endpoint of specific AWS Services.

                            There must be only one ServiceEndpoint for a given service name.
                          items:
                            description: |-
                              AWSServiceEndpoint stores the configuration for services to
                              override existing defaults of AWS Services.
                            properties:
                              name:
                                description: |-
                                  name is the name of the AWS service.
                                  This must be provided and cannot be empty.
                                maxLength: 255
                                type: string
                              url:
                                description: |-
                                  url is fully qualified URI with scheme https, that overrides the default generated
                                  endpoint for a client.
                                  This must be provided and cannot be empty.
                                maxLength: 2048
                                pattern: ^https://
                                type: string
                            required:
                              - name
                              - url
                            type: object
                          maxItems: 50
                          type: array
                        sharedVPC:
                          description: |-
                            sharedVPC contains fields that must be specified if the HostedCluster must use a VPC that is
                            created in a different AWS account and is shared with the AWS account where the HostedCluster
                            will be created.
                          properties:
                            localZoneID:
                              description: |-
                                localZoneID is the ID of the route53 hosted zone for [cluster-name].hypershift.local that is
                                associated with the HostedCluster's VPC and exists in the VPC owner account.
                              maxLength: 32
                              type: string
                            rolesRef:
                              description: |-
                                rolesRef contains references to roles in the VPC owner account that enable a
                                HostedCluster on a shared VPC.
                              properties:
                                controlPlaneARN:
                                  description: "controlPlaneARN is an ARN value referencing the role in the VPC owner account that allows\nthe control plane operator in the cluster account to create and manage a VPC endpoint, its\ncorresponding Security Group, and DNS records in the hypershift local hosted zone.\n\nThe referenced role must have a trust relationship that allows it to be assumed by the\ncontrol plane operator role in the VPC creator account.\nExample:\n{\n\t \"Version\": \"2012-10-17\",\n\t \"Statement\": [\n\t \t{\n\t \t\t\"Sid\": \"Statement1\",\n\t \t\t\"Effect\": \"Allow\",\n\t \t\t\"Principal\": {\n\t \t\t\t\"AWS\": \"arn:aws:iam::[cluster-creator-account-id]:role/[infra-id]-control-plane-operator\"\n\t \t\t},\n\t \t\t\"Action\": \"sts:AssumeRole\"\n\t \t}\n\t ]\n}\n\nThe following is an example of the policy document for this role.\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateVpcEndpoint\",\n\t\t\t\t\"ec2:DescribeVpcEndpoints\",\n\t\t\t\t\"ec2:ModifyVpcEndpoint\",\n\t\t\t\t\"ec2:DeleteVpcEndpoints\",\n\t\t\t\t\"ec2:CreateTags\",\n\t\t\t\t\"route53:ListHostedZones\",\n\t\t\t\t\"ec2:CreateSecurityGroup\",\n\t\t\t\t\"ec2:AuthorizeSecurityGroupIngress\",\n\t\t\t\t\"ec2:AuthorizeSecurityGroupEgress\",\n\t\t\t\t\"ec2:DeleteSecurityGroup\",\n\t\t\t\t\"ec2:RevokeSecurityGroupIngress\",\n\t\t\t\t\"ec2:RevokeSecurityGroupEgress\",\n\t\t\t\t\"ec2:DescribeSecurityGroups\",\n\t\t\t\t\"ec2:DescribeVpcs\",\n\t\t\t\t\"route53:ChangeResourceRecordSets\",\n\t\t\t\t\"route53:ListResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}"
                                  maxLength: 2048
                                  pattern: ^arn:(aws|aws-cn|aws-us-gov):iam::[0-9]{12}:role\/.*$
                                  type: string
                                ingressARN:
                                  description: "ingressARN is an ARN value referencing the role in the VPC owner account that allows the\ningress operator in the cluster account to create and manage records in the private DNS\nhosted zone.\n\nThe referenced role must have a trust relationship that allows it to be assumed by the\ningress operator role in the VPC creator account.\nExample:\n{\n\t \"Version\": \"2012-10-17\",\n\t \"Statement\": [\n\t \t{\n\t \t\t\"Sid\": \"Statement1\",\n\t \t\t\"Effect\": \"Allow\",\n\t \t\t\"Principal\": {\n\t \t\t\t\"AWS\": \"arn:aws:iam::[cluster-creator-account-id]:role/[infra-id]-openshift-ingress\"\n\t \t\t},\n\t \t\t\"Action\": \"sts:AssumeRole\"\n\t \t}\n\t ]\n}\n\nThe following is an example of the policy document for this role.\n(Based on https://docs.openshift.com/rosa/rosa_install_access_delete_clusters/rosa-shared-vpc-config.html#rosa-sharing-vpc-dns-and-roles_rosa-shared-vpc-config)\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"route53:ListHostedZones\",\n\t\t\t\t\"route53:ListHostedZonesByName\",\n\t\t\t\t\"route53:ChangeTagsForResource\",\n\t\t\t\t\"route53:GetAccountLimit\",\n\t\t\t\t\"route53:GetChange\",\n\t\t\t\t\"route53:GetHostedZone\",\n\t\t\t\t\"route53:ListTagsForResource\",\n\t\t\t\t\"route53:UpdateHostedZoneComment\",\n\t\t\t\t\"tag:GetResources\",\n\t\t\t\t\"tag:UntagResources\"\n\t\t\t\t\"route53:ChangeResourceRecordSets\",\n\t\t\t\t\"route53:ListResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t]\n}"
                                  maxLength: 2048
                                  pattern: ^arn:(aws|aws-cn|aws-us-gov):iam::[0-9]{12}:role\/.*$
                                  type: string
                              required:
                                - controlPlaneARN
                                - ingressARN
                              type: object
                          required:
                            - localZoneID
                            - rolesRef
                          type: object
                      required:
                        - region
                        - rolesRef
                      type: object
                    azure:
                      description: azure defines azure specific settings
                      properties:
                        azureAuthenticationConfig:
                          description: |-
                            azureAuthenticationConfig is the type of Azure authentication configuration to use to authenticate with Azure's
                            Cloud API.
                          properties:
                            azureAuthenticationConfigType:
                              description: |-
                                azureAuthenticationConfigType is the type of identity configuration used in the Hosted Cluster. This field is
                                used to determine which identity configuration is being used. Valid values are "ManagedIdentities" and
                                "WorkloadIdentities".
                              enum:
                                - ManagedIdentities
                                - WorkloadIdentities
                              type: string
                            managedIdentities:
                              description: |-
                                managedIdentities contains the managed identities needed for HCP control plane and data plane components that
                                authenticate with Azure's API.

                                These are required for managed Azure, also known as ARO HCP.
                              properties:
                                controlPlane:
                                  description: |-
                                    controlPlane contains the client IDs of all the managed identities on the HCP control plane needing to
                                    authenticate with Azure's API.
                                  properties:
                                    cloudProvider:
                                      description: |-
                                        cloudProvider is a pre-existing managed identity associated with the azure cloud provider, aka cloud controller
                                        manager.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    controlPlaneOperator:
                                      description: controlPlaneOperator is a pre-existing managed identity associated with the control plane operator.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    disk:
                                      description: disk is a pre-existing managed identity associated with the azure-disk-controller.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    file:
                                      description: file is a pre-existing managed identity associated with the azure-disk-controller.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    imageRegistry:
                                      description: imageRegistry is a pre-existing managed identity associated with the cluster-image-registry-operator.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    ingress:
                                      description: ingress is a pre-existing managed identity associated with the cluster-ingress-operator.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    managedIdentitiesKeyVault:
                                      description: |-
                                        managedIdentitiesKeyVault contains information on the management cluster's managed identities Azure Key Vault.
                                        This Key Vault is where the managed identities certificates are stored. These certificates are pulled out of the
                                        Key Vault by the Secrets Store CSI driver and mounted into a volume on control plane pods requiring
                                        authentication with Azure API.

                                        More information on how the Secrets Store CSI driver works to do this can be found here:
                                        https://learn.microsoft.com/en-us/azure/aks/csi-secrets-store-driver.
                                      properties:
                                        name:
                                          description: name is the name of the Azure Key Vault on the management cluster.
                                          maxLength: 255
                                          type: string
                                        tenantID:
                                          description: tenantID is the tenant ID of the Azure Key Vault on the management cluster.
                                          maxLength: 255
                                          type: string
                                      required:
                                        - name
                                        - tenantID
                                      type: object
                                    network:
                                      description: network is a pre-existing managed identity associated with the cluster-network-operator.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                    nodePoolManagement:
                                      description: nodePoolManagement is a pre-existing managed identity associated with the operator managing the NodePools.
                                      properties:
                                        clientID:
                                          description: |-
                                            clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                            mainly used for CI purposes.
                                          maxLength: 36
                                          minLength: 36
                                          pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                          type: string
                                          x-kubernetes-validations:
                                            - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                              rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                        credentialsSecretName:
                                          description: |-
                                            credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                            format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                            ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                            More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                            credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                            credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                          maxLength: 127
                                          minLength: 1
                                          pattern: ^[a-zA-Z0-9-]+$
                                          type: string
                                        objectEncoding:
                                          allOf:
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                            - enum:
                                                - utf-8
                                                - hex
                                                - base64
                                          default: utf-8
                                          description: |-
                                            objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                            the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                            Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                            unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                            SecretProviderClass custom resource related to the managed identity.

                                            The default value is utf-8.

                                            See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                          type: string
                                      required:
                                        - credentialsSecretName
                                        - objectEncoding
                                      type: object
                                  required:
                                    - cloudProvider
                                    - controlPlaneOperator
                                    - disk
                                    - file
                                    - ingress
                                    - managedIdentitiesKeyVault
                                    - network
                                    - nodePoolManagement
                                  type: object
                                dataPlane:
                                  description: |-
                                    dataPlane contains the client IDs of all the managed identities on the data plane needing to authenticate with
                                    Azure's API.
                                  properties:
                                    diskMSIClientID:
                                      description: diskMSIClientID is the client ID of a pre-existing managed identity ID associated with the CSI Disk driver.
                                      maxLength: 255
                                      type: string
                                    fileMSIClientID:
                                      description: fileMSIClientID is the client ID of a pre-existing managed identity ID associated with the CSI File driver.
                                      maxLength: 255
                                      type: string
                                    imageRegistryMSIClientID:
                                      description: |-
                                        imageRegistryMSIClientID is the client ID of a pre-existing managed identity ID associated with the image
                                        registry controller.
                                      maxLength: 255
                                      type: string
                                  required:
                                    - diskMSIClientID
                                    - fileMSIClientID
                                    - imageRegistryMSIClientID
                                  type: object
                              required:
                                - controlPlane
                                - dataPlane
                              type: object
                            workloadIdentities:
                              description: |-
                                workloadIdentities is a struct of client IDs for each component that needs to authenticate with Azure's API in
                                self-managed Azure. These client IDs are used to authenticate with Azure cloud on both the control plane and data
                                plane.

                                This is required for self-managed Azure.
                              properties:
                                cloudProvider:
                                  description: |-
                                    cloudProvider is the client ID of a federated managed identity, associated with azure-cloud-provider, used in
                                    workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                disk:
                                  description: |-
                                    disk is the client ID of a federated managed identity, associated with cluster-storage-operator-disk,
                                    used in workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                file:
                                  description: |-
                                    file is the client ID of a federated managed identity, associated with cluster-storage-operator-file,
                                    used in workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                imageRegistry:
                                  description: |-
                                    imageRegistry is the client ID of a federated managed identity, associated with cluster-image-registry-operator, used in
                                    workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                ingress:
                                  description: |-
                                    ingress is the client ID of a federated managed identity, associated with cluster-ingress-operator, used in
                                    workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                                nodePoolManagement:
                                  description: |-
                                    nodePoolManagement is the client ID of a federated managed identity, associated with cluster-api-provider-azure, used
                                    in workload identity authentication.
                                  properties:
                                    clientID:
                                      description: clientID is client ID of a federated managed identity used in workload identity authentication
                                      maxLength: 36
                                      minLength: 36
                                      pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                      type: string
                                      x-kubernetes-validations:
                                        - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                          rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                  required:
                                    - clientID
                                  type: object
                              required:
                                - cloudProvider
                                - disk
                                - file
                                - imageRegistry
                                - ingress
                                - nodePoolManagement
                              type: object
                          required:
                            - azureAuthenticationConfigType
                          type: object
                          x-kubernetes-validations:
                            - message: managedIdentities is required when azureAuthenticationConfigType is ManagedIdentities, and forbidden otherwise
                              rule: 'self.azureAuthenticationConfigType == ''ManagedIdentities'' ? has(self.managedIdentities) : !has(self.managedIdentities)'
                            - message: workloadIdentities is required when azureAuthenticationConfigType is WorkloadIdentities, and forbidden otherwise
                              rule: 'self.azureAuthenticationConfigType == ''WorkloadIdentities'' ? has(self.workloadIdentities) : !has(self.workloadIdentities)'
                        cloud:
                          default: AzurePublicCloud
                          description: 'cloud is the cloud environment identifier, valid values could be found here: https://github.com/Azure/go-autorest/blob/4c0e21ca2bbb3251fe7853e6f9df6397f53dd419/autorest/azure/environments.go#L33'
                          enum:
                            - AzurePublicCloud
                            - AzureUSGovernmentCloud
                            - AzureChinaCloud
                            - AzureGermanCloud
                            - AzureStackCloud
                          type: string
                        location:
                          description: |-
                            location is the Azure region in where all the cloud infrastructure resources will be created.

                            Example: eastus
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: Location is immutable
                              rule: self == oldSelf
                        resourceGroup:
                          default: default
                          description: |-
                            resourceGroup is the name of an existing resource group where all cloud resources created by the Hosted
                            Cluster are to be placed. The resource group is expected to exist under the same subscription as SubscriptionID.

                            In ARO HCP, this will be the managed resource group where customer cloud resources will be created.

                            Resource group naming requirements can be found here: https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.ResourceGroup.Name/.

                            Example: if your resource group ID is /subscriptions/<subscriptionID>/resourceGroups/<resourceGroupName>, your
                                     ResourceGroupName is <resourceGroupName>.
                          maxLength: 90
                          pattern: ^[a-zA-Z0-9_()\-\.]{1,89}[a-zA-Z0-9_()\-]$
                          type: string
                          x-kubernetes-validations:
                            - message: ResourceGroupName is immutable
                              rule: self == oldSelf
                        securityGroupID:
                          description: |-
                            securityGroupID is the ID of an existing security group on the SubnetID. This field is provided as part of the
                            configuration for the Azure cloud provider, aka Azure cloud controller manager (CCM). This security group is
                            expected to exist under the same subscription as SubscriptionID.
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: SecurityGroupID is immutable
                              rule: self == oldSelf
                        subnetID:
                          description: |-
                            subnetID is the subnet ID of an existing subnet where the nodes in the nodepool will be created. This can be a
                            different subnet than the one listed in the HostedCluster, HostedCluster.Spec.Platform.Azure.SubnetID, but must
                            exist in the same network, HostedCluster.Spec.Platform.Azure.VnetID, and must exist under the same subscription ID,
                            HostedCluster.Spec.Platform.Azure.SubscriptionID.
                            subnetID is immutable once set.
                            The subnetID should be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}`.
                            The subscriptionId in the encryptionSetID must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                            The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis and must not end with a period (.) character.
                            The vnetName should be between 2 and 64 characters, consisting only of alphanumeric characters, hyphens, underscores and periods and must not end with either a period (.) or hyphen (-) character.
                            The subnetName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores and must start with an alphanumeric character and must not end with a period (.) or hyphen (-) character.
                          maxLength: 355
                          minLength: 1
                          type: string
                          x-kubernetes-validations:
                            - message: encryptionSetID must be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}`
                              rule: size(self.split('/')) == 11 && self.matches('^/subscriptions/.*/resourceGroups/.*/providers/Microsoft.Network/virtualNetworks/.*/subnets/.*$')
                            - message: The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis
                              rule: self.split('/')[4].matches('[a-zA-Z0-9-_\\(\\)\\.]{1,90}')
                            - message: the resourceGroupName in the subnetID must not end with a period (.) character
                              rule: '!self.split(''/'')[4].endsWith(''.'')'
                            - message: The vnetName should be between 2 and 64 characters, consisting only of alphanumeric characters, hyphens, underscores and periods
                              rule: self.split('/')[8].matches('[a-zA-Z0-9-_\\.]{2,64}')
                            - message: the vnetName in the subnetID must not end with either a period (.) or hyphen (-) character
                              rule: '!self.split(''/'')[8].endsWith(''.'') && !self.split(''/'')[8].endsWith(''-'')'
                            - message: The subnetName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores and must start with an alphanumeric character
                              rule: self.split('/')[10].matches('[a-zA-Z0-9][a-zA-Z0-9-_\\.]{0,79}')
                            - message: the subnetName in the subnetID must not end with a period (.) or hyphen (-) character
                              rule: '!self.split(''/'')[10].endsWith(''.'') && !self.split(''/'')[10].endsWith(''-'')'
                            - message: SubnetID is immutable
                              rule: self == oldSelf
                        subscriptionID:
                          description: subscriptionID is a unique identifier for an Azure subscription used to manage resources.
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: SubscriptionID is immutable
                              rule: self == oldSelf
                        tenantID:
                          description: tenantID is a unique identifier for the tenant where Azure resources will be created and managed in.
                          maxLength: 255
                          type: string
                        vnetID:
                          description: |-
                            vnetID is the ID of an existing VNET to use in creating VMs. The VNET can exist in a different resource group
                            other than the one specified in ResourceGroupName, but it must exist under the same subscription as
                            SubscriptionID.

                            In ARO HCP, this will be the ID of the customer provided VNET.

                            Example: /subscriptions/<subscriptionID>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/virtualNetworks/<vnetName>
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - message: VnetID is immutable
                              rule: self == oldSelf
                      required:
                        - azureAuthenticationConfig
                        - location
                        - resourceGroup
                        - securityGroupID
                        - subnetID
                        - subscriptionID
                        - tenantID
                        - vnetID
                      type: object
                    ibmcloud:
                      description: ibmcloud defines IBMCloud specific settings for components
                      properties:
                        providerType:
                          description: providerType is a specific supported infrastructure provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: kubevirt defines KubeVirt specific settings for cluster components.
                      properties:
                        baseDomainPassthrough:
                          description: |-
                            baseDomainPassthrough toggles whether or not an automatically
                            generated base domain for the guest cluster should be used that
                            is a subdomain of the management cluster's *.apps DNS.

                            For the KubeVirt platform, the basedomain can be autogenerated using
                            the *.apps domain of the management/infra hosting cluster
                            This makes the guest cluster's base domain a subdomain of the
                            hypershift infra/mgmt cluster's base domain.

                            Example:
                              Infra/Mgmt cluster's DNS
                                Base: example.com
                                Cluster: mgmt-cluster.example.com
                                Apps:    *.apps.mgmt-cluster.example.com
                              KubeVirt Guest cluster's DNS
                                Base: apps.mgmt-cluster.example.com
                                Cluster: guest.apps.mgmt-cluster.example.com
                                Apps: *.apps.guest.apps.mgmt-cluster.example.com

                            This is possible using OCP wildcard routes
                          type: boolean
                          x-kubernetes-validations:
                            - message: baseDomainPassthrough is immutable
                              rule: self == oldSelf
                        credentials:
                          description: |-
                            credentials defines the client credentials used when creating KubeVirt virtual machines.
                            Defining credentials is only necessary when the KubeVirt virtual machines are being placed
                            on a cluster separate from the one hosting the Hosted Control Plane components.

                            The default behavior when Credentials is not defined is for the KubeVirt VMs to be placed on
                            the same cluster and namespace as the Hosted Control Plane.
                          properties:
                            infraKubeConfigSecret:
                              description: |-
                                infraKubeConfigSecret is a reference to the secret containing the kubeconfig
                                of an external infrastructure cluster for kubevirt provider
                              properties:
                                key:
                                  description: key is the key in the secret containing the kubeconfig.
                                  maxLength: 255
                                  type: string
                                name:
                                  description: name is the name of the secret containing the kubeconfig.
                                  maxLength: 255
                                  type: string
                              required:
                                - key
                                - name
                              type: object
                              x-kubernetes-validations:
                                - message: infraKubeConfigSecret is immutable
                                  rule: self == oldSelf
                            infraNamespace:
                              description: |-
                                infraNamespace is the namespace in the external infrastructure cluster
                                where kubevirt resources will be created
                              maxLength: 255
                              type: string
                              x-kubernetes-validations:
                                - message: infraNamespace is immutable
                                  rule: self == oldSelf
                          required:
                            - infraNamespace
                          type: object
                        generateID:
                          description: |-
                            generateID is used to uniquely apply a name suffix to resources associated with
                            kubevirt infrastructure resources
                          maxLength: 11
                          type: string
                          x-kubernetes-validations:
                            - message: Kubevirt GenerateID is immutable once set
                              rule: self == oldSelf
                        storageDriver:
                          description: |-
                            storageDriver defines how the KubeVirt CSI driver exposes StorageClasses on
                            the infra cluster (hosting the VMs) to the guest cluster.
                          properties:
                            manual:
                              description: |-
                                manual is used to explicitly define how the infra storageclasses are
                                mapped to guest storageclasses
                              properties:
                                storageClassMapping:
                                  description: |-
                                    storageClassMapping maps StorageClasses on the infra cluster hosting
                                    the KubeVirt VMs to StorageClasses that are made available within the
                                    Guest Cluster.

                                    NOTE: It is possible that not all capabilities of an infra cluster's
                                    storageclass will be present for the corresponding guest clusters storageclass.
                                  items:
                                    properties:
                                      group:
                                        description: group contains which group this mapping belongs to.
                                        maxLength: 255
                                        type: string
                                      guestStorageClassName:
                                        description: |-
                                          guestStorageClassName is the name that the corresponding storageclass will
                                          be called within the guest cluster
                                        maxLength: 255
                                        type: string
                                      infraStorageClassName:
                                        description: |-
                                          infraStorageClassName is the name of the infra cluster storage class that
                                          will be exposed to the guest.
                                        maxLength: 255
                                        type: string
                                    required:
                                      - guestStorageClassName
                                      - infraStorageClassName
                                    type: object
                                  maxItems: 50
                                  type: array
                                  x-kubernetes-validations:
                                    - message: storageClassMapping is immutable
                                      rule: self == oldSelf
                                volumeSnapshotClassMapping:
                                  description: |-
                                    volumeSnapshotClassMapping maps VolumeSnapshotClasses on the infra cluster hosting
                                    the KubeVirt VMs to VolumeSnapshotClasses that are made available within the
                                    Guest Cluster.
                                  items:
                                    properties:
                                      group:
                                        description: group contains which group this mapping belongs to.
                                        maxLength: 255
                                        type: string
                                      guestVolumeSnapshotClassName:
                                        description: |-
                                          guestVolumeSnapshotClassName is the name that the corresponding volumeSnapshotClass will
                                          be called within the guest cluster
                                        maxLength: 255
                                        type: string
                                      infraVolumeSnapshotClassName:
                                        description: |-
                                          infraVolumeSnapshotClassName is the name of the infra cluster volume snapshot class that
                                          will be exposed to the guest.
                                        maxLength: 255
                                        type: string
                                    required:
                                      - guestVolumeSnapshotClassName
                                      - infraVolumeSnapshotClassName
                                    type: object
                                  maxItems: 50
                                  type: array
                                  x-kubernetes-validations:
                                    - message: volumeSnapshotClassMapping is immutable
                                      rule: self == oldSelf
                              type: object
                              x-kubernetes-validations:
                                - message: storageDriver.Manual is immutable
                                  rule: self == oldSelf
                            type:
                              default: Default
                              description: type represents the type of kubevirt csi driver configuration to use
                              enum:
                                - None
                                - Default
                                - Manual
                              type: string
                              x-kubernetes-validations:
                                - message: storageDriver.Type is immutable
                                  rule: self == oldSelf
                          type: object
                          x-kubernetes-validations:
                            - message: storageDriver is immutable
                              rule: self == oldSelf
                      type: object
                      x-kubernetes-validations:
                        - message: Kubevirt GenerateID is required once set
                          rule: '!has(oldSelf.generateID) || has(self.generateID)'
                    powervs:
                      description: |-
                        powervs specifies configuration for clusters running on IBMCloud Power VS Service.
                        This field is immutable. Once set, It can't be changed.
                      properties:
                        accountID:
                          description: |-
                            accountID is the IBMCloud account id.
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                        cisInstanceCRN:
                          description: |-
                            cisInstanceCRN is the IBMCloud CIS Service Instance's Cloud Resource Name
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          pattern: '^crn:'
                          type: string
                        imageRegistryOperatorCloudCreds:
                          description: |-
                            imageRegistryOperatorCloudCreds is a reference to a secret containing ibm cloud
                            credentials for image registry operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        ingressOperatorCloudCreds:
                          description: |-
                            ingressOperatorCloudCreds is a reference to a secret containing ibm cloud
                            credentials for ingress operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        kubeCloudControllerCreds:
                          description: |
                            kubeCloudControllerCreds is a reference to a secret containing cloud
                            credentials with permissions matching the cloud controller policy.
                            This field is immutable. Once set, It can't be changed.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        nodePoolManagementCreds:
                          description: |
                            nodePoolManagementCreds is a reference to a secret containing cloud
                            credentials with permissions matching the node pool management policy.
                            This field is immutable. Once set, It can't be changed.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        region:
                          description: |-
                            region is the IBMCloud region in which the cluster resides. This configures the
                            OCP control plane cloud integrations, and is used by NodePool to resolve
                            the correct boot image for a given release.
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                        resourceGroup:
                          description: |-
                            resourceGroup is the IBMCloud Resource Group in which the cluster resides.
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                        serviceInstanceID:
                          description: |-
                            serviceInstanceID is the reference to the Power VS service on which the server instance(VM) will be created.
                            Power VS service is a container for all Power VS instances at a specific geographic region.
                            serviceInstance can be created via IBM Cloud catalog or CLI.
                            ServiceInstanceID is the unique identifier that can be obtained from IBM Cloud UI or IBM Cloud cli.

                            More detail about Power VS service instance.
                            https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server

                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                        storageOperatorCloudCreds:
                          description: |-
                            storageOperatorCloudCreds is a reference to a secret containing ibm cloud
                            credentials for storage operator to get authenticated with ibm cloud.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        subnet:
                          description: |-
                            subnet is the subnet to use for control plane cloud resources.
                            This field is immutable. Once set, It can't be changed.
                          properties:
                            id:
                              description: id of resource
                              maxLength: 255
                              type: string
                            name:
                              description: name of resource
                              maxLength: 255
                              type: string
                          type: object
                        vpc:
                          description: |-
                            vpc specifies IBM Cloud PowerVS Load Balancing configuration for the control
                            plane.
                            This field is immutable. Once set, It can't be changed.
                          properties:
                            name:
                              description: |-
                                name for VPC to used for all the service load balancer.
                                This field is immutable. Once set, It can't be changed.
                              maxLength: 255
                              type: string
                            region:
                              description: |-
                                region is the IBMCloud region in which VPC gets created, this VPC used for all the ingress traffic
                                into the OCP cluster.
                                This field is immutable. Once set, It can't be changed.
                              maxLength: 255
                              type: string
                            subnet:
                              description: |-
                                subnet is the subnet to use for load balancer.
                                This field is immutable. Once set, It can't be changed.
                              maxLength: 255
                              type: string
                            zone:
                              description: |-
                                zone is the availability zone where load balancer cloud resources are
                                created.
                                This field is immutable. Once set, It can't be changed.
                              maxLength: 255
                              type: string
                          required:
                            - name
                            - region
                          type: object
                        zone:
                          description: |-
                            zone is the availability zone where control plane cloud resources are
                            created.
                            This field is immutable. Once set, It can't be changed.
                          maxLength: 255
                          type: string
                      required:
                        - accountID
                        - cisInstanceCRN
                        - imageRegistryOperatorCloudCreds
                        - ingressOperatorCloudCreds
                        - kubeCloudControllerCreds
                        - nodePoolManagementCreds
                        - region
                        - resourceGroup
                        - serviceInstanceID
                        - storageOperatorCloudCreds
                        - subnet
                        - vpc
                        - zone
                      type: object
                    type:
                      description: type is the type of infrastructure provider for the cluster.
                      enum:
                        - AWS
                        - Azure
                        - IBMCloud
                        - KubeVirt
                        - Agent
                        - PowerVS
                        - None
                      maxLength: 100
                      type: string
                      x-kubernetes-validations:
                        - message: Type is immutable
                          rule: self == oldSelf
                  required:
                    - type
                  type: object
                pullSecret:
                  description: pullSecret is a reference to a secret containing the pull secret for the hosted control plane.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                releaseImage:
                  description: releaseImage is the release image applied to the hosted control plane.
                  maxLength: 255
                  type: string
                secretEncryption:
                  description: |-
                    secretEncryption contains metadata about the kubernetes secret encryption strategy being used for the
                    cluster when applicable.
                  properties:
                    aescbc:
                      description: aescbc defines metadata about the AESCBC secret encryption strategy
                      properties:
                        activeKey:
                          description: activeKey defines the active key used to encrypt new secrets
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        backupKey:
                          description: |-
                            backupKey defines the old key during the rotation process so previously created
                            secrets can continue to be decrypted until they are all re-encrypted with the active key.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - activeKey
                      type: object
                    kms:
                      description: kms defines metadata about the kms secret encryption strategy
                      properties:
                        aws:
                          description: aws defines metadata about the configuration of the AWS KMS Secret Encryption provider
                          properties:
                            activeKey:
                              description: activeKey defines the active key used to encrypt new secrets
                              properties:
                                arn:
                                  description: arn is the Amazon Resource Name for the encryption key
                                  maxLength: 2048
                                  pattern: '^arn:'
                                  type: string
                              required:
                                - arn
                              type: object
                            auth:
                              description: auth defines metadata about the management of credentials used to interact with AWS KMS
                              properties:
                                awsKms:
                                  description: "awsKms is an ARN value referencing a role appropriate for managing the auth via the AWS KMS key.\n\nThe following is an example of a valid policy document:\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n   \t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"kms:Encrypt\",\n\t\t\t\t\"kms:Decrypt\",\n\t\t\t\t\"kms:ReEncrypt*\",\n\t\t\t\t\"kms:GenerateDataKey*\",\n\t\t\t\t\"kms:DescribeKey\"\n\t\t\t],\n\t\t\t\"Resource\": %q\n\t\t}\n\t]\n}"
                                  maxLength: 2048
                                  type: string
                              required:
                                - awsKms
                              type: object
                            backupKey:
                              description: |-
                                backupKey defines the old key during the rotation process so previously created
                                secrets can continue to be decrypted until they are all re-encrypted with the active key.
                              properties:
                                arn:
                                  description: arn is the Amazon Resource Name for the encryption key
                                  maxLength: 2048
                                  pattern: '^arn:'
                                  type: string
                              required:
                                - arn
                              type: object
                            region:
                              description: region contains the AWS region
                              maxLength: 255
                              type: string
                          required:
                            - activeKey
                            - auth
                            - region
                          type: object
                        azure:
                          description: azure defines metadata about the configuration of the Azure KMS Secret Encryption provider using Azure key vault
                          properties:
                            activeKey:
                              description: activeKey defines the active key used to encrypt new secrets
                              properties:
                                keyName:
                                  description: keyName is the name of the keyvault key used for encrypt/decrypt
                                  maxLength: 255
                                  type: string
                                keyVaultName:
                                  description: |-
                                    keyVaultName is the name of the keyvault. Must match criteria specified at https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name
                                    Your Microsoft Entra application used to create the cluster must be authorized to access this keyvault, e.g using the AzureCLI:
                                    `az keyvault set-policy -n $KEYVAULT_NAME --key-permissions decrypt encrypt --spn <YOUR APPLICATION CLIENT ID>`
                                  maxLength: 255
                                  type: string
                                keyVersion:
                                  description: keyVersion contains the version of the key to use
                                  maxLength: 255
                                  type: string
                              required:
                                - keyName
                                - keyVaultName
                                - keyVersion
                              type: object
                            backupKey:
                              description: |-
                                backupKey defines the old key during the rotation process so previously created
                                secrets can continue to be decrypted until they are all re-encrypted with the active key.
                              properties:
                                keyName:
                                  description: keyName is the name of the keyvault key used for encrypt/decrypt
                                  maxLength: 255
                                  type: string
                                keyVaultName:
                                  description: |-
                                    keyVaultName is the name of the keyvault. Must match criteria specified at https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name
                                    Your Microsoft Entra application used to create the cluster must be authorized to access this keyvault, e.g using the AzureCLI:
                                    `az keyvault set-policy -n $KEYVAULT_NAME --key-permissions decrypt encrypt --spn <YOUR APPLICATION CLIENT ID>`
                                  maxLength: 255
                                  type: string
                                keyVersion:
                                  description: keyVersion contains the version of the key to use
                                  maxLength: 255
                                  type: string
                              required:
                                - keyName
                                - keyVaultName
                                - keyVersion
                              type: object
                            kms:
                              description: kms is a pre-existing managed identity used to authenticate with Azure KMS.
                              properties:
                                clientID:
                                  description: |-
                                    clientID is the client ID of a managed identity associated with CredentialsSecretName. This field is optional and
                                    mainly used for CI purposes.
                                  maxLength: 36
                                  minLength: 36
                                  pattern: ^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$
                                  type: string
                                  x-kubernetes-validations:
                                    - message: the client ID of a managed identity must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                      rule: self.matches('^[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}$')
                                credentialsSecretName:
                                  description: |-
                                    credentialsSecretName is the name of an Azure Key Vault secret. This field assumes the secret contains the JSON
                                    format of a UserAssignedIdentityCredentials struct. At a minimum, the secret needs to contain the ClientId,
                                    ClientSecret, AuthenticationEndpoint, NotBefore, and NotAfter, and TenantId.

                                    More info on this struct can be found here - https://github.com/Azure/msi-dataplane/blob/63fb37d3a1aaac130120624674df795d2e088083/pkg/dataplane/internal/generated_client.go#L156.

                                    credentialsSecretName must be between 1 and 127 characters and use only alphanumeric characters and hyphens.
                                    credentialsSecretName must also be unique within the Azure Key Vault. See more details here - https://azure.github.io/PSRule.Rules.Azure/en/rules/Azure.KeyVault.SecretName/.
                                  maxLength: 127
                                  minLength: 1
                                  pattern: ^[a-zA-Z0-9-]+$
                                  type: string
                                objectEncoding:
                                  allOf:
                                    - enum:
                                        - utf-8
                                        - hex
                                        - base64
                                    - enum:
                                        - utf-8
                                        - hex
                                        - base64
                                  default: utf-8
                                  description: |-
                                    objectEncoding represents the encoding for the Azure Key Vault secret containing the certificate related to
                                    the managed identity. objectEncoding needs to match the encoding format used when the certificate was stored in the
                                    Azure Key Vault. If objectEncoding doesn't match the encoding format of the certificate, the certificate will
                                    unsuccessfully be read by the Secrets CSI driver and an error will occur. This error will only be visible on the
                                    SecretProviderClass custom resource related to the managed identity.

                                    The default value is utf-8.

                                    See this for more info - https://github.com/Azure/secrets-store-csi-driver-provider-azure/blob/master/website/content/en/getting-started/usage/_index.md
                                  type: string
                              required:
                                - credentialsSecretName
                                - objectEncoding
                              type: object
                          required:
                            - activeKey
                            - kms
                          type: object
                        ibmcloud:
                          description: ibmcloud defines metadata for the IBM Cloud KMS encryption strategy
                          properties:
                            auth:
                              description: auth defines metadata for how authentication is done with IBM Cloud KMS
                              properties:
                                managed:
                                  description: |-
                                    managed defines metadata around the service to service authentication strategy for the IBM Cloud
                                    KMS system (all provider managed).
                                  type: object
                                type:
                                  description: type defines the IBM Cloud KMS authentication strategy
                                  enum:
                                    - Managed
                                    - Unmanaged
                                  type: string
                                unmanaged:
                                  description: unmanaged defines the auth metadata the customer provides to interact with IBM Cloud KMS
                                  properties:
                                    credentials:
                                      description: |-
                                        credentials should reference a secret with a key field of IBMCloudIAMAPIKeySecretKey that contains a apikey to
                                        call IBM Cloud KMS APIs
                                      properties:
                                        name:
                                          default: ""
                                          description: |-
                                            Name of the referent.
                                            This field is effectively required, but due to backwards compatibility is
                                            allowed to be empty. Instances of this type with an empty value here are
                                            almost certainly wrong.
                                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          type: string
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  required:
                                    - credentials
                                  type: object
                              required:
                                - type
                              type: object
                            keyList:
                              description: keyList defines the list of keys used for data encryption
                              items:
                                description: IBMCloudKMSKeyEntry defines metadata for an IBM Cloud KMS encryption key
                                properties:
                                  correlationID:
                                    description: correlationID is an identifier used to track all api call usage from hypershift
                                    maxLength: 255
                                    type: string
                                  crkID:
                                    description: crkID is the customer rook key id
                                    maxLength: 255
                                    type: string
                                  instanceID:
                                    description: instanceID is the id for the key protect instance
                                    maxLength: 255
                                    type: string
                                  keyVersion:
                                    description: |-
                                      keyVersion is a unique number associated with the key. The number increments whenever a new
                                      key is enabled for data encryption.
                                    maximum: 2147483647
                                    minimum: 0
                                    type: integer
                                  url:
                                    description: url is the url to call key protect apis over
                                    maxLength: 2048
                                    pattern: ^https://
                                    type: string
                                required:
                                  - correlationID
                                  - crkID
                                  - instanceID
                                  - keyVersion
                                  - url
                                type: object
                              maxItems: 100
                              type: array
                            region:
                              description: region is the IBM Cloud region
                              maxLength: 255
                              type: string
                          required:
                            - auth
                            - keyList
                            - region
                          type: object
                        provider:
                          description: provider defines the KMS provider
                          enum:
                            - IBMCloud
                            - AWS
                            - Azure
                          type: string
                      required:
                        - provider
                      type: object
                    type:
                      description: type defines the type of kube secret encryption being used
                      enum:
                        - kms
                        - aescbc
                      type: string
                  required:
                    - type
                  type: object
                serviceAccountSigningKey:
                  description: |-
                    serviceAccountSigningKey is a reference to a secret containing the private key
                    used by the service account token issuer. The secret is expected to contain
                    a single key named "key". If not specified, a service account signing key will
                    be generated automatically for the cluster.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                services:
                  description: |-
                    services defines metadata about how control plane services are published
                    in the management cluster.
                  items:
                    description: |-
                      ServicePublishingStrategyMapping specifies how individual control plane services endpoints are published for consumption.
                      This includes APIServer;OAuthServer;Konnectivity;Ignition.
                      If a given service is not present in this list, it will be exposed publicly by default.
                    properties:
                      service:
                        description: |-
                          service identifies the type of service being published.
                          It can be APIServer;OAuthServer;Konnectivity;Ignition
                          OVNSbDb;OIDC are no-op and kept for backward compatibility.
                          This field is immutable.
                        enum:
                          - APIServer
                          - OAuthServer
                          - OIDC
                          - Konnectivity
                          - Ignition
                          - OVNSbDb
                        type: string
                      servicePublishingStrategy:
                        description: servicePublishingStrategy specifies how to publish a service endpoint.
                        properties:
                          loadBalancer:
                            description: loadBalancer configures exposing a service using a dedicated LoadBalancer.
                            properties:
                              hostname:
                                description: |-
                                  hostname is the name of the DNS record that will be created pointing to the LoadBalancer and passed through to consumers of the service.
                                  If omitted, the value will be inferred from the corev1.Service Load balancer type .status.
                                maxLength: 253
                                minLength: 1
                                type: string
                                x-kubernetes-validations:
                                  - message: hostname must be a valid domain name (e.g., example.com)
                                    rule: self.matches('^(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}$')
                            type: object
                          nodePort:
                            description: nodePort configures exposing a service using a NodePort.
                            properties:
                              address:
                                description: address is the host/ip that the NodePort service is exposed over.
                                maxLength: 253
                                minLength: 1
                                type: string
                                x-kubernetes-validations:
                                  - message: address must be a valid hostname, IPv4, or IPv6 address
                                    rule: self.matches('^(([a-zA-Z0-9][-a-zA-Z0-9]*\\.)+[a-zA-Z]{2,}|localhost)$') || self.matches('^((\\d{1,3}\\.){3}\\d{1,3})$') || self.matches('^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$')
                              port:
                                description: |-
                                  port is the port of the NodePort service. If <=0, the port is dynamically
                                  assigned when the service is created.
                                format: int32
                                type: integer
                            required:
                              - address
                            type: object
                          route:
                            description: |-
                              route configures exposing a service using a Route through and an ingress controller behind a cloud Load Balancer.
                              The specifics of the setup are platform dependent.
                            properties:
                              hostname:
                                description: |-
                                  hostname is the name of the DNS record that will be created pointing to the Route and passed through to consumers of the service.
                                  If omitted, the value will be inferred from management ingress.Spec.Domain.
                                maxLength: 253
                                minLength: 1
                                type: string
                                x-kubernetes-validations:
                                  - message: hostname must be a valid domain name (e.g., example.com)
                                    rule: self.matches('^(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,}$')
                            type: object
                          type:
                            description: |-
                              type is the publishing strategy used for the service.
                              It can be LoadBalancer;NodePort;Route;None;S3
                            enum:
                              - LoadBalancer
                              - NodePort
                              - Route
                              - None
                              - S3
                            type: string
                        required:
                          - type
                        type: object
                        x-kubernetes-validations:
                          - message: nodePort is required when type is NodePort, and forbidden otherwise
                            rule: 'self.type == ''NodePort'' ? has(self.nodePort) : !has(self.nodePort)'
                          - message: only route is allowed when type is Route, and forbidden otherwise
                            rule: 'self.type == ''Route'' ? !has(self.nodePort) && !has(self.loadBalancer) : !has(self.route)'
                          - message: only loadBalancer is required when type is LoadBalancer, and forbidden otherwise
                            rule: 'self.type == ''LoadBalancer'' ? !has(self.nodePort) && !has(self.route) : !has(self.loadBalancer)'
                          - message: None does not allowed any configuration for loadBalancer, nodePort, or route
                            rule: 'self.type == ''None'' ? !has(self.nodePort) && !has(self.route) && !has(self.loadBalancer) : true'
                          - message: S3 does not allowed any configuration for loadBalancer, nodePort, or route
                            rule: 'self.type == ''S3'' ? !has(self.nodePort) && !has(self.route) && !has(self.loadBalancer) : true'
                    required:
                      - service
                      - servicePublishingStrategy
                    type: object
                  maxItems: 6
                  type: array
                sshKey:
                  description: sshKey is a reference to a secret containing the SSH key for the hosted control plane.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                tolerations:
                  description: tolerations when specified, define what custom tolerations are added to the hcp pods.
                  items:
                    description: |-
                      The pod this Toleration is attached to tolerates any taint that matches
                      the triple <key,value,effect> using the matching operator <operator>.
                    properties:
                      effect:
                        description: |-
                          Effect indicates the taint effect to match. Empty means match all taint effects.
                          When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: |-
                          Key is the taint key that the toleration applies to. Empty means match all taint keys.
                          If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                        type: string
                      operator:
                        description: |-
                          Operator represents a key's relationship to the value.
                          Valid operators are Exists and Equal. Defaults to Equal.
                          Exists is equivalent to wildcard for value, so that a pod can
                          tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: |-
                          TolerationSeconds represents the period of time the toleration (which must be
                          of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do not evict). Zero and
                          negative values will be treated as 0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: |-
                          Value is the taint value the toleration matches to.
                          If the operator is Exists, the value should be empty, otherwise just a regular string.
                        type: string
                    type: object
                  maxItems: 25
                  type: array
                updateService:
                  description: |-
                    updateService may be used to specify the preferred upstream update service.
                    By default it will use the appropriate update service for the cluster and region.
                  type: string
              required:
                - dns
                - etcd
                - infraID
                - issuerURL
                - platform
                - pullSecret
                - releaseImage
                - services
                - sshKey
              type: object
              x-kubernetes-validations:
                - message: spec.services in body should have at least 4 items or 3 for IBMCloud
                  rule: 'self.platform.type == ''IBMCloud'' ? size(self.services) >= 3 : size(self.services) >= 4'
                - message: disableMultiNetwork can only be set to true when networkType is 'Other'
                  rule: '!has(self.operatorConfiguration) || !has(self.operatorConfiguration.clusterNetworkOperator) || !has(self.operatorConfiguration.clusterNetworkOperator.disableMultiNetwork) || !self.operatorConfiguration.clusterNetworkOperator.disableMultiNetwork || self.networking.networkType == ''Other'''
            status:
              description: status is the status of the HostedControlPlane.
              properties:
                conditions:
                  description: |-
                    conditions contains details for one aspect of the current state of the HostedControlPlane.
                    Current condition types are: "Available"
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  maxItems: 100
                  type: array
                  x-kubernetes-list-map-keys:
                    - type
                  x-kubernetes-list-type: map
                controlPlaneEndpoint:
                  description: |-
                    controlPlaneEndpoint contains the endpoint information by which
                    external clients can access the control plane.  This is populated
                    after the infrastructure is ready.
                  properties:
                    host:
                      description: host is the hostname on which the API server is serving.
                      maxLength: 255
                      type: string
                    port:
                      description: port is the port on which the API server is serving.
                      format: int32
                      type: integer
                  required:
                    - host
                    - port
                  type: object
                customKubeconfig:
                  description: |-
                    customKubeconfig references an external custom kubeconfig secret.
                    This field is populated in the status when a custom kubeconfig secret has been generated
                    for the hosted cluster. It contains the name and key of the secret located in the
                    hostedCluster namespace. This field is only populated when kubeApiExternalName is set.
                    If this field is removed during a day 2 operation, the referenced secret will be deleted
                    and this field will be removed from the hostedCluster status.
                  properties:
                    key:
                      description: key is the key in the secret containing the kubeconfig.
                      maxLength: 255
                      type: string
                    name:
                      description: name is the name of the secret containing the kubeconfig.
                      maxLength: 255
                      type: string
                  required:
                    - key
                    - name
                  type: object
                externalManagedControlPlane:
                  default: true
                  description: |-
                    externalManagedControlPlane indicates to cluster-api that the control plane
                    is managed by an external service.
                    https://github.com/kubernetes-sigs/cluster-api/blob/65e5385bffd71bf4aad3cf34a537f11b217c7fab/controllers/machine_controller.go#L468
                  type: boolean
                initialized:
                  default: false
                  description: |-
                    initialized denotes whether or not the control plane has
                    provided a kubeadm-config.
                    Once this condition is marked true, its value is never changed. See the Ready condition for an indication of
                    the current readiness of the cluster's control plane.
                    This satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L238-L252
                  type: boolean
                kubeConfig:
                  description: |-
                    kubeConfig is a reference to the secret containing the default kubeconfig
                    for this control plane.
                  properties:
                    key:
                      description: key is the key in the secret containing the kubeconfig.
                      maxLength: 255
                      type: string
                    name:
                      description: name is the name of the secret containing the kubeconfig.
                      maxLength: 255
                      type: string
                  required:
                    - key
                    - name
                  type: object
                kubeadminPassword:
                  description: |-
                    kubeadminPassword is a reference to the secret containing the initial kubeadmin password
                    for the guest cluster.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                lastReleaseImageTransitionTime:
                  description: |-
                    lastReleaseImageTransitionTime is the time of the last update to the current
                    releaseImage property.

                    Deprecated: Use versionStatus.history[0].startedTime instead.
                  format: date-time
                  type: string
                nodeCount:
                  description: nodeCount tracks the number of nodes in the HostedControlPlane.
                  type: integer
                oauthCallbackURLTemplate:
                  description: |-
                    oauthCallbackURLTemplate contains a template for the URL to use as a callback
                    for identity providers. The [identity-provider-name] placeholder must be replaced
                    with the name of an identity provider defined on the HostedCluster.
                    This is populated after the infrastructure is ready.
                  maxLength: 255
                  type: string
                platform:
                  description: platform contains platform-specific status of the HostedCluster
                  properties:
                    aws:
                      description: aws contains platform-specific status for AWS
                      properties:
                        defaultWorkerSecurityGroupID:
                          description: |-
                            defaultWorkerSecurityGroupID is the ID of a security group created by
                            the control plane operator. It is always added to worker machines in
                            addition to any security groups specified in the NodePool.
                          maxLength: 255
                          type: string
                      type: object
                  type: object
                ready:
                  default: false
                  description: |-
                    ready denotes that the HostedControlPlane API Server is ready to
                    receive requests
                    This satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L226-L230
                  type: boolean
                releaseImage:
                  description: |-
                    releaseImage is the release image applied to the hosted control plane.

                    Deprecated: Use versionStatus.desired.image instead.
                  maxLength: 255
                  type: string
                version:
                  description: |-
                    version is the semantic version of the release applied by
                    the hosted control plane operator

                    Deprecated: Use versionStatus.desired.version instead.
                  maxLength: 255
                  type: string
                versionStatus:
                  description: |-
                    versionStatus is the status of the release version applied by the
                    hosted control plane operator.
                  properties:
                    availableUpdates:
                      description: |-
                        availableUpdates contains updates recommended for this
                        cluster. Updates which appear in conditionalUpdates but not in
                        availableUpdates may expose this cluster to known issues. This list
                        may be empty if no updates are recommended, if the update service
                        is unavailable, or if an invalid channel has been specified.
                      items:
                        description: Release represents an OpenShift release image and associated metadata.
                        properties:
                          channels:
                            description: |-
                              channels is the set of Cincinnati channels to which the release
                              currently belongs.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: set
                          image:
                            description: |-
                              image is a container image location that contains the update. When this
                              field is part of spec, image is optional if version is specified and the
                              availableUpdates field contains a matching version.
                            type: string
                          url:
                            description: |-
                              url contains information about this release. This URL is set by
                              the 'url' metadata property on a release or the metadata returned by
                              the update API and should be displayed as a link in user
                              interfaces. The URL field may not be set for test or nightly
                              releases.
                            type: string
                          version:
                            description: |-
                              version is a semantic version identifying the update version. When this
                              field is part of spec, version is optional if image is specified.
                            type: string
                        required:
                          - image
                          - version
                        type: object
                      maxItems: 100
                      nullable: true
                      type: array
                    conditionalUpdates:
                      description: |-
                        conditionalUpdates contains the list of updates that may be
                        recommended for this cluster if it meets specific required
                        conditions. Consumers interested in the set of updates that are
                        actually recommended for this cluster should use
                        availableUpdates. This list may be empty if no updates are
                        recommended, if the update service is unavailable, or if an empty
                        or invalid channel has been specified.
                      items:
                        description: |-
                          ConditionalUpdate represents an update which is recommended to some
                          clusters on the version the current cluster is reconciling, but which
                          may not be recommended for the current cluster.
                        properties:
                          conditions:
                            description: |-
                              conditions represents the observations of the conditional update's
                              current status. Known types are:
                              * Recommended, for whether the update is recommended for the current cluster.
                            items:
                              description: Condition contains details for one aspect of the current state of this API Resource.
                              properties:
                                lastTransitionTime:
                                  description: |-
                                    lastTransitionTime is the last time the condition transitioned from one status to another.
                                    This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                                  format: date-time
                                  type: string
                                message:
                                  description: |-
                                    message is a human readable message indicating details about the transition.
                                    This may be an empty string.
                                  maxLength: 32768
                                  type: string
                                observedGeneration:
                                  description: |-
                                    observedGeneration represents the .metadata.generation that the condition was set based upon.
                                    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                    with respect to the current state of the instance.
                                  format: int64
                                  minimum: 0
                                  type: integer
                                reason:
                                  description: |-
                                    reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                    Producers of specific condition types may define expected values and meanings for this field,
                                    and whether the values are considered a guaranteed API.
                                    The value should be a CamelCase string.
                                    This field may not be empty.
                                  maxLength: 1024
                                  minLength: 1
                                  pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                                  type: string
                                status:
                                  description: status of the condition, one of True, False, Unknown.
                                  enum:
                                    - "True"
                                    - "False"
                                    - Unknown
                                  type: string
                                type:
                                  description: type of condition in CamelCase or in foo.example.com/CamelCase.
                                  maxLength: 316
                                  pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                  type: string
                              required:
                                - lastTransitionTime
                                - message
                                - reason
                                - status
                                - type
                              type: object
                            type: array
                            x-kubernetes-list-map-keys:
                              - type
                            x-kubernetes-list-type: map
                          release:
                            description: release is the target of the update.
                            properties:
                              channels:
                                description: |-
                                  channels is the set of Cincinnati channels to which the release
                                  currently belongs.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: set
                              image:
                                description: |-
                                  image is a container image location that contains the update. When this
                                  field is part of spec, image is optional if version is specified and the
                                  availableUpdates field contains a matching version.
                                type: string
                              url:
                                description: |-
                                  url contains information about this release. This URL is set by
                                  the 'url' metadata property on a release or the metadata returned by
                                  the update API and should be displayed as a link in user
                                  interfaces. The URL field may not be set for test or nightly
                                  releases.
                                type: string
                              version:
                                description: |-
                                  version is a semantic version identifying the update version. When this
                                  field is part of spec, version is optional if image is specified.
                                type: string
                            required:
                              - image
                              - version
                            type: object
                          risks:
                            description: |-
                              risks represents the range of issues associated with
                              updating to the target release. The cluster-version
                              operator will evaluate all entries, and only recommend the
                              update if there is at least one entry and all entries
                              recommend the update.
                            items:
                              description: |-
                                ConditionalUpdateRisk represents a reason and cluster-state
                                for not recommending a conditional update.
                              properties:
                                matchingRules:
                                  description: |-
                                    matchingRules is a slice of conditions for deciding which
                                    clusters match the risk and which do not. The slice is
                                    ordered by decreasing precedence. The cluster-version
                                    operator will walk the slice in order, and stop after the
                                    first it can successfully evaluate. If no condition can be
                                    successfully evaluated, the update will not be recommended.
                                  items:
                                    description: |-
                                      ClusterCondition is a union of typed cluster conditions.  The 'type'
                                      property determines which of the type-specific properties are relevant.
                                      When evaluated on a cluster, the condition may match, not match, or
                                      fail to evaluate.
                                    properties:
                                      promql:
                                        description: promql represents a cluster condition based on PromQL.
                                        properties:
                                          promql:
                                            description: |-
                                              promql is a PromQL query classifying clusters. This query
                                              query should return a 1 in the match case and a 0 in the
                                              does-not-match case. Queries which return no time
                                              series, or which return values besides 0 or 1, are
                                              evaluation failures.
                                            type: string
                                        required:
                                          - promql
                                        type: object
                                      type:
                                        description: |-
                                          type represents the cluster-condition type. This defines
                                          the members and semantics of any additional properties.
                                        enum:
                                          - Always
                                          - PromQL
                                        type: string
                                    required:
                                      - type
                                    type: object
                                  minItems: 1
                                  type: array
                                  x-kubernetes-list-type: atomic
                                message:
                                  description: |-
                                    message provides additional information about the risk of
                                    updating, in the event that matchingRules match the cluster
                                    state. This is only to be consumed by humans. It may
                                    contain Line Feed characters (U+000A), which should be
                                    rendered as new lines.
                                  minLength: 1
                                  type: string
                                name:
                                  description: |-
                                    name is the CamelCase reason for not recommending a
                                    conditional update, in the event that matchingRules match the
                                    cluster state.
                                  minLength: 1
                                  type: string
                                url:
                                  description: url contains information about this risk.
                                  format: uri
                                  minLength: 1
                                  type: string
                              required:
                                - matchingRules
                                - message
                                - name
                                - url
                              type: object
                            minItems: 1
                            type: array
                            x-kubernetes-list-map-keys:
                              - name
                            x-kubernetes-list-type: map
                        required:
                          - release
                          - risks
                        type: object
                      maxItems: 100
                      type: array
                      x-kubernetes-list-type: atomic
                    desired:
                      description: |-
                        desired is the version that the cluster is reconciling towards.
                        If the cluster is not yet fully initialized desired will be set
                        with the information available, which may be an image or a tag.
                      properties:
                        channels:
                          description: |-
                            channels is the set of Cincinnati channels to which the release
                            currently belongs.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: set
                        image:
                          description: |-
                            image is a container image location that contains the update. When this
                            field is part of spec, image is optional if version is specified and the
                            availableUpdates field contains a matching version.
                          type: string
                        url:
                          description: |-
                            url contains information about this release. This URL is set by
                            the 'url' metadata property on a release or the metadata returned by
                            the update API and should be displayed as a link in user
                            interfaces. The URL field may not be set for test or nightly
                            releases.
                          type: string
                        version:
                          description: |-
                            version is a semantic version identifying the update version. When this
                            field is part of spec, version is optional if image is specified.
                          type: string
                      required:
                        - image
                        - version
                      type: object
                    history:
                      description: |-
                        history contains a list of the most recent versions applied to the cluster.
                        This value may be empty during cluster startup, and then will be updated
                        when a new update is being applied. The newest update is first in the
                        list and it is ordered by recency. Updates in the history have state
                        Completed if the rollout completed - if an update was failing or halfway
                        applied the state will be Partial. Only a limited amount of update history
                        is preserved.
                      items:
                        description: UpdateHistory is a single attempted update to the cluster.
                        properties:
                          acceptedRisks:
                            description: |-
                              acceptedRisks records risks which were accepted to initiate the update.
                              For example, it may menition an Upgradeable=False or missing signature
                              that was overriden via desiredUpdate.force, or an update that was
                              initiated despite not being in the availableUpdates set of recommended
                              update targets.
                            type: string
                          completionTime:
                            description: |-
                              completionTime, if set, is when the update was fully applied. The update
                              that is currently being applied will have a null completion time.
                              Completion time will always be set for entries that are not the current
                              update (usually to the started time of the next update).
                            format: date-time
                            nullable: true
                            type: string
                          image:
                            description: |-
                              image is a container image location that contains the update. This value
                              is always populated.
                            type: string
                          startedTime:
                            description: startedTime is the time at which the update was started.
                            format: date-time
                            type: string
                          state:
                            description: |-
                              state reflects whether the update was fully applied. The Partial state
                              indicates the update is not fully applied, while the Completed state
                              indicates the update was successfully rolled out at least once (all
                              parts of the update successfully applied).
                            type: string
                          verified:
                            description: |-
                              verified indicates whether the provided update was properly verified
                              before it was installed. If this is false the cluster may not be trusted.
                              Verified does not cover upgradeable checks that depend on the cluster
                              state at the time when the update target was accepted.
                            type: boolean
                          version:
                            description: |-
                              version is a semantic version identifying the update version. If the
                              requested image does not define a version, or if a failure occurs
                              retrieving the image, this value may be empty.
                            type: string
                        required:
                          - completionTime
                          - image
                          - startedTime
                          - state
                          - verified
                        type: object
                      type: array
                    observedGeneration:
                      description: |-
                        observedGeneration reports which version of the spec is being synced.
                        If this value is not equal to metadata.generation, then the desired
                        and conditions fields may represent a previous version.
                      format: int64
                      type: integer
                  required:
                    - availableUpdates
                    - desired
                    - observedGeneration
                  type: object
              required:
                - initialized
                - ready
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: nodepools.hypershift.openshift.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: operator
          namespace: hypershift
          path: /convert
          port: 443
      conversionReviewVersions:
        - v1beta1
        - v1alpha1
  group: hypershift.openshift.io
  names:
    kind: NodePool
    listKind: NodePoolList
    plural: nodepools
    shortNames:
      - np
      - nps
    singular: nodepool
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Cluster
          jsonPath: .spec.clusterName
          name: Cluster
          type: string
        - description: Desired Nodes
          jsonPath: .spec.replicas
          name: Desired Nodes
          type: integer
        - description: Available Nodes
          jsonPath: .status.replicas
          name: Current Nodes
          type: integer
        - description: Autoscaling Enabled
          jsonPath: .status.conditions[?(@.type=="AutoscalingEnabled")].status
          name: Autoscaling
          type: string
        - description: Node Autorepair Enabled
          jsonPath: .status.conditions[?(@.type=="AutorepairEnabled")].status
          name: Autorepair
          type: string
        - description: Current version
          jsonPath: .status.version
          name: Version
          type: string
        - description: UpdatingVersion in progress
          jsonPath: .status.conditions[?(@.type=="UpdatingVersion")].status
          name: UpdatingVersion
          type: string
        - description: UpdatingConfig in progress
          jsonPath: .status.conditions[?(@.type=="UpdatingConfig")].status
          name: UpdatingConfig
          type: string
        - description: Message
          jsonPath: .status.conditions[?(@.type=="Ready")].message
          name: Message
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: |-
            NodePool is a scalable set of worker nodes attached to a HostedCluster.
            NodePool machine architectures are uniform within a given pool, and are
            independent of the control plane's underlying machine architecture.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: spec is the desired behavior of the NodePool.
              properties:
                arch:
                  default: amd64
                  description: "arch is the preferred processor architecture for the NodePool. Different platforms might have different supported architectures.\n\thttps://github.com/kubernetes/kubernetes/issues/108768#issuecomment-1253912215"
                  enum:
                    - arm64
                    - amd64
                    - ppc64le
                  type: string
                  x-kubernetes-validations:
                    - message: Arch is immutable
                      rule: self == oldSelf
                autoScaling:
                  description: |-
                    autoScaling specifies auto-scaling behavior for the NodePool.
                    autoScaling is mutually exclusive with replicas. If replicas is set, this field must be omitted.
                  properties:
                    max:
                      description: max is the maximum number of nodes allowed in the pool. Must be >= 1 and >= Min.
                      format: int32
                      minimum: 1
                      type: integer
                    min:
                      description: min is the minimum number of nodes to maintain in the pool. Must be >= 1 and <= .Max.
                      format: int32
                      minimum: 1
                      type: integer
                  required:
                    - max
                    - min
                  type: object
                  x-kubernetes-validations:
                    - message: max must be equal or greater than min
                      rule: self.max >= self.min
                clusterName:
                  description: |-
                    clusterName is the name of the HostedCluster this NodePool belongs to.
                    If a HostedCluster with this name doesn't exist, the controller will no-op until it exists.
                  maxLength: 253
                  minLength: 1
                  type: string
                  x-kubernetes-validations:
                    - message: ClusterName is immutable
                      rule: self == oldSelf
                    - message: clusterName must consist of lowercase alphanumeric characters or '-', start and end with an alphanumeric character, and be between 1 and 253 characters
                      rule: self.matches('^[a-z0-9]([-a-z0-9]*[a-z0-9])?$')
                config:
                  description: |-
                    config is a list of references to ConfigMaps containing serialized
                    MachineConfig resources to be injected into the ignition configurations of
                    nodes in the NodePool. The MachineConfig API schema is defined here:

                    https://github.com/openshift/machine-config-operator/blob/18963e4f8fe66e8c513ca4b131620760a414997f/pkg/apis/machineconfiguration.openshift.io/v1/types.go#L185

                    Each ConfigMap must have a single key named "config" whose value is the YML
                    with one or more serialized machineconfiguration.openshift.io resources:

                    * KubeletConfig
                    * ContainerRuntimeConfig
                    * MachineConfig
                    * ClusterImagePolicy
                    * ImageContentSourcePolicy
                    * ImageDigestMirrorSet

                    This is validated in the backend and signaled back via validMachineConfig condition.
                    Changing this field will trigger a NodePool rollout.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  maxItems: 10
                  type: array
                management:
                  description: |-
                    management specifies behavior for managing nodes in the pool, such as
                    upgrade strategies and auto-repair behaviors.
                  properties:
                    autoRepair:
                      default: false
                      description: |-
                        autoRepair specifies whether health checks should be enabled for machines in the NodePool. The default is false.
                        Enabling this feature will cause the controller to automatically delete unhealthy machines.
                        The unhealthy criteria is reserved for the controller implementation and subject to change.
                        But generally it's determined by checking the Node ready condition is true and a timeout that might vary depending on the platform provider.
                        AutoRepair will no-op when more than 2 Nodes are unhealthy at the same time. Giving time for the cluster to stabilize or to the user to manually intervene.
                      type: boolean
                    inPlace:
                      description: inPlace is the configuration for in-place upgrades.
                      properties:
                        maxUnavailable:
                          anyOf:
                            - type: integer
                            - type: string
                          description: |-
                            maxUnavailable is the maximum number of nodes that can be unavailable
                            during the update.

                            Value can be an absolute number (ex: 5) or a percentage of desired nodes
                            (ex: 10%).

                            Absolute number is calculated from percentage by rounding down.

                            Defaults to 1.

                            Example: when this is set to 30%, a max of 30% of the nodes can be made
                            unschedulable/unavailable immediately when the update starts. Once a set
                            of nodes is updated, more nodes can be made unschedulable for update,
                            ensuring that the total number of nodes schedulable at all times during
                            the update is at least 70% of desired nodes.
                          x-kubernetes-int-or-string: true
                      type: object
                    replace:
                      default:
                        rollingUpdate:
                          maxSurge: 1
                          maxUnavailable: 0
                        strategy: RollingUpdate
                      description: |-
                        replace is the configuration for rolling upgrades.
                        It defaults to a RollingUpdate strategy with maxSurge of 1 and maxUnavailable of 0.
                      properties:
                        rollingUpdate:
                          description: |-
                            rollingUpdate specifies a rolling update strategy which upgrades nodes by
                            creating new nodes and deleting the old ones.
                          properties:
                            maxSurge:
                              anyOf:
                                - type: integer
                                - type: string
                              description: |-
                                maxSurge is the maximum number of nodes that can be provisioned above the
                                desired number of nodes.

                                Value can be an absolute number (ex: 5) or a percentage of desired nodes
                                (ex: 10%).

                                Absolute number is calculated from percentage by rounding up.

                                This can not be 0 if MaxUnavailable is 0.

                                Defaults to 1.

                                Example: when this is set to 30%, new nodes can be provisioned immediately
                                when the rolling update starts, such that the total number of old and new
                                nodes do not exceed 130% of desired nodes. Once old nodes have been
                                deleted, new nodes can be provisioned, ensuring that total number of nodes
                                running at any time during the update is at most 130% of desired nodes.
                              x-kubernetes-int-or-string: true
                            maxUnavailable:
                              anyOf:
                                - type: integer
                                - type: string
                              description: |-
                                maxUnavailable is the maximum number of nodes that can be unavailable
                                during the update.

                                Value can be an absolute number (ex: 5) or a percentage of desired nodes
                                (ex: 10%).

                                Absolute number is calculated from percentage by rounding down.

                                This can not be 0 if MaxSurge is 0.

                                Defaults to 0.

                                Example: when this is set to 30%, old nodes can be deleted down to 70% of
                                desired nodes immediately when the rolling update starts. Once new nodes
                                are ready, more old nodes be deleted, followed by provisioning new nodes,
                                ensuring that the total number of nodes available at all times during the
                                update is at least 70% of desired nodes.
                              x-kubernetes-int-or-string: true
                          type: object
                        strategy:
                          description: |-
                            strategy is the node replacement strategy for nodes in the pool.
                            In can be either "RollingUpdate" or "OnDelete". RollingUpdate will rollout Nodes honoring maxSurge and maxUnavailable.
                            OnDelete provide more granular control and will replace nodes as the old ones are manually deleted.
                          enum:
                            - RollingUpdate
                            - OnDelete
                          type: string
                      type: object
                      x-kubernetes-validations:
                        - message: The 'rollingUpdate' field can only be set when 'strategy' is 'RollingUpdate'
                          rule: '!has(self.rollingUpdate) || self.strategy == ''RollingUpdate'''
                    upgradeType:
                      description: |-
                        upgradeType specifies the type of strategy for handling upgrades.
                        This can be either "Replace" or "InPlace".
                        "Replace" will update Nodes by recreating the underlying instances.
                        "InPlace" will update Nodes by applying changes to the existing instances. This might or might not result in a reboot.
                      enum:
                        - Replace
                        - InPlace
                      type: string
                      x-kubernetes-validations:
                        - message: UpgradeType is immutable
                          rule: self == oldSelf
                  required:
                    - upgradeType
                  type: object
                  x-kubernetes-validations:
                    - message: The 'inPlace' field can only be set when 'upgradeType' is 'InPlace'
                      rule: '!has(self.inPlace) || self.upgradeType == ''InPlace'''
                nodeDrainTimeout:
                  description: |-
                    nodeDrainTimeout is the maximum amount of time that the controller will spend on retrying to drain a node until it succeeds.
                    The default value is 0, meaning that the node can retry drain without any time limitations.
                    Changing this field propagate inplace into existing Nodes.
                  type: string
                nodeLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    nodeLabels propagates a list of labels to Nodes, only once on creation.
                    Valid values are those in https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set
                  type: object
                nodeVolumeDetachTimeout:
                  description: |-
                    nodeVolumeDetachTimeout is the maximum amount of time that the controller will spend on detaching volumes from a node.
                    The default value is 0, meaning that the volumes will be detached from the node without any time limitations.
                    After the timeout, any remaining attached volumes will be ignored and the removal of the machine will continue.
                    Changing this field propagate inplace into existing Nodes.
                  type: string
                pausedUntil:
                  description: |-
                    pausedUntil is a field that can be used to pause reconciliation on the NodePool controller. Resulting in any change to the NodePool being ignored.
                    Either a date can be provided in RFC3339 format or a boolean as in 'true', 'false', 'True', 'False'. If a date is
                    provided: reconciliation is paused on the resource until that date. If the boolean true is
                    provided: reconciliation is paused on the resource until the field is removed.
                  maxLength: 35
                  minLength: 1
                  type: string
                  x-kubernetes-validations:
                    - message: PausedUntil must be a date in RFC3339 format or 'True', 'true', 'False' or 'false'
                      rule: self.matches('^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.*$') || self in ['true', 'false', 'True', 'False']
                platform:
                  description: |-
                    platform specifies the underlying infrastructure provider for the NodePool
                    and is used to configure platform specific behavior.
                  properties:
                    agent:
                      description: agent specifies the configuration used when using Agent platform.
                      properties:
                        agentLabelSelector:
                          description: |-
                            agentLabelSelector contains labels that must be set on an Agent in order to
                            be selected for a Machine.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    aws:
                      description: aws specifies the configuration used when operating on AWS.
                      properties:
                        ami:
                          description: |-
                            ami is the image id to use for node instances. If unspecified, the default
                            is chosen based on the NodePool release payload image.
                          maxLength: 255
                          type: string
                        instanceProfile:
                          description: instanceProfile is the AWS EC2 instance profile, which is a container for an IAM role that the EC2 instance uses.
                          maxLength: 255
                          type: string
                        instanceType:
                          description: instanceType is an ec2 instance type for node instances (e.g. m5.large).
                          maxLength: 255
                          type: string
                        placement:
                          description: placement specifies the placement options for the EC2 instances.
                          properties:
                            capacityReservation:
                              description: |-
                                capacityReservation specifies Capacity Reservation options for the NodePool instances.

                                Cannot be specified when tenancy is set to "host" as Dedicated Hosts
                                do not support Capacity Reservations. Compatible with "default" and "dedicated" tenancy.
                              properties:
                                id:
                                  description: |-
                                    id specifies the target Capacity Reservation into which the EC2 instances should be launched.
                                    Must follow the format: cr- followed by 17 lowercase hexadecimal characters. For example: cr-0123456789abcdef0
                                    When empty, no specific Capacity Reservation is targeted.

                                    When specified, preference cannot be set to 'None' or 'Open' as these
                                    are mutually exclusive with targeting a specific reservation. Use preference 'CapacityReservationsOnly'
                                    or omit preference field when targeting a specific reservation.
                                  maxLength: 20
                                  type: string
                                  x-kubernetes-validations:
                                    - message: AWS Capacity Reservation ID must start with 'cr-' followed by 17 lowercase hexadecimal characters (e.g., cr-0123456789abcdef0)
                                      rule: self.matches('^cr-[a-f0-9]{17}$')
                                marketType:
                                  description: |-
                                    marketType specifies the market type of the CapacityReservation for the EC2 instances. Valid values are OnDemand, CapacityBlocks and omitted:
                                    - "OnDemand": EC2 instances run as standard On-Demand instances.
                                    - "CapacityBlocks": scheduled pre-purchased compute capacity. Capacity Blocks is recommended when GPUs are needed to support ML workloads.
                                    When omitted, this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time.
                                    The current default value is CapacityBlocks.

                                    When set to 'CapacityBlocks', a specific Capacity Reservation ID must be provided.
                                  enum:
                                    - OnDemand
                                    - CapacityBlocks
                                  type: string
                                preference:
                                  description: |-
                                    preference specifies the preference for use of Capacity Reservations by the instance. Valid values include:
                                    - "": No preference (platform default)
                                    - "Open": The instance may make use of open Capacity Reservations that match its AZ and InstanceType
                                    - "None": The instance may not make use of any Capacity Reservations. This is to conserve open reservations for desired workloads
                                    - "CapacityReservationsOnly": The instance will only run if matched or targeted to a Capacity Reservation

                                    Cannot be set to 'None' or 'Open' when a specific Capacity Reservation ID is provided,
                                    as targeting a specific reservation is mutually exclusive with these general preference settings.
                                  enum:
                                    - ""
                                    - None
                                    - CapacityReservationsOnly
                                    - Open
                                  type: string
                              type: object
                              x-kubernetes-validations:
                                - message: AWS Capacity Reservation preference 'None' or 'Open' is incompatible with specifying a Capacity Reservation ID
                                  rule: 'has(self.id) ? (!has(self.preference) || !(self.preference in [''Open'',''None''])) : true'
                                - message: AWS Capacity Reservation market type 'CapacityBlocks' requires a Capacity Reservation ID
                                  rule: 'has(self.marketType) && self.marketType == ''CapacityBlocks'' ? has(self.id) : true'
                            tenancy:
                              description: |-
                                tenancy indicates if instance should run on shared or single-tenant hardware.

                                Possible values:
                                - "default": NodePool instances run on shared hardware.
                                - "dedicated": Each NodePool instance runs on single-tenant hardware (Dedicated Instances).
                                - "host": NodePool instances run on user's pre-allocated dedicated hosts (Dedicated Hosts).

                                When tenancy is set to "host", capacityReservation cannot be specified
                                as AWS does not support Capacity Reservations with Dedicated Hosts.
                              enum:
                                - default
                                - dedicated
                                - host
                              type: string
                          type: object
                          x-kubernetes-validations:
                            - message: AWS Capacity Reservations cannot be used with Dedicated Hosts (tenancy 'host')
                              rule: 'has(self.tenancy) && self.tenancy == ''host'' ? !has(self.capacityReservation) : true'
                        resourceTags:
                          description: |-
                            resourceTags is an optional list of additional tags to apply to AWS node
                            instances. Changes to this field will be propagated in-place to AWS EC2 instances and their initial EBS volumes.
                            Volumes created by the storage operator and attached to instances after they are created do not get these tags applied.

                            These will be merged with HostedCluster scoped tags, which take precedence in case of conflicts.
                            These take precedence over tags defined out of band (i.e., tags added manually or by other tools outside of HyperShift) in AWS in case of conflicts.

                            See https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for
                            information on tagging AWS resources. AWS supports a maximum of 50 tags per
                            resource. OpenShift reserves 25 tags for its use, leaving 25 tags available
                            for the user.
                          items:
                            description: AWSResourceTag is a tag to apply to AWS resources created for the cluster.
                            properties:
                              key:
                                description: key is the key of the tag.
                                maxLength: 128
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                              value:
                                description: |-
                                  value is the value of the tag.

                                  Some AWS service do not support empty values. Since tags are added to
                                  resources in many services, the length of the tag value must meet the
                                  requirements of all services.
                                maxLength: 256
                                minLength: 1
                                pattern: ^[0-9A-Za-z_.:/=+-@]+$
                                type: string
                            required:
                              - key
                              - value
                            type: object
                          maxItems: 25
                          type: array
                        rootVolume:
                          description: rootVolume specifies configuration for the root volume of node instances.
                          properties:
                            encrypted:
                              description: encrypted indicates whether the EBS volume should be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: encryptionKey is the KMS key to use for volume encryption.
                              maxLength: 2048
                              type: string
                            iops:
                              description: |-
                                iops is the number of IOPS requested for the disk. This is only valid
                                for type io1.
                              format: int64
                              type: integer
                            size:
                              description: |-
                                size is the size of the volume in gibibytes (GiB).

                                Must be greater than the image snapshot size or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            type:
                              description: type is the type of volume to provision.
                              maxLength: 255
                              type: string
                          required:
                            - size
                            - type
                          type: object
                        securityGroups:
                          description: |-
                            securityGroups is an optional set of security groups to associate with node
                            instances.
                          items:
                            description: |-
                              AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                              Only one of ID or Filters may be specified. Specifying more than one will result in
                              a validation error.
                            properties:
                              filters:
                                description: |-
                                  filters is a set of key/value pairs used to identify a resource
                                  They are applied according to the rules defined by the AWS API:
                                  https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                                items:
                                  description: Filter is a filter used to identify an AWS resource
                                  properties:
                                    name:
                                      description: name is the name of the filter.
                                      maxLength: 255
                                      type: string
                                    values:
                                      description: values is a list of values for the filter.
                                      items:
                                        maxLength: 255
                                        type: string
                                      maxItems: 50
                                      type: array
                                  required:
                                    - name
                                    - values
                                  type: object
                                maxItems: 50
                                type: array
                              id:
                                description: id of resource
                                maxLength: 255
                                type: string
                            type: object
                          maxItems: 50
                          type: array
                        subnet:
                          description: subnet is the subnet to use for node instances.
                          properties:
                            filters:
                              description: |-
                                filters is a set of key/value pairs used to identify a resource
                                They are applied according to the rules defined by the AWS API:
                                https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                              items:
                                description: Filter is a filter used to identify an AWS resource
                                properties:
                                  name:
                                    description: name is the name of the filter.
                                    maxLength: 255
                                    type: string
                                  values:
                                    description: values is a list of values for the filter.
                                    items:
                                      maxLength: 255
                                      type: string
                                    maxItems: 50
                                    type: array
                                required:
                                  - name
                                  - values
                                type: object
                              maxItems: 50
                              type: array
                            id:
                              description: id of resource
                              maxLength: 255
                              type: string
                          type: object
                          x-kubernetes-validations:
                            - message: subnet is invalid, a valid subnet id or filters must be set, but not both
                              rule: 'has(self.id) && self.id.startsWith(''subnet-'') ? !has(self.filters) : size(self.filters) > 0'
                      required:
                        - instanceType
                        - subnet
                      type: object
                    azure:
                      description: azure specifies the configuration used when using Azure platform.
                      properties:
                        availabilityZone:
                          description: |-
                            availabilityZone is the failure domain identifier where the VM should be attached to. This must not be specified
                            for clusters in a location that does not support AvailabilityZone because it would cause a failure from Azure API.
                          maxLength: 255
                          type: string
                          x-kubernetes-validations:
                            - rule: self in ['1', '2', '3']
                        diagnostics:
                          description: |-
                            diagnostics specifies the diagnostics settings for a virtual machine.
                            If not specified, then Boot diagnostics will be disabled.
                          properties:
                            storageAccountType:
                              allOf:
                                - enum:
                                    - Managed
                                    - UserManaged
                                    - Disabled
                                - enum:
                                    - Managed
                                    - UserManaged
                                    - Disabled
                              default: Disabled
                              description: |-
                                storageAccountType determines if the storage account for storing the diagnostics data
                                should be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).
                              type: string
                            userManaged:
                              description: userManaged specifies the diagnostics settings for a virtual machine when the storage account is managed by the user.
                              properties:
                                storageAccountURI:
                                  description: |-
                                    storageAccountURI is the URI of the user-managed storage account.
                                    The URI typically will be `https://<mystorageaccountname>.blob.core.windows.net/`
                                    but may differ if you are using Azure DNS zone endpoints.
                                    You can find the correct endpoint by looking for the Blob Primary Endpoint in the
                                    endpoints tab in the Azure console or with the CLI by issuing
                                    `az storage account list --query='[].{name: name, "resource group": resourceGroup, "blob endpoint": primaryEndpoints.blob}'`.
                                  maxLength: 1024
                                  type: string
                                  x-kubernetes-validations:
                                    - message: storageAccountURI must be a valid HTTPS URL
                                      rule: isURL(self) && url(self).getScheme() == 'https'
                              required:
                                - storageAccountURI
                              type: object
                          type: object
                          x-kubernetes-validations:
                            - message: userManaged is required when storageAccountType is UserManaged, and forbidden otherwise
                              rule: 'self.storageAccountType == ''UserManaged'' ? has(self.userManaged) : !has(self.userManaged)'
                        encryptionAtHost:
                          default: Enabled
                          description: |-
                            encryptionAtHost enables encryption at host on virtual machines. According to Microsoft documentation, this
                            means data stored on the VM host is encrypted at rest and flows encrypted to the Storage service. See
                            https://learn.microsoft.com/en-us/azure/virtual-machines/disks-enable-host-based-encryption-portal?tabs=azure-powershell
                            for more information.
                          enum:
                            - Enabled
                            - Disabled
                          type: string
                        image:
                          description: |-
                            image is used to configure the VM boot image. If unset, the default image at the location below will be used and
                            is expected to exist: subscription/<subscriptionID>/resourceGroups/<resourceGroupName>/providers/Microsoft.Compute/images/rhcos.x86_64.vhd.
                            The <subscriptionID> and the <resourceGroupName> are expected to be the same resource group documented in the
                            Hosted Cluster specification respectively, HostedCluster.Spec.Platform.Azure.SubscriptionID and
                            HostedCluster.Spec.Platform.Azure.ResourceGroupName.
                          properties:
                            azureMarketplace:
                              description: azureMarketplace contains the Azure Marketplace image info to use to boot the Azure VMs from.
                              properties:
                                offer:
                                  description: offer specifies the name of a group of related images created by the publisher.
                                  maxLength: 255
                                  minLength: 1
                                  type: string
                                publisher:
                                  description: |-
                                    publisher is the name of the organization that created the image.
                                    It must be between 3 and 50 characters in length, and consist of only lowercase letters, numbers, and hyphens (-) and underscores (_).
                                    It must start with a lowercase letter or a number.
                                  maxLength: 50
                                  minLength: 3
                                  pattern: ^[a-z0-9][a-z0-9-_]{2,49}$
                                  type: string
                                sku:
                                  description: |-
                                    sku specifies an instance of an offer, such as a major release of a distribution.
                                    For example, 22_04-lts-gen2, 8-lvm-gen2.
                                    The value must consist only of lowercase letters, numbers, and hyphens (-) and underscores (_).
                                  maxLength: 255
                                  minLength: 1
                                  pattern: ^[a-z0-9-_]+$
                                  type: string
                                version:
                                  description: |-
                                    version specifies the version of an image sku. The allowed formats are Major.Minor.Build or 'latest'. Major,
                                    Minor, and Build are decimal numbers, e.g. '1.2.0'. Specify 'latest' to use the latest version of an image available at
                                    deployment time. Even if you use 'latest', the VM image will not automatically update after deploy time even if a
                                    new version becomes available.
                                  maxLength: 32
                                  minLength: 1
                                  pattern: ^[0-9]+\.[0-9]+\.[0-9]+$|^latest$
                                  type: string
                              required:
                                - offer
                                - publisher
                                - sku
                                - version
                              type: object
                            imageID:
                              description: imageID is the Azure resource ID of a VHD image to use to boot the Azure VMs from.
                              maxLength: 255
                              type: string
                            type:
                              description: |-
                                type is the type of image data that will be provided to the Azure VM.
                                Valid values are "ImageID" and "AzureMarketplace".
                                ImageID means is used for legacy managed VM images. This is where the user uploads a VM image directly to their resource group.
                                AzureMarketplace means the VM will boot from an Azure Marketplace image.
                                Marketplace images are preconfigured and published by the OS vendors and may include preconfigured software for the VM.
                              enum:
                                - ImageID
                                - AzureMarketplace
                              type: string
                          required:
                            - type
                          type: object
                          x-kubernetes-validations:
                            - message: imageID is required when type is ImageID, and forbidden otherwise
                              rule: 'has(self.type) && self.type == ''ImageID'' ?  has(self.imageID) : !has(self.imageID)'
                            - message: azureMarketplace is required when type is RequiredMember, and forbidden otherwise
                              rule: 'has(self.type) && self.type == ''AzureMarketplace'' ?  has(self.azureMarketplace) : !has(self.azureMarketplace)'
                        osDisk:
                          description: |-
                            osDisk provides configuration for the OS disk for the nodepool.
                            This can be used to configure the size, storage account type, encryption options and whether the disk is persistent or ephemeral.
                            When not provided, the platform will choose reasonable defaults which are subject to change over time.
                            Review the fields within the osDisk for more details.
                          properties:
                            diskStorageAccountType:
                              description: |-
                                diskStorageAccountType is the disk storage account type to use.
                                Valid values are Premium_LRS, PremiumV2_LRS, Standard_LRS, StandardSSD_LRS, UltraSSD_LRS.
                                Note that Standard means a HDD.
                                The disk performance is tied to the disk type, please refer to the Azure documentation for further details
                                https://docs.microsoft.com/en-us/azure/virtual-machines/disks-types#disk-type-comparison.
                                When omitted this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time.
                                The current default is Premium SSD LRS.
                              enum:
                                - Premium_LRS
                                - PremiumV2_LRS
                                - Standard_LRS
                                - StandardSSD_LRS
                                - UltraSSD_LRS
                              type: string
                            encryptionSetID:
                              description: |-
                                encryptionSetID is the ID of the DiskEncryptionSet resource to use to encrypt the OS disks for the VMs.
                                Configuring a DiskEncyptionSet allows greater control over the encryption of the VM OS disk at rest.
                                Can be used with either platform (Azure) managed, or customer managed encryption keys.
                                This needs to exist in the same subscription id listed in the Hosted Cluster, HostedCluster.Spec.Platform.Azure.SubscriptionID.
                                DiskEncryptionSetID should also exist in a resource group under the same subscription id and the same location
                                listed in the Hosted Cluster, HostedCluster.Spec.Platform.Azure.Location.
                                The encryptionSetID should be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Copmute/diskEncryptionSets/{resourceName}`.
                                The subscriptionId in the encryptionSetID must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                                The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis and must not end with a period (.) character.
                                The resourceName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores.
                              maxLength: 285
                              minLength: 1
                              type: string
                              x-kubernetes-validations:
                                - message: encryptionSetID must be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{resourceName}`
                                  rule: size(self.split('/')) == 9 && self.matches('^/subscriptions/.*/resourceGroups/.*/providers/Microsoft.Compute/diskEncryptionSets/.*$')
                                - message: the subscriptionId in the encryptionSetID must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12
                                  rule: self.split('/')[2].matches('^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$')
                                - message: The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis
                                  rule: self.split('/')[4].matches('[a-zA-Z0-9-_\\(\\)\\.]{1,90}')
                                - message: the resourceGroupName in the encryptionSetID must not end with a period (.) character
                                  rule: '!self.split(''/'')[4].endsWith(''.'')'
                                - message: The resourceName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores
                                  rule: self.split('/')[8].matches('[a-zA-Z0-9-_]{1,80}')
                            persistence:
                              description: |-
                                persistence determines whether the OS disk should be persisted beyond the life of the VM.
                                Valid values are Persistent and Ephemeral.
                                When set to Ephmeral, the OS disk will not be persisted to Azure storage and implies restrictions to the VM size and caching type.
                                Full details can be found in the Azure documentation https://learn.microsoft.com/en-us/azure/virtual-machines/ephemeral-os-disks.
                                Ephmeral disks are primarily used for stateless applications, provide lower latency than Persistent disks and also incur no storage costs.
                                When not set, this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time.
                              enum:
                                - Persistent
                                - Ephemeral
                              type: string
                            sizeGiB:
                              description: |-
                                sizeGiB is the size in GiB (1024^3 bytes) to assign to the OS disk.
                                This should be between 16 and 65,536 when using the UltraSSD_LRS storage account type and between 16 and 32,767 when using any other storage account type.
                                When not set, this means no opinion and the platform is left to choose a reasonable default, which is subject to change over time.
                                The current default is 30.
                              format: int32
                              maximum: 65536
                              minimum: 16
                              type: integer
                          type: object
                          x-kubernetes-validations:
                            - message: When not using diskStorageAccountType UltraSSD_LRS, the SizeGB value must be less than or equal to 32,767
                              rule: '!has(self.diskStorageAccountType) || self.diskStorageAccountType != ''UltraSSD_LRS'' || self.sizeGiB <= 32767'
                        subnetID:
                          description: |-
                            subnetID is the subnet ID of an existing subnet where the nodes in the nodepool will be created. This can be a
                            different subnet than the one listed in the HostedCluster, HostedCluster.Spec.Platform.Azure.SubnetID, but must
                            exist in the same network, HostedCluster.Spec.Platform.Azure.VnetID, and must exist under the same subscription ID,
                            HostedCluster.Spec.Platform.Azure.SubscriptionID.
                            subnetID is immutable once set.
                            The subnetID should be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}`.
                            The subscriptionId in the encryptionSetID must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12.
                            The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis and must not end with a period (.) character.
                            The vnetName should be between 2 and 64 characters, consisting only of alphanumeric characters, hyphens, underscores and periods and must not end with either a period (.) or hyphen (-) character.
                            The subnetName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores and must start with an alphanumeric character and must not end with a period (.) or hyphen (-) character.
                          maxLength: 355
                          minLength: 1
                          type: string
                          x-kubernetes-validations:
                            - message: encryptionSetID must be in the format `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}`
                              rule: size(self.split('/')) == 11 && self.matches('^/subscriptions/.*/resourceGroups/.*/providers/Microsoft.Network/virtualNetworks/.*/subnets/.*$')
                            - message: the subscriptionId in the encryptionSetID must be a valid UUID. It should be 5 groups of hyphen separated hexadecimal characters in the form 8-4-4-4-12
                              rule: self.split('/')[2].matches('^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$')
                            - message: The resourceGroupName should be between 1 and 90 characters, consisting only of alphanumeric characters, hyphens, underscores, periods and parenthesis
                              rule: self.split('/')[4].matches('[a-zA-Z0-9-_\\(\\)\\.]{1,90}')
                            - message: the resourceGroupName in the subnetID must not end with a period (.) character
                              rule: '!self.split(''/'')[4].endsWith(''.'')'
                            - message: The vnetName should be between 2 and 64 characters, consisting only of alphanumeric characters, hyphens, underscores and periods
                              rule: self.split('/')[8].matches('[a-zA-Z0-9-_\\.]{2,64}')
                            - message: the vnetName in the subnetID must not end with either a period (.) or hyphen (-) character
                              rule: '!self.split(''/'')[8].endsWith(''.'') && !self.split(''/'')[8].endsWith(''-'')'
                            - message: The subnetName should be between 1 and 80 characters, consisting only of alphanumeric characters, hyphens and underscores and must start with an alphanumeric character
                              rule: self.split('/')[10].matches('[a-zA-Z0-9][a-zA-Z0-9-_\\.]{0,79}')
                            - message: the subnetName in the subnetID must not end with a period (.) or hyphen (-) character
                              rule: '!self.split(''/'')[10].endsWith(''.'') && !self.split(''/'')[10].endsWith(''-'')'
                            - message: SubnetID is immutable
                              rule: self == oldSelf
                        vmSize:
                          description: |-
                            vmSize is the Azure VM instance type to use for the nodes being created in the nodepool.
                            The size naming convention is documented here https://learn.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions.
                            Size names should start with a Family name, which is represented by one of more capital letters, and then be followed by the CPU count.
                            This is followed by 0 or more additional features, represented by a, b, d, i, l, m, p, t, s, C, and NP, refer to the Azure documentation for an explanation of these features.
                            Optionally an accelerator such as a GPU can be added, prefixed by an underscore, for example A100, H100 or MI300X.
                            The size may also be versioned, in which case it should be suffixed with _v<version> where the version is a number.
                            For example, "D32ads_v5" would be a suitable general purpose VM size, or "ND96_MI300X_v5" would represent a GPU accelerated VM.
                          maxLength: 255
                          pattern: ^(Standard_|Basic_)?[A-Z]+[0-9]+(-[0-9]+)?[abdilmptsCNP]*(_[A-Z]*[0-9]+[A-Z]*)?(_v[0-9]+)?$
                          type: string
                      required:
                        - image
                        - osDisk
                        - subnetID
                        - vmSize
                      type: object
                    ibmcloud:
                      description: ibmcloud defines IBMCloud specific settings for components
                      properties:
                        providerType:
                          description: providerType is a specific supported infrastructure provider within IBM Cloud.
                          type: string
                      type: object
                    kubevirt:
                      description: kubevirt specifies the configuration used when operating on KubeVirt platform.
                      properties:
                        additionalNetworks:
                          description: additionalNetworks specify the extra networks attached to the nodes
                          items:
                            description: |-
                              KubevirtNetwork specifies the configuration for a virtual machine
                              network interface
                            properties:
                              name:
                                description: |-
                                  name specify the network attached to the nodes
                                  it is a value with the format "[namespace]/[name]" to reference the
                                  multus network attachment definition
                                maxLength: 255
                                type: string
                            required:
                              - name
                            type: object
                          maxItems: 20
                          type: array
                        attachDefaultNetwork:
                          default: true
                          description: |-
                            attachDefaultNetwork specify if the default pod network should be attached to the nodes
                            this can only be set to false if AdditionalNetworks are configured
                          type: boolean
                        compute:
                          default:
                            cores: 2
                            memory: 8Gi
                          description: compute contains values representing the virtual hardware requested for the VM
                          properties:
                            cores:
                              description: cores is the number of CPU cores for the KubeVirt VM.
                              format: int32
                              minimum: 1
                              type: integer
                            memory:
                              anyOf:
                                - type: integer
                                - type: string
                              default: 8Gi
                              description: memory represents how much guest memory the VM should have
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            qosClass:
                              default: Burstable
                              description: |-
                                qosClass if set to "Guaranteed", requests the scheduler to place the VirtualMachineInstance on a node with
                                limit memory and CPU, equal to be the requested values, to set the VMI as a Guaranteed QoS Class;
                                See here for more details:
                                https://kubevirt.io/user-guide/operations/node_overcommit/#requesting-the-right-qos-class-for-virtualmachineinstances
                              enum:
                                - Burstable
                                - Guaranteed
                              type: string
                          type: object
                        hostDevices:
                          description: |-
                            hostDevices specifies the host devices (e.g. GPU devices) to be passed
                            from the management cluster, to the nodepool nodes
                          items:
                            properties:
                              count:
                                default: 1
                                description: |-
                                  count is the number of instances the specified host device will be attached to each of the
                                  NodePool's nodes. Default is 1.
                                maximum: 2147483647
                                minimum: 1
                                type: integer
                              deviceName:
                                description: |-
                                  deviceName is the name of the host device that is desired to be utilized in the HostedCluster's NodePool
                                  The device can be any supported PCI device, including GPU, either as a passthrough or a vGPU slice.
                                maxLength: 255
                                type: string
                            required:
                              - deviceName
                            type: object
                          maxItems: 10
                          type: array
                        networkInterfaceMultiqueue:
                          default: Enable
                          description: |-
                            networkInterfaceMultiqueue if set to "Enable", virtual network interfaces configured with a virtio bus will also
                            enable the vhost multiqueue feature for network devices. The number of queues created depends on additional
                            factors of the VirtualMachineInstance, like the number of guest CPUs.
                          enum:
                            - Enable
                            - Disable
                          type: string
                        nodeSelector:
                          additionalProperties:
                            type: string
                          description: |-
                            nodeSelector is a selector which must be true for the kubevirt VirtualMachine to fit on a node.
                            Selector which must match a node's labels for the VM to be scheduled on that node. More info:
                            https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                          type: object
                        rootVolume:
                          default:
                            persistent:
                              size: 32Gi
                            type: Persistent
                          description: rootVolume represents values associated with the VM volume that will host rhcos
                          properties:
                            cacheStrategy:
                              description: cacheStrategy defines the boot image caching strategy. Default - no caching
                              properties:
                                type:
                                  default: None
                                  description: type is the type of the caching strategy
                                  enum:
                                    - None
                                    - PVC
                                  type: string
                              required:
                                - type
                              type: object
                            diskImage:
                              description: diskImage represents what rhcos image to use for the node pool
                              properties:
                                containerDiskImage:
                                  description: containerDiskImage is a string representing the container image that holds the root disk
                                  maxLength: 2048
                                  type: string
                              type: object
                            persistent:
                              description: |-
                                persistent volume type means the VM's storage is backed by a PVC
                                VMs that use persistent volumes can survive disruption events like restart and eviction
                                This is the default type used when no storage type is defined.
                              properties:
                                accessModes:
                                  description: |-
                                    accessModes is an array that contains the desired Access Modes the root volume should have.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
                                  items:
                                    enum:
                                      - ReadWriteOnce
                                      - ReadWriteMany
                                      - ReadOnly
                                      - ReadWriteOncePod
                                    type: string
                                  maxItems: 10
                                  type: array
                                size:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  default: 32Gi
                                  description: size is the size of the persistent storage volume
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                storageClass:
                                  description: storageClass is the storageClass used for the underlying PVC that hosts the volume
                                  maxLength: 255
                                  type: string
                                volumeMode:
                                  description: |-
                                    volumeMode defines what type of volume is required by the claim.
                                    Value of Filesystem is implied when not included in claim spec.
                                  enum:
                                    - Filesystem
                                    - Block
                                  type: string
                              type: object
                            type:
                              default: Persistent
                              description: type represents the type of storage to associate with the kubevirt VMs.
                              enum:
                                - Persistent
                              type: string
                          type: object
                      required:
                        - rootVolume
                      type: object
                    powervs:
                      description: powervs specifies the configuration used when using IBMCloud PowerVS platform.
                      properties:
                        image:
                          description: |-
                            image used for deploying the nodes. If unspecified, the default
                            is chosen based on the NodePool release payload image.
                          properties:
                            id:
                              description: id of resource
                              maxLength: 255
                              type: string
                            name:
                              description: name of resource
                              maxLength: 255
                              type: string
                          type: object
                        imageDeletePolicy:
                          default: delete
                          description: |-
                            imageDeletePolicy is policy for the image deletion.

                            delete: delete the image from the infrastructure.
                            retain: delete the image from the openshift but retain in the infrastructure.

                            The default is delete
                          enum:
                            - delete
                            - retain
                          type: string
                        memoryGiB:
                          default: 32
                          description: |-
                            memoryGiB is the size of a virtual machine's memory, in GiB.
                            maximum value for the MemoryGiB depends on the selected SystemType.
                            when SystemType is set to e880 maximum MemoryGiB value is 7463 GiB.
                            when SystemType is set to e980 maximum MemoryGiB value is 15307 GiB.
                            when SystemType is set to s922 maximum MemoryGiB value is 942 GiB.
                            The minimum memory is 32 GiB.

                            When omitted, this means the user has no opinion and the platform is left to choose a reasonable
                            default. The current default is 32.
                          format: int32
                          type: integer
                        processorType:
                          default: shared
                          description: |-
                            processorType is the VM instance processor type.
                            It must be set to one of the following values: Dedicated, Capped or Shared.

                            Dedicated: resources are allocated for a specific client, The hypervisor makes a 1:1 binding of a partition's processor to a physical processor core.
                            Shared: Shared among other clients.
                            Capped: Shared, but resources do not expand beyond those that are requested, the amount of CPU time is Capped to the value specified for the entitlement.

                            if the processorType is selected as Dedicated, then Processors value cannot be fractional.
                            When omitted, this means that the user has no opinion and the platform is left to choose a
                            reasonable default. The current default is shared.
                          enum:
                            - dedicated
                            - shared
                            - capped
                          type: string
                        processors:
                          anyOf:
                            - type: integer
                            - type: string
                          default: "0.5"
                          description: |-
                            processors is the number of virtual processors in a virtual machine.
                            when the processorType is selected as Dedicated the processors value cannot be fractional.
                            maximum value for the Processors depends on the selected SystemType.
                            when SystemType is set to e880 or e980 maximum Processors value is 143.
                            when SystemType is set to s922 maximum Processors value is 15.
                            minimum value for Processors depends on the selected ProcessorType.
                            when ProcessorType is set as Shared or Capped, The minimum processors is 0.5.
                            when ProcessorType is set as Dedicated, The minimum processors is 1.
                            When omitted, this means that the user has no opinion and the platform is left to choose a
                            reasonable default. The default is set based on the selected ProcessorType.
                            when ProcessorType selected as Dedicated, the default is set to 1.
                            when ProcessorType selected as Shared or Capped, the default is set to 0.5.
                          x-kubernetes-int-or-string: true
                        storageType:
                          default: tier1
                          description: |-
                            storageType for the image and nodes, this will be ignored if Image is specified.
                            The storage tiers in PowerVS are based on I/O operations per second (IOPS).
                            It means that the performance of your storage volumes is limited to the maximum number of IOPS based on volume size and storage tier.
                            Although, the exact numbers might change over time, the Tier 3 storage is currently set to 3 IOPS/GB, and the Tier 1 storage is currently set to 10 IOPS/GB.

                            The default is tier1
                          enum:
                            - tier1
                            - tier3
                          type: string
                        systemType:
                          default: s922
                          description: |-
                            systemType is the System type used to host the instance.
                            systemType determines the number of cores and memory that is available.
                            Few of the supported SystemTypes are s922,e880,e980.
                            e880 systemType available only in Dallas Datacenters.
                            e980 systemType available in Datacenters except Dallas and Washington.
                            When omitted, this means that the user has no opinion and the platform is left to choose a
                            reasonable default. The current default is s922 which is generally available.
                          maxLength: 255
                          type: string
                      type: object
                    type:
                      description: type specifies the platform name.
                      enum:
                        - AWS
                        - Azure
                        - IBMCloud
                        - KubeVirt
                        - Agent
                        - PowerVS
                        - None
                      maxLength: 100
                      type: string
                      x-kubernetes-validations:
                        - message: Type is immutable
                          rule: self == oldSelf
                  required:
                    - type
                  type: object
                release:
                  description: |-
                    release specifies the OCP release used for this NodePool. It drives the machine ignition configuration (including
                    the kubelet version) and other platform-specific properties (e.g. an AMI on AWS).

                    Version-skew rules and effects:
                      - The minor-version skew relative to the control-plane release must be <= N-2.
                        This is not currently enforced, but exceeding this limit is unsupported and
                        may lead to unpredictable behavior.
                      - If the specified release is higher than the HostedCluster's release, the
                        NodePool will be degraded and the ValidReleaseImage condition will be false.
                      - If the specified release is lower than the NodePool's current y-stream,
                        the NodePool will be degraded and the ValidReleaseImage condition will be false.

                    Changing this field triggers a NodePool rollout.
                  properties:
                    image:
                      description: |-
                        image is the image pullspec of an OCP release payload image.
                        See https://quay.io/repository/openshift-release-dev/ocp-release?tab=tags for a list of available images.
                      maxLength: 253
                      minLength: 1
                      type: string
                      x-kubernetes-validations:
                        - message: Image must start with a word character (letters, digits, or underscores) and contain no white spaces
                          rule: self.matches('^(\\w+\\S+)$')
                  required:
                    - image
                  type: object
                replicas:
                  description: |-
                    replicas is the desired number of nodes the pool should maintain. If unset, the controller default value is 0.
                    replicas is mutually exclusive with autoscaling. If autoscaling is configured, replicas must be omitted and autoscaling will control the NodePool size internally.
                  format: int32
                  type: integer
                taints:
                  description: |-
                    taints if specified, propagates a list of taints to Nodes, only once on creation.
                    These taints are additive to the ones applied by other controllers
                  items:
                    description: |-
                      taint is as v1 Core but without TimeAdded.
                      https://github.com/kubernetes/kubernetes/blob/ed8cad1e80d096257921908a52ac69cf1f41a098/staging/src/k8s.io/api/core/v1/types.go#L3037-L3053
                      Validation replicates the same validation as the upstream https://github.com/kubernetes/kubernetes/blob/9a2a7537f035969a68e432b4cc276dbce8ce1735/pkg/util/taints/taints.go#L273.
                      See also https://kubernetes.io/docs/concepts/overview/working-with-objects/names/.
                    properties:
                      effect:
                        description: |-
                          effect is the effect of the taint on pods
                          that do not tolerate the taint.
                          Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                        enum:
                          - NoSchedule
                          - PreferNoSchedule
                          - NoExecute
                        type: string
                      key:
                        description: key is the taint key to be applied to a node.
                        maxLength: 253
                        minLength: 1
                        type: string
                        x-kubernetes-validations:
                          - message: key must be a qualified name with an optional subdomain prefix e.g. example.com/MyName
                            rule: self.matches('^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/)?[A-Za-z0-9]([-A-Za-z0-9_.]{0,61}[A-Za-z0-9])?$')
                      value:
                        description: value is the taint value corresponding to the taint key.
                        maxLength: 253
                        type: string
                        x-kubernetes-validations:
                          - message: Value must start and end with alphanumeric characters and can only contain '-', '_', '.' in the middle
                            rule: self.matches('^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$')
                    required:
                      - effect
                      - key
                    type: object
                  maxItems: 50
                  type: array
                tuningConfig:
                  description: |-
                    tuningConfig is a list of references to ConfigMaps containing serialized
                    Tuned or PerformanceProfile resources to define the tuning configuration to be applied to
                    nodes in the NodePool. The Tuned API is defined here:

                    https://github.com/openshift/cluster-node-tuning-operator/blob/2c76314fb3cc8f12aef4a0dcd67ddc3677d5b54f/pkg/apis/tuned/v1/tuned_types.go

                    The PerformanceProfile API is defined here:
                    https://github.com/openshift/cluster-node-tuning-operator/tree/b41042d42d4ba5bb2e99960248cf1d6ae4935018/pkg/apis/performanceprofile/v2

                    Each ConfigMap must have a single key named "tuning" whose value is the
                    JSON or YAML of a serialized Tuned or PerformanceProfile.
                    Changing this field will trigger a NodePool rollout.
                  items:
                    description: |-
                      LocalObjectReference contains enough information to let you locate the
                      referenced object inside the same namespace.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  maxItems: 10
                  type: array
              required:
                - clusterName
                - management
                - platform
                - release
              type: object
              x-kubernetes-validations:
                - message: Arch is required once set
                  rule: '!has(oldSelf.arch) || has(self.arch)'
                - message: Setting Arch to arm64 is only supported for AWS, Azure, Agent and None
                  rule: self.arch != 'arm64' || has(self.platform.aws) || has(self.platform.azure) || has(self.platform.agent) || self.platform.type == 'None'
                - message: Both replicas or autoScaling should not be set
                  rule: '!has(self.replicas) || !has(self.autoScaling)'
            status:
              description: status is the latest observed status of the NodePool.
              properties:
                conditions:
                  description: |-
                    conditions represents the latest available observations of the node pool's
                    current state.
                  items:
                    description: |-
                      We define our own condition type since metav1.Condition has validation
                      for Reason that might be broken by what we bubble up from CAPI.
                      NodePoolCondition defines an observation of NodePool resource operational state.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed. If that is not known, then using the time when
                          the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This field may be empty.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason for the condition's last transition in CamelCase.
                          The specific API may choose whether or not this field is considered a guaranteed API.
                          This field may not be empty.
                        maxLength: 1024
                        type: string
                      severity:
                        description: |-
                          severity provides an explicit classification of Reason code, so the users or machines can immediately
                          understand the current situation and act accordingly.
                          The Severity field MUST be set only when Status=False.
                        maxLength: 1024
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: |-
                          type of condition in CamelCase or in foo.example.com/CamelCase.
                          Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                          can be useful (see .node.status.conditions), the ability to deconflict is important.
                        maxLength: 316
                        type: string
                    required:
                      - lastTransitionTime
                      - status
                      - type
                    type: object
                  maxItems: 100
                  type: array
                platform:
                  description: platform holds the specific statuses
                  properties:
                    kubeVirt:
                      description: kubeVirt contains the KubeVirt platform statuses
                      properties:
                        cacheName:
                          description: cacheName holds the name of the cache DataVolume, if exists
                          maxLength: 255
                          type: string
                        credentials:
                          description: |-
                            credentials shows the client credentials used when creating KubeVirt virtual machines.
                            This filed is only exists when the KubeVirt virtual machines are being placed
                            on a cluster separate from the one hosting the Hosted Control Plane components.

                            The default behavior when Credentials is not defined is for the KubeVirt VMs to be placed on
                            the same cluster and namespace as the Hosted Control Plane.
                          properties:
                            infraKubeConfigSecret:
                              description: |-
                                infraKubeConfigSecret is a reference to the secret containing the kubeconfig
                                of an external infrastructure cluster for kubevirt provider
                              properties:
                                key:
                                  description: key is the key in the secret containing the kubeconfig.
                                  maxLength: 255
                                  type: string
                                name:
                                  description: name is the name of the secret containing the kubeconfig.
                                  maxLength: 255
                                  type: string
                              required:
                                - key
                                - name
                              type: object
                              x-kubernetes-validations:
                                - message: infraKubeConfigSecret is immutable
                                  rule: self == oldSelf
                            infraNamespace:
                              description: |-
                                infraNamespace is the namespace in the external infrastructure cluster
                                where kubevirt resources will be created
                              maxLength: 255
                              type: string
                              x-kubernetes-validations:
                                - message: infraNamespace is immutable
                                  rule: self == oldSelf
                          required:
                            - infraNamespace
                          type: object
                      type: object
                  type: object
                replicas:
                  description: replicas is the latest observed number of nodes in the pool.
                  format: int32
                  type: integer
                version:
                  description: |-
                    version is the semantic version of the latest applied release specified by
                    the NodePool.
                  maxLength: 64
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        scale:
          specReplicasPath: .spec.replicas
          statusReplicasPath: .status.replicas
        status: {}
---
apiVersion: scheduling.k8s.io/v1
description: This priority class should be used for hypershift control plane pods not critical to serving the API.
kind: PriorityClass
metadata:
  creationTimestamp: null
  name: hypershift-control-plane
preemptionPolicy: Never
value: 100000000
---
apiVersion: scheduling.k8s.io/v1
description: This priority class should be used for hypershift etcd pods.
kind: PriorityClass
metadata:
  creationTimestamp: null
  name: hypershift-etcd
preemptionPolicy: Never
value: 100002000
---
apiVersion: scheduling.k8s.io/v1
description: This priority class should be used for hypershift control plane pods critical to serving the API.
kind: PriorityClass
metadata:
  creationTimestamp: null
  name: hypershift-api-critical
preemptionPolicy: Never
value: 100001000
---
apiVersion: scheduling.k8s.io/v1
description: This priority class is used for hypershift operator pods
kind: PriorityClass
metadata:
  creationTimestamp: null
  name: hypershift-operator
value: 100003000
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  labels:
    hypershift.openshift.io/monitoring: "true"
    openshift.io/cluster-monitoring: "true"
  name: hypershift
spec: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: null
  name: operator
  namespace: hypershift
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: hypershift-operator
rules:
  - apiGroups:
      - hypershift.openshift.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - certificates.hypershift.openshift.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - scheduling.hypershift.openshift.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - config.openshift.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - '*'
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - '*'
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - '*'
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - '*'
  - apiGroups:
      - bootstrap.cluster.x-k8s.io
      - controlplane.cluster.x-k8s.io
      - infrastructure.cluster.x-k8s.io
      - machines.cluster.x-k8s.io
      - exp.infrastructure.cluster.x-k8s.io
      - addons.cluster.x-k8s.io
      - exp.cluster.x-k8s.io
      - cluster.x-k8s.io
      - monitoring.coreos.com
      - monitoring.rhobs
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - '*'
  - apiGroups:
      - operator.openshift.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - route.openshift.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - image.openshift.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - security.openshift.io
    resources:
      - securitycontextconstraints
    verbs:
      - '*'
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
      - deletecollection
  - apiGroups:
      - ""
    resources:
      - events
      - configmaps
      - configmaps/finalizers
      - persistentvolumeclaims
      - pods
      - pods/log
      - secrets
      - nodes
      - namespaces
      - serviceaccounts
      - services
      - endpoints
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - deployments
      - replicasets
      - statefulsets
    verbs:
      - '*'
  - apiGroups:
      - etcd.database.coreos.com
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - machine.openshift.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - monitoring.coreos.com
      - monitoring.rhobs
    resources:
      - podmonitors
    verbs:
      - get
      - list
      - watch
      - create
      - update
  - apiGroups:
      - capi-provider.agent-install.openshift.io
    resources:
      - '*'
    verbs:
      - '*'
  - apiGroups:
      - operator.openshift.io
    resources:
      - ingresscontrollers
    verbs:
      - '*'
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachineinstances
      - virtualmachines
      - virtualmachines/finalizers
    verbs:
      - '*'
  - apiGroups:
      - cdi.kubevirt.io
    resources:
      - datavolumes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ipam.cluster.x-k8s.io
    resources:
      - ipaddressclaims
      - ipaddressclaims/status
    verbs:
      - '*'
  - apiGroups:
      - ipam.cluster.x-k8s.io
    resources:
      - ipaddresses
      - ipaddresses/status
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - openstack.k-orc.cloud
    resources:
      - images
      - images/status
    verbs:
      - '*'
  - apiGroups:
      - subresources.kubevirt.io
    resources:
      - virtualmachineinstances/addvolume
      - virtualmachineinstances/removevolume
      - virtualmachines/addvolume
      - virtualmachines/removevolume
    verbs:
      - update
  - apiGroups:
      - cdi.kubevirt.io
    resources:
      - datavolumes
    verbs:
      - '*'
  - apiGroups:
      - agent-install.openshift.io
    resources:
      - agents
    verbs:
      - '*'
  - apiGroups:
      - snapshot.storage.k8s.io
    resources:
      - volumesnapshots
    verbs:
      - get
      - create
      - delete
  - apiGroups:
      - extensions.hive.openshift.io
    resources:
      - agentclusterinstalls
    verbs:
      - '*'
  - apiGroups:
      - hive.openshift.io
    resources:
      - clusterdeployments
    verbs:
      - '*'
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
      - endpointslices/restricted
    verbs:
      - '*'
  - apiGroups:
      - admissionregistration.k8s.io
    resourceNames:
      - hypershift.openshift.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - delete
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests/status
    verbs:
      - patch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests/approval
    verbs:
      - update
  - apiGroups:
      - certificates.k8s.io
    resources:
      - signers
    verbs:
      - approve
  - apiGroups:
      - certificates.k8s.io
    resources:
      - signers
    verbs:
      - sign
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: hypershift-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hypershift-operator
subjects:
  - kind: ServiceAccount
    name: operator
    namespace: hypershift
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: hypershift-operator
  namespace: hypershift
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: hypershift-operator
  namespace: hypershift
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hypershift-operator
subjects:
  - kind: ServiceAccount
    name: operator
    namespace: hypershift
---
apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  labels:
    config.openshift.io/inject-trusted-cabundle: "true"
  name: openshift-config-managed-trusted-ca-bundle
  namespace: hypershift
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    hypershift.openshift.io/install-cli-version: 'openshift/hypershift: c8c0945d1f5d6e102d21f0010a24aa3f99d16ef7. Latest supported OCP: 4.21.0'
  creationTimestamp: null
  name: operator
  namespace: hypershift
spec:
  replicas: 1
  selector:
    matchLabels:
      name: operator
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: operator
        hypershift.openshift.io/operator-component: operator
        name: operator
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: name
                      operator: In
                      values:
                        - operator
                topologyKey: kubernetes.io/hostname
              weight: 10
      containers:
        - args:
            - run
            - --namespace=$(MY_NAMESPACE)
            - --pod-name=$(MY_NAME)
            - --metrics-addr=:9000
            - --enable-dedicated-request-serving-isolation=true
            - --enable-ocp-cluster-monitoring=false
            - --enable-ci-debug-output=false
            - --private-platform=None
            - --cert-dir=/var/run/secrets/serving-cert
          command:
            - /usr/bin/hypershift-operator
          env:
            - name: MY_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: METRICS_SET
              value: Telemetry
            - name: CERT_ROTATION_SCALE
              value: 24h0m0s
            - name: ENABLE_ETCD_RECOVERY
              value: "1"
          image: quay.io/hypershift/hypershift-operator:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /metrics
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          name: operator
          ports:
            - containerPort: 9000
              name: metrics
              protocol: TCP
            - containerPort: 9443
              name: manager
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /metrics
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/secrets/serving-cert
              name: serving-cert
            - mountPath: /etc/pki/ca-trust/extracted/pem
              name: trusted-ca-bundle
              readOnly: true
      initContainers:
        - args:
            - init
          command:
            - /usr/bin/hypershift-operator
          image: quay.io/hypershift/hypershift-operator:latest
          imagePullPolicy: IfNotPresent
          name: init-environment
          resources: {}
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            runAsUser: 1000
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /var/run/ca-trust
              name: openshift-config-managed-trusted-ca-bundle
              readOnly: true
            - mountPath: /trust-bundle
              name: trusted-ca-bundle
      priorityClassName: hypershift-operator
      serviceAccountName: operator
      volumes:
        - name: serving-cert
          secret:
            secretName: manager-serving-cert
        - configMap:
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
            name: openshift-config-managed-trusted-ca-bundle
            optional: true
          name: openshift-config-managed-trusted-ca-bundle
        - emptyDir: {}
          name: trusted-ca-bundle
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: manager-serving-cert
  creationTimestamp: null
  labels:
    name: operator
  name: operator
  namespace: hypershift
spec:
  ports:
    - name: metrics
      port: 9393
      protocol: TCP
      targetPort: metrics
    - name: manager
      port: 443
      protocol: TCP
      targetPort: manager
  selector:
    name: operator
  type: ClusterIP
---
apiVersion: v1
data:
  TechPreviewEnabled: "false"
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: feature-gate
  namespace: hypershift
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: prometheus
  namespace: hypershift
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: prometheus
  namespace: hypershift
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus-k8s
    namespace: openshift-monitoring
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  creationTimestamp: null
  name: operator
  namespace: hypershift
spec:
  endpoints:
    - interval: 30s
      port: metrics
  jobLabel: component
  namespaceSelector: {}
  selector:
    matchLabels:
      name: operator
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  name: metrics
  namespace: hypershift
spec:
  groups:
    - interval: 30s
      name: hypershift.rules
      rules:
        - expr: sum by (namespace) (rate(apiserver_request_total{verb=~"LIST|GET|WATCH"}[2m]))
          record: hypershift:apiserver_request_total:read
        - expr: sum by (namespace) (rate(apiserver_request_total{verb=~"POST|PUT|PATCH|UPDATE|DELETE|APPLY"}[2m]))
          record: hypershift:apiserver_request_total:write
        - expr: sum by (namespace, system_client) (rate(apiserver_request_total{}[2m]))
          record: hypershift:apiserver_request_total:client
        - expr: sort_desc(sum(rate(apiserver_request_aborts_total[1m])) by (resource, verb))
          record: hypershift:apiserver_request_aborts_total
        - expr: sum by (app, namespace, code, method, pod) ( sum(rest_client_requests_total) by (pod, namespace, code, method) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""}, "app", "$1", "label_app", "(.*)") )
          record: hypershift:controlplane:component_api_requests_total
        - expr: sum by (app, namespace, pod) ( sum(container_memory_usage_bytes{container!="POD",container!=""}) by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""}, "app", "$1", "label_app", "(.*)") )
          record: hypershift:controlplane:component_memory_usage
        - expr: sum by (app, namespace, pod) ( sum(container_memory_rss{container!="POD",container!=""}) by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""}, "app", "$1", "label_app", "(.*)") )
          record: hypershift:controlplane:component_memory_rss
        - expr: sum by (app, namespace, pod) ( sum(kube_pod_container_resource_requests{resource="memory"}) by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""}, "app", "$1", "label_app", "(.*)") )
          record: hypershift:controlplane:component_memory_request
        - expr: histogram_quantile(0.9, sum by (namespace, le) (rate(ign_server_payload_generation_seconds_bucket{container="ignition-server"}[3m])))
          record: hypershift:controlplane:ign_payload_generation_seconds_p90
        - expr: avg by (app, namespace, pod) ( sum( rate( container_cpu_usage_seconds_total{container_name!="POD",container!=""}[2m] ) ) by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""}, "app", "$1", "label_app", "(.*)") ) / count by (app, namespace, pod) ( sum( rate( container_cpu_usage_seconds_total{container_name!="POD",container!=""}[2m] ) ) by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""}, "app", "$1", "label_app", "(.*)") )
          record: hypershift:controlplane:component_cpu_usage_seconds
        - expr: sum by (app, namespace, pod) ( sum(kube_pod_container_resource_requests{resource="cpu"}) by (pod, namespace) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_control_plane_component!=""}, "app", "$1", "label_app", "(.*)") )
          record: hypershift:controlplane:component_cpu_request
        - expr: sum by (app, namespace, code, method) ( sum(rest_client_requests_total) by (pod, namespace, code, method) * on (pod, namespace) group_left(app) label_replace(kube_pod_labels{label_hypershift_openshift_io_operator_component!=""}, "app", "$1", "label_app", "(.*)") )
          record: hypershift:operator:component_api_requests_total
        - expr: max by(platform) (hypershift_hostedclusters)
          record: platform:hypershift_hostedclusters:max
        - expr: max by(platform) (hypershift_nodepools)
          record: platform:hypershift_nodepools:max
        - expr: sum by(cluster_name, exported_namespace) (max by(name, exported_namespace, platform, cluster_name) (hypershift_nodepools_size))
          record: cluster_name:hypershift_nodepools_size:sum
        - expr: sum by(cluster_name, exported_namespace) (max by(name, exported_namespace, platform, cluster_name) (hypershift_nodepools_available_replicas))
          record: cluster_name:hypershift_nodepools_available_replicas:sum
